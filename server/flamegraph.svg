<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2038" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2021.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2021.00"> </text><svg id="frames" x="10" width="1180" total_samples="164672"><g><title>epoxy-server (22 samples, 0.01%)</title><rect x="0.0000%" y="1973" width="0.0134%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="22"/><text x="0.2500%" y="1983.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.01%)</title><rect x="0.0152%" y="1957" width="0.0115%" height="15" fill="rgb(217,0,24)" fg:x="25" fg:w="19"/><text x="0.2652%" y="1967.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (49 samples, 0.03%)</title><rect x="0.0947%" y="1925" width="0.0298%" height="15" fill="rgb(221,193,54)" fg:x="156" fg:w="49"/><text x="0.3447%" y="1935.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (177 samples, 0.11%)</title><rect x="0.0267%" y="1941" width="0.1075%" height="15" fill="rgb(248,212,6)" fg:x="44" fg:w="177"/><text x="0.2767%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (19 samples, 0.01%)</title><rect x="0.1433%" y="1941" width="0.0115%" height="15" fill="rgb(208,68,35)" fg:x="236" fg:w="19"/><text x="0.3933%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (50 samples, 0.03%)</title><rect x="0.2557%" y="1925" width="0.0304%" height="15" fill="rgb(232,128,0)" fg:x="421" fg:w="50"/><text x="0.5057%" y="1935.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (271 samples, 0.16%)</title><rect x="0.1549%" y="1941" width="0.1646%" height="15" fill="rgb(207,160,47)" fg:x="255" fg:w="271"/><text x="0.4049%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (55 samples, 0.03%)</title><rect x="0.2860%" y="1925" width="0.0334%" height="15" fill="rgb(228,23,34)" fg:x="471" fg:w="55"/><text x="0.5360%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (55 samples, 0.03%)</title><rect x="0.2860%" y="1909" width="0.0334%" height="15" fill="rgb(218,30,26)" fg:x="471" fg:w="55"/><text x="0.5360%" y="1919.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.02%)</title><rect x="0.2988%" y="1893" width="0.0206%" height="15" fill="rgb(220,122,19)" fg:x="492" fg:w="34"/><text x="0.5488%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.02%)</title><rect x="0.2988%" y="1877" width="0.0206%" height="15" fill="rgb(250,228,42)" fg:x="492" fg:w="34"/><text x="0.5488%" y="1887.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.02%)</title><rect x="0.2988%" y="1861" width="0.0206%" height="15" fill="rgb(240,193,28)" fg:x="492" fg:w="34"/><text x="0.5488%" y="1871.50"></text></g><g><title>__rust_dealloc (34 samples, 0.02%)</title><rect x="0.2988%" y="1845" width="0.0206%" height="15" fill="rgb(216,20,37)" fg:x="492" fg:w="34"/><text x="0.5488%" y="1855.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (34 samples, 0.02%)</title><rect x="0.2988%" y="1829" width="0.0206%" height="15" fill="rgb(206,188,39)" fg:x="492" fg:w="34"/><text x="0.5488%" y="1839.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (20 samples, 0.01%)</title><rect x="0.3194%" y="1941" width="0.0121%" height="15" fill="rgb(217,207,13)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1951.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (20 samples, 0.01%)</title><rect x="0.3194%" y="1925" width="0.0121%" height="15" fill="rgb(231,73,38)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1935.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.01%)</title><rect x="0.3194%" y="1909" width="0.0121%" height="15" fill="rgb(225,20,46)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1919.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.01%)</title><rect x="0.3194%" y="1893" width="0.0121%" height="15" fill="rgb(210,31,41)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.01%)</title><rect x="0.3194%" y="1877" width="0.0121%" height="15" fill="rgb(221,200,47)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.01%)</title><rect x="0.3194%" y="1861" width="0.0121%" height="15" fill="rgb(226,26,5)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.01%)</title><rect x="0.3194%" y="1845" width="0.0121%" height="15" fill="rgb(249,33,26)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1855.50"></text></g><g><title>__rust_alloc (20 samples, 0.01%)</title><rect x="0.3194%" y="1829" width="0.0121%" height="15" fill="rgb(235,183,28)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1839.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (20 samples, 0.01%)</title><rect x="0.3194%" y="1813" width="0.0121%" height="15" fill="rgb(221,5,38)" fg:x="526" fg:w="20"/><text x="0.5694%" y="1823.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (20 samples, 0.01%)</title><rect x="0.3316%" y="1941" width="0.0121%" height="15" fill="rgb(247,18,42)" fg:x="546" fg:w="20"/><text x="0.5816%" y="1951.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (47 samples, 0.03%)</title><rect x="0.3437%" y="1941" width="0.0285%" height="15" fill="rgb(241,131,45)" fg:x="566" fg:w="47"/><text x="0.5937%" y="1951.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (68 samples, 0.04%)</title><rect x="0.3723%" y="1941" width="0.0413%" height="15" fill="rgb(249,31,29)" fg:x="613" fg:w="68"/><text x="0.6223%" y="1951.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (31 samples, 0.02%)</title><rect x="0.3947%" y="1925" width="0.0188%" height="15" fill="rgb(225,111,53)" fg:x="650" fg:w="31"/><text x="0.6447%" y="1935.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (41 samples, 0.02%)</title><rect x="0.4135%" y="1941" width="0.0249%" height="15" fill="rgb(238,160,17)" fg:x="681" fg:w="41"/><text x="0.6635%" y="1951.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.02%)</title><rect x="0.4384%" y="1941" width="0.0225%" height="15" fill="rgb(214,148,48)" fg:x="722" fg:w="37"/><text x="0.6884%" y="1951.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (18 samples, 0.01%)</title><rect x="0.4609%" y="1941" width="0.0109%" height="15" fill="rgb(232,36,49)" fg:x="759" fg:w="18"/><text x="0.7109%" y="1951.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (185 samples, 0.11%)</title><rect x="0.4718%" y="1941" width="0.1123%" height="15" fill="rgb(209,103,24)" fg:x="777" fg:w="185"/><text x="0.7218%" y="1951.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (17 samples, 0.01%)</title><rect x="0.6091%" y="1925" width="0.0103%" height="15" fill="rgb(229,88,8)" fg:x="1003" fg:w="17"/><text x="0.8591%" y="1935.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (82 samples, 0.05%)</title><rect x="0.6291%" y="1893" width="0.0498%" height="15" fill="rgb(213,181,19)" fg:x="1036" fg:w="82"/><text x="0.8791%" y="1903.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (82 samples, 0.05%)</title><rect x="0.6291%" y="1877" width="0.0498%" height="15" fill="rgb(254,191,54)" fg:x="1036" fg:w="82"/><text x="0.8791%" y="1887.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (82 samples, 0.05%)</title><rect x="0.6291%" y="1861" width="0.0498%" height="15" fill="rgb(241,83,37)" fg:x="1036" fg:w="82"/><text x="0.8791%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (176 samples, 0.11%)</title><rect x="0.5842%" y="1941" width="0.1069%" height="15" fill="rgb(233,36,39)" fg:x="962" fg:w="176"/><text x="0.8342%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (118 samples, 0.07%)</title><rect x="0.6194%" y="1925" width="0.0717%" height="15" fill="rgb(226,3,54)" fg:x="1020" fg:w="118"/><text x="0.8694%" y="1935.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (118 samples, 0.07%)</title><rect x="0.6194%" y="1909" width="0.0717%" height="15" fill="rgb(245,192,40)" fg:x="1020" fg:w="118"/><text x="0.8694%" y="1919.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (34 samples, 0.02%)</title><rect x="0.6911%" y="1941" width="0.0206%" height="15" fill="rgb(238,167,29)" fg:x="1138" fg:w="34"/><text x="0.9411%" y="1951.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (17 samples, 0.01%)</title><rect x="0.7129%" y="1941" width="0.0103%" height="15" fill="rgb(232,182,51)" fg:x="1174" fg:w="17"/><text x="0.9629%" y="1951.50"></text></g><g><title>[libc.so.6] (49 samples, 0.03%)</title><rect x="0.7239%" y="1941" width="0.0298%" height="15" fill="rgb(231,60,39)" fg:x="1192" fg:w="49"/><text x="0.9739%" y="1951.50"></text></g><g><title>_ZN4core3ptr1946drop_in_place$LT$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h339326f6e65f620aE (39 samples, 0.02%)</title><rect x="0.7536%" y="1941" width="0.0237%" height="15" fill="rgb(208,69,12)" fg:x="1241" fg:w="39"/><text x="1.0036%" y="1951.50"></text></g><g><title>__floattidf (25 samples, 0.02%)</title><rect x="0.7773%" y="1941" width="0.0152%" height="15" fill="rgb(235,93,37)" fg:x="1280" fg:w="25"/><text x="1.0273%" y="1951.50"></text></g><g><title>__send (23 samples, 0.01%)</title><rect x="0.7943%" y="1941" width="0.0140%" height="15" fill="rgb(213,116,39)" fg:x="1308" fg:w="23"/><text x="1.0443%" y="1951.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.02%)</title><rect x="0.8083%" y="1941" width="0.0158%" height="15" fill="rgb(222,207,29)" fg:x="1331" fg:w="26"/><text x="1.0583%" y="1951.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (18 samples, 0.01%)</title><rect x="0.8338%" y="1941" width="0.0109%" height="15" fill="rgb(206,96,30)" fg:x="1373" fg:w="18"/><text x="1.0838%" y="1951.50"></text></g><g><title>_rjem_je_arena_malloc_hard (17 samples, 0.01%)</title><rect x="0.8532%" y="1941" width="0.0103%" height="15" fill="rgb(218,138,4)" fg:x="1405" fg:w="17"/><text x="1.1032%" y="1951.50"></text></g><g><title>_rjem_je_edata_avail_insert (22 samples, 0.01%)</title><rect x="0.8963%" y="1941" width="0.0134%" height="15" fill="rgb(250,191,14)" fg:x="1476" fg:w="22"/><text x="1.1463%" y="1951.50"></text></g><g><title>_rjem_je_emap_remap (19 samples, 0.01%)</title><rect x="0.9692%" y="1941" width="0.0115%" height="15" fill="rgb(239,60,40)" fg:x="1596" fg:w="19"/><text x="1.2192%" y="1951.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (31 samples, 0.02%)</title><rect x="0.9850%" y="1941" width="0.0188%" height="15" fill="rgb(206,27,48)" fg:x="1622" fg:w="31"/><text x="1.2350%" y="1951.50"></text></g><g><title>_rjem_je_emap_update_edata_state (27 samples, 0.02%)</title><rect x="1.0038%" y="1941" width="0.0164%" height="15" fill="rgb(225,35,8)" fg:x="1653" fg:w="27"/><text x="1.2538%" y="1951.50"></text></g><g><title>_rjem_je_eset_remove (17 samples, 0.01%)</title><rect x="1.0342%" y="1941" width="0.0103%" height="15" fill="rgb(250,213,24)" fg:x="1703" fg:w="17"/><text x="1.2842%" y="1951.50"></text></g><g><title>_rjem_je_large_palloc (22 samples, 0.01%)</title><rect x="1.0579%" y="1941" width="0.0134%" height="15" fill="rgb(247,123,22)" fg:x="1742" fg:w="22"/><text x="1.3079%" y="1951.50"></text></g><g><title>_rjem_je_sdallocx_default (17 samples, 0.01%)</title><rect x="1.1192%" y="1941" width="0.0103%" height="15" fill="rgb(231,138,38)" fg:x="1843" fg:w="17"/><text x="1.3692%" y="1951.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (20 samples, 0.01%)</title><rect x="1.1313%" y="1941" width="0.0121%" height="15" fill="rgb(231,145,46)" fg:x="1863" fg:w="20"/><text x="1.3813%" y="1951.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (24 samples, 0.01%)</title><rect x="1.1459%" y="1941" width="0.0146%" height="15" fill="rgb(251,118,11)" fg:x="1887" fg:w="24"/><text x="1.3959%" y="1951.50"></text></g><g><title>_rjem_je_te_event_trigger (24 samples, 0.01%)</title><rect x="1.1805%" y="1941" width="0.0146%" height="15" fill="rgb(217,147,25)" fg:x="1944" fg:w="24"/><text x="1.4305%" y="1951.50"></text></g><g><title>_rjem_malloc (92 samples, 0.06%)</title><rect x="1.1951%" y="1941" width="0.0559%" height="15" fill="rgb(247,81,37)" fg:x="1968" fg:w="92"/><text x="1.4451%" y="1951.50"></text></g><g><title>_rjem_sdallocx (55 samples, 0.03%)</title><rect x="1.2510%" y="1941" width="0.0334%" height="15" fill="rgb(209,12,38)" fg:x="2060" fg:w="55"/><text x="1.5010%" y="1951.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (23 samples, 0.01%)</title><rect x="1.2917%" y="1941" width="0.0140%" height="15" fill="rgb(227,1,9)" fg:x="2127" fg:w="23"/><text x="1.5417%" y="1951.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (20 samples, 0.01%)</title><rect x="1.2935%" y="1925" width="0.0121%" height="15" fill="rgb(248,47,43)" fg:x="2130" fg:w="20"/><text x="1.5435%" y="1935.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (20 samples, 0.01%)</title><rect x="1.2935%" y="1909" width="0.0121%" height="15" fill="rgb(221,10,30)" fg:x="2130" fg:w="20"/><text x="1.5435%" y="1919.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (28 samples, 0.02%)</title><rect x="1.3056%" y="1941" width="0.0170%" height="15" fill="rgb(210,229,1)" fg:x="2150" fg:w="28"/><text x="1.5556%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (65 samples, 0.04%)</title><rect x="1.3226%" y="1941" width="0.0395%" height="15" fill="rgb(222,148,37)" fg:x="2178" fg:w="65"/><text x="1.5726%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (18 samples, 0.01%)</title><rect x="1.3670%" y="1925" width="0.0109%" height="15" fill="rgb(234,67,33)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1935.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (18 samples, 0.01%)</title><rect x="1.3670%" y="1909" width="0.0109%" height="15" fill="rgb(247,98,35)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1919.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.01%)</title><rect x="1.3670%" y="1893" width="0.0109%" height="15" fill="rgb(247,138,52)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1903.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.01%)</title><rect x="1.3670%" y="1877" width="0.0109%" height="15" fill="rgb(213,79,30)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.01%)</title><rect x="1.3670%" y="1861" width="0.0109%" height="15" fill="rgb(246,177,23)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.01%)</title><rect x="1.3670%" y="1845" width="0.0109%" height="15" fill="rgb(230,62,27)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.01%)</title><rect x="1.3670%" y="1829" width="0.0109%" height="15" fill="rgb(216,154,8)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1839.50"></text></g><g><title>__rust_alloc (18 samples, 0.01%)</title><rect x="1.3670%" y="1813" width="0.0109%" height="15" fill="rgb(244,35,45)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1823.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.01%)</title><rect x="1.3670%" y="1797" width="0.0109%" height="15" fill="rgb(251,115,12)" fg:x="2251" fg:w="18"/><text x="1.6170%" y="1807.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (49 samples, 0.03%)</title><rect x="1.3621%" y="1941" width="0.0298%" height="15" fill="rgb(240,54,50)" fg:x="2243" fg:w="49"/><text x="1.6121%" y="1951.50"></text></g><g><title>core::fmt::Arguments::new_v1 (23 samples, 0.01%)</title><rect x="1.3779%" y="1925" width="0.0140%" height="15" fill="rgb(233,84,52)" fg:x="2269" fg:w="23"/><text x="1.6279%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_frame::{{closure}}&gt; (17 samples, 0.01%)</title><rect x="1.4016%" y="1941" width="0.0103%" height="15" fill="rgb(207,117,47)" fg:x="2308" fg:w="17"/><text x="1.6516%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (37 samples, 0.02%)</title><rect x="1.4180%" y="1941" width="0.0225%" height="15" fill="rgb(249,43,39)" fg:x="2335" fg:w="37"/><text x="1.6680%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (35 samples, 0.02%)</title><rect x="1.4532%" y="1845" width="0.0213%" height="15" fill="rgb(209,38,44)" fg:x="2393" fg:w="35"/><text x="1.7032%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (35 samples, 0.02%)</title><rect x="1.4532%" y="1829" width="0.0213%" height="15" fill="rgb(236,212,23)" fg:x="2393" fg:w="35"/><text x="1.7032%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (35 samples, 0.02%)</title><rect x="1.4532%" y="1813" width="0.0213%" height="15" fill="rgb(242,79,21)" fg:x="2393" fg:w="35"/><text x="1.7032%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (35 samples, 0.02%)</title><rect x="1.4532%" y="1797" width="0.0213%" height="15" fill="rgb(211,96,35)" fg:x="2393" fg:w="35"/><text x="1.7032%" y="1807.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (35 samples, 0.02%)</title><rect x="1.4532%" y="1781" width="0.0213%" height="15" fill="rgb(253,215,40)" fg:x="2393" fg:w="35"/><text x="1.7032%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (60 samples, 0.04%)</title><rect x="1.4404%" y="1941" width="0.0364%" height="15" fill="rgb(211,81,21)" fg:x="2372" fg:w="60"/><text x="1.6904%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (53 samples, 0.03%)</title><rect x="1.4447%" y="1925" width="0.0322%" height="15" fill="rgb(208,190,38)" fg:x="2379" fg:w="53"/><text x="1.6947%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (53 samples, 0.03%)</title><rect x="1.4447%" y="1909" width="0.0322%" height="15" fill="rgb(235,213,38)" fg:x="2379" fg:w="53"/><text x="1.6947%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (39 samples, 0.02%)</title><rect x="1.4532%" y="1893" width="0.0237%" height="15" fill="rgb(237,122,38)" fg:x="2393" fg:w="39"/><text x="1.7032%" y="1903.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (39 samples, 0.02%)</title><rect x="1.4532%" y="1877" width="0.0237%" height="15" fill="rgb(244,218,35)" fg:x="2393" fg:w="39"/><text x="1.7032%" y="1887.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (39 samples, 0.02%)</title><rect x="1.4532%" y="1861" width="0.0237%" height="15" fill="rgb(240,68,47)" fg:x="2393" fg:w="39"/><text x="1.7032%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (44 samples, 0.03%)</title><rect x="1.4769%" y="1941" width="0.0267%" height="15" fill="rgb(210,16,53)" fg:x="2432" fg:w="44"/><text x="1.7269%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (45 samples, 0.03%)</title><rect x="1.5036%" y="1941" width="0.0273%" height="15" fill="rgb(235,124,12)" fg:x="2476" fg:w="45"/><text x="1.7536%" y="1951.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="1.5170%" y="1925" width="0.0140%" height="15" fill="rgb(224,169,11)" fg:x="2498" fg:w="23"/><text x="1.7670%" y="1935.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (23 samples, 0.01%)</title><rect x="1.5170%" y="1909" width="0.0140%" height="15" fill="rgb(250,166,2)" fg:x="2498" fg:w="23"/><text x="1.7670%" y="1919.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (21 samples, 0.01%)</title><rect x="1.5182%" y="1893" width="0.0128%" height="15" fill="rgb(242,216,29)" fg:x="2500" fg:w="21"/><text x="1.7682%" y="1903.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (21 samples, 0.01%)</title><rect x="1.5182%" y="1877" width="0.0128%" height="15" fill="rgb(230,116,27)" fg:x="2500" fg:w="21"/><text x="1.7682%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (69 samples, 0.04%)</title><rect x="1.5309%" y="1941" width="0.0419%" height="15" fill="rgb(228,99,48)" fg:x="2521" fg:w="69"/><text x="1.7809%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="1.5728%" y="1941" width="0.0152%" height="15" fill="rgb(253,11,6)" fg:x="2590" fg:w="25"/><text x="1.8228%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio::io::util::chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (25 samples, 0.02%)</title><rect x="1.5886%" y="1941" width="0.0152%" height="15" fill="rgb(247,143,39)" fg:x="2616" fg:w="25"/><text x="1.8386%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_frame::{{closure}}&gt; (30 samples, 0.02%)</title><rect x="1.6038%" y="1941" width="0.0182%" height="15" fill="rgb(236,97,10)" fg:x="2641" fg:w="30"/><text x="1.8538%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::mux::inner::MuxInner&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;::handle_packet::{{closure}}&gt; (29 samples, 0.02%)</title><rect x="1.6311%" y="1941" width="0.0176%" height="15" fill="rgb(233,208,19)" fg:x="2686" fg:w="29"/><text x="1.8811%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (44 samples, 0.03%)</title><rect x="1.6548%" y="1941" width="0.0267%" height="15" fill="rgb(216,164,2)" fg:x="2725" fg:w="44"/><text x="1.9048%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (48 samples, 0.03%)</title><rect x="1.6821%" y="1941" width="0.0291%" height="15" fill="rgb(220,129,5)" fg:x="2770" fg:w="48"/><text x="1.9321%" y="1951.50"></text></g><g><title>epoll_wait (20 samples, 0.01%)</title><rect x="1.7155%" y="1941" width="0.0121%" height="15" fill="rgb(242,17,10)" fg:x="2825" fg:w="20"/><text x="1.9655%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (46 samples, 0.03%)</title><rect x="1.7277%" y="1941" width="0.0279%" height="15" fill="rgb(242,107,0)" fg:x="2845" fg:w="46"/><text x="1.9777%" y="1951.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (41 samples, 0.02%)</title><rect x="1.7556%" y="1941" width="0.0249%" height="15" fill="rgb(251,28,31)" fg:x="2891" fg:w="41"/><text x="2.0056%" y="1951.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (17 samples, 0.01%)</title><rect x="1.8971%" y="1909" width="0.0103%" height="15" fill="rgb(233,223,10)" fg:x="3124" fg:w="17"/><text x="2.1471%" y="1919.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (17 samples, 0.01%)</title><rect x="1.8971%" y="1893" width="0.0103%" height="15" fill="rgb(215,21,27)" fg:x="3124" fg:w="17"/><text x="2.1471%" y="1903.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (177 samples, 0.11%)</title><rect x="1.8139%" y="1941" width="0.1075%" height="15" fill="rgb(232,23,21)" fg:x="2987" fg:w="177"/><text x="2.0639%" y="1951.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (73 samples, 0.04%)</title><rect x="1.8771%" y="1925" width="0.0443%" height="15" fill="rgb(244,5,23)" fg:x="3091" fg:w="73"/><text x="2.1271%" y="1935.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (23 samples, 0.01%)</title><rect x="1.9074%" y="1909" width="0.0140%" height="15" fill="rgb(226,81,46)" fg:x="3141" fg:w="23"/><text x="2.1574%" y="1919.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="2.0295%" y="1909" width="0.0146%" height="15" fill="rgb(247,70,30)" fg:x="3342" fg:w="24"/><text x="2.2795%" y="1919.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (24 samples, 0.01%)</title><rect x="2.0295%" y="1893" width="0.0146%" height="15" fill="rgb(212,68,19)" fg:x="3342" fg:w="24"/><text x="2.2795%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (70 samples, 0.04%)</title><rect x="2.0441%" y="1909" width="0.0425%" height="15" fill="rgb(240,187,13)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (70 samples, 0.04%)</title><rect x="2.0441%" y="1893" width="0.0425%" height="15" fill="rgb(223,113,26)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (70 samples, 0.04%)</title><rect x="2.0441%" y="1877" width="0.0425%" height="15" fill="rgb(206,192,2)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1887.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (70 samples, 0.04%)</title><rect x="2.0441%" y="1861" width="0.0425%" height="15" fill="rgb(241,108,4)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (70 samples, 0.04%)</title><rect x="2.0441%" y="1845" width="0.0425%" height="15" fill="rgb(247,173,49)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (70 samples, 0.04%)</title><rect x="2.0441%" y="1829" width="0.0425%" height="15" fill="rgb(224,114,35)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.04%)</title><rect x="2.0441%" y="1813" width="0.0425%" height="15" fill="rgb(245,159,27)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (70 samples, 0.04%)</title><rect x="2.0441%" y="1797" width="0.0425%" height="15" fill="rgb(245,172,44)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.04%)</title><rect x="2.0441%" y="1781" width="0.0425%" height="15" fill="rgb(236,23,11)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.04%)</title><rect x="2.0441%" y="1765" width="0.0425%" height="15" fill="rgb(205,117,38)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1775.50"></text></g><g><title>__rust_dealloc (70 samples, 0.04%)</title><rect x="2.0441%" y="1749" width="0.0425%" height="15" fill="rgb(237,72,25)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1759.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (70 samples, 0.04%)</title><rect x="2.0441%" y="1733" width="0.0425%" height="15" fill="rgb(244,70,9)" fg:x="3366" fg:w="70"/><text x="2.2941%" y="1743.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (273 samples, 0.17%)</title><rect x="1.9214%" y="1941" width="0.1658%" height="15" fill="rgb(217,125,39)" fg:x="3164" fg:w="273"/><text x="2.1714%" y="1951.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (110 samples, 0.07%)</title><rect x="2.0204%" y="1925" width="0.0668%" height="15" fill="rgb(235,36,10)" fg:x="3327" fg:w="110"/><text x="2.2704%" y="1935.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (41 samples, 0.02%)</title><rect x="2.1291%" y="1925" width="0.0249%" height="15" fill="rgb(251,123,47)" fg:x="3506" fg:w="41"/><text x="2.3791%" y="1935.50"></text></g><g><title>fastwebsockets::frame::Frame::write (170 samples, 0.10%)</title><rect x="2.0872%" y="1941" width="0.1032%" height="15" fill="rgb(221,13,13)" fg:x="3437" fg:w="170"/><text x="2.3372%" y="1951.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (60 samples, 0.04%)</title><rect x="2.1540%" y="1925" width="0.0364%" height="15" fill="rgb(238,131,9)" fg:x="3547" fg:w="60"/><text x="2.4040%" y="1935.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (60 samples, 0.04%)</title><rect x="2.1540%" y="1909" width="0.0364%" height="15" fill="rgb(211,50,8)" fg:x="3547" fg:w="60"/><text x="2.4040%" y="1919.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (54 samples, 0.03%)</title><rect x="2.1904%" y="1941" width="0.0328%" height="15" fill="rgb(245,182,24)" fg:x="3607" fg:w="54"/><text x="2.4404%" y="1951.50"></text></g><g><title>flume::Shared&lt;T&gt;::len (27 samples, 0.02%)</title><rect x="2.2232%" y="1941" width="0.0164%" height="15" fill="rgb(242,14,37)" fg:x="3661" fg:w="27"/><text x="2.4732%" y="1951.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (19 samples, 0.01%)</title><rect x="2.2396%" y="1941" width="0.0115%" height="15" fill="rgb(246,228,12)" fg:x="3688" fg:w="19"/><text x="2.4896%" y="1951.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (59 samples, 0.04%)</title><rect x="2.2511%" y="1941" width="0.0358%" height="15" fill="rgb(213,55,15)" fg:x="3707" fg:w="59"/><text x="2.5011%" y="1951.50"></text></g><g><title>pthread_mutex_trylock (33 samples, 0.02%)</title><rect x="2.3222%" y="1941" width="0.0200%" height="15" fill="rgb(209,9,3)" fg:x="3824" fg:w="33"/><text x="2.5722%" y="1951.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (39 samples, 0.02%)</title><rect x="2.3483%" y="1941" width="0.0237%" height="15" fill="rgb(230,59,30)" fg:x="3867" fg:w="39"/><text x="2.5983%" y="1951.50"></text></g><g><title>syscall (77 samples, 0.05%)</title><rect x="2.3817%" y="1941" width="0.0468%" height="15" fill="rgb(209,121,21)" fg:x="3922" fg:w="77"/><text x="2.6317%" y="1951.50"></text></g><g><title>tcache_gc_small (27 samples, 0.02%)</title><rect x="2.4297%" y="1941" width="0.0164%" height="15" fill="rgb(220,109,13)" fg:x="4001" fg:w="27"/><text x="2.6797%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (21 samples, 0.01%)</title><rect x="2.5281%" y="1909" width="0.0128%" height="15" fill="rgb(232,18,1)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1919.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (21 samples, 0.01%)</title><rect x="2.5281%" y="1893" width="0.0128%" height="15" fill="rgb(215,41,42)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1903.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (21 samples, 0.01%)</title><rect x="2.5281%" y="1877" width="0.0128%" height="15" fill="rgb(224,123,36)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1887.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (21 samples, 0.01%)</title><rect x="2.5281%" y="1861" width="0.0128%" height="15" fill="rgb(240,125,3)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1871.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 0.01%)</title><rect x="2.5281%" y="1845" width="0.0128%" height="15" fill="rgb(205,98,50)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1855.50"></text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 0.01%)</title><rect x="2.5281%" y="1829" width="0.0128%" height="15" fill="rgb(205,185,37)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1839.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (21 samples, 0.01%)</title><rect x="2.5281%" y="1813" width="0.0128%" height="15" fill="rgb(238,207,15)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1823.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (21 samples, 0.01%)</title><rect x="2.5281%" y="1797" width="0.0128%" height="15" fill="rgb(213,199,42)" fg:x="4163" fg:w="21"/><text x="2.7781%" y="1807.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (179 samples, 0.11%)</title><rect x="2.4461%" y="1941" width="0.1087%" height="15" fill="rgb(235,201,11)" fg:x="4028" fg:w="179"/><text x="2.6961%" y="1951.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (44 samples, 0.03%)</title><rect x="2.5281%" y="1925" width="0.0267%" height="15" fill="rgb(207,46,11)" fg:x="4163" fg:w="44"/><text x="2.7781%" y="1935.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (23 samples, 0.01%)</title><rect x="2.5408%" y="1909" width="0.0140%" height="15" fill="rgb(241,35,35)" fg:x="4184" fg:w="23"/><text x="2.7908%" y="1919.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (45 samples, 0.03%)</title><rect x="2.6113%" y="1909" width="0.0273%" height="15" fill="rgb(243,32,47)" fg:x="4300" fg:w="45"/><text x="2.8613%" y="1919.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (45 samples, 0.03%)</title><rect x="2.6113%" y="1893" width="0.0273%" height="15" fill="rgb(247,202,23)" fg:x="4300" fg:w="45"/><text x="2.8613%" y="1903.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (45 samples, 0.03%)</title><rect x="2.6113%" y="1877" width="0.0273%" height="15" fill="rgb(219,102,11)" fg:x="4300" fg:w="45"/><text x="2.8613%" y="1887.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (45 samples, 0.03%)</title><rect x="2.6113%" y="1861" width="0.0273%" height="15" fill="rgb(243,110,44)" fg:x="4300" fg:w="45"/><text x="2.8613%" y="1871.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (45 samples, 0.03%)</title><rect x="2.6113%" y="1845" width="0.0273%" height="15" fill="rgb(222,74,54)" fg:x="4300" fg:w="45"/><text x="2.8613%" y="1855.50"></text></g><g><title>std::sys_common::net::TcpStream::write (45 samples, 0.03%)</title><rect x="2.6113%" y="1829" width="0.0273%" height="15" fill="rgb(216,99,12)" fg:x="4300" fg:w="45"/><text x="2.8613%" y="1839.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (166 samples, 0.10%)</title><rect x="2.5548%" y="1941" width="0.1008%" height="15" fill="rgb(226,22,26)" fg:x="4207" fg:w="166"/><text x="2.8048%" y="1951.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (73 samples, 0.04%)</title><rect x="2.6113%" y="1925" width="0.0443%" height="15" fill="rgb(217,163,10)" fg:x="4300" fg:w="73"/><text x="2.8613%" y="1935.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (28 samples, 0.02%)</title><rect x="2.6386%" y="1909" width="0.0170%" height="15" fill="rgb(213,25,53)" fg:x="4345" fg:w="28"/><text x="2.8886%" y="1919.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (126 samples, 0.08%)</title><rect x="2.6556%" y="1941" width="0.0765%" height="15" fill="rgb(252,105,26)" fg:x="4373" fg:w="126"/><text x="2.9056%" y="1951.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (54 samples, 0.03%)</title><rect x="2.6993%" y="1925" width="0.0328%" height="15" fill="rgb(220,39,43)" fg:x="4445" fg:w="54"/><text x="2.9493%" y="1935.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (54 samples, 0.03%)</title><rect x="2.6993%" y="1909" width="0.0328%" height="15" fill="rgb(229,68,48)" fg:x="4445" fg:w="54"/><text x="2.9493%" y="1919.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (54 samples, 0.03%)</title><rect x="2.6993%" y="1893" width="0.0328%" height="15" fill="rgb(252,8,32)" fg:x="4445" fg:w="54"/><text x="2.9493%" y="1903.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (42 samples, 0.03%)</title><rect x="2.7066%" y="1877" width="0.0255%" height="15" fill="rgb(223,20,43)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1887.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (42 samples, 0.03%)</title><rect x="2.7066%" y="1861" width="0.0255%" height="15" fill="rgb(229,81,49)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1871.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (42 samples, 0.03%)</title><rect x="2.7066%" y="1845" width="0.0255%" height="15" fill="rgb(236,28,36)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1855.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (42 samples, 0.03%)</title><rect x="2.7066%" y="1829" width="0.0255%" height="15" fill="rgb(249,185,26)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1839.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (42 samples, 0.03%)</title><rect x="2.7066%" y="1813" width="0.0255%" height="15" fill="rgb(249,174,33)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1823.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (42 samples, 0.03%)</title><rect x="2.7066%" y="1797" width="0.0255%" height="15" fill="rgb(233,201,37)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1807.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (42 samples, 0.03%)</title><rect x="2.7066%" y="1781" width="0.0255%" height="15" fill="rgb(221,78,26)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1791.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (42 samples, 0.03%)</title><rect x="2.7066%" y="1765" width="0.0255%" height="15" fill="rgb(250,127,30)" fg:x="4457" fg:w="42"/><text x="2.9566%" y="1775.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (29 samples, 0.02%)</title><rect x="2.7631%" y="1941" width="0.0176%" height="15" fill="rgb(230,49,44)" fg:x="4550" fg:w="29"/><text x="3.0131%" y="1951.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (125 samples, 0.08%)</title><rect x="2.7807%" y="1941" width="0.0759%" height="15" fill="rgb(229,67,23)" fg:x="4579" fg:w="125"/><text x="3.0307%" y="1951.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (18 samples, 0.01%)</title><rect x="2.8457%" y="1925" width="0.0109%" height="15" fill="rgb(249,83,47)" fg:x="4686" fg:w="18"/><text x="3.0957%" y="1935.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.01%)</title><rect x="2.8457%" y="1909" width="0.0109%" height="15" fill="rgb(215,43,3)" fg:x="4686" fg:w="18"/><text x="3.0957%" y="1919.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (19 samples, 0.01%)</title><rect x="2.8566%" y="1941" width="0.0115%" height="15" fill="rgb(238,154,13)" fg:x="4704" fg:w="19"/><text x="3.1066%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (17 samples, 0.01%)</title><rect x="2.8681%" y="1941" width="0.0103%" height="15" fill="rgb(219,56,2)" fg:x="4723" fg:w="17"/><text x="3.1181%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (22 samples, 0.01%)</title><rect x="2.8900%" y="1941" width="0.0134%" height="15" fill="rgb(233,0,4)" fg:x="4759" fg:w="22"/><text x="3.1400%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (44 samples, 0.03%)</title><rect x="2.9033%" y="1941" width="0.0267%" height="15" fill="rgb(235,30,7)" fg:x="4781" fg:w="44"/><text x="3.1533%" y="1951.50"></text></g><g><title>tokio::runtime::coop::budget (137 samples, 0.08%)</title><rect x="2.9452%" y="1925" width="0.0832%" height="15" fill="rgb(250,79,13)" fg:x="4850" fg:w="137"/><text x="3.1952%" y="1935.50"></text></g><g><title>tokio::runtime::coop::with_budget (137 samples, 0.08%)</title><rect x="2.9452%" y="1909" width="0.0832%" height="15" fill="rgb(211,146,34)" fg:x="4850" fg:w="137"/><text x="3.1952%" y="1919.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (137 samples, 0.08%)</title><rect x="2.9452%" y="1893" width="0.0832%" height="15" fill="rgb(228,22,38)" fg:x="4850" fg:w="137"/><text x="3.1952%" y="1903.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (137 samples, 0.08%)</title><rect x="2.9452%" y="1877" width="0.0832%" height="15" fill="rgb(235,168,5)" fg:x="4850" fg:w="137"/><text x="3.1952%" y="1887.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (137 samples, 0.08%)</title><rect x="2.9452%" y="1861" width="0.0832%" height="15" fill="rgb(221,155,16)" fg:x="4850" fg:w="137"/><text x="3.1952%" y="1871.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (164 samples, 0.10%)</title><rect x="2.9301%" y="1941" width="0.0996%" height="15" fill="rgb(215,215,53)" fg:x="4825" fg:w="164"/><text x="3.1801%" y="1951.50"></text></g><g><title>tokio::runtime::signal::Driver::process (32 samples, 0.02%)</title><rect x="3.0339%" y="1941" width="0.0194%" height="15" fill="rgb(223,4,10)" fg:x="4996" fg:w="32"/><text x="3.2839%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (30 samples, 0.02%)</title><rect x="3.0606%" y="1557" width="0.0182%" height="15" fill="rgb(234,103,6)" fg:x="5040" fg:w="30"/><text x="3.3106%" y="1567.50"></text></g><g><title>tokio::runtime::task::raw::poll (63 samples, 0.04%)</title><rect x="3.0533%" y="1941" width="0.0383%" height="15" fill="rgb(227,97,0)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (63 samples, 0.04%)</title><rect x="3.0533%" y="1925" width="0.0383%" height="15" fill="rgb(234,150,53)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1935.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (63 samples, 0.04%)</title><rect x="3.0533%" y="1909" width="0.0383%" height="15" fill="rgb(228,201,54)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1919.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (63 samples, 0.04%)</title><rect x="3.0533%" y="1893" width="0.0383%" height="15" fill="rgb(222,22,37)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (63 samples, 0.04%)</title><rect x="3.0533%" y="1877" width="0.0383%" height="15" fill="rgb(237,53,32)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1887.50"></text></g><g><title>std::panicking::try (63 samples, 0.04%)</title><rect x="3.0533%" y="1861" width="0.0383%" height="15" fill="rgb(233,25,53)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (63 samples, 0.04%)</title><rect x="3.0533%" y="1845" width="0.0383%" height="15" fill="rgb(210,40,34)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1855.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (63 samples, 0.04%)</title><rect x="3.0533%" y="1829" width="0.0383%" height="15" fill="rgb(241,220,44)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (63 samples, 0.04%)</title><rect x="3.0533%" y="1813" width="0.0383%" height="15" fill="rgb(235,28,35)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1823.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (63 samples, 0.04%)</title><rect x="3.0533%" y="1797" width="0.0383%" height="15" fill="rgb(210,56,17)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1807.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (63 samples, 0.04%)</title><rect x="3.0533%" y="1781" width="0.0383%" height="15" fill="rgb(224,130,29)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (63 samples, 0.04%)</title><rect x="3.0533%" y="1765" width="0.0383%" height="15" fill="rgb(235,212,8)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.04%)</title><rect x="3.0533%" y="1749" width="0.0383%" height="15" fill="rgb(223,33,50)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (63 samples, 0.04%)</title><rect x="3.0533%" y="1733" width="0.0383%" height="15" fill="rgb(219,149,13)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (63 samples, 0.04%)</title><rect x="3.0533%" y="1717" width="0.0383%" height="15" fill="rgb(250,156,29)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1727.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (63 samples, 0.04%)</title><rect x="3.0533%" y="1701" width="0.0383%" height="15" fill="rgb(216,193,19)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (63 samples, 0.04%)</title><rect x="3.0533%" y="1685" width="0.0383%" height="15" fill="rgb(216,135,14)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1695.50"></text></g><g><title>tokio::runtime::context::set_scheduler (63 samples, 0.04%)</title><rect x="3.0533%" y="1669" width="0.0383%" height="15" fill="rgb(241,47,5)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 samples, 0.04%)</title><rect x="3.0533%" y="1653" width="0.0383%" height="15" fill="rgb(233,42,35)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (63 samples, 0.04%)</title><rect x="3.0533%" y="1637" width="0.0383%" height="15" fill="rgb(231,13,6)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1647.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (63 samples, 0.04%)</title><rect x="3.0533%" y="1621" width="0.0383%" height="15" fill="rgb(207,181,40)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1631.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (63 samples, 0.04%)</title><rect x="3.0533%" y="1605" width="0.0383%" height="15" fill="rgb(254,173,49)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (63 samples, 0.04%)</title><rect x="3.0533%" y="1589" width="0.0383%" height="15" fill="rgb(221,1,38)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (63 samples, 0.04%)</title><rect x="3.0533%" y="1573" width="0.0383%" height="15" fill="rgb(206,124,46)" fg:x="5028" fg:w="63"/><text x="3.3033%" y="1583.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (50 samples, 0.03%)</title><rect x="3.1013%" y="1909" width="0.0304%" height="15" fill="rgb(249,21,11)" fg:x="5107" fg:w="50"/><text x="3.3513%" y="1919.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (71 samples, 0.04%)</title><rect x="3.0983%" y="1941" width="0.0431%" height="15" fill="rgb(222,201,40)" fg:x="5102" fg:w="71"/><text x="3.3483%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (66 samples, 0.04%)</title><rect x="3.1013%" y="1925" width="0.0401%" height="15" fill="rgb(235,61,29)" fg:x="5107" fg:w="66"/><text x="3.3513%" y="1935.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (18 samples, 0.01%)</title><rect x="3.1414%" y="1941" width="0.0109%" height="15" fill="rgb(219,207,3)" fg:x="5173" fg:w="18"/><text x="3.3914%" y="1951.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (369 samples, 0.22%)</title><rect x="3.1523%" y="1941" width="0.2241%" height="15" fill="rgb(222,56,46)" fg:x="5191" fg:w="369"/><text x="3.4023%" y="1951.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (303 samples, 0.18%)</title><rect x="3.3764%" y="1941" width="0.1840%" height="15" fill="rgb(239,76,54)" fg:x="5560" fg:w="303"/><text x="3.6264%" y="1951.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (91 samples, 0.06%)</title><rect x="3.5051%" y="1925" width="0.0553%" height="15" fill="rgb(231,124,27)" fg:x="5772" fg:w="91"/><text x="3.7551%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (91 samples, 0.06%)</title><rect x="3.5051%" y="1909" width="0.0553%" height="15" fill="rgb(249,195,6)" fg:x="5772" fg:w="91"/><text x="3.7551%" y="1919.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (42 samples, 0.03%)</title><rect x="3.5604%" y="1941" width="0.0255%" height="15" fill="rgb(237,174,47)" fg:x="5863" fg:w="42"/><text x="3.8104%" y="1951.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (40 samples, 0.02%)</title><rect x="3.5920%" y="1941" width="0.0243%" height="15" fill="rgb(206,201,31)" fg:x="5915" fg:w="40"/><text x="3.8420%" y="1951.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (23 samples, 0.01%)</title><rect x="3.6023%" y="1925" width="0.0140%" height="15" fill="rgb(231,57,52)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1935.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.01%)</title><rect x="3.6023%" y="1909" width="0.0140%" height="15" fill="rgb(248,177,22)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1919.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.01%)</title><rect x="3.6023%" y="1893" width="0.0140%" height="15" fill="rgb(215,211,37)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.01%)</title><rect x="3.6023%" y="1877" width="0.0140%" height="15" fill="rgb(241,128,51)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.01%)</title><rect x="3.6023%" y="1861" width="0.0140%" height="15" fill="rgb(227,165,31)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.01%)</title><rect x="3.6023%" y="1845" width="0.0140%" height="15" fill="rgb(228,167,24)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1855.50"></text></g><g><title>__rust_alloc (23 samples, 0.01%)</title><rect x="3.6023%" y="1829" width="0.0140%" height="15" fill="rgb(228,143,12)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1839.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.01%)</title><rect x="3.6023%" y="1813" width="0.0140%" height="15" fill="rgb(249,149,8)" fg:x="5932" fg:w="23"/><text x="3.8523%" y="1823.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (32 samples, 0.02%)</title><rect x="3.6163%" y="1941" width="0.0194%" height="15" fill="rgb(243,35,44)" fg:x="5955" fg:w="32"/><text x="3.8663%" y="1951.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (85 samples, 0.05%)</title><rect x="3.6369%" y="1941" width="0.0516%" height="15" fill="rgb(246,89,9)" fg:x="5989" fg:w="85"/><text x="3.8869%" y="1951.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (41 samples, 0.02%)</title><rect x="3.6885%" y="1941" width="0.0249%" height="15" fill="rgb(233,213,13)" fg:x="6074" fg:w="41"/><text x="3.9385%" y="1951.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::handle_packet::_{{closure}} (19 samples, 0.01%)</title><rect x="3.7134%" y="1941" width="0.0115%" height="15" fill="rgb(233,141,41)" fg:x="6115" fg:w="19"/><text x="3.9634%" y="1951.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (44 samples, 0.03%)</title><rect x="3.7268%" y="1941" width="0.0267%" height="15" fill="rgb(239,167,4)" fg:x="6137" fg:w="44"/><text x="3.9768%" y="1951.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (48 samples, 0.03%)</title><rect x="3.7535%" y="1941" width="0.0291%" height="15" fill="rgb(209,217,16)" fg:x="6181" fg:w="48"/><text x="4.0035%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (141 samples, 0.09%)</title><rect x="3.7827%" y="1941" width="0.0856%" height="15" fill="rgb(219,88,35)" fg:x="6229" fg:w="141"/><text x="4.0327%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (83 samples, 0.05%)</title><rect x="3.8683%" y="1941" width="0.0504%" height="15" fill="rgb(220,193,23)" fg:x="6370" fg:w="83"/><text x="4.1183%" y="1951.50"></text></g><g><title>[anon] (6,444 samples, 3.91%)</title><rect x="0.0267%" y="1957" width="3.9132%" height="15" fill="rgb(230,90,52)" fg:x="44" fg:w="6444"/><text x="0.2767%" y="1967.50">[ano..</text></g><g><title>writev (25 samples, 0.02%)</title><rect x="3.9248%" y="1941" width="0.0152%" height="15" fill="rgb(252,106,19)" fg:x="6463" fg:w="25"/><text x="4.1748%" y="1951.50"></text></g><g><title>_rjem_malloc (30 samples, 0.02%)</title><rect x="3.9539%" y="1941" width="0.0182%" height="15" fill="rgb(206,74,20)" fg:x="6511" fg:w="30"/><text x="4.2039%" y="1951.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (20 samples, 0.01%)</title><rect x="3.9940%" y="1893" width="0.0121%" height="15" fill="rgb(230,138,44)" fg:x="6577" fg:w="20"/><text x="4.2440%" y="1903.50"></text></g><g><title>core::task::wake::Waker::wake (20 samples, 0.01%)</title><rect x="3.9940%" y="1877" width="0.0121%" height="15" fill="rgb(235,182,43)" fg:x="6577" fg:w="20"/><text x="4.2440%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (38 samples, 0.02%)</title><rect x="3.9837%" y="1941" width="0.0231%" height="15" fill="rgb(242,16,51)" fg:x="6560" fg:w="38"/><text x="4.2337%" y="1951.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.01%)</title><rect x="3.9940%" y="1925" width="0.0128%" height="15" fill="rgb(248,9,4)" fg:x="6577" fg:w="21"/><text x="4.2440%" y="1935.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (21 samples, 0.01%)</title><rect x="3.9940%" y="1909" width="0.0128%" height="15" fill="rgb(210,31,22)" fg:x="6577" fg:w="21"/><text x="4.2440%" y="1919.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (25 samples, 0.02%)</title><rect x="4.0074%" y="1941" width="0.0152%" height="15" fill="rgb(239,54,39)" fg:x="6599" fg:w="25"/><text x="4.2574%" y="1951.50"></text></g><g><title>[epoxy-server] (164 samples, 0.10%)</title><rect x="3.9400%" y="1957" width="0.0996%" height="15" fill="rgb(230,99,41)" fg:x="6488" fg:w="164"/><text x="4.1900%" y="1967.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.02%)</title><rect x="4.0699%" y="1285" width="0.0231%" height="15" fill="rgb(253,106,12)" fg:x="6702" fg:w="38"/><text x="4.3199%" y="1295.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (36 samples, 0.02%)</title><rect x="4.1823%" y="1269" width="0.0219%" height="15" fill="rgb(213,46,41)" fg:x="6887" fg:w="36"/><text x="4.4323%" y="1279.50"></text></g><g><title>std::time::Instant::duration_since (36 samples, 0.02%)</title><rect x="4.1823%" y="1253" width="0.0219%" height="15" fill="rgb(215,133,35)" fg:x="6887" fg:w="36"/><text x="4.4323%" y="1263.50"></text></g><g><title>std::time::Instant::checked_duration_since (36 samples, 0.02%)</title><rect x="4.1823%" y="1237" width="0.0219%" height="15" fill="rgb(213,28,5)" fg:x="6887" fg:w="36"/><text x="4.4323%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (36 samples, 0.02%)</title><rect x="4.1823%" y="1221" width="0.0219%" height="15" fill="rgb(215,77,49)" fg:x="6887" fg:w="36"/><text x="4.4323%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (29 samples, 0.02%)</title><rect x="4.1865%" y="1205" width="0.0176%" height="15" fill="rgb(248,100,22)" fg:x="6894" fg:w="29"/><text x="4.4365%" y="1215.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (19 samples, 0.01%)</title><rect x="4.2242%" y="1221" width="0.0115%" height="15" fill="rgb(208,67,9)" fg:x="6956" fg:w="19"/><text x="4.4742%" y="1231.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (62 samples, 0.04%)</title><rect x="4.2047%" y="1237" width="0.0377%" height="15" fill="rgb(219,133,21)" fg:x="6924" fg:w="62"/><text x="4.4547%" y="1247.50"></text></g><g><title>__floattidf (82 samples, 0.05%)</title><rect x="4.2041%" y="1269" width="0.0498%" height="15" fill="rgb(246,46,29)" fg:x="6923" fg:w="82"/><text x="4.4541%" y="1279.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (82 samples, 0.05%)</title><rect x="4.2041%" y="1253" width="0.0498%" height="15" fill="rgb(246,185,52)" fg:x="6923" fg:w="82"/><text x="4.4541%" y="1263.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (523 samples, 0.32%)</title><rect x="4.2624%" y="1269" width="0.3176%" height="15" fill="rgb(252,136,11)" fg:x="7019" fg:w="523"/><text x="4.5124%" y="1279.50"></text></g><g><title>pow (514 samples, 0.31%)</title><rect x="4.2679%" y="1253" width="0.3121%" height="15" fill="rgb(219,138,53)" fg:x="7028" fg:w="514"/><text x="4.5179%" y="1263.50"></text></g><g><title>[libm.so.6] (399 samples, 0.24%)</title><rect x="4.3377%" y="1237" width="0.2423%" height="15" fill="rgb(211,51,23)" fg:x="7143" fg:w="399"/><text x="4.5877%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (252 samples, 0.15%)</title><rect x="4.5800%" y="1269" width="0.1530%" height="15" fill="rgb(247,221,28)" fg:x="7542" fg:w="252"/><text x="4.8300%" y="1279.50"></text></g><g><title>clock_gettime (238 samples, 0.14%)</title><rect x="4.5885%" y="1253" width="0.1445%" height="15" fill="rgb(251,222,45)" fg:x="7556" fg:w="238"/><text x="4.8385%" y="1263.50"></text></g><g><title>__vdso_clock_gettime (168 samples, 0.10%)</title><rect x="4.6310%" y="1237" width="0.1020%" height="15" fill="rgb(217,162,53)" fg:x="7626" fg:w="168"/><text x="4.8810%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (1,049 samples, 0.64%)</title><rect x="4.0997%" y="1285" width="0.6370%" height="15" fill="rgb(229,93,14)" fg:x="6751" fg:w="1049"/><text x="4.3497%" y="1295.50"></text></g><g><title>clock_gettime (281 samples, 0.17%)</title><rect x="4.7543%" y="1253" width="0.1706%" height="15" fill="rgb(209,67,49)" fg:x="7829" fg:w="281"/><text x="5.0043%" y="1263.50"></text></g><g><title>__vdso_clock_gettime (226 samples, 0.14%)</title><rect x="4.7877%" y="1237" width="0.1372%" height="15" fill="rgb(213,87,29)" fg:x="7884" fg:w="226"/><text x="5.0377%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (312 samples, 0.19%)</title><rect x="4.7367%" y="1269" width="0.1895%" height="15" fill="rgb(205,151,52)" fg:x="7800" fg:w="312"/><text x="4.9867%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (313 samples, 0.19%)</title><rect x="4.7367%" y="1285" width="0.1901%" height="15" fill="rgb(253,215,39)" fg:x="7800" fg:w="313"/><text x="4.9867%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.01%)</title><rect x="4.9875%" y="1269" width="0.0140%" height="15" fill="rgb(221,220,41)" fg:x="8213" fg:w="23"/><text x="5.2375%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (23 samples, 0.01%)</title><rect x="4.9875%" y="1253" width="0.0140%" height="15" fill="rgb(218,133,21)" fg:x="8213" fg:w="23"/><text x="5.2375%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (23 samples, 0.01%)</title><rect x="4.9875%" y="1237" width="0.0140%" height="15" fill="rgb(221,193,43)" fg:x="8213" fg:w="23"/><text x="5.2375%" y="1247.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (19 samples, 0.01%)</title><rect x="5.0160%" y="1253" width="0.0115%" height="15" fill="rgb(240,128,52)" fg:x="8260" fg:w="19"/><text x="5.2660%" y="1263.50"></text></g><g><title>pow (17 samples, 0.01%)</title><rect x="5.0172%" y="1237" width="0.0103%" height="15" fill="rgb(253,114,12)" fg:x="8262" fg:w="17"/><text x="5.2672%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (51 samples, 0.03%)</title><rect x="5.0015%" y="1269" width="0.0310%" height="15" fill="rgb(215,223,47)" fg:x="8236" fg:w="51"/><text x="5.2515%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (45 samples, 0.03%)</title><rect x="5.0494%" y="1221" width="0.0273%" height="15" fill="rgb(248,225,23)" fg:x="8315" fg:w="45"/><text x="5.2994%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (45 samples, 0.03%)</title><rect x="5.0494%" y="1205" width="0.0273%" height="15" fill="rgb(250,108,0)" fg:x="8315" fg:w="45"/><text x="5.2994%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (45 samples, 0.03%)</title><rect x="5.0494%" y="1189" width="0.0273%" height="15" fill="rgb(228,208,7)" fg:x="8315" fg:w="45"/><text x="5.2994%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.02%)</title><rect x="5.0543%" y="1173" width="0.0225%" height="15" fill="rgb(244,45,10)" fg:x="8323" fg:w="37"/><text x="5.3043%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (37 samples, 0.02%)</title><rect x="5.0543%" y="1157" width="0.0225%" height="15" fill="rgb(207,125,25)" fg:x="8323" fg:w="37"/><text x="5.3043%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 0.02%)</title><rect x="5.0555%" y="1141" width="0.0213%" height="15" fill="rgb(210,195,18)" fg:x="8325" fg:w="35"/><text x="5.3055%" y="1151.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (35 samples, 0.02%)</title><rect x="5.0555%" y="1125" width="0.0213%" height="15" fill="rgb(249,80,12)" fg:x="8325" fg:w="35"/><text x="5.3055%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (35 samples, 0.02%)</title><rect x="5.0555%" y="1109" width="0.0213%" height="15" fill="rgb(221,65,9)" fg:x="8325" fg:w="35"/><text x="5.3055%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (34 samples, 0.02%)</title><rect x="5.0561%" y="1093" width="0.0206%" height="15" fill="rgb(235,49,36)" fg:x="8326" fg:w="34"/><text x="5.3061%" y="1103.50"></text></g><g><title>mio::poll::Poll::poll (24 samples, 0.01%)</title><rect x="5.0859%" y="1205" width="0.0146%" height="15" fill="rgb(225,32,20)" fg:x="8375" fg:w="24"/><text x="5.3359%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (24 samples, 0.01%)</title><rect x="5.0859%" y="1189" width="0.0146%" height="15" fill="rgb(215,141,46)" fg:x="8375" fg:w="24"/><text x="5.3359%" y="1199.50"></text></g><g><title>epoll_wait (21 samples, 0.01%)</title><rect x="5.0877%" y="1173" width="0.0128%" height="15" fill="rgb(250,160,47)" fg:x="8378" fg:w="21"/><text x="5.3377%" y="1183.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (27 samples, 0.02%)</title><rect x="5.0859%" y="1221" width="0.0164%" height="15" fill="rgb(216,222,40)" fg:x="8375" fg:w="27"/><text x="5.3359%" y="1231.50"></text></g><g><title>core::mem::drop (29 samples, 0.02%)</title><rect x="5.1053%" y="1061" width="0.0176%" height="15" fill="rgb(234,217,39)" fg:x="8407" fg:w="29"/><text x="5.3553%" y="1071.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (81 samples, 0.05%)</title><rect x="5.1029%" y="1109" width="0.0492%" height="15" fill="rgb(207,178,40)" fg:x="8403" fg:w="81"/><text x="5.3529%" y="1119.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (81 samples, 0.05%)</title><rect x="5.1029%" y="1093" width="0.0492%" height="15" fill="rgb(221,136,13)" fg:x="8403" fg:w="81"/><text x="5.3529%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (80 samples, 0.05%)</title><rect x="5.1035%" y="1077" width="0.0486%" height="15" fill="rgb(249,199,10)" fg:x="8404" fg:w="80"/><text x="5.3535%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (82 samples, 0.05%)</title><rect x="5.1029%" y="1141" width="0.0498%" height="15" fill="rgb(249,222,13)" fg:x="8403" fg:w="82"/><text x="5.3529%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (82 samples, 0.05%)</title><rect x="5.1029%" y="1125" width="0.0498%" height="15" fill="rgb(244,185,38)" fg:x="8403" fg:w="82"/><text x="5.3529%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (25 samples, 0.02%)</title><rect x="5.1557%" y="1013" width="0.0152%" height="15" fill="rgb(236,202,9)" fg:x="8490" fg:w="25"/><text x="5.4057%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (25 samples, 0.02%)</title><rect x="5.1557%" y="997" width="0.0152%" height="15" fill="rgb(250,229,37)" fg:x="8490" fg:w="25"/><text x="5.4057%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="5.1557%" y="981" width="0.0152%" height="15" fill="rgb(206,174,23)" fg:x="8490" fg:w="25"/><text x="5.4057%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (25 samples, 0.02%)</title><rect x="5.1557%" y="965" width="0.0152%" height="15" fill="rgb(211,33,43)" fg:x="8490" fg:w="25"/><text x="5.4057%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (24 samples, 0.01%)</title><rect x="5.1563%" y="949" width="0.0146%" height="15" fill="rgb(245,58,50)" fg:x="8491" fg:w="24"/><text x="5.4063%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.01%)</title><rect x="5.1563%" y="933" width="0.0146%" height="15" fill="rgb(244,68,36)" fg:x="8491" fg:w="24"/><text x="5.4063%" y="943.50"></text></g><g><title>core::mem::drop (39 samples, 0.02%)</title><rect x="5.1557%" y="1029" width="0.0237%" height="15" fill="rgb(232,229,15)" fg:x="8490" fg:w="39"/><text x="5.4057%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.01%)</title><rect x="5.1800%" y="965" width="0.0115%" height="15" fill="rgb(254,30,23)" fg:x="8530" fg:w="19"/><text x="5.4300%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.01%)</title><rect x="5.1800%" y="949" width="0.0115%" height="15" fill="rgb(235,160,14)" fg:x="8530" fg:w="19"/><text x="5.4300%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (21 samples, 0.01%)</title><rect x="5.1794%" y="1029" width="0.0128%" height="15" fill="rgb(212,155,44)" fg:x="8529" fg:w="21"/><text x="5.4294%" y="1039.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (21 samples, 0.01%)</title><rect x="5.1794%" y="1013" width="0.0128%" height="15" fill="rgb(226,2,50)" fg:x="8529" fg:w="21"/><text x="5.4294%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (21 samples, 0.01%)</title><rect x="5.1794%" y="997" width="0.0128%" height="15" fill="rgb(234,177,6)" fg:x="8529" fg:w="21"/><text x="5.4294%" y="1007.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (20 samples, 0.01%)</title><rect x="5.1800%" y="981" width="0.0121%" height="15" fill="rgb(217,24,9)" fg:x="8530" fg:w="20"/><text x="5.4300%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (193 samples, 0.12%)</title><rect x="5.1029%" y="1189" width="0.1172%" height="15" fill="rgb(220,13,46)" fg:x="8403" fg:w="193"/><text x="5.3529%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (193 samples, 0.12%)</title><rect x="5.1029%" y="1173" width="0.1172%" height="15" fill="rgb(239,221,27)" fg:x="8403" fg:w="193"/><text x="5.3529%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (193 samples, 0.12%)</title><rect x="5.1029%" y="1157" width="0.1172%" height="15" fill="rgb(222,198,25)" fg:x="8403" fg:w="193"/><text x="5.3529%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.07%)</title><rect x="5.1527%" y="1141" width="0.0674%" height="15" fill="rgb(211,99,13)" fg:x="8485" fg:w="111"/><text x="5.4027%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (111 samples, 0.07%)</title><rect x="5.1527%" y="1125" width="0.0674%" height="15" fill="rgb(232,111,31)" fg:x="8485" fg:w="111"/><text x="5.4027%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (111 samples, 0.07%)</title><rect x="5.1527%" y="1109" width="0.0674%" height="15" fill="rgb(245,82,37)" fg:x="8485" fg:w="111"/><text x="5.4027%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (111 samples, 0.07%)</title><rect x="5.1527%" y="1093" width="0.0674%" height="15" fill="rgb(227,149,46)" fg:x="8485" fg:w="111"/><text x="5.4027%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (111 samples, 0.07%)</title><rect x="5.1527%" y="1077" width="0.0674%" height="15" fill="rgb(218,36,50)" fg:x="8485" fg:w="111"/><text x="5.4027%" y="1087.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (111 samples, 0.07%)</title><rect x="5.1527%" y="1061" width="0.0674%" height="15" fill="rgb(226,80,48)" fg:x="8485" fg:w="111"/><text x="5.4027%" y="1071.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (110 samples, 0.07%)</title><rect x="5.1533%" y="1045" width="0.0668%" height="15" fill="rgb(238,224,15)" fg:x="8486" fg:w="110"/><text x="5.4033%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (194 samples, 0.12%)</title><rect x="5.1029%" y="1205" width="0.1178%" height="15" fill="rgb(241,136,10)" fg:x="8403" fg:w="194"/><text x="5.3529%" y="1215.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (204 samples, 0.12%)</title><rect x="5.1023%" y="1221" width="0.1239%" height="15" fill="rgb(208,32,45)" fg:x="8402" fg:w="204"/><text x="5.3523%" y="1231.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (299 samples, 0.18%)</title><rect x="5.0482%" y="1237" width="0.1816%" height="15" fill="rgb(207,135,9)" fg:x="8313" fg:w="299"/><text x="5.2982%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (321 samples, 0.19%)</title><rect x="5.0391%" y="1253" width="0.1949%" height="15" fill="rgb(206,86,44)" fg:x="8298" fg:w="321"/><text x="5.2891%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (330 samples, 0.20%)</title><rect x="5.0349%" y="1269" width="0.2004%" height="15" fill="rgb(245,177,15)" fg:x="8291" fg:w="330"/><text x="5.2849%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (515 samples, 0.31%)</title><rect x="4.9268%" y="1285" width="0.3127%" height="15" fill="rgb(206,64,50)" fg:x="8113" fg:w="515"/><text x="5.1768%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (31 samples, 0.02%)</title><rect x="5.3531%" y="1269" width="0.0188%" height="15" fill="rgb(234,36,40)" fg:x="8815" fg:w="31"/><text x="5.6031%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (31 samples, 0.02%)</title><rect x="5.3531%" y="1253" width="0.0188%" height="15" fill="rgb(213,64,8)" fg:x="8815" fg:w="31"/><text x="5.6031%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (31 samples, 0.02%)</title><rect x="5.3531%" y="1237" width="0.0188%" height="15" fill="rgb(210,75,36)" fg:x="8815" fg:w="31"/><text x="5.6031%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (23 samples, 0.01%)</title><rect x="5.4624%" y="1253" width="0.0140%" height="15" fill="rgb(229,88,21)" fg:x="8995" fg:w="23"/><text x="5.7124%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (23 samples, 0.01%)</title><rect x="5.4624%" y="1237" width="0.0140%" height="15" fill="rgb(252,204,47)" fg:x="8995" fg:w="23"/><text x="5.7124%" y="1247.50"></text></g><g><title>core::cell::BorrowRefMut::new (23 samples, 0.01%)</title><rect x="5.4624%" y="1221" width="0.0140%" height="15" fill="rgb(208,77,27)" fg:x="8995" fg:w="23"/><text x="5.7124%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (17 samples, 0.01%)</title><rect x="5.4763%" y="1253" width="0.0103%" height="15" fill="rgb(221,76,26)" fg:x="9018" fg:w="17"/><text x="5.7263%" y="1263.50"></text></g><g><title>core::mem::replace (17 samples, 0.01%)</title><rect x="5.4763%" y="1237" width="0.0103%" height="15" fill="rgb(225,139,18)" fg:x="9018" fg:w="17"/><text x="5.7263%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (18 samples, 0.01%)</title><rect x="5.4867%" y="1253" width="0.0109%" height="15" fill="rgb(230,137,11)" fg:x="9035" fg:w="18"/><text x="5.7367%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (18 samples, 0.01%)</title><rect x="5.4867%" y="1237" width="0.0109%" height="15" fill="rgb(212,28,1)" fg:x="9035" fg:w="18"/><text x="5.7367%" y="1247.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="5.4867%" y="1221" width="0.0109%" height="15" fill="rgb(248,164,17)" fg:x="9035" fg:w="18"/><text x="5.7367%" y="1231.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (18 samples, 0.01%)</title><rect x="5.4867%" y="1205" width="0.0109%" height="15" fill="rgb(222,171,42)" fg:x="9035" fg:w="18"/><text x="5.7367%" y="1215.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.01%)</title><rect x="5.4867%" y="1189" width="0.0109%" height="15" fill="rgb(243,84,45)" fg:x="9035" fg:w="18"/><text x="5.7367%" y="1199.50"></text></g><g><title>core::mem::replace (18 samples, 0.01%)</title><rect x="5.4867%" y="1173" width="0.0109%" height="15" fill="rgb(252,49,23)" fg:x="9035" fg:w="18"/><text x="5.7367%" y="1183.50"></text></g><g><title>core::ptr::write (18 samples, 0.01%)</title><rect x="5.4867%" y="1157" width="0.0109%" height="15" fill="rgb(215,19,7)" fg:x="9035" fg:w="18"/><text x="5.7367%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (37 samples, 0.02%)</title><rect x="5.5018%" y="1253" width="0.0225%" height="15" fill="rgb(238,81,41)" fg:x="9060" fg:w="37"/><text x="5.7518%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (39 samples, 0.02%)</title><rect x="5.5316%" y="1237" width="0.0237%" height="15" fill="rgb(210,199,37)" fg:x="9109" fg:w="39"/><text x="5.7816%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (39 samples, 0.02%)</title><rect x="5.5316%" y="1221" width="0.0237%" height="15" fill="rgb(244,192,49)" fg:x="9109" fg:w="39"/><text x="5.7816%" y="1231.50"></text></g><g><title>core::cell::BorrowRefMut::new (39 samples, 0.02%)</title><rect x="5.5316%" y="1205" width="0.0237%" height="15" fill="rgb(226,211,11)" fg:x="9109" fg:w="39"/><text x="5.7816%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (57 samples, 0.03%)</title><rect x="5.5243%" y="1253" width="0.0346%" height="15" fill="rgb(236,162,54)" fg:x="9097" fg:w="57"/><text x="5.7743%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (185 samples, 0.11%)</title><rect x="5.5747%" y="1221" width="0.1123%" height="15" fill="rgb(220,229,9)" fg:x="9180" fg:w="185"/><text x="5.8247%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (185 samples, 0.11%)</title><rect x="5.5747%" y="1205" width="0.1123%" height="15" fill="rgb(250,87,22)" fg:x="9180" fg:w="185"/><text x="5.8247%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.02%)</title><rect x="5.6998%" y="1205" width="0.0225%" height="15" fill="rgb(239,43,17)" fg:x="9386" fg:w="37"/><text x="5.9498%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.02%)</title><rect x="5.6998%" y="1189" width="0.0225%" height="15" fill="rgb(231,177,25)" fg:x="9386" fg:w="37"/><text x="5.9498%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (64 samples, 0.04%)</title><rect x="5.7259%" y="1157" width="0.0389%" height="15" fill="rgb(219,179,1)" fg:x="9429" fg:w="64"/><text x="5.9759%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (61 samples, 0.04%)</title><rect x="5.7277%" y="1141" width="0.0370%" height="15" fill="rgb(238,219,53)" fg:x="9432" fg:w="61"/><text x="5.9777%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (61 samples, 0.04%)</title><rect x="5.7277%" y="1125" width="0.0370%" height="15" fill="rgb(232,167,36)" fg:x="9432" fg:w="61"/><text x="5.9777%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (194 samples, 0.12%)</title><rect x="5.7891%" y="1093" width="0.1178%" height="15" fill="rgb(244,19,51)" fg:x="9533" fg:w="194"/><text x="6.0391%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (194 samples, 0.12%)</title><rect x="5.7891%" y="1077" width="0.1178%" height="15" fill="rgb(224,6,22)" fg:x="9533" fg:w="194"/><text x="6.0391%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (279 samples, 0.17%)</title><rect x="5.7860%" y="1109" width="0.1694%" height="15" fill="rgb(224,145,5)" fg:x="9528" fg:w="279"/><text x="6.0360%" y="1119.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (80 samples, 0.05%)</title><rect x="5.9069%" y="1093" width="0.0486%" height="15" fill="rgb(234,130,49)" fg:x="9727" fg:w="80"/><text x="6.1569%" y="1103.50"></text></g><g><title>syscall (79 samples, 0.05%)</title><rect x="5.9075%" y="1077" width="0.0480%" height="15" fill="rgb(254,6,2)" fg:x="9728" fg:w="79"/><text x="6.1575%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (55 samples, 0.03%)</title><rect x="5.9573%" y="1109" width="0.0334%" height="15" fill="rgb(208,96,46)" fg:x="9810" fg:w="55"/><text x="6.2073%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (55 samples, 0.03%)</title><rect x="5.9573%" y="1093" width="0.0334%" height="15" fill="rgb(239,3,39)" fg:x="9810" fg:w="55"/><text x="6.2073%" y="1103.50"></text></g><g><title>core::mem::replace (55 samples, 0.03%)</title><rect x="5.9573%" y="1077" width="0.0334%" height="15" fill="rgb(233,210,1)" fg:x="9810" fg:w="55"/><text x="6.2073%" y="1087.50"></text></g><g><title>core::ptr::write (55 samples, 0.03%)</title><rect x="5.9573%" y="1061" width="0.0334%" height="15" fill="rgb(244,137,37)" fg:x="9810" fg:w="55"/><text x="6.2073%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::hash (37 samples, 0.02%)</title><rect x="6.0028%" y="1093" width="0.0225%" height="15" fill="rgb(240,136,2)" fg:x="9885" fg:w="37"/><text x="6.2528%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (157 samples, 0.10%)</title><rect x="5.9968%" y="1109" width="0.0953%" height="15" fill="rgb(239,18,37)" fg:x="9875" fg:w="157"/><text x="6.2468%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (110 samples, 0.07%)</title><rect x="6.0253%" y="1093" width="0.0668%" height="15" fill="rgb(218,185,22)" fg:x="9922" fg:w="110"/><text x="6.2753%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (110 samples, 0.07%)</title><rect x="6.0253%" y="1077" width="0.0668%" height="15" fill="rgb(225,218,4)" fg:x="9922" fg:w="110"/><text x="6.2753%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (110 samples, 0.07%)</title><rect x="6.0253%" y="1061" width="0.0668%" height="15" fill="rgb(230,182,32)" fg:x="9922" fg:w="110"/><text x="6.2753%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (575 samples, 0.35%)</title><rect x="5.7848%" y="1125" width="0.3492%" height="15" fill="rgb(242,56,43)" fg:x="9526" fg:w="575"/><text x="6.0348%" y="1135.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (69 samples, 0.04%)</title><rect x="6.0921%" y="1109" width="0.0419%" height="15" fill="rgb(233,99,24)" fg:x="10032" fg:w="69"/><text x="6.3421%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (68 samples, 0.04%)</title><rect x="6.0927%" y="1093" width="0.0413%" height="15" fill="rgb(234,209,42)" fg:x="10033" fg:w="68"/><text x="6.3427%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (68 samples, 0.04%)</title><rect x="6.0927%" y="1077" width="0.0413%" height="15" fill="rgb(227,7,12)" fg:x="10033" fg:w="68"/><text x="6.3427%" y="1087.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (696 samples, 0.42%)</title><rect x="5.7223%" y="1205" width="0.4227%" height="15" fill="rgb(245,203,43)" fg:x="9423" fg:w="696"/><text x="5.9723%" y="1215.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (696 samples, 0.42%)</title><rect x="5.7223%" y="1189" width="0.4227%" height="15" fill="rgb(238,205,33)" fg:x="9423" fg:w="696"/><text x="5.9723%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (695 samples, 0.42%)</title><rect x="5.7229%" y="1173" width="0.4221%" height="15" fill="rgb(231,56,7)" fg:x="9424" fg:w="695"/><text x="5.9729%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park (624 samples, 0.38%)</title><rect x="5.7660%" y="1157" width="0.3789%" height="15" fill="rgb(244,186,29)" fg:x="9495" fg:w="624"/><text x="6.0160%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (624 samples, 0.38%)</title><rect x="5.7660%" y="1141" width="0.3789%" height="15" fill="rgb(234,111,31)" fg:x="9495" fg:w="624"/><text x="6.0160%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.01%)</title><rect x="6.1340%" y="1125" width="0.0109%" height="15" fill="rgb(241,149,10)" fg:x="10101" fg:w="18"/><text x="6.3840%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.01%)</title><rect x="6.1340%" y="1109" width="0.0109%" height="15" fill="rgb(249,206,44)" fg:x="10101" fg:w="18"/><text x="6.3840%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (18 samples, 0.01%)</title><rect x="6.1340%" y="1093" width="0.0109%" height="15" fill="rgb(251,153,30)" fg:x="10101" fg:w="18"/><text x="6.3840%" y="1103.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (18 samples, 0.01%)</title><rect x="6.1340%" y="1077" width="0.0109%" height="15" fill="rgb(239,152,38)" fg:x="10101" fg:w="18"/><text x="6.3840%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (810 samples, 0.49%)</title><rect x="5.6871%" y="1221" width="0.4919%" height="15" fill="rgb(249,139,47)" fg:x="9365" fg:w="810"/><text x="5.9371%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (56 samples, 0.03%)</title><rect x="6.1449%" y="1205" width="0.0340%" height="15" fill="rgb(244,64,35)" fg:x="10119" fg:w="56"/><text x="6.3949%" y="1215.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (26 samples, 0.02%)</title><rect x="6.1632%" y="1189" width="0.0158%" height="15" fill="rgb(216,46,15)" fg:x="10149" fg:w="26"/><text x="6.4132%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.02%)</title><rect x="6.1632%" y="1173" width="0.0158%" height="15" fill="rgb(250,74,19)" fg:x="10149" fg:w="26"/><text x="6.4132%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (26 samples, 0.02%)</title><rect x="6.1632%" y="1157" width="0.0158%" height="15" fill="rgb(249,42,33)" fg:x="10149" fg:w="26"/><text x="6.4132%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (26 samples, 0.02%)</title><rect x="6.1632%" y="1141" width="0.0158%" height="15" fill="rgb(242,149,17)" fg:x="10149" fg:w="26"/><text x="6.4132%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (151 samples, 0.09%)</title><rect x="6.2166%" y="1205" width="0.0917%" height="15" fill="rgb(244,29,21)" fg:x="10237" fg:w="151"/><text x="6.4666%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (151 samples, 0.09%)</title><rect x="6.2166%" y="1189" width="0.0917%" height="15" fill="rgb(220,130,37)" fg:x="10237" fg:w="151"/><text x="6.4666%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (264 samples, 0.16%)</title><rect x="6.3083%" y="1205" width="0.1603%" height="15" fill="rgb(211,67,2)" fg:x="10388" fg:w="264"/><text x="6.5583%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_swap (264 samples, 0.16%)</title><rect x="6.3083%" y="1189" width="0.1603%" height="15" fill="rgb(235,68,52)" fg:x="10388" fg:w="264"/><text x="6.5583%" y="1199.50"></text></g><g><title>tokio::runtime::driver::Driver::park (35 samples, 0.02%)</title><rect x="6.4686%" y="1205" width="0.0213%" height="15" fill="rgb(246,142,3)" fg:x="10652" fg:w="35"/><text x="6.7186%" y="1215.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (35 samples, 0.02%)</title><rect x="6.4686%" y="1189" width="0.0213%" height="15" fill="rgb(241,25,7)" fg:x="10652" fg:w="35"/><text x="6.7186%" y="1199.50"></text></g><g><title>core::cmp::PartialOrd::gt (18 samples, 0.01%)</title><rect x="6.5749%" y="1189" width="0.0109%" height="15" fill="rgb(242,119,39)" fg:x="10827" fg:w="18"/><text x="6.8249%" y="1199.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (18 samples, 0.01%)</title><rect x="6.5749%" y="1173" width="0.0109%" height="15" fill="rgb(241,98,45)" fg:x="10827" fg:w="18"/><text x="6.8249%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.01%)</title><rect x="6.8530%" y="1045" width="0.0115%" height="15" fill="rgb(254,28,30)" fg:x="11285" fg:w="19"/><text x="7.1030%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.01%)</title><rect x="6.8530%" y="1029" width="0.0115%" height="15" fill="rgb(241,142,54)" fg:x="11285" fg:w="19"/><text x="7.1030%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (126 samples, 0.08%)</title><rect x="6.8646%" y="1045" width="0.0765%" height="15" fill="rgb(222,85,15)" fg:x="11304" fg:w="126"/><text x="7.1146%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (126 samples, 0.08%)</title><rect x="6.8646%" y="1029" width="0.0765%" height="15" fill="rgb(210,85,47)" fg:x="11304" fg:w="126"/><text x="7.1146%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (608 samples, 0.37%)</title><rect x="6.5864%" y="1141" width="0.3692%" height="15" fill="rgb(224,206,25)" fg:x="10846" fg:w="608"/><text x="6.8364%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (608 samples, 0.37%)</title><rect x="6.5864%" y="1125" width="0.3692%" height="15" fill="rgb(243,201,19)" fg:x="10846" fg:w="608"/><text x="6.8364%" y="1135.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (565 samples, 0.34%)</title><rect x="6.6125%" y="1109" width="0.3431%" height="15" fill="rgb(236,59,4)" fg:x="10889" fg:w="565"/><text x="6.8625%" y="1119.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (545 samples, 0.33%)</title><rect x="6.6247%" y="1093" width="0.3310%" height="15" fill="rgb(254,179,45)" fg:x="10909" fg:w="545"/><text x="6.8747%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (545 samples, 0.33%)</title><rect x="6.6247%" y="1077" width="0.3310%" height="15" fill="rgb(226,14,10)" fg:x="10909" fg:w="545"/><text x="6.8747%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (545 samples, 0.33%)</title><rect x="6.6247%" y="1061" width="0.3310%" height="15" fill="rgb(244,27,41)" fg:x="10909" fg:w="545"/><text x="6.8747%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (24 samples, 0.01%)</title><rect x="6.9411%" y="1045" width="0.0146%" height="15" fill="rgb(235,35,32)" fg:x="11430" fg:w="24"/><text x="7.1911%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (22 samples, 0.01%)</title><rect x="6.9423%" y="1029" width="0.0134%" height="15" fill="rgb(218,68,31)" fg:x="11432" fg:w="22"/><text x="7.1923%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.05%)</title><rect x="7.8046%" y="1045" width="0.0462%" height="15" fill="rgb(207,120,37)" fg:x="12852" fg:w="76"/><text x="8.0546%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.05%)</title><rect x="7.8046%" y="1029" width="0.0462%" height="15" fill="rgb(227,98,0)" fg:x="12852" fg:w="76"/><text x="8.0546%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (519 samples, 0.32%)</title><rect x="7.8593%" y="1029" width="0.3152%" height="15" fill="rgb(207,7,3)" fg:x="12942" fg:w="519"/><text x="8.1093%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (22 samples, 0.01%)</title><rect x="8.1611%" y="1013" width="0.0134%" height="15" fill="rgb(206,98,19)" fg:x="13439" fg:w="22"/><text x="8.4111%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (22 samples, 0.01%)</title><rect x="8.1611%" y="997" width="0.0134%" height="15" fill="rgb(217,5,26)" fg:x="13439" fg:w="22"/><text x="8.4111%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (37 samples, 0.02%)</title><rect x="8.1744%" y="1029" width="0.0225%" height="15" fill="rgb(235,190,38)" fg:x="13461" fg:w="37"/><text x="8.4244%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (19 samples, 0.01%)</title><rect x="8.1854%" y="1013" width="0.0115%" height="15" fill="rgb(247,86,24)" fg:x="13479" fg:w="19"/><text x="8.4354%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (19 samples, 0.01%)</title><rect x="8.1854%" y="997" width="0.0115%" height="15" fill="rgb(205,101,16)" fg:x="13479" fg:w="19"/><text x="8.4354%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (585 samples, 0.36%)</title><rect x="7.8508%" y="1045" width="0.3553%" height="15" fill="rgb(246,168,33)" fg:x="12928" fg:w="585"/><text x="8.1008%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (2,786 samples, 1.69%)</title><rect x="6.5858%" y="1189" width="1.6918%" height="15" fill="rgb(231,114,1)" fg:x="10845" fg:w="2786"/><text x="6.8358%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2,786 samples, 1.69%)</title><rect x="6.5858%" y="1173" width="1.6918%" height="15" fill="rgb(207,184,53)" fg:x="10845" fg:w="2786"/><text x="6.8358%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2,786 samples, 1.69%)</title><rect x="6.5858%" y="1157" width="1.6918%" height="15" fill="rgb(224,95,51)" fg:x="10845" fg:w="2786"/><text x="6.8358%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,177 samples, 1.32%)</title><rect x="6.9556%" y="1141" width="1.3220%" height="15" fill="rgb(212,188,45)" fg:x="11454" fg:w="2177"/><text x="7.2056%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (2,177 samples, 1.32%)</title><rect x="6.9556%" y="1125" width="1.3220%" height="15" fill="rgb(223,154,38)" fg:x="11454" fg:w="2177"/><text x="7.2056%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,072 samples, 1.26%)</title><rect x="7.0194%" y="1109" width="1.2583%" height="15" fill="rgb(251,22,52)" fg:x="11559" fg:w="2072"/><text x="7.2694%" y="1119.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (2,072 samples, 1.26%)</title><rect x="7.0194%" y="1093" width="1.2583%" height="15" fill="rgb(229,209,22)" fg:x="11559" fg:w="2072"/><text x="7.2694%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (2,065 samples, 1.25%)</title><rect x="7.0237%" y="1077" width="1.2540%" height="15" fill="rgb(234,138,34)" fg:x="11566" fg:w="2065"/><text x="7.2737%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,991 samples, 1.21%)</title><rect x="7.0686%" y="1061" width="1.2091%" height="15" fill="rgb(212,95,11)" fg:x="11640" fg:w="1991"/><text x="7.3186%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (118 samples, 0.07%)</title><rect x="8.2060%" y="1045" width="0.0717%" height="15" fill="rgb(240,179,47)" fg:x="13513" fg:w="118"/><text x="8.4560%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (113 samples, 0.07%)</title><rect x="8.2090%" y="1029" width="0.0686%" height="15" fill="rgb(240,163,11)" fg:x="13518" fg:w="113"/><text x="8.4590%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_sub (19 samples, 0.01%)</title><rect x="8.2777%" y="1189" width="0.0115%" height="15" fill="rgb(236,37,12)" fg:x="13631" fg:w="19"/><text x="8.5277%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (20 samples, 0.01%)</title><rect x="8.2892%" y="1125" width="0.0121%" height="15" fill="rgb(232,164,16)" fg:x="13650" fg:w="20"/><text x="8.5392%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockWriteGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (173 samples, 0.11%)</title><rect x="8.2892%" y="1189" width="0.1051%" height="15" fill="rgb(244,205,15)" fg:x="13650" fg:w="173"/><text x="8.5392%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (173 samples, 0.11%)</title><rect x="8.2892%" y="1173" width="0.1051%" height="15" fill="rgb(223,117,47)" fg:x="13650" fg:w="173"/><text x="8.5392%" y="1183.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.11%)</title><rect x="8.2892%" y="1157" width="0.1051%" height="15" fill="rgb(244,107,35)" fg:x="13650" fg:w="173"/><text x="8.5392%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (173 samples, 0.11%)</title><rect x="8.2892%" y="1141" width="0.1051%" height="15" fill="rgb(205,140,8)" fg:x="13650" fg:w="173"/><text x="8.5392%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (153 samples, 0.09%)</title><rect x="8.3014%" y="1125" width="0.0929%" height="15" fill="rgb(228,84,46)" fg:x="13670" fg:w="153"/><text x="8.5514%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (153 samples, 0.09%)</title><rect x="8.3014%" y="1109" width="0.0929%" height="15" fill="rgb(254,188,9)" fg:x="13670" fg:w="153"/><text x="8.5514%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::write (138 samples, 0.08%)</title><rect x="8.3967%" y="1189" width="0.0838%" height="15" fill="rgb(206,112,54)" fg:x="13827" fg:w="138"/><text x="8.6467%" y="1199.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (138 samples, 0.08%)</title><rect x="8.3967%" y="1173" width="0.0838%" height="15" fill="rgb(216,84,49)" fg:x="13827" fg:w="138"/><text x="8.6467%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (138 samples, 0.08%)</title><rect x="8.3967%" y="1157" width="0.0838%" height="15" fill="rgb(214,194,35)" fg:x="13827" fg:w="138"/><text x="8.6467%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (129 samples, 0.08%)</title><rect x="8.4022%" y="1141" width="0.0783%" height="15" fill="rgb(249,28,3)" fg:x="13836" fg:w="129"/><text x="8.6522%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (129 samples, 0.08%)</title><rect x="8.4022%" y="1125" width="0.0783%" height="15" fill="rgb(222,56,52)" fg:x="13836" fg:w="129"/><text x="8.6522%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (140 samples, 0.09%)</title><rect x="8.4957%" y="1157" width="0.0850%" height="15" fill="rgb(245,217,50)" fg:x="13990" fg:w="140"/><text x="8.7457%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (140 samples, 0.09%)</title><rect x="8.4957%" y="1141" width="0.0850%" height="15" fill="rgb(213,201,24)" fg:x="13990" fg:w="140"/><text x="8.7457%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (140 samples, 0.09%)</title><rect x="8.4957%" y="1125" width="0.0850%" height="15" fill="rgb(248,116,28)" fg:x="13990" fg:w="140"/><text x="8.7457%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (140 samples, 0.09%)</title><rect x="8.4957%" y="1109" width="0.0850%" height="15" fill="rgb(219,72,43)" fg:x="13990" fg:w="140"/><text x="8.7457%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (136 samples, 0.08%)</title><rect x="8.4981%" y="1093" width="0.0826%" height="15" fill="rgb(209,138,14)" fg:x="13994" fg:w="136"/><text x="8.7481%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (136 samples, 0.08%)</title><rect x="8.4981%" y="1077" width="0.0826%" height="15" fill="rgb(222,18,33)" fg:x="13994" fg:w="136"/><text x="8.7481%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (156 samples, 0.09%)</title><rect x="8.5807%" y="1157" width="0.0947%" height="15" fill="rgb(213,199,7)" fg:x="14130" fg:w="156"/><text x="8.8307%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (156 samples, 0.09%)</title><rect x="8.5807%" y="1141" width="0.0947%" height="15" fill="rgb(250,110,10)" fg:x="14130" fg:w="156"/><text x="8.8307%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.09%)</title><rect x="8.5807%" y="1125" width="0.0947%" height="15" fill="rgb(248,123,6)" fg:x="14130" fg:w="156"/><text x="8.8307%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (156 samples, 0.09%)</title><rect x="8.5807%" y="1109" width="0.0947%" height="15" fill="rgb(206,91,31)" fg:x="14130" fg:w="156"/><text x="8.8307%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (153 samples, 0.09%)</title><rect x="8.5825%" y="1093" width="0.0929%" height="15" fill="rgb(211,154,13)" fg:x="14133" fg:w="153"/><text x="8.8325%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (153 samples, 0.09%)</title><rect x="8.5825%" y="1077" width="0.0929%" height="15" fill="rgb(225,148,7)" fg:x="14133" fg:w="153"/><text x="8.8325%" y="1087.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (132 samples, 0.08%)</title><rect x="8.6754%" y="1157" width="0.0802%" height="15" fill="rgb(220,160,43)" fg:x="14286" fg:w="132"/><text x="8.9254%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (132 samples, 0.08%)</title><rect x="8.6754%" y="1141" width="0.0802%" height="15" fill="rgb(213,52,39)" fg:x="14286" fg:w="132"/><text x="8.9254%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (132 samples, 0.08%)</title><rect x="8.6754%" y="1125" width="0.0802%" height="15" fill="rgb(243,137,7)" fg:x="14286" fg:w="132"/><text x="8.9254%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (127 samples, 0.08%)</title><rect x="8.6785%" y="1109" width="0.0771%" height="15" fill="rgb(230,79,13)" fg:x="14291" fg:w="127"/><text x="8.9285%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (127 samples, 0.08%)</title><rect x="8.6785%" y="1093" width="0.0771%" height="15" fill="rgb(247,105,23)" fg:x="14291" fg:w="127"/><text x="8.9285%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (137 samples, 0.08%)</title><rect x="8.7617%" y="1109" width="0.0832%" height="15" fill="rgb(223,179,41)" fg:x="14428" fg:w="137"/><text x="9.0117%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (137 samples, 0.08%)</title><rect x="8.7617%" y="1093" width="0.0832%" height="15" fill="rgb(218,9,34)" fg:x="14428" fg:w="137"/><text x="9.0117%" y="1103.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (644 samples, 0.39%)</title><rect x="8.4805%" y="1189" width="0.3911%" height="15" fill="rgb(222,106,8)" fg:x="13965" fg:w="644"/><text x="8.7305%" y="1199.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (644 samples, 0.39%)</title><rect x="8.4805%" y="1173" width="0.3911%" height="15" fill="rgb(211,220,0)" fg:x="13965" fg:w="644"/><text x="8.7305%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (191 samples, 0.12%)</title><rect x="8.7556%" y="1157" width="0.1160%" height="15" fill="rgb(229,52,16)" fg:x="14418" fg:w="191"/><text x="9.0056%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (191 samples, 0.12%)</title><rect x="8.7556%" y="1141" width="0.1160%" height="15" fill="rgb(212,155,18)" fg:x="14418" fg:w="191"/><text x="9.0056%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (191 samples, 0.12%)</title><rect x="8.7556%" y="1125" width="0.1160%" height="15" fill="rgb(242,21,14)" fg:x="14418" fg:w="191"/><text x="9.0056%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (44 samples, 0.03%)</title><rect x="8.8449%" y="1109" width="0.0267%" height="15" fill="rgb(222,19,48)" fg:x="14565" fg:w="44"/><text x="9.0949%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.03%)</title><rect x="8.8449%" y="1093" width="0.0267%" height="15" fill="rgb(232,45,27)" fg:x="14565" fg:w="44"/><text x="9.0949%" y="1103.50"></text></g><g><title>tokio::runtime::driver::Handle::time (33 samples, 0.02%)</title><rect x="8.8716%" y="1189" width="0.0200%" height="15" fill="rgb(249,103,42)" fg:x="14609" fg:w="33"/><text x="9.1216%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (33 samples, 0.02%)</title><rect x="8.8716%" y="1173" width="0.0200%" height="15" fill="rgb(246,81,33)" fg:x="14609" fg:w="33"/><text x="9.1216%" y="1183.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (144 samples, 0.09%)</title><rect x="8.9256%" y="1173" width="0.0874%" height="15" fill="rgb(252,33,42)" fg:x="14698" fg:w="144"/><text x="9.1756%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (143 samples, 0.09%)</title><rect x="8.9262%" y="1157" width="0.0868%" height="15" fill="rgb(209,212,41)" fg:x="14699" fg:w="143"/><text x="9.1762%" y="1167.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (143 samples, 0.09%)</title><rect x="8.9262%" y="1141" width="0.0868%" height="15" fill="rgb(207,154,6)" fg:x="14699" fg:w="143"/><text x="9.1762%" y="1151.50"></text></g><g><title>mio::event::event::Event::token (26 samples, 0.02%)</title><rect x="9.0131%" y="1173" width="0.0158%" height="15" fill="rgb(223,64,47)" fg:x="14842" fg:w="26"/><text x="9.2631%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::event::token (26 samples, 0.02%)</title><rect x="9.0131%" y="1157" width="0.0158%" height="15" fill="rgb(211,161,38)" fg:x="14842" fg:w="26"/><text x="9.2631%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.02%)</title><rect x="9.1418%" y="1141" width="0.0249%" height="15" fill="rgb(219,138,40)" fg:x="15054" fg:w="41"/><text x="9.3918%" y="1151.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (32 samples, 0.02%)</title><rect x="9.1473%" y="1125" width="0.0194%" height="15" fill="rgb(241,228,46)" fg:x="15063" fg:w="32"/><text x="9.3973%" y="1135.50"></text></g><g><title>[libc.so.6] (675 samples, 0.41%)</title><rect x="9.3689%" y="1125" width="0.4099%" height="15" fill="rgb(223,209,38)" fg:x="15428" fg:w="675"/><text x="9.6189%" y="1135.50"></text></g><g><title>mio::poll::Poll::poll (1,412 samples, 0.86%)</title><rect x="9.0289%" y="1173" width="0.8575%" height="15" fill="rgb(236,164,45)" fg:x="14868" fg:w="1412"/><text x="9.2789%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (1,397 samples, 0.85%)</title><rect x="9.0380%" y="1157" width="0.8484%" height="15" fill="rgb(231,15,5)" fg:x="14883" fg:w="1397"/><text x="9.2880%" y="1167.50"></text></g><g><title>epoll_wait (1,173 samples, 0.71%)</title><rect x="9.1740%" y="1141" width="0.7123%" height="15" fill="rgb(252,35,15)" fg:x="15107" fg:w="1173"/><text x="9.4240%" y="1151.50"></text></g><g><title>[unknown] (177 samples, 0.11%)</title><rect x="9.7788%" y="1125" width="0.1075%" height="15" fill="rgb(248,181,18)" fg:x="16103" fg:w="177"/><text x="10.0288%" y="1135.50"></text></g><g><title>mio::event::event::Event::is_read_closed (31 samples, 0.02%)</title><rect x="9.9051%" y="1157" width="0.0188%" height="15" fill="rgb(233,39,42)" fg:x="16311" fg:w="31"/><text x="10.1551%" y="1167.50"></text></g><g><title>mio::sys::unix::selector::event::is_read_closed (31 samples, 0.02%)</title><rect x="9.9051%" y="1141" width="0.0188%" height="15" fill="rgb(238,110,33)" fg:x="16311" fg:w="31"/><text x="10.1551%" y="1151.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (110 samples, 0.07%)</title><rect x="9.8863%" y="1173" width="0.0668%" height="15" fill="rgb(233,195,10)" fg:x="16280" fg:w="110"/><text x="10.1363%" y="1183.50"></text></g><g><title>mio::event::event::Event::is_write_closed (35 samples, 0.02%)</title><rect x="9.9319%" y="1157" width="0.0213%" height="15" fill="rgb(254,105,3)" fg:x="16355" fg:w="35"/><text x="10.1819%" y="1167.50"></text></g><g><title>mio::sys::unix::selector::event::is_write_closed (35 samples, 0.02%)</title><rect x="9.9319%" y="1141" width="0.0213%" height="15" fill="rgb(221,225,9)" fg:x="16355" fg:w="35"/><text x="10.1819%" y="1151.50"></text></g><g><title>tokio::runtime::io::driver::Handle::release_pending_registrations (31 samples, 0.02%)</title><rect x="9.9531%" y="1173" width="0.0188%" height="15" fill="rgb(224,227,45)" fg:x="16390" fg:w="31"/><text x="10.2031%" y="1183.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::needs_release (26 samples, 0.02%)</title><rect x="9.9562%" y="1157" width="0.0158%" height="15" fill="rgb(229,198,43)" fg:x="16395" fg:w="26"/><text x="10.2062%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (26 samples, 0.02%)</title><rect x="9.9562%" y="1141" width="0.0158%" height="15" fill="rgb(206,209,35)" fg:x="16395" fg:w="26"/><text x="10.2062%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="9.9562%" y="1125" width="0.0158%" height="15" fill="rgb(245,195,53)" fg:x="16395" fg:w="26"/><text x="10.2062%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (887 samples, 0.54%)</title><rect x="9.9780%" y="1157" width="0.5386%" height="15" fill="rgb(240,92,26)" fg:x="16431" fg:w="887"/><text x="10.2280%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (887 samples, 0.54%)</title><rect x="9.9780%" y="1141" width="0.5386%" height="15" fill="rgb(207,40,23)" fg:x="16431" fg:w="887"/><text x="10.2280%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (744 samples, 0.45%)</title><rect x="10.5167%" y="1157" width="0.4518%" height="15" fill="rgb(223,111,35)" fg:x="17318" fg:w="744"/><text x="10.7667%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (744 samples, 0.45%)</title><rect x="10.5167%" y="1141" width="0.4518%" height="15" fill="rgb(229,147,28)" fg:x="17318" fg:w="744"/><text x="10.7667%" y="1151.50"></text></g><g><title>tokio::io::ready::Ready::from_usize (18 samples, 0.01%)</title><rect x="10.9685%" y="1157" width="0.0109%" height="15" fill="rgb(211,29,28)" fg:x="18062" fg:w="18"/><text x="11.2185%" y="1167.50"></text></g><g><title>tokio::util::bit::Pack::pack (27 samples, 0.02%)</title><rect x="10.9794%" y="1157" width="0.0164%" height="15" fill="rgb(228,72,33)" fg:x="18080" fg:w="27"/><text x="11.2294%" y="1167.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (1,695 samples, 1.03%)</title><rect x="9.9719%" y="1173" width="1.0293%" height="15" fill="rgb(205,214,31)" fg:x="16421" fg:w="1695"/><text x="10.2219%" y="1183.50"></text></g><g><title>core::mem::drop (690 samples, 0.42%)</title><rect x="11.0407%" y="1157" width="0.4190%" height="15" fill="rgb(224,111,15)" fg:x="18181" fg:w="690"/><text x="11.2907%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (690 samples, 0.42%)</title><rect x="11.0407%" y="1141" width="0.4190%" height="15" fill="rgb(253,21,26)" fg:x="18181" fg:w="690"/><text x="11.2907%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (690 samples, 0.42%)</title><rect x="11.0407%" y="1125" width="0.4190%" height="15" fill="rgb(245,139,43)" fg:x="18181" fg:w="690"/><text x="11.2907%" y="1135.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (690 samples, 0.42%)</title><rect x="11.0407%" y="1109" width="0.4190%" height="15" fill="rgb(252,170,7)" fg:x="18181" fg:w="690"/><text x="11.2907%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (690 samples, 0.42%)</title><rect x="11.0407%" y="1093" width="0.4190%" height="15" fill="rgb(231,118,14)" fg:x="18181" fg:w="690"/><text x="11.2907%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (686 samples, 0.42%)</title><rect x="11.0432%" y="1077" width="0.4166%" height="15" fill="rgb(238,83,0)" fg:x="18185" fg:w="686"/><text x="11.2932%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (686 samples, 0.42%)</title><rect x="11.0432%" y="1061" width="0.4166%" height="15" fill="rgb(221,39,39)" fg:x="18185" fg:w="686"/><text x="11.2932%" y="1071.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="11.4598%" y="1125" width="0.0109%" height="15" fill="rgb(222,119,46)" fg:x="18871" fg:w="18"/><text x="11.7098%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (27 samples, 0.02%)</title><rect x="11.4598%" y="1157" width="0.0164%" height="15" fill="rgb(222,165,49)" fg:x="18871" fg:w="27"/><text x="11.7098%" y="1167.50"></text></g><g><title>core::mem::replace (27 samples, 0.02%)</title><rect x="11.4598%" y="1141" width="0.0164%" height="15" fill="rgb(219,113,52)" fg:x="18871" fg:w="27"/><text x="11.7098%" y="1151.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (168 samples, 0.10%)</title><rect x="11.4871%" y="1157" width="0.1020%" height="15" fill="rgb(214,7,15)" fg:x="18916" fg:w="168"/><text x="11.7371%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (168 samples, 0.10%)</title><rect x="11.4871%" y="1141" width="0.1020%" height="15" fill="rgb(235,32,4)" fg:x="18916" fg:w="168"/><text x="11.7371%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (168 samples, 0.10%)</title><rect x="11.4871%" y="1125" width="0.1020%" height="15" fill="rgb(238,90,54)" fg:x="18916" fg:w="168"/><text x="11.7371%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (157 samples, 0.10%)</title><rect x="11.4938%" y="1109" width="0.0953%" height="15" fill="rgb(213,208,19)" fg:x="18927" fg:w="157"/><text x="11.7438%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (157 samples, 0.10%)</title><rect x="11.4938%" y="1093" width="0.0953%" height="15" fill="rgb(233,156,4)" fg:x="18927" fg:w="157"/><text x="11.7438%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (62 samples, 0.04%)</title><rect x="11.6091%" y="1093" width="0.0377%" height="15" fill="rgb(207,194,5)" fg:x="19117" fg:w="62"/><text x="11.8591%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (60 samples, 0.04%)</title><rect x="11.6104%" y="1077" width="0.0364%" height="15" fill="rgb(206,111,30)" fg:x="19119" fg:w="60"/><text x="11.8604%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (58 samples, 0.04%)</title><rect x="11.6116%" y="1061" width="0.0352%" height="15" fill="rgb(243,70,54)" fg:x="19121" fg:w="58"/><text x="11.8616%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (58 samples, 0.04%)</title><rect x="11.6116%" y="1045" width="0.0352%" height="15" fill="rgb(242,28,8)" fg:x="19121" fg:w="58"/><text x="11.8616%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.01%)</title><rect x="11.6529%" y="1029" width="0.0128%" height="15" fill="rgb(219,106,18)" fg:x="19189" fg:w="21"/><text x="11.9029%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (64 samples, 0.04%)</title><rect x="11.6516%" y="1077" width="0.0389%" height="15" fill="rgb(244,222,10)" fg:x="19187" fg:w="64"/><text x="11.9016%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (62 samples, 0.04%)</title><rect x="11.6529%" y="1061" width="0.0377%" height="15" fill="rgb(236,179,52)" fg:x="19189" fg:w="62"/><text x="11.9029%" y="1071.50"></text></g><g><title>tokio::runtime::context::with_scheduler (62 samples, 0.04%)</title><rect x="11.6529%" y="1045" width="0.0377%" height="15" fill="rgb(213,23,39)" fg:x="19189" fg:w="62"/><text x="11.9029%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (41 samples, 0.02%)</title><rect x="11.6656%" y="1029" width="0.0249%" height="15" fill="rgb(238,48,10)" fg:x="19210" fg:w="41"/><text x="11.9156%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (23 samples, 0.01%)</title><rect x="11.6765%" y="1013" width="0.0140%" height="15" fill="rgb(251,196,23)" fg:x="19228" fg:w="23"/><text x="11.9265%" y="1023.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (100 samples, 0.06%)</title><rect x="11.6468%" y="1093" width="0.0607%" height="15" fill="rgb(250,152,24)" fg:x="19179" fg:w="100"/><text x="11.8968%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::schedule (28 samples, 0.02%)</title><rect x="11.6905%" y="1077" width="0.0170%" height="15" fill="rgb(209,150,17)" fg:x="19251" fg:w="28"/><text x="11.9405%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (61 samples, 0.04%)</title><rect x="11.7093%" y="1061" width="0.0370%" height="15" fill="rgb(234,202,34)" fg:x="19282" fg:w="61"/><text x="11.9593%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (61 samples, 0.04%)</title><rect x="11.7093%" y="1045" width="0.0370%" height="15" fill="rgb(253,148,53)" fg:x="19282" fg:w="61"/><text x="11.9593%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::State::load (47 samples, 0.03%)</title><rect x="11.7464%" y="1061" width="0.0285%" height="15" fill="rgb(218,129,16)" fg:x="19343" fg:w="47"/><text x="11.9964%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (47 samples, 0.03%)</title><rect x="11.7464%" y="1045" width="0.0285%" height="15" fill="rgb(216,85,19)" fg:x="19343" fg:w="47"/><text x="11.9964%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (47 samples, 0.03%)</title><rect x="11.7464%" y="1029" width="0.0285%" height="15" fill="rgb(235,228,7)" fg:x="19343" fg:w="47"/><text x="11.9964%" y="1039.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (4,762 samples, 2.89%)</title><rect x="8.8916%" y="1189" width="2.8918%" height="15" fill="rgb(245,175,0)" fg:x="14642" fg:w="4762"/><text x="9.1416%" y="1199.50">to..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1,288 samples, 0.78%)</title><rect x="11.0013%" y="1173" width="0.7822%" height="15" fill="rgb(208,168,36)" fg:x="18116" fg:w="1288"/><text x="11.2513%" y="1183.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (300 samples, 0.18%)</title><rect x="11.6012%" y="1157" width="0.1822%" height="15" fill="rgb(246,171,24)" fg:x="19104" fg:w="300"/><text x="11.8512%" y="1167.50"></text></g><g><title>core::task::wake::Waker::wake (289 samples, 0.18%)</title><rect x="11.6079%" y="1141" width="0.1755%" height="15" fill="rgb(215,142,24)" fg:x="19115" fg:w="289"/><text x="11.8579%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (289 samples, 0.18%)</title><rect x="11.6079%" y="1125" width="0.1755%" height="15" fill="rgb(250,187,7)" fg:x="19115" fg:w="289"/><text x="11.8579%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (289 samples, 0.18%)</title><rect x="11.6079%" y="1109" width="0.1755%" height="15" fill="rgb(228,66,33)" fg:x="19115" fg:w="289"/><text x="11.8579%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (125 samples, 0.08%)</title><rect x="11.7075%" y="1093" width="0.0759%" height="15" fill="rgb(234,215,21)" fg:x="19279" fg:w="125"/><text x="11.9575%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (125 samples, 0.08%)</title><rect x="11.7075%" y="1077" width="0.0759%" height="15" fill="rgb(222,191,20)" fg:x="19279" fg:w="125"/><text x="11.9575%" y="1087.50"></text></g><g><title>tokio::runtime::signal::Driver::process (19 samples, 0.01%)</title><rect x="11.7834%" y="1189" width="0.0115%" height="15" fill="rgb(245,79,54)" fg:x="19404" fg:w="19"/><text x="12.0334%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 0.02%)</title><rect x="11.8302%" y="1125" width="0.0170%" height="15" fill="rgb(240,10,37)" fg:x="19481" fg:w="28"/><text x="12.0802%" y="1135.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (28 samples, 0.02%)</title><rect x="11.8302%" y="1109" width="0.0170%" height="15" fill="rgb(214,192,32)" fg:x="19481" fg:w="28"/><text x="12.0802%" y="1119.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (28 samples, 0.02%)</title><rect x="11.8302%" y="1093" width="0.0170%" height="15" fill="rgb(209,36,54)" fg:x="19481" fg:w="28"/><text x="12.0802%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (21 samples, 0.01%)</title><rect x="11.8344%" y="1077" width="0.0128%" height="15" fill="rgb(220,10,11)" fg:x="19488" fg:w="21"/><text x="12.0844%" y="1087.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (58 samples, 0.04%)</title><rect x="11.8302%" y="1173" width="0.0352%" height="15" fill="rgb(221,106,17)" fg:x="19481" fg:w="58"/><text x="12.0802%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (58 samples, 0.04%)</title><rect x="11.8302%" y="1157" width="0.0352%" height="15" fill="rgb(251,142,44)" fg:x="19481" fg:w="58"/><text x="12.0802%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (58 samples, 0.04%)</title><rect x="11.8302%" y="1141" width="0.0352%" height="15" fill="rgb(238,13,15)" fg:x="19481" fg:w="58"/><text x="12.0802%" y="1151.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (30 samples, 0.02%)</title><rect x="11.8472%" y="1125" width="0.0182%" height="15" fill="rgb(208,107,27)" fg:x="19509" fg:w="30"/><text x="12.0972%" y="1135.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (18 samples, 0.01%)</title><rect x="11.8545%" y="1109" width="0.0109%" height="15" fill="rgb(205,136,37)" fg:x="19521" fg:w="18"/><text x="12.1045%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter_map (17 samples, 0.01%)</title><rect x="11.8654%" y="1157" width="0.0103%" height="15" fill="rgb(250,205,27)" fg:x="19539" fg:w="17"/><text x="12.1154%" y="1167.50"></text></g><g><title>core::iter::adapters::filter_map::FilterMap&lt;I,F&gt;::new (17 samples, 0.01%)</title><rect x="11.8654%" y="1141" width="0.0103%" height="15" fill="rgb(210,80,43)" fg:x="19539" fg:w="17"/><text x="12.1154%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (46 samples, 0.03%)</title><rect x="12.0330%" y="949" width="0.0279%" height="15" fill="rgb(247,160,36)" fg:x="19815" fg:w="46"/><text x="12.2830%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (1,189 samples, 0.72%)</title><rect x="12.0330%" y="1013" width="0.7220%" height="15" fill="rgb(234,13,49)" fg:x="19815" fg:w="1189"/><text x="12.2830%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (1,189 samples, 0.72%)</title><rect x="12.0330%" y="997" width="0.7220%" height="15" fill="rgb(234,122,0)" fg:x="19815" fg:w="1189"/><text x="12.2830%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,189 samples, 0.72%)</title><rect x="12.0330%" y="981" width="0.7220%" height="15" fill="rgb(207,146,38)" fg:x="19815" fg:w="1189"/><text x="12.2830%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,189 samples, 0.72%)</title><rect x="12.0330%" y="965" width="0.7220%" height="15" fill="rgb(207,177,25)" fg:x="19815" fg:w="1189"/><text x="12.2830%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1,143 samples, 0.69%)</title><rect x="12.0609%" y="949" width="0.6941%" height="15" fill="rgb(211,178,42)" fg:x="19861" fg:w="1143"/><text x="12.3109%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,143 samples, 0.69%)</title><rect x="12.0609%" y="933" width="0.6941%" height="15" fill="rgb(230,69,54)" fg:x="19861" fg:w="1143"/><text x="12.3109%" y="943.50"></text></g><g><title>core::mem::drop (2,366 samples, 1.44%)</title><rect x="12.0330%" y="1029" width="1.4368%" height="15" fill="rgb(214,135,41)" fg:x="19815" fg:w="2366"/><text x="12.2830%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (1,177 samples, 0.71%)</title><rect x="12.7551%" y="1013" width="0.7148%" height="15" fill="rgb(237,67,25)" fg:x="21004" fg:w="1177"/><text x="13.0051%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (1,177 samples, 0.71%)</title><rect x="12.7551%" y="997" width="0.7148%" height="15" fill="rgb(222,189,50)" fg:x="21004" fg:w="1177"/><text x="13.0051%" y="1007.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,177 samples, 0.71%)</title><rect x="12.7551%" y="981" width="0.7148%" height="15" fill="rgb(245,148,34)" fg:x="21004" fg:w="1177"/><text x="13.0051%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1,177 samples, 0.71%)</title><rect x="12.7551%" y="965" width="0.7148%" height="15" fill="rgb(222,29,6)" fg:x="21004" fg:w="1177"/><text x="13.0051%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,057 samples, 0.64%)</title><rect x="12.8279%" y="949" width="0.6419%" height="15" fill="rgb(221,189,43)" fg:x="21124" fg:w="1057"/><text x="13.0779%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,057 samples, 0.64%)</title><rect x="12.8279%" y="933" width="0.6419%" height="15" fill="rgb(207,36,27)" fg:x="21124" fg:w="1057"/><text x="13.0779%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (866 samples, 0.53%)</title><rect x="13.5141%" y="965" width="0.5259%" height="15" fill="rgb(217,90,24)" fg:x="22254" fg:w="866"/><text x="13.7641%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (866 samples, 0.53%)</title><rect x="13.5141%" y="949" width="0.5259%" height="15" fill="rgb(224,66,35)" fg:x="22254" fg:w="866"/><text x="13.7641%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (1,145 samples, 0.70%)</title><rect x="13.4698%" y="1029" width="0.6953%" height="15" fill="rgb(221,13,50)" fg:x="22181" fg:w="1145"/><text x="13.7198%" y="1039.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1,145 samples, 0.70%)</title><rect x="13.4698%" y="1013" width="0.6953%" height="15" fill="rgb(236,68,49)" fg:x="22181" fg:w="1145"/><text x="13.7198%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1,145 samples, 0.70%)</title><rect x="13.4698%" y="997" width="0.6953%" height="15" fill="rgb(229,146,28)" fg:x="22181" fg:w="1145"/><text x="13.7198%" y="1007.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1,102 samples, 0.67%)</title><rect x="13.4959%" y="981" width="0.6692%" height="15" fill="rgb(225,31,38)" fg:x="22224" fg:w="1102"/><text x="13.7459%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (206 samples, 0.13%)</title><rect x="14.0400%" y="965" width="0.1251%" height="15" fill="rgb(250,208,3)" fg:x="23120" fg:w="206"/><text x="14.2900%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (206 samples, 0.13%)</title><rect x="14.0400%" y="949" width="0.1251%" height="15" fill="rgb(246,54,23)" fg:x="23120" fg:w="206"/><text x="14.2900%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (45 samples, 0.03%)</title><rect x="14.1931%" y="1013" width="0.0273%" height="15" fill="rgb(243,76,11)" fg:x="23372" fg:w="45"/><text x="14.4431%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (45 samples, 0.03%)</title><rect x="14.1931%" y="997" width="0.0273%" height="15" fill="rgb(245,21,50)" fg:x="23372" fg:w="45"/><text x="14.4431%" y="1007.50"></text></g><g><title>core::slice::index::get_noubcheck (45 samples, 0.03%)</title><rect x="14.1931%" y="981" width="0.0273%" height="15" fill="rgb(228,9,43)" fg:x="23372" fg:w="45"/><text x="14.4431%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (29 samples, 0.02%)</title><rect x="14.2204%" y="965" width="0.0176%" height="15" fill="rgb(208,100,47)" fg:x="23417" fg:w="29"/><text x="14.4704%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (29 samples, 0.02%)</title><rect x="14.2204%" y="949" width="0.0176%" height="15" fill="rgb(232,26,8)" fg:x="23417" fg:w="29"/><text x="14.4704%" y="959.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (808 samples, 0.49%)</title><rect x="14.1651%" y="1029" width="0.4907%" height="15" fill="rgb(216,166,38)" fg:x="23326" fg:w="808"/><text x="14.4151%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (717 samples, 0.44%)</title><rect x="14.2204%" y="1013" width="0.4354%" height="15" fill="rgb(251,202,51)" fg:x="23417" fg:w="717"/><text x="14.4704%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (717 samples, 0.44%)</title><rect x="14.2204%" y="997" width="0.4354%" height="15" fill="rgb(254,216,34)" fg:x="23417" fg:w="717"/><text x="14.4704%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (717 samples, 0.44%)</title><rect x="14.2204%" y="981" width="0.4354%" height="15" fill="rgb(251,32,27)" fg:x="23417" fg:w="717"/><text x="14.4704%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (688 samples, 0.42%)</title><rect x="14.2380%" y="965" width="0.4178%" height="15" fill="rgb(208,127,28)" fg:x="23446" fg:w="688"/><text x="14.4880%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (688 samples, 0.42%)</title><rect x="14.2380%" y="949" width="0.4178%" height="15" fill="rgb(224,137,22)" fg:x="23446" fg:w="688"/><text x="14.4880%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.02%)</title><rect x="15.0372%" y="997" width="0.0176%" height="15" fill="rgb(254,70,32)" fg:x="24762" fg:w="29"/><text x="15.2872%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.02%)</title><rect x="15.0372%" y="981" width="0.0176%" height="15" fill="rgb(229,75,37)" fg:x="24762" fg:w="29"/><text x="15.2872%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (206 samples, 0.13%)</title><rect x="15.0548%" y="997" width="0.1251%" height="15" fill="rgb(252,64,23)" fg:x="24791" fg:w="206"/><text x="15.3048%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (206 samples, 0.13%)</title><rect x="15.0548%" y="981" width="0.1251%" height="15" fill="rgb(232,162,48)" fg:x="24791" fg:w="206"/><text x="15.3048%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (893 samples, 0.54%)</title><rect x="14.6564%" y="1013" width="0.5423%" height="15" fill="rgb(246,160,12)" fg:x="24135" fg:w="893"/><text x="14.9064%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (31 samples, 0.02%)</title><rect x="15.1799%" y="997" width="0.0188%" height="15" fill="rgb(247,166,0)" fg:x="24997" fg:w="31"/><text x="15.4299%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (31 samples, 0.02%)</title><rect x="15.1799%" y="981" width="0.0188%" height="15" fill="rgb(249,219,21)" fg:x="24997" fg:w="31"/><text x="15.4299%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (58 samples, 0.04%)</title><rect x="15.1987%" y="1013" width="0.0352%" height="15" fill="rgb(205,209,3)" fg:x="25028" fg:w="58"/><text x="15.4487%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (992 samples, 0.60%)</title><rect x="14.6564%" y="1029" width="0.6024%" height="15" fill="rgb(243,44,1)" fg:x="24135" fg:w="992"/><text x="14.9064%" y="1039.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (41 samples, 0.02%)</title><rect x="15.2339%" y="1013" width="0.0249%" height="15" fill="rgb(206,159,16)" fg:x="25086" fg:w="41"/><text x="15.4839%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.03%)</title><rect x="15.4459%" y="997" width="0.0346%" height="15" fill="rgb(244,77,30)" fg:x="25435" fg:w="57"/><text x="15.6959%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.03%)</title><rect x="15.4459%" y="981" width="0.0346%" height="15" fill="rgb(218,69,12)" fg:x="25435" fg:w="57"/><text x="15.6959%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (278 samples, 0.17%)</title><rect x="15.4805%" y="997" width="0.1688%" height="15" fill="rgb(212,87,7)" fg:x="25492" fg:w="278"/><text x="15.7305%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (278 samples, 0.17%)</title><rect x="15.4805%" y="981" width="0.1688%" height="15" fill="rgb(245,114,25)" fg:x="25492" fg:w="278"/><text x="15.7305%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (680 samples, 0.41%)</title><rect x="15.2588%" y="1029" width="0.4129%" height="15" fill="rgb(210,61,42)" fg:x="25127" fg:w="680"/><text x="15.5088%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (679 samples, 0.41%)</title><rect x="15.2594%" y="1013" width="0.4123%" height="15" fill="rgb(211,52,33)" fg:x="25128" fg:w="679"/><text x="15.5094%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (37 samples, 0.02%)</title><rect x="15.6493%" y="997" width="0.0225%" height="15" fill="rgb(234,58,33)" fg:x="25770" fg:w="37"/><text x="15.8993%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (37 samples, 0.02%)</title><rect x="15.6493%" y="981" width="0.0225%" height="15" fill="rgb(220,115,36)" fg:x="25770" fg:w="37"/><text x="15.8993%" y="991.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (54 samples, 0.03%)</title><rect x="15.6718%" y="1029" width="0.0328%" height="15" fill="rgb(243,153,54)" fg:x="25807" fg:w="54"/><text x="15.9218%" y="1039.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (6,361 samples, 3.86%)</title><rect x="11.8830%" y="1077" width="3.8628%" height="15" fill="rgb(251,47,18)" fg:x="19568" fg:w="6361"/><text x="12.1330%" y="1087.50">core..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (6,287 samples, 3.82%)</title><rect x="11.9280%" y="1061" width="3.8179%" height="15" fill="rgb(242,102,42)" fg:x="19642" fg:w="6287"/><text x="12.1780%" y="1071.50">toki..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (6,230 samples, 3.78%)</title><rect x="11.9626%" y="1045" width="3.7833%" height="15" fill="rgb(234,31,38)" fg:x="19699" fg:w="6230"/><text x="12.2126%" y="1055.50">toki..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (68 samples, 0.04%)</title><rect x="15.7046%" y="1029" width="0.0413%" height="15" fill="rgb(221,117,51)" fg:x="25861" fg:w="68"/><text x="15.9546%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,411 samples, 3.89%)</title><rect x="11.8830%" y="1109" width="3.8932%" height="15" fill="rgb(212,20,18)" fg:x="19568" fg:w="6411"/><text x="12.1330%" y="1119.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6,411 samples, 3.89%)</title><rect x="11.8830%" y="1093" width="3.8932%" height="15" fill="rgb(245,133,36)" fg:x="19568" fg:w="6411"/><text x="12.1330%" y="1103.50">core..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (50 samples, 0.03%)</title><rect x="15.7458%" y="1077" width="0.0304%" height="15" fill="rgb(212,6,19)" fg:x="25929" fg:w="50"/><text x="15.9958%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (50 samples, 0.03%)</title><rect x="15.7458%" y="1061" width="0.0304%" height="15" fill="rgb(218,1,36)" fg:x="25929" fg:w="50"/><text x="15.9958%" y="1071.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (57 samples, 0.03%)</title><rect x="15.7908%" y="1061" width="0.0346%" height="15" fill="rgb(246,84,54)" fg:x="26003" fg:w="57"/><text x="16.0408%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (57 samples, 0.03%)</title><rect x="15.7908%" y="1045" width="0.0346%" height="15" fill="rgb(242,110,6)" fg:x="26003" fg:w="57"/><text x="16.0408%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (80 samples, 0.05%)</title><rect x="15.9736%" y="917" width="0.0486%" height="15" fill="rgb(214,47,5)" fg:x="26304" fg:w="80"/><text x="16.2236%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (1,298 samples, 0.79%)</title><rect x="15.9736%" y="981" width="0.7882%" height="15" fill="rgb(218,159,25)" fg:x="26304" fg:w="1298"/><text x="16.2236%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (1,298 samples, 0.79%)</title><rect x="15.9736%" y="965" width="0.7882%" height="15" fill="rgb(215,211,28)" fg:x="26304" fg:w="1298"/><text x="16.2236%" y="975.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,298 samples, 0.79%)</title><rect x="15.9736%" y="949" width="0.7882%" height="15" fill="rgb(238,59,32)" fg:x="26304" fg:w="1298"/><text x="16.2236%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,298 samples, 0.79%)</title><rect x="15.9736%" y="933" width="0.7882%" height="15" fill="rgb(226,82,3)" fg:x="26304" fg:w="1298"/><text x="16.2236%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1,218 samples, 0.74%)</title><rect x="16.0222%" y="917" width="0.7397%" height="15" fill="rgb(240,164,32)" fg:x="26384" fg:w="1218"/><text x="16.2722%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,218 samples, 0.74%)</title><rect x="16.0222%" y="901" width="0.7397%" height="15" fill="rgb(232,46,7)" fg:x="26384" fg:w="1218"/><text x="16.2722%" y="911.50"></text></g><g><title>core::mem::drop (2,499 samples, 1.52%)</title><rect x="15.9736%" y="997" width="1.5176%" height="15" fill="rgb(229,129,53)" fg:x="26304" fg:w="2499"/><text x="16.2236%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (1,201 samples, 0.73%)</title><rect x="16.7618%" y="981" width="0.7293%" height="15" fill="rgb(234,188,29)" fg:x="27602" fg:w="1201"/><text x="17.0118%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (1,201 samples, 0.73%)</title><rect x="16.7618%" y="965" width="0.7293%" height="15" fill="rgb(246,141,4)" fg:x="27602" fg:w="1201"/><text x="17.0118%" y="975.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,201 samples, 0.73%)</title><rect x="16.7618%" y="949" width="0.7293%" height="15" fill="rgb(229,23,39)" fg:x="27602" fg:w="1201"/><text x="17.0118%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1,201 samples, 0.73%)</title><rect x="16.7618%" y="933" width="0.7293%" height="15" fill="rgb(206,12,3)" fg:x="27602" fg:w="1201"/><text x="17.0118%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,082 samples, 0.66%)</title><rect x="16.8341%" y="917" width="0.6571%" height="15" fill="rgb(252,226,20)" fg:x="27721" fg:w="1082"/><text x="17.0841%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,082 samples, 0.66%)</title><rect x="16.8341%" y="901" width="0.6571%" height="15" fill="rgb(216,123,35)" fg:x="27721" fg:w="1082"/><text x="17.0841%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,215 samples, 0.74%)</title><rect x="17.5531%" y="933" width="0.7378%" height="15" fill="rgb(212,68,40)" fg:x="28905" fg:w="1215"/><text x="17.8031%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,215 samples, 0.74%)</title><rect x="17.5531%" y="917" width="0.7378%" height="15" fill="rgb(254,125,32)" fg:x="28905" fg:w="1215"/><text x="17.8031%" y="927.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (1,597 samples, 0.97%)</title><rect x="17.4911%" y="997" width="0.9698%" height="15" fill="rgb(253,97,22)" fg:x="28803" fg:w="1597"/><text x="17.7411%" y="1007.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1,597 samples, 0.97%)</title><rect x="17.4911%" y="981" width="0.9698%" height="15" fill="rgb(241,101,14)" fg:x="28803" fg:w="1597"/><text x="17.7411%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1,597 samples, 0.97%)</title><rect x="17.4911%" y="965" width="0.9698%" height="15" fill="rgb(238,103,29)" fg:x="28803" fg:w="1597"/><text x="17.7411%" y="975.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1,543 samples, 0.94%)</title><rect x="17.5239%" y="949" width="0.9370%" height="15" fill="rgb(233,195,47)" fg:x="28857" fg:w="1543"/><text x="17.7739%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (280 samples, 0.17%)</title><rect x="18.2909%" y="933" width="0.1700%" height="15" fill="rgb(246,218,30)" fg:x="30120" fg:w="280"/><text x="18.5409%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (280 samples, 0.17%)</title><rect x="18.2909%" y="917" width="0.1700%" height="15" fill="rgb(219,145,47)" fg:x="30120" fg:w="280"/><text x="18.5409%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (61 samples, 0.04%)</title><rect x="18.5059%" y="981" width="0.0370%" height="15" fill="rgb(243,12,26)" fg:x="30474" fg:w="61"/><text x="18.7559%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (61 samples, 0.04%)</title><rect x="18.5059%" y="965" width="0.0370%" height="15" fill="rgb(214,87,16)" fg:x="30474" fg:w="61"/><text x="18.7559%" y="975.50"></text></g><g><title>core::slice::index::get_noubcheck (61 samples, 0.04%)</title><rect x="18.5059%" y="949" width="0.0370%" height="15" fill="rgb(208,99,42)" fg:x="30474" fg:w="61"/><text x="18.7559%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (43 samples, 0.03%)</title><rect x="18.5429%" y="933" width="0.0261%" height="15" fill="rgb(253,99,2)" fg:x="30535" fg:w="43"/><text x="18.7929%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (43 samples, 0.03%)</title><rect x="18.5429%" y="917" width="0.0261%" height="15" fill="rgb(220,168,23)" fg:x="30535" fg:w="43"/><text x="18.7929%" y="927.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (1,143 samples, 0.69%)</title><rect x="18.4609%" y="997" width="0.6941%" height="15" fill="rgb(242,38,24)" fg:x="30400" fg:w="1143"/><text x="18.7109%" y="1007.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,008 samples, 0.61%)</title><rect x="18.5429%" y="981" width="0.6121%" height="15" fill="rgb(225,182,9)" fg:x="30535" fg:w="1008"/><text x="18.7929%" y="991.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,008 samples, 0.61%)</title><rect x="18.5429%" y="965" width="0.6121%" height="15" fill="rgb(243,178,37)" fg:x="30535" fg:w="1008"/><text x="18.7929%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,008 samples, 0.61%)</title><rect x="18.5429%" y="949" width="0.6121%" height="15" fill="rgb(232,139,19)" fg:x="30535" fg:w="1008"/><text x="18.7929%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (965 samples, 0.59%)</title><rect x="18.5690%" y="933" width="0.5860%" height="15" fill="rgb(225,201,24)" fg:x="30578" fg:w="965"/><text x="18.8190%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (965 samples, 0.59%)</title><rect x="18.5690%" y="917" width="0.5860%" height="15" fill="rgb(221,47,46)" fg:x="30578" fg:w="965"/><text x="18.8190%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.02%)</title><rect x="19.6026%" y="965" width="0.0225%" height="15" fill="rgb(249,23,13)" fg:x="32280" fg:w="37"/><text x="19.8526%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.02%)</title><rect x="19.6026%" y="949" width="0.0225%" height="15" fill="rgb(219,9,5)" fg:x="32280" fg:w="37"/><text x="19.8526%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (19 samples, 0.01%)</title><rect x="19.7635%" y="933" width="0.0115%" height="15" fill="rgb(254,171,16)" fg:x="32545" fg:w="19"/><text x="20.0135%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (269 samples, 0.16%)</title><rect x="19.6360%" y="949" width="0.1634%" height="15" fill="rgb(230,171,20)" fg:x="32335" fg:w="269"/><text x="19.8860%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (40 samples, 0.02%)</title><rect x="19.7751%" y="933" width="0.0243%" height="15" fill="rgb(210,71,41)" fg:x="32564" fg:w="40"/><text x="20.0251%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (40 samples, 0.02%)</title><rect x="19.7751%" y="917" width="0.0243%" height="15" fill="rgb(206,173,20)" fg:x="32564" fg:w="40"/><text x="20.0251%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (41 samples, 0.02%)</title><rect x="19.7994%" y="949" width="0.0249%" height="15" fill="rgb(233,88,34)" fg:x="32604" fg:w="41"/><text x="20.0494%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (341 samples, 0.21%)</title><rect x="19.6251%" y="965" width="0.2071%" height="15" fill="rgb(223,209,46)" fg:x="32317" fg:w="341"/><text x="19.8751%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,149 samples, 0.70%)</title><rect x="19.1660%" y="981" width="0.6978%" height="15" fill="rgb(250,43,18)" fg:x="31561" fg:w="1149"/><text x="19.4160%" y="991.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (52 samples, 0.03%)</title><rect x="19.8322%" y="965" width="0.0316%" height="15" fill="rgb(208,13,10)" fg:x="32658" fg:w="52"/><text x="20.0822%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (52 samples, 0.03%)</title><rect x="19.8322%" y="949" width="0.0316%" height="15" fill="rgb(212,200,36)" fg:x="32658" fg:w="52"/><text x="20.0822%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (74 samples, 0.04%)</title><rect x="19.8637%" y="981" width="0.0449%" height="15" fill="rgb(225,90,30)" fg:x="32710" fg:w="74"/><text x="20.1137%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1,308 samples, 0.79%)</title><rect x="19.1587%" y="997" width="0.7943%" height="15" fill="rgb(236,182,39)" fg:x="31549" fg:w="1308"/><text x="19.4087%" y="1007.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (73 samples, 0.04%)</title><rect x="19.9087%" y="981" width="0.0443%" height="15" fill="rgb(212,144,35)" fg:x="32784" fg:w="73"/><text x="20.1587%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (28 samples, 0.02%)</title><rect x="19.9360%" y="965" width="0.0170%" height="15" fill="rgb(228,63,44)" fg:x="32829" fg:w="28"/><text x="20.1860%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.04%)</title><rect x="20.1807%" y="965" width="0.0352%" height="15" fill="rgb(228,109,6)" fg:x="33232" fg:w="58"/><text x="20.4307%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.04%)</title><rect x="20.1807%" y="949" width="0.0352%" height="15" fill="rgb(238,117,24)" fg:x="33232" fg:w="58"/><text x="20.4307%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (19 samples, 0.01%)</title><rect x="20.4491%" y="933" width="0.0115%" height="15" fill="rgb(242,26,26)" fg:x="33674" fg:w="19"/><text x="20.6991%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (401 samples, 0.24%)</title><rect x="20.2311%" y="949" width="0.2435%" height="15" fill="rgb(221,92,48)" fg:x="33315" fg:w="401"/><text x="20.4811%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (23 samples, 0.01%)</title><rect x="20.4607%" y="933" width="0.0140%" height="15" fill="rgb(209,209,32)" fg:x="33693" fg:w="23"/><text x="20.7107%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (23 samples, 0.01%)</title><rect x="20.4607%" y="917" width="0.0140%" height="15" fill="rgb(221,70,22)" fg:x="33693" fg:w="23"/><text x="20.7107%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (44 samples, 0.03%)</title><rect x="20.4746%" y="949" width="0.0267%" height="15" fill="rgb(248,145,5)" fg:x="33716" fg:w="44"/><text x="20.7246%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (26 samples, 0.02%)</title><rect x="20.4856%" y="933" width="0.0158%" height="15" fill="rgb(226,116,26)" fg:x="33734" fg:w="26"/><text x="20.7356%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (26 samples, 0.02%)</title><rect x="20.4856%" y="917" width="0.0158%" height="15" fill="rgb(244,5,17)" fg:x="33734" fg:w="26"/><text x="20.7356%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (485 samples, 0.29%)</title><rect x="20.2159%" y="965" width="0.2945%" height="15" fill="rgb(252,159,33)" fg:x="33290" fg:w="485"/><text x="20.4659%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (968 samples, 0.59%)</title><rect x="19.9530%" y="997" width="0.5878%" height="15" fill="rgb(206,71,0)" fg:x="32857" fg:w="968"/><text x="20.2030%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (960 samples, 0.58%)</title><rect x="19.9579%" y="981" width="0.5830%" height="15" fill="rgb(233,118,54)" fg:x="32865" fg:w="960"/><text x="20.2079%" y="991.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (50 samples, 0.03%)</title><rect x="20.5105%" y="965" width="0.0304%" height="15" fill="rgb(234,83,48)" fg:x="33775" fg:w="50"/><text x="20.7605%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (47 samples, 0.03%)</title><rect x="20.5123%" y="949" width="0.0285%" height="15" fill="rgb(228,3,54)" fg:x="33778" fg:w="47"/><text x="20.7623%" y="959.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (54 samples, 0.03%)</title><rect x="20.5408%" y="997" width="0.0328%" height="15" fill="rgb(226,155,13)" fg:x="33825" fg:w="54"/><text x="20.7908%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (14,401 samples, 8.75%)</title><rect x="11.8757%" y="1157" width="8.7453%" height="15" fill="rgb(241,28,37)" fg:x="19556" fg:w="14401"/><text x="12.1257%" y="1167.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (14,401 samples, 8.75%)</title><rect x="11.8757%" y="1141" width="8.7453%" height="15" fill="rgb(233,93,10)" fg:x="19556" fg:w="14401"/><text x="12.1257%" y="1151.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (14,401 samples, 8.75%)</title><rect x="11.8757%" y="1125" width="8.7453%" height="15" fill="rgb(225,113,19)" fg:x="19556" fg:w="14401"/><text x="12.1257%" y="1135.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,978 samples, 4.84%)</title><rect x="15.7762%" y="1109" width="4.8448%" height="15" fill="rgb(241,2,18)" fg:x="25979" fg:w="7978"/><text x="16.0262%" y="1119.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7,978 samples, 4.84%)</title><rect x="15.7762%" y="1093" width="4.8448%" height="15" fill="rgb(228,207,21)" fg:x="25979" fg:w="7978"/><text x="16.0262%" y="1103.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,978 samples, 4.84%)</title><rect x="15.7762%" y="1077" width="4.8448%" height="15" fill="rgb(213,211,35)" fg:x="25979" fg:w="7978"/><text x="16.0262%" y="1087.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (7,897 samples, 4.80%)</title><rect x="15.8254%" y="1061" width="4.7956%" height="15" fill="rgb(209,83,10)" fg:x="26060" fg:w="7897"/><text x="16.0754%" y="1071.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7,897 samples, 4.80%)</title><rect x="15.8254%" y="1045" width="4.7956%" height="15" fill="rgb(209,164,1)" fg:x="26060" fg:w="7897"/><text x="16.0754%" y="1055.50">core::..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (7,897 samples, 4.80%)</title><rect x="15.8254%" y="1029" width="4.7956%" height="15" fill="rgb(213,184,43)" fg:x="26060" fg:w="7897"/><text x="16.0754%" y="1039.50">tokio:..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (7,811 samples, 4.74%)</title><rect x="15.8776%" y="1013" width="4.7434%" height="15" fill="rgb(231,61,34)" fg:x="26146" fg:w="7811"/><text x="16.1276%" y="1023.50">tokio:..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (78 samples, 0.05%)</title><rect x="20.5736%" y="997" width="0.0474%" height="15" fill="rgb(235,75,3)" fg:x="33879" fg:w="78"/><text x="20.8236%" y="1007.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (14,433 samples, 8.76%)</title><rect x="11.8654%" y="1173" width="8.7647%" height="15" fill="rgb(220,106,47)" fg:x="19539" fg:w="14433"/><text x="12.1154%" y="1183.50">tokio::runti..</text></g><g><title>core::cmp::Ord::min (31 samples, 0.02%)</title><rect x="20.6307%" y="1141" width="0.0188%" height="15" fill="rgb(210,196,33)" fg:x="33973" fg:w="31"/><text x="20.8807%" y="1151.50"></text></g><g><title>core::cmp::min_by (24 samples, 0.01%)</title><rect x="20.6350%" y="1125" width="0.0146%" height="15" fill="rgb(229,154,42)" fg:x="33980" fg:w="24"/><text x="20.8850%" y="1135.50"></text></g><g><title>core::time::Duration::as_millis (75 samples, 0.05%)</title><rect x="20.6495%" y="1141" width="0.0455%" height="15" fill="rgb(228,114,26)" fg:x="34004" fg:w="75"/><text x="20.8995%" y="1151.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (158 samples, 0.10%)</title><rect x="20.6307%" y="1157" width="0.0959%" height="15" fill="rgb(208,144,1)" fg:x="33973" fg:w="158"/><text x="20.8807%" y="1167.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (52 samples, 0.03%)</title><rect x="20.6951%" y="1141" width="0.0316%" height="15" fill="rgb(239,112,37)" fg:x="34079" fg:w="52"/><text x="20.9451%" y="1151.50"></text></g><g><title>std::time::Instant::duration_since (52 samples, 0.03%)</title><rect x="20.6951%" y="1125" width="0.0316%" height="15" fill="rgb(210,96,50)" fg:x="34079" fg:w="52"/><text x="20.9451%" y="1135.50"></text></g><g><title>std::time::Instant::checked_duration_since (52 samples, 0.03%)</title><rect x="20.6951%" y="1109" width="0.0316%" height="15" fill="rgb(222,178,2)" fg:x="34079" fg:w="52"/><text x="20.9451%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (52 samples, 0.03%)</title><rect x="20.6951%" y="1093" width="0.0316%" height="15" fill="rgb(226,74,18)" fg:x="34079" fg:w="52"/><text x="20.9451%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (44 samples, 0.03%)</title><rect x="20.6999%" y="1077" width="0.0267%" height="15" fill="rgb(225,67,54)" fg:x="34087" fg:w="44"/><text x="20.9499%" y="1087.50"></text></g><g><title>clock_gettime (430 samples, 0.26%)</title><rect x="20.7443%" y="1109" width="0.2611%" height="15" fill="rgb(251,92,32)" fg:x="34160" fg:w="430"/><text x="20.9943%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (363 samples, 0.22%)</title><rect x="20.7850%" y="1093" width="0.2204%" height="15" fill="rgb(228,149,22)" fg:x="34227" fg:w="363"/><text x="21.0350%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (467 samples, 0.28%)</title><rect x="20.7267%" y="1125" width="0.2836%" height="15" fill="rgb(243,54,13)" fg:x="34131" fg:w="467"/><text x="20.9767%" y="1135.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (15,182 samples, 9.22%)</title><rect x="11.7950%" y="1189" width="9.2195%" height="15" fill="rgb(243,180,28)" fg:x="19423" fg:w="15182"/><text x="12.0450%" y="1199.50">tokio::runtim..</text></g><g><title>tokio::runtime::time::source::TimeSource::now (632 samples, 0.38%)</title><rect x="20.6307%" y="1173" width="0.3838%" height="15" fill="rgb(208,167,24)" fg:x="33973" fg:w="632"/><text x="20.8807%" y="1183.50"></text></g><g><title>tokio::time::clock::Clock::now (474 samples, 0.29%)</title><rect x="20.7267%" y="1157" width="0.2878%" height="15" fill="rgb(245,73,45)" fg:x="34131" fg:w="474"/><text x="20.9767%" y="1167.50"></text></g><g><title>tokio::time::clock::now (474 samples, 0.29%)</title><rect x="20.7267%" y="1141" width="0.2878%" height="15" fill="rgb(237,203,48)" fg:x="34131" fg:w="474"/><text x="20.9767%" y="1151.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (41 samples, 0.02%)</title><rect x="21.0181%" y="1189" width="0.0249%" height="15" fill="rgb(211,197,16)" fg:x="34611" fg:w="41"/><text x="21.2681%" y="1199.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (41 samples, 0.02%)</title><rect x="21.0181%" y="1173" width="0.0249%" height="15" fill="rgb(243,99,51)" fg:x="34611" fg:w="41"/><text x="21.2681%" y="1183.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (19 samples, 0.01%)</title><rect x="21.0315%" y="1157" width="0.0115%" height="15" fill="rgb(215,123,29)" fg:x="34633" fg:w="19"/><text x="21.2815%" y="1167.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (19 samples, 0.01%)</title><rect x="21.0315%" y="1141" width="0.0115%" height="15" fill="rgb(239,186,37)" fg:x="34633" fg:w="19"/><text x="21.2815%" y="1151.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park_timeout (19 samples, 0.01%)</title><rect x="21.0315%" y="1125" width="0.0115%" height="15" fill="rgb(252,136,39)" fg:x="34633" fg:w="19"/><text x="21.2815%" y="1135.50"></text></g><g><title>core::cmp::Ord::min (32 samples, 0.02%)</title><rect x="21.0509%" y="1157" width="0.0194%" height="15" fill="rgb(223,213,32)" fg:x="34665" fg:w="32"/><text x="21.3009%" y="1167.50"></text></g><g><title>core::cmp::min_by (23 samples, 0.01%)</title><rect x="21.0564%" y="1141" width="0.0140%" height="15" fill="rgb(233,115,5)" fg:x="34674" fg:w="23"/><text x="21.3064%" y="1151.50"></text></g><g><title>core::time::Duration::as_millis (62 samples, 0.04%)</title><rect x="21.0704%" y="1157" width="0.0377%" height="15" fill="rgb(207,226,44)" fg:x="34697" fg:w="62"/><text x="21.3204%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (19 samples, 0.01%)</title><rect x="21.1311%" y="1077" width="0.0115%" height="15" fill="rgb(208,126,0)" fg:x="34797" fg:w="19"/><text x="21.3811%" y="1087.50"></text></g><g><title>core::cmp::PartialOrd::ge (19 samples, 0.01%)</title><rect x="21.1311%" y="1061" width="0.0115%" height="15" fill="rgb(244,66,21)" fg:x="34797" fg:w="19"/><text x="21.3811%" y="1071.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (19 samples, 0.01%)</title><rect x="21.1311%" y="1045" width="0.0115%" height="15" fill="rgb(222,97,12)" fg:x="34797" fg:w="19"/><text x="21.3811%" y="1055.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (164 samples, 0.10%)</title><rect x="21.0497%" y="1173" width="0.0996%" height="15" fill="rgb(219,213,19)" fg:x="34663" fg:w="164"/><text x="21.2997%" y="1183.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (68 samples, 0.04%)</title><rect x="21.1080%" y="1157" width="0.0413%" height="15" fill="rgb(252,169,30)" fg:x="34759" fg:w="68"/><text x="21.3580%" y="1167.50"></text></g><g><title>std::time::Instant::duration_since (68 samples, 0.04%)</title><rect x="21.1080%" y="1141" width="0.0413%" height="15" fill="rgb(206,32,51)" fg:x="34759" fg:w="68"/><text x="21.3580%" y="1151.50"></text></g><g><title>std::time::Instant::checked_duration_since (68 samples, 0.04%)</title><rect x="21.1080%" y="1125" width="0.0413%" height="15" fill="rgb(250,172,42)" fg:x="34759" fg:w="68"/><text x="21.3580%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (68 samples, 0.04%)</title><rect x="21.1080%" y="1109" width="0.0413%" height="15" fill="rgb(209,34,43)" fg:x="34759" fg:w="68"/><text x="21.3580%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (67 samples, 0.04%)</title><rect x="21.1086%" y="1093" width="0.0407%" height="15" fill="rgb(223,11,35)" fg:x="34760" fg:w="67"/><text x="21.3586%" y="1103.50"></text></g><g><title>clock_gettime (361 samples, 0.22%)</title><rect x="21.1627%" y="1125" width="0.2192%" height="15" fill="rgb(251,219,26)" fg:x="34849" fg:w="361"/><text x="21.4127%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (348 samples, 0.21%)</title><rect x="21.1706%" y="1109" width="0.2113%" height="15" fill="rgb(231,119,3)" fg:x="34862" fg:w="348"/><text x="21.4206%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (391 samples, 0.24%)</title><rect x="21.1493%" y="1141" width="0.2374%" height="15" fill="rgb(216,97,11)" fg:x="34827" fg:w="391"/><text x="21.3993%" y="1151.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (561 samples, 0.34%)</title><rect x="21.0497%" y="1189" width="0.3407%" height="15" fill="rgb(223,59,9)" fg:x="34663" fg:w="561"/><text x="21.2997%" y="1199.50"></text></g><g><title>tokio::time::clock::Clock::now (397 samples, 0.24%)</title><rect x="21.1493%" y="1173" width="0.2411%" height="15" fill="rgb(233,93,31)" fg:x="34827" fg:w="397"/><text x="21.3993%" y="1183.50"></text></g><g><title>tokio::time::clock::now (397 samples, 0.24%)</title><rect x="21.1493%" y="1157" width="0.2411%" height="15" fill="rgb(239,81,33)" fg:x="34827" fg:w="397"/><text x="21.3993%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (25,109 samples, 15.25%)</title><rect x="6.1789%" y="1221" width="15.2479%" height="15" fill="rgb(213,120,34)" fg:x="10175" fg:w="25109"/><text x="6.4289%" y="1231.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::time::Driver::park_internal (24,597 samples, 14.94%)</title><rect x="6.4899%" y="1205" width="14.9370%" height="15" fill="rgb(243,49,53)" fg:x="10687" fg:w="24597"/><text x="6.7399%" y="1215.50">tokio::runtime::time::D..</text></g><g><title>tokio::runtime::time::source::TimeSource::tick_to_duration (60 samples, 0.04%)</title><rect x="21.3904%" y="1189" width="0.0364%" height="15" fill="rgb(247,216,33)" fg:x="35224" fg:w="60"/><text x="21.6404%" y="1199.50"></text></g><g><title>core::time::Duration::from_millis (60 samples, 0.04%)</title><rect x="21.3904%" y="1173" width="0.0364%" height="15" fill="rgb(226,26,14)" fg:x="35224" fg:w="60"/><text x="21.6404%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (26,379 samples, 16.02%)</title><rect x="5.5589%" y="1253" width="16.0191%" height="15" fill="rgb(215,49,53)" fg:x="9154" fg:w="26379"/><text x="5.8089%" y="1263.50">tokio::runtime::scheduler..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (26,379 samples, 16.02%)</title><rect x="5.5589%" y="1237" width="16.0191%" height="15" fill="rgb(245,162,40)" fg:x="9154" fg:w="26379"/><text x="5.8089%" y="1247.50">tokio::runtime::scheduler..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (249 samples, 0.15%)</title><rect x="21.4268%" y="1221" width="0.1512%" height="15" fill="rgb(229,68,17)" fg:x="35284" fg:w="249"/><text x="21.6768%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (249 samples, 0.15%)</title><rect x="21.4268%" y="1205" width="0.1512%" height="15" fill="rgb(213,182,10)" fg:x="35284" fg:w="249"/><text x="21.6768%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (249 samples, 0.15%)</title><rect x="21.4268%" y="1189" width="0.1512%" height="15" fill="rgb(245,125,30)" fg:x="35284" fg:w="249"/><text x="21.6768%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (26,744 samples, 16.24%)</title><rect x="5.3719%" y="1269" width="16.2408%" height="15" fill="rgb(232,202,2)" fg:x="8846" fg:w="26744"/><text x="5.6219%" y="1279.50">tokio::runtime::scheduler..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (53 samples, 0.03%)</title><rect x="21.5805%" y="1253" width="0.0322%" height="15" fill="rgb(237,140,51)" fg:x="35537" fg:w="53"/><text x="21.8305%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (40 samples, 0.02%)</title><rect x="21.5884%" y="1237" width="0.0243%" height="15" fill="rgb(236,157,25)" fg:x="35550" fg:w="40"/><text x="21.8384%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (36 samples, 0.02%)</title><rect x="21.5908%" y="1221" width="0.0219%" height="15" fill="rgb(219,209,0)" fg:x="35554" fg:w="36"/><text x="21.8408%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (33 samples, 0.02%)</title><rect x="21.5926%" y="1205" width="0.0200%" height="15" fill="rgb(240,116,54)" fg:x="35557" fg:w="33"/><text x="21.8426%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.02%)</title><rect x="21.5926%" y="1189" width="0.0200%" height="15" fill="rgb(216,10,36)" fg:x="35557" fg:w="33"/><text x="21.8426%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (247 samples, 0.15%)</title><rect x="21.6983%" y="1253" width="0.1500%" height="15" fill="rgb(222,72,44)" fg:x="35731" fg:w="247"/><text x="21.9483%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (247 samples, 0.15%)</title><rect x="21.6983%" y="1237" width="0.1500%" height="15" fill="rgb(232,159,9)" fg:x="35731" fg:w="247"/><text x="21.9483%" y="1247.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (247 samples, 0.15%)</title><rect x="21.6983%" y="1221" width="0.1500%" height="15" fill="rgb(210,39,32)" fg:x="35731" fg:w="247"/><text x="21.9483%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (247 samples, 0.15%)</title><rect x="21.6983%" y="1205" width="0.1500%" height="15" fill="rgb(216,194,45)" fg:x="35731" fg:w="247"/><text x="21.9483%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (236 samples, 0.14%)</title><rect x="21.7050%" y="1189" width="0.1433%" height="15" fill="rgb(218,18,35)" fg:x="35742" fg:w="236"/><text x="21.9550%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (236 samples, 0.14%)</title><rect x="21.7050%" y="1173" width="0.1433%" height="15" fill="rgb(207,83,51)" fg:x="35742" fg:w="236"/><text x="21.9550%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (138 samples, 0.08%)</title><rect x="21.8544%" y="1205" width="0.0838%" height="15" fill="rgb(225,63,43)" fg:x="35988" fg:w="138"/><text x="22.1044%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (138 samples, 0.08%)</title><rect x="21.8544%" y="1189" width="0.0838%" height="15" fill="rgb(207,57,36)" fg:x="35988" fg:w="138"/><text x="22.1044%" y="1199.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (151 samples, 0.09%)</title><rect x="21.8483%" y="1253" width="0.0917%" height="15" fill="rgb(216,99,33)" fg:x="35978" fg:w="151"/><text x="22.0983%" y="1263.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (151 samples, 0.09%)</title><rect x="21.8483%" y="1237" width="0.0917%" height="15" fill="rgb(225,42,16)" fg:x="35978" fg:w="151"/><text x="22.0983%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (151 samples, 0.09%)</title><rect x="21.8483%" y="1221" width="0.0917%" height="15" fill="rgb(220,201,45)" fg:x="35978" fg:w="151"/><text x="22.0983%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (557 samples, 0.34%)</title><rect x="21.6127%" y="1269" width="0.3382%" height="15" fill="rgb(225,33,4)" fg:x="35590" fg:w="557"/><text x="21.8627%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_closed (18 samples, 0.01%)</title><rect x="21.9400%" y="1253" width="0.0109%" height="15" fill="rgb(224,33,50)" fg:x="36129" fg:w="18"/><text x="22.1900%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (106 samples, 0.06%)</title><rect x="21.9709%" y="1237" width="0.0644%" height="15" fill="rgb(246,198,51)" fg:x="36180" fg:w="106"/><text x="22.2209%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (106 samples, 0.06%)</title><rect x="21.9709%" y="1221" width="0.0644%" height="15" fill="rgb(205,22,4)" fg:x="36180" fg:w="106"/><text x="22.2209%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.06%)</title><rect x="21.9709%" y="1205" width="0.0644%" height="15" fill="rgb(206,3,8)" fg:x="36180" fg:w="106"/><text x="22.2209%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (106 samples, 0.06%)</title><rect x="21.9709%" y="1189" width="0.0644%" height="15" fill="rgb(251,23,15)" fg:x="36180" fg:w="106"/><text x="22.2209%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (103 samples, 0.06%)</title><rect x="21.9728%" y="1173" width="0.0625%" height="15" fill="rgb(252,88,28)" fg:x="36183" fg:w="103"/><text x="22.2228%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (103 samples, 0.06%)</title><rect x="21.9728%" y="1157" width="0.0625%" height="15" fill="rgb(212,127,14)" fg:x="36183" fg:w="103"/><text x="22.2228%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (186 samples, 0.11%)</title><rect x="22.0353%" y="1237" width="0.1130%" height="15" fill="rgb(247,145,37)" fg:x="36286" fg:w="186"/><text x="22.2853%" y="1247.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (186 samples, 0.11%)</title><rect x="22.0353%" y="1221" width="0.1130%" height="15" fill="rgb(209,117,53)" fg:x="36286" fg:w="186"/><text x="22.2853%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (186 samples, 0.11%)</title><rect x="22.0353%" y="1205" width="0.1130%" height="15" fill="rgb(212,90,42)" fg:x="36286" fg:w="186"/><text x="22.2853%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (120 samples, 0.07%)</title><rect x="22.1513%" y="1189" width="0.0729%" height="15" fill="rgb(218,164,37)" fg:x="36477" fg:w="120"/><text x="22.4013%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (120 samples, 0.07%)</title><rect x="22.1513%" y="1173" width="0.0729%" height="15" fill="rgb(246,65,34)" fg:x="36477" fg:w="120"/><text x="22.4013%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (420 samples, 0.26%)</title><rect x="21.9697%" y="1253" width="0.2551%" height="15" fill="rgb(231,100,33)" fg:x="36178" fg:w="420"/><text x="22.2197%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (126 samples, 0.08%)</title><rect x="22.1483%" y="1237" width="0.0765%" height="15" fill="rgb(228,126,14)" fg:x="36472" fg:w="126"/><text x="22.3983%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (126 samples, 0.08%)</title><rect x="22.1483%" y="1221" width="0.0765%" height="15" fill="rgb(215,173,21)" fg:x="36472" fg:w="126"/><text x="22.3983%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (126 samples, 0.08%)</title><rect x="22.1483%" y="1205" width="0.0765%" height="15" fill="rgb(210,6,40)" fg:x="36472" fg:w="126"/><text x="22.3983%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (51 samples, 0.03%)</title><rect x="22.2989%" y="1237" width="0.0310%" height="15" fill="rgb(212,48,18)" fg:x="36720" fg:w="51"/><text x="22.5489%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (51 samples, 0.03%)</title><rect x="22.2989%" y="1221" width="0.0310%" height="15" fill="rgb(230,214,11)" fg:x="36720" fg:w="51"/><text x="22.5489%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.03%)</title><rect x="22.2989%" y="1205" width="0.0310%" height="15" fill="rgb(254,105,39)" fg:x="36720" fg:w="51"/><text x="22.5489%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (51 samples, 0.03%)</title><rect x="22.2989%" y="1189" width="0.0310%" height="15" fill="rgb(245,158,5)" fg:x="36720" fg:w="51"/><text x="22.5489%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (48 samples, 0.03%)</title><rect x="22.3007%" y="1173" width="0.0291%" height="15" fill="rgb(249,208,11)" fg:x="36723" fg:w="48"/><text x="22.5507%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (48 samples, 0.03%)</title><rect x="22.3007%" y="1157" width="0.0291%" height="15" fill="rgb(210,39,28)" fg:x="36723" fg:w="48"/><text x="22.5507%" y="1167.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (79 samples, 0.05%)</title><rect x="22.3298%" y="1237" width="0.0480%" height="15" fill="rgb(211,56,53)" fg:x="36771" fg:w="79"/><text x="22.5798%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (79 samples, 0.05%)</title><rect x="22.3298%" y="1221" width="0.0480%" height="15" fill="rgb(226,201,30)" fg:x="36771" fg:w="79"/><text x="22.5798%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (79 samples, 0.05%)</title><rect x="22.3298%" y="1205" width="0.0480%" height="15" fill="rgb(239,101,34)" fg:x="36771" fg:w="79"/><text x="22.5798%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (77 samples, 0.05%)</title><rect x="22.3311%" y="1189" width="0.0468%" height="15" fill="rgb(226,209,5)" fg:x="36773" fg:w="77"/><text x="22.5811%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (77 samples, 0.05%)</title><rect x="22.3311%" y="1173" width="0.0468%" height="15" fill="rgb(250,105,47)" fg:x="36773" fg:w="77"/><text x="22.5811%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (297 samples, 0.18%)</title><rect x="22.2248%" y="1253" width="0.1804%" height="15" fill="rgb(230,72,3)" fg:x="36598" fg:w="297"/><text x="22.4748%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::unpark_one (45 samples, 0.03%)</title><rect x="22.3778%" y="1237" width="0.0273%" height="15" fill="rgb(232,218,39)" fg:x="36850" fg:w="45"/><text x="22.6278%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (45 samples, 0.03%)</title><rect x="22.3778%" y="1221" width="0.0273%" height="15" fill="rgb(248,166,6)" fg:x="36850" fg:w="45"/><text x="22.6278%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (45 samples, 0.03%)</title><rect x="22.3778%" y="1205" width="0.0273%" height="15" fill="rgb(247,89,20)" fg:x="36850" fg:w="45"/><text x="22.6278%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (757 samples, 0.46%)</title><rect x="21.9509%" y="1269" width="0.4597%" height="15" fill="rgb(248,130,54)" fg:x="36147" fg:w="757"/><text x="22.2009%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.02%)</title><rect x="22.4197%" y="1237" width="0.0152%" height="15" fill="rgb(234,196,4)" fg:x="36919" fg:w="25"/><text x="22.6697%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (231 samples, 0.14%)</title><rect x="22.4349%" y="1237" width="0.1403%" height="15" fill="rgb(250,143,31)" fg:x="36944" fg:w="231"/><text x="22.6849%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (231 samples, 0.14%)</title><rect x="22.4349%" y="1221" width="0.1403%" height="15" fill="rgb(211,110,34)" fg:x="36944" fg:w="231"/><text x="22.6849%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (231 samples, 0.14%)</title><rect x="22.4349%" y="1205" width="0.1403%" height="15" fill="rgb(215,124,48)" fg:x="36944" fg:w="231"/><text x="22.6849%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (231 samples, 0.14%)</title><rect x="22.4349%" y="1189" width="0.1403%" height="15" fill="rgb(216,46,13)" fg:x="36944" fg:w="231"/><text x="22.6849%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (224 samples, 0.14%)</title><rect x="22.4392%" y="1173" width="0.1360%" height="15" fill="rgb(205,184,25)" fg:x="36951" fg:w="224"/><text x="22.6892%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (224 samples, 0.14%)</title><rect x="22.4392%" y="1157" width="0.1360%" height="15" fill="rgb(228,1,10)" fg:x="36951" fg:w="224"/><text x="22.6892%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (74 samples, 0.04%)</title><rect x="22.5782%" y="1189" width="0.0449%" height="15" fill="rgb(213,116,27)" fg:x="37180" fg:w="74"/><text x="22.8282%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (74 samples, 0.04%)</title><rect x="22.5782%" y="1173" width="0.0449%" height="15" fill="rgb(241,95,50)" fg:x="37180" fg:w="74"/><text x="22.8282%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (87 samples, 0.05%)</title><rect x="22.5752%" y="1237" width="0.0528%" height="15" fill="rgb(238,48,32)" fg:x="37175" fg:w="87"/><text x="22.8252%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (87 samples, 0.05%)</title><rect x="22.5752%" y="1221" width="0.0528%" height="15" fill="rgb(235,113,49)" fg:x="37175" fg:w="87"/><text x="22.8252%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (87 samples, 0.05%)</title><rect x="22.5752%" y="1205" width="0.0528%" height="15" fill="rgb(205,127,43)" fg:x="37175" fg:w="87"/><text x="22.8252%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (422 samples, 0.26%)</title><rect x="22.4197%" y="1253" width="0.2563%" height="15" fill="rgb(250,162,2)" fg:x="36919" fg:w="422"/><text x="22.6697%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (79 samples, 0.05%)</title><rect x="22.6280%" y="1237" width="0.0480%" height="15" fill="rgb(220,13,41)" fg:x="37262" fg:w="79"/><text x="22.8780%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (69 samples, 0.04%)</title><rect x="22.6341%" y="1221" width="0.0419%" height="15" fill="rgb(249,221,25)" fg:x="37272" fg:w="69"/><text x="22.8841%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_sub (69 samples, 0.04%)</title><rect x="22.6341%" y="1205" width="0.0419%" height="15" fill="rgb(215,208,19)" fg:x="37272" fg:w="69"/><text x="22.8841%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (40 samples, 0.02%)</title><rect x="22.7155%" y="1189" width="0.0243%" height="15" fill="rgb(236,175,2)" fg:x="37406" fg:w="40"/><text x="22.9655%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.02%)</title><rect x="22.7155%" y="1173" width="0.0243%" height="15" fill="rgb(241,52,2)" fg:x="37406" fg:w="40"/><text x="22.9655%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (48 samples, 0.03%)</title><rect x="22.7124%" y="1237" width="0.0291%" height="15" fill="rgb(248,140,14)" fg:x="37401" fg:w="48"/><text x="22.9624%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (43 samples, 0.03%)</title><rect x="22.7155%" y="1221" width="0.0261%" height="15" fill="rgb(253,22,42)" fg:x="37406" fg:w="43"/><text x="22.9655%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (43 samples, 0.03%)</title><rect x="22.7155%" y="1205" width="0.0261%" height="15" fill="rgb(234,61,47)" fg:x="37406" fg:w="43"/><text x="22.9655%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (109 samples, 0.07%)</title><rect x="22.6760%" y="1253" width="0.0662%" height="15" fill="rgb(208,226,15)" fg:x="37341" fg:w="109"/><text x="22.9260%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (28,830 samples, 17.51%)</title><rect x="5.2395%" y="1285" width="17.5075%" height="15" fill="rgb(217,221,4)" fg:x="8628" fg:w="28830"/><text x="5.4895%" y="1295.50">tokio::runtime::scheduler::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (554 samples, 0.34%)</title><rect x="22.4106%" y="1269" width="0.3364%" height="15" fill="rgb(212,174,34)" fg:x="36904" fg:w="554"/><text x="22.6606%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.01%)</title><rect x="22.7707%" y="1205" width="0.0134%" height="15" fill="rgb(253,83,4)" fg:x="37497" fg:w="22"/><text x="23.0207%" y="1215.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (22 samples, 0.01%)</title><rect x="22.7707%" y="1189" width="0.0134%" height="15" fill="rgb(250,195,49)" fg:x="37497" fg:w="22"/><text x="23.0207%" y="1199.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (22 samples, 0.01%)</title><rect x="22.7707%" y="1173" width="0.0134%" height="15" fill="rgb(241,192,25)" fg:x="37497" fg:w="22"/><text x="23.0207%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (17 samples, 0.01%)</title><rect x="22.7738%" y="1157" width="0.0103%" height="15" fill="rgb(208,124,10)" fg:x="37502" fg:w="17"/><text x="23.0238%" y="1167.50"></text></g><g><title>tokio::runtime::context::budget (36 samples, 0.02%)</title><rect x="22.7707%" y="1237" width="0.0219%" height="15" fill="rgb(222,33,0)" fg:x="37497" fg:w="36"/><text x="23.0207%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.02%)</title><rect x="22.7707%" y="1221" width="0.0219%" height="15" fill="rgb(234,209,28)" fg:x="37497" fg:w="36"/><text x="23.0207%" y="1231.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (51 samples, 0.03%)</title><rect x="22.8278%" y="1221" width="0.0310%" height="15" fill="rgb(224,11,23)" fg:x="37591" fg:w="51"/><text x="23.0778%" y="1231.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (51 samples, 0.03%)</title><rect x="22.8278%" y="1205" width="0.0310%" height="15" fill="rgb(232,99,1)" fg:x="37591" fg:w="51"/><text x="23.0778%" y="1215.50"></text></g><g><title>core::cell::BorrowRefMut::new (51 samples, 0.03%)</title><rect x="22.8278%" y="1189" width="0.0310%" height="15" fill="rgb(237,95,45)" fg:x="37591" fg:w="51"/><text x="23.0778%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (50 samples, 0.03%)</title><rect x="22.8588%" y="1221" width="0.0304%" height="15" fill="rgb(208,109,11)" fg:x="37642" fg:w="50"/><text x="23.1088%" y="1231.50"></text></g><g><title>core::mem::replace (50 samples, 0.03%)</title><rect x="22.8588%" y="1205" width="0.0304%" height="15" fill="rgb(216,190,48)" fg:x="37642" fg:w="50"/><text x="23.1088%" y="1215.50"></text></g><g><title>core::ptr::read (50 samples, 0.03%)</title><rect x="22.8588%" y="1189" width="0.0304%" height="15" fill="rgb(251,171,36)" fg:x="37642" fg:w="50"/><text x="23.1088%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (75 samples, 0.05%)</title><rect x="22.9013%" y="1221" width="0.0455%" height="15" fill="rgb(230,62,22)" fg:x="37712" fg:w="75"/><text x="23.1513%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.02%)</title><rect x="22.9298%" y="1205" width="0.0170%" height="15" fill="rgb(225,114,35)" fg:x="37759" fg:w="28"/><text x="23.1798%" y="1215.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (28 samples, 0.02%)</title><rect x="22.9298%" y="1189" width="0.0170%" height="15" fill="rgb(215,118,42)" fg:x="37759" fg:w="28"/><text x="23.1798%" y="1199.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (28 samples, 0.02%)</title><rect x="22.9298%" y="1173" width="0.0170%" height="15" fill="rgb(243,119,21)" fg:x="37759" fg:w="28"/><text x="23.1798%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (48 samples, 0.03%)</title><rect x="22.9991%" y="1093" width="0.0291%" height="15" fill="rgb(252,177,53)" fg:x="37873" fg:w="48"/><text x="23.2491%" y="1103.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (45 samples, 0.03%)</title><rect x="23.0009%" y="1077" width="0.0273%" height="15" fill="rgb(237,209,29)" fg:x="37876" fg:w="45"/><text x="23.2509%" y="1087.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (21 samples, 0.01%)</title><rect x="23.0154%" y="1061" width="0.0128%" height="15" fill="rgb(212,65,23)" fg:x="37900" fg:w="21"/><text x="23.2654%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (20 samples, 0.01%)</title><rect x="23.0161%" y="1045" width="0.0121%" height="15" fill="rgb(230,222,46)" fg:x="37901" fg:w="20"/><text x="23.2661%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (30 samples, 0.02%)</title><rect x="23.0325%" y="1077" width="0.0182%" height="15" fill="rgb(215,135,32)" fg:x="37928" fg:w="30"/><text x="23.2825%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (30 samples, 0.02%)</title><rect x="23.0325%" y="1061" width="0.0182%" height="15" fill="rgb(246,101,22)" fg:x="37928" fg:w="30"/><text x="23.2825%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (30 samples, 0.02%)</title><rect x="23.0325%" y="1045" width="0.0182%" height="15" fill="rgb(206,107,13)" fg:x="37928" fg:w="30"/><text x="23.2825%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (236 samples, 0.14%)</title><rect x="23.0719%" y="1029" width="0.1433%" height="15" fill="rgb(250,100,44)" fg:x="37993" fg:w="236"/><text x="23.3219%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (236 samples, 0.14%)</title><rect x="23.0719%" y="1013" width="0.1433%" height="15" fill="rgb(231,147,38)" fg:x="37993" fg:w="236"/><text x="23.3219%" y="1023.50"></text></g><g><title>clock_gettime (24 samples, 0.01%)</title><rect x="23.2207%" y="997" width="0.0146%" height="15" fill="rgb(229,8,40)" fg:x="38238" fg:w="24"/><text x="23.4707%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (34 samples, 0.02%)</title><rect x="23.2152%" y="1029" width="0.0206%" height="15" fill="rgb(221,135,30)" fg:x="38229" fg:w="34"/><text x="23.4652%" y="1039.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (26 samples, 0.02%)</title><rect x="23.2201%" y="1013" width="0.0158%" height="15" fill="rgb(249,193,18)" fg:x="38237" fg:w="26"/><text x="23.4701%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (23 samples, 0.01%)</title><rect x="23.2389%" y="1013" width="0.0140%" height="15" fill="rgb(209,133,39)" fg:x="38268" fg:w="23"/><text x="23.4889%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (23 samples, 0.01%)</title><rect x="23.2389%" y="997" width="0.0140%" height="15" fill="rgb(232,100,14)" fg:x="38268" fg:w="23"/><text x="23.4889%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.01%)</title><rect x="23.2389%" y="981" width="0.0140%" height="15" fill="rgb(224,185,1)" fg:x="38268" fg:w="23"/><text x="23.4889%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::hash (22 samples, 0.01%)</title><rect x="23.2529%" y="1013" width="0.0134%" height="15" fill="rgb(223,139,8)" fg:x="38291" fg:w="22"/><text x="23.5029%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (158 samples, 0.10%)</title><rect x="23.2359%" y="1029" width="0.0959%" height="15" fill="rgb(232,213,38)" fg:x="38263" fg:w="158"/><text x="23.4859%" y="1039.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (108 samples, 0.07%)</title><rect x="23.2663%" y="1013" width="0.0656%" height="15" fill="rgb(207,94,22)" fg:x="38313" fg:w="108"/><text x="23.5163%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (107 samples, 0.06%)</title><rect x="23.2669%" y="997" width="0.0650%" height="15" fill="rgb(219,183,54)" fg:x="38314" fg:w="107"/><text x="23.5169%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (107 samples, 0.06%)</title><rect x="23.2669%" y="981" width="0.0650%" height="15" fill="rgb(216,185,54)" fg:x="38314" fg:w="107"/><text x="23.5169%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (460 samples, 0.28%)</title><rect x="23.0592%" y="1061" width="0.2793%" height="15" fill="rgb(254,217,39)" fg:x="37972" fg:w="460"/><text x="23.3092%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (460 samples, 0.28%)</title><rect x="23.0592%" y="1045" width="0.2793%" height="15" fill="rgb(240,178,23)" fg:x="37972" fg:w="460"/><text x="23.3092%" y="1055.50"></text></g><g><title>syscall (29 samples, 0.02%)</title><rect x="23.3385%" y="1061" width="0.0176%" height="15" fill="rgb(218,11,47)" fg:x="38432" fg:w="29"/><text x="23.5885%" y="1071.50"></text></g><g><title>[libc.so.6] (30 samples, 0.02%)</title><rect x="23.3768%" y="933" width="0.0182%" height="15" fill="rgb(218,51,51)" fg:x="38495" fg:w="30"/><text x="23.6268%" y="943.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (70 samples, 0.04%)</title><rect x="23.3561%" y="1061" width="0.0425%" height="15" fill="rgb(238,126,27)" fg:x="38461" fg:w="70"/><text x="23.6061%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (67 samples, 0.04%)</title><rect x="23.3579%" y="1045" width="0.0407%" height="15" fill="rgb(249,202,22)" fg:x="38464" fg:w="67"/><text x="23.6079%" y="1055.50"></text></g><g><title>mio::waker::Waker::wake (67 samples, 0.04%)</title><rect x="23.3579%" y="1029" width="0.0407%" height="15" fill="rgb(254,195,49)" fg:x="38464" fg:w="67"/><text x="23.6079%" y="1039.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (67 samples, 0.04%)</title><rect x="23.3579%" y="1013" width="0.0407%" height="15" fill="rgb(208,123,14)" fg:x="38464" fg:w="67"/><text x="23.6079%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (67 samples, 0.04%)</title><rect x="23.3579%" y="997" width="0.0407%" height="15" fill="rgb(224,200,8)" fg:x="38464" fg:w="67"/><text x="23.6079%" y="1007.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (66 samples, 0.04%)</title><rect x="23.3586%" y="981" width="0.0401%" height="15" fill="rgb(217,61,36)" fg:x="38465" fg:w="66"/><text x="23.6086%" y="991.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (66 samples, 0.04%)</title><rect x="23.3586%" y="965" width="0.0401%" height="15" fill="rgb(206,35,45)" fg:x="38465" fg:w="66"/><text x="23.6086%" y="975.50"></text></g><g><title>write (66 samples, 0.04%)</title><rect x="23.3586%" y="949" width="0.0401%" height="15" fill="rgb(217,65,33)" fg:x="38465" fg:w="66"/><text x="23.6086%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (117 samples, 0.07%)</title><rect x="23.4424%" y="1029" width="0.0711%" height="15" fill="rgb(222,158,48)" fg:x="38603" fg:w="117"/><text x="23.6924%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_swap (117 samples, 0.07%)</title><rect x="23.4424%" y="1013" width="0.0711%" height="15" fill="rgb(254,2,54)" fg:x="38603" fg:w="117"/><text x="23.6924%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (213 samples, 0.13%)</title><rect x="23.3986%" y="1061" width="0.1293%" height="15" fill="rgb(250,143,38)" fg:x="38531" fg:w="213"/><text x="23.6486%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (213 samples, 0.13%)</title><rect x="23.3986%" y="1045" width="0.1293%" height="15" fill="rgb(248,25,0)" fg:x="38531" fg:w="213"/><text x="23.6486%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (20 samples, 0.01%)</title><rect x="23.5158%" y="1029" width="0.0121%" height="15" fill="rgb(206,152,27)" fg:x="38724" fg:w="20"/><text x="23.7658%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (61 samples, 0.04%)</title><rect x="23.5389%" y="1045" width="0.0370%" height="15" fill="rgb(240,77,30)" fg:x="38762" fg:w="61"/><text x="23.7889%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (61 samples, 0.04%)</title><rect x="23.5389%" y="1029" width="0.0370%" height="15" fill="rgb(231,5,3)" fg:x="38762" fg:w="61"/><text x="23.7889%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (90 samples, 0.05%)</title><rect x="23.5280%" y="1061" width="0.0547%" height="15" fill="rgb(207,226,32)" fg:x="38744" fg:w="90"/><text x="23.7780%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (121 samples, 0.07%)</title><rect x="23.6142%" y="1029" width="0.0735%" height="15" fill="rgb(222,207,47)" fg:x="38886" fg:w="121"/><text x="23.8642%" y="1039.50"></text></g><g><title>core::ptr::read (119 samples, 0.07%)</title><rect x="23.6154%" y="1013" width="0.0723%" height="15" fill="rgb(229,115,45)" fg:x="38888" fg:w="119"/><text x="23.8654%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (249 samples, 0.15%)</title><rect x="23.6992%" y="1029" width="0.1512%" height="15" fill="rgb(224,191,6)" fg:x="39026" fg:w="249"/><text x="23.9492%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (241 samples, 0.15%)</title><rect x="23.7041%" y="1013" width="0.1464%" height="15" fill="rgb(230,227,24)" fg:x="39034" fg:w="241"/><text x="23.9541%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (241 samples, 0.15%)</title><rect x="23.7041%" y="997" width="0.1464%" height="15" fill="rgb(228,80,19)" fg:x="39034" fg:w="241"/><text x="23.9541%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (1,415 samples, 0.86%)</title><rect x="22.9954%" y="1157" width="0.8593%" height="15" fill="rgb(247,229,0)" fg:x="37867" fg:w="1415"/><text x="23.2454%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1,409 samples, 0.86%)</title><rect x="22.9991%" y="1141" width="0.8556%" height="15" fill="rgb(237,194,15)" fg:x="37873" fg:w="1409"/><text x="23.2491%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (1,409 samples, 0.86%)</title><rect x="22.9991%" y="1125" width="0.8556%" height="15" fill="rgb(219,203,20)" fg:x="37873" fg:w="1409"/><text x="23.2491%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,409 samples, 0.86%)</title><rect x="22.9991%" y="1109" width="0.8556%" height="15" fill="rgb(234,128,8)" fg:x="37873" fg:w="1409"/><text x="23.2491%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1,361 samples, 0.83%)</title><rect x="23.0282%" y="1093" width="0.8265%" height="15" fill="rgb(248,202,8)" fg:x="37921" fg:w="1361"/><text x="23.2782%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1,314 samples, 0.80%)</title><rect x="23.0567%" y="1077" width="0.7979%" height="15" fill="rgb(206,104,37)" fg:x="37968" fg:w="1314"/><text x="23.3067%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (448 samples, 0.27%)</title><rect x="23.5826%" y="1061" width="0.2721%" height="15" fill="rgb(223,8,27)" fg:x="38834" fg:w="448"/><text x="23.8326%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (396 samples, 0.24%)</title><rect x="23.6142%" y="1045" width="0.2405%" height="15" fill="rgb(216,217,28)" fg:x="38886" fg:w="396"/><text x="23.8642%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (26 samples, 0.02%)</title><rect x="23.8547%" y="1157" width="0.0158%" height="15" fill="rgb(249,199,1)" fg:x="39282" fg:w="26"/><text x="24.1047%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (26 samples, 0.02%)</title><rect x="23.8547%" y="1141" width="0.0158%" height="15" fill="rgb(240,85,17)" fg:x="39282" fg:w="26"/><text x="24.1047%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.02%)</title><rect x="23.8547%" y="1125" width="0.0158%" height="15" fill="rgb(206,108,45)" fg:x="39282" fg:w="26"/><text x="24.1047%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (26 samples, 0.02%)</title><rect x="23.8547%" y="1109" width="0.0158%" height="15" fill="rgb(245,210,41)" fg:x="39282" fg:w="26"/><text x="24.1047%" y="1119.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (31 samples, 0.02%)</title><rect x="23.9549%" y="901" width="0.0188%" height="15" fill="rgb(206,13,37)" fg:x="39447" fg:w="31"/><text x="24.2049%" y="911.50"></text></g><g><title>__rust_alloc (39 samples, 0.02%)</title><rect x="24.8445%" y="757" width="0.0237%" height="15" fill="rgb(250,61,18)" fg:x="40912" fg:w="39"/><text x="25.0945%" y="767.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (39 samples, 0.02%)</title><rect x="24.8445%" y="741" width="0.0237%" height="15" fill="rgb(235,172,48)" fg:x="40912" fg:w="39"/><text x="25.0945%" y="751.50"></text></g><g><title>_rjem_malloc (39 samples, 0.02%)</title><rect x="24.8445%" y="725" width="0.0237%" height="15" fill="rgb(249,201,17)" fg:x="40912" fg:w="39"/><text x="25.0945%" y="735.50"></text></g><g><title>imalloc_fastpath (39 samples, 0.02%)</title><rect x="24.8445%" y="709" width="0.0237%" height="15" fill="rgb(219,208,6)" fg:x="40912" fg:w="39"/><text x="25.0945%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (48 samples, 0.03%)</title><rect x="24.8397%" y="869" width="0.0291%" height="15" fill="rgb(248,31,23)" fg:x="40904" fg:w="48"/><text x="25.0897%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (48 samples, 0.03%)</title><rect x="24.8397%" y="853" width="0.0291%" height="15" fill="rgb(245,15,42)" fg:x="40904" fg:w="48"/><text x="25.0897%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (48 samples, 0.03%)</title><rect x="24.8397%" y="837" width="0.0291%" height="15" fill="rgb(222,217,39)" fg:x="40904" fg:w="48"/><text x="25.0897%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (40 samples, 0.02%)</title><rect x="24.8445%" y="821" width="0.0243%" height="15" fill="rgb(210,219,27)" fg:x="40912" fg:w="40"/><text x="25.0945%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.02%)</title><rect x="24.8445%" y="805" width="0.0243%" height="15" fill="rgb(252,166,36)" fg:x="40912" fg:w="40"/><text x="25.0945%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.02%)</title><rect x="24.8445%" y="789" width="0.0243%" height="15" fill="rgb(245,132,34)" fg:x="40912" fg:w="40"/><text x="25.0945%" y="799.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.02%)</title><rect x="24.8445%" y="773" width="0.0243%" height="15" fill="rgb(236,54,3)" fg:x="40912" fg:w="40"/><text x="25.0945%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (235 samples, 0.14%)</title><rect x="24.8688%" y="869" width="0.1427%" height="15" fill="rgb(241,173,43)" fg:x="40952" fg:w="235"/><text x="25.1188%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (29 samples, 0.02%)</title><rect x="25.3972%" y="805" width="0.0176%" height="15" fill="rgb(215,190,9)" fg:x="41822" fg:w="29"/><text x="25.6472%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (59 samples, 0.04%)</title><rect x="26.2479%" y="693" width="0.0358%" height="15" fill="rgb(242,101,16)" fg:x="43223" fg:w="59"/><text x="26.4979%" y="703.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;fastwebsockets::frame::OpCode&gt; for wisp_mux::ws::OpCode&gt;::from (59 samples, 0.04%)</title><rect x="26.2479%" y="677" width="0.0358%" height="15" fill="rgb(223,190,21)" fg:x="43223" fg:w="59"/><text x="26.4979%" y="687.50"></text></g><g><title>_ZN4core3ptr1946drop_in_place$LT$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h339326f6e65f620aE (20 samples, 0.01%)</title><rect x="26.2947%" y="693" width="0.0121%" height="15" fill="rgb(215,228,25)" fg:x="43300" fg:w="20"/><text x="26.5447%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.01%)</title><rect x="26.9542%" y="677" width="0.0103%" height="15" fill="rgb(225,36,22)" fg:x="44386" fg:w="17"/><text x="27.2042%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (66 samples, 0.04%)</title><rect x="28.0236%" y="629" width="0.0401%" height="15" fill="rgb(251,106,46)" fg:x="46147" fg:w="66"/><text x="28.2736%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (68 samples, 0.04%)</title><rect x="28.0230%" y="645" width="0.0413%" height="15" fill="rgb(208,90,1)" fg:x="46146" fg:w="68"/><text x="28.2730%" y="655.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (141 samples, 0.09%)</title><rect x="28.0649%" y="629" width="0.0856%" height="15" fill="rgb(243,10,4)" fg:x="46215" fg:w="141"/><text x="28.3149%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (83 samples, 0.05%)</title><rect x="28.1001%" y="613" width="0.0504%" height="15" fill="rgb(212,137,27)" fg:x="46273" fg:w="83"/><text x="28.3501%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (62 samples, 0.04%)</title><rect x="28.1129%" y="597" width="0.0377%" height="15" fill="rgb(231,220,49)" fg:x="46294" fg:w="62"/><text x="28.3629%" y="607.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (25 samples, 0.02%)</title><rect x="28.1505%" y="629" width="0.0152%" height="15" fill="rgb(237,96,20)" fg:x="46356" fg:w="25"/><text x="28.4005%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (25 samples, 0.02%)</title><rect x="28.1505%" y="613" width="0.0152%" height="15" fill="rgb(239,229,30)" fg:x="46356" fg:w="25"/><text x="28.4005%" y="623.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (131 samples, 0.08%)</title><rect x="28.2240%" y="597" width="0.0796%" height="15" fill="rgb(219,65,33)" fg:x="46477" fg:w="131"/><text x="28.4740%" y="607.50"></text></g><g><title>[libc.so.6] (870 samples, 0.53%)</title><rect x="28.6533%" y="421" width="0.5283%" height="15" fill="rgb(243,134,7)" fg:x="47184" fg:w="870"/><text x="28.9033%" y="431.50"></text></g><g><title>recv (1,420 samples, 0.86%)</title><rect x="28.4068%" y="437" width="0.8623%" height="15" fill="rgb(216,177,54)" fg:x="46778" fg:w="1420"/><text x="28.6568%" y="447.50"></text></g><g><title>[unknown] (144 samples, 0.09%)</title><rect x="29.1816%" y="421" width="0.0874%" height="15" fill="rgb(211,160,20)" fg:x="48054" fg:w="144"/><text x="29.4316%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,510 samples, 0.92%)</title><rect x="28.4056%" y="565" width="0.9170%" height="15" fill="rgb(239,85,39)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="575.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,510 samples, 0.92%)</title><rect x="28.4056%" y="549" width="0.9170%" height="15" fill="rgb(232,125,22)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="559.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,510 samples, 0.92%)</title><rect x="28.4056%" y="533" width="0.9170%" height="15" fill="rgb(244,57,34)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1,510 samples, 0.92%)</title><rect x="28.4056%" y="517" width="0.9170%" height="15" fill="rgb(214,203,32)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="527.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,510 samples, 0.92%)</title><rect x="28.4056%" y="501" width="0.9170%" height="15" fill="rgb(207,58,43)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="511.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1,510 samples, 0.92%)</title><rect x="28.4056%" y="485" width="0.9170%" height="15" fill="rgb(215,193,15)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="495.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1,510 samples, 0.92%)</title><rect x="28.4056%" y="469" width="0.9170%" height="15" fill="rgb(232,15,44)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="479.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1,510 samples, 0.92%)</title><rect x="28.4056%" y="453" width="0.9170%" height="15" fill="rgb(212,3,48)" fg:x="46776" fg:w="1510"/><text x="28.6556%" y="463.50"></text></g><g><title>std::sys::pal::unix::cvt (88 samples, 0.05%)</title><rect x="29.2691%" y="437" width="0.0534%" height="15" fill="rgb(218,128,7)" fg:x="48198" fg:w="88"/><text x="29.5191%" y="447.50"></text></g><g><title>std::io::error::Error::last_os_error (18 samples, 0.01%)</title><rect x="29.3116%" y="421" width="0.0109%" height="15" fill="rgb(226,216,39)" fg:x="48268" fg:w="18"/><text x="29.5616%" y="431.50"></text></g><g><title>std::sys::pal::unix::os::errno (18 samples, 0.01%)</title><rect x="29.3116%" y="405" width="0.0109%" height="15" fill="rgb(243,47,51)" fg:x="48268" fg:w="18"/><text x="29.5616%" y="415.50"></text></g><g><title>__errno_location (18 samples, 0.01%)</title><rect x="29.3116%" y="389" width="0.0109%" height="15" fill="rgb(241,183,40)" fg:x="48268" fg:w="18"/><text x="29.5616%" y="399.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (43 samples, 0.03%)</title><rect x="29.3450%" y="565" width="0.0261%" height="15" fill="rgb(231,217,32)" fg:x="48323" fg:w="43"/><text x="29.5950%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (30 samples, 0.02%)</title><rect x="29.3711%" y="565" width="0.0182%" height="15" fill="rgb(229,61,38)" fg:x="48366" fg:w="30"/><text x="29.6211%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (29 samples, 0.02%)</title><rect x="29.3717%" y="549" width="0.0176%" height="15" fill="rgb(225,210,5)" fg:x="48367" fg:w="29"/><text x="29.6217%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (29 samples, 0.02%)</title><rect x="29.3717%" y="533" width="0.0176%" height="15" fill="rgb(231,79,45)" fg:x="48367" fg:w="29"/><text x="29.6217%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (18 samples, 0.01%)</title><rect x="29.3784%" y="517" width="0.0109%" height="15" fill="rgb(224,100,7)" fg:x="48378" fg:w="18"/><text x="29.6284%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (18 samples, 0.01%)</title><rect x="29.3784%" y="501" width="0.0109%" height="15" fill="rgb(241,198,18)" fg:x="48378" fg:w="18"/><text x="29.6284%" y="511.50"></text></g><g><title>core::slice::index::get_offset_len_mut_noubcheck (18 samples, 0.01%)</title><rect x="29.3784%" y="485" width="0.0109%" height="15" fill="rgb(252,97,53)" fg:x="48378" fg:w="18"/><text x="29.6284%" y="495.50"></text></g><g><title>core::slice::index::get_mut_noubcheck (18 samples, 0.01%)</title><rect x="29.3784%" y="469" width="0.0109%" height="15" fill="rgb(220,88,7)" fg:x="48378" fg:w="18"/><text x="29.6284%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (310 samples, 0.19%)</title><rect x="29.3966%" y="517" width="0.1883%" height="15" fill="rgb(213,176,14)" fg:x="48408" fg:w="310"/><text x="29.6466%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (310 samples, 0.19%)</title><rect x="29.3966%" y="501" width="0.1883%" height="15" fill="rgb(246,73,7)" fg:x="48408" fg:w="310"/><text x="29.6466%" y="511.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (415 samples, 0.25%)</title><rect x="29.3893%" y="565" width="0.2520%" height="15" fill="rgb(245,64,36)" fg:x="48396" fg:w="415"/><text x="29.6393%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (415 samples, 0.25%)</title><rect x="29.3893%" y="549" width="0.2520%" height="15" fill="rgb(245,80,10)" fg:x="48396" fg:w="415"/><text x="29.6393%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (410 samples, 0.25%)</title><rect x="29.3924%" y="533" width="0.2490%" height="15" fill="rgb(232,107,50)" fg:x="48401" fg:w="410"/><text x="29.6424%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93 samples, 0.06%)</title><rect x="29.5849%" y="517" width="0.0565%" height="15" fill="rgb(253,3,0)" fg:x="48718" fg:w="93"/><text x="29.8349%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (93 samples, 0.06%)</title><rect x="29.5849%" y="501" width="0.0565%" height="15" fill="rgb(212,99,53)" fg:x="48718" fg:w="93"/><text x="29.8349%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.01%)</title><rect x="29.6875%" y="485" width="0.0134%" height="15" fill="rgb(249,111,54)" fg:x="48887" fg:w="22"/><text x="29.9375%" y="495.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (22 samples, 0.01%)</title><rect x="29.6875%" y="469" width="0.0134%" height="15" fill="rgb(249,55,30)" fg:x="48887" fg:w="22"/><text x="29.9375%" y="479.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (22 samples, 0.01%)</title><rect x="29.6875%" y="453" width="0.0134%" height="15" fill="rgb(237,47,42)" fg:x="48887" fg:w="22"/><text x="29.9375%" y="463.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (52 samples, 0.03%)</title><rect x="29.6875%" y="533" width="0.0316%" height="15" fill="rgb(211,20,18)" fg:x="48887" fg:w="52"/><text x="29.9375%" y="543.50"></text></g><g><title>tokio::runtime::context::budget (52 samples, 0.03%)</title><rect x="29.6875%" y="517" width="0.0316%" height="15" fill="rgb(231,203,46)" fg:x="48887" fg:w="52"/><text x="29.9375%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (52 samples, 0.03%)</title><rect x="29.6875%" y="501" width="0.0316%" height="15" fill="rgb(237,142,3)" fg:x="48887" fg:w="52"/><text x="29.9375%" y="511.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (30 samples, 0.02%)</title><rect x="29.7009%" y="485" width="0.0182%" height="15" fill="rgb(241,107,1)" fg:x="48909" fg:w="30"/><text x="29.9509%" y="495.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (30 samples, 0.02%)</title><rect x="29.7009%" y="469" width="0.0182%" height="15" fill="rgb(229,83,13)" fg:x="48909" fg:w="30"/><text x="29.9509%" y="479.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (77 samples, 0.05%)</title><rect x="29.7428%" y="517" width="0.0468%" height="15" fill="rgb(241,91,40)" fg:x="48978" fg:w="77"/><text x="29.9928%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (70 samples, 0.04%)</title><rect x="29.7470%" y="501" width="0.0425%" height="15" fill="rgb(225,3,45)" fg:x="48985" fg:w="70"/><text x="29.9970%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (66 samples, 0.04%)</title><rect x="29.7494%" y="485" width="0.0401%" height="15" fill="rgb(244,223,14)" fg:x="48989" fg:w="66"/><text x="29.9994%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (62 samples, 0.04%)</title><rect x="29.7519%" y="469" width="0.0377%" height="15" fill="rgb(224,124,37)" fg:x="48993" fg:w="62"/><text x="30.0019%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (62 samples, 0.04%)</title><rect x="29.7519%" y="453" width="0.0377%" height="15" fill="rgb(251,171,30)" fg:x="48993" fg:w="62"/><text x="30.0019%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (60 samples, 0.04%)</title><rect x="29.7938%" y="517" width="0.0364%" height="15" fill="rgb(236,46,54)" fg:x="49062" fg:w="60"/><text x="30.0438%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (60 samples, 0.04%)</title><rect x="29.7938%" y="501" width="0.0364%" height="15" fill="rgb(245,213,5)" fg:x="49062" fg:w="60"/><text x="30.0438%" y="511.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.04%)</title><rect x="29.7938%" y="485" width="0.0364%" height="15" fill="rgb(230,144,27)" fg:x="49062" fg:w="60"/><text x="30.0438%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (60 samples, 0.04%)</title><rect x="29.7938%" y="469" width="0.0364%" height="15" fill="rgb(220,86,6)" fg:x="49062" fg:w="60"/><text x="30.0438%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (59 samples, 0.04%)</title><rect x="29.7944%" y="453" width="0.0358%" height="15" fill="rgb(240,20,13)" fg:x="49063" fg:w="59"/><text x="30.0444%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.04%)</title><rect x="29.7944%" y="437" width="0.0358%" height="15" fill="rgb(217,89,34)" fg:x="49063" fg:w="59"/><text x="30.0444%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (168 samples, 0.10%)</title><rect x="29.8302%" y="517" width="0.1020%" height="15" fill="rgb(229,13,5)" fg:x="49122" fg:w="168"/><text x="30.0802%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (168 samples, 0.10%)</title><rect x="29.8302%" y="501" width="0.1020%" height="15" fill="rgb(244,67,35)" fg:x="49122" fg:w="168"/><text x="30.0802%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (82 samples, 0.05%)</title><rect x="29.9322%" y="517" width="0.0498%" height="15" fill="rgb(221,40,2)" fg:x="49290" fg:w="82"/><text x="30.1822%" y="527.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (82 samples, 0.05%)</title><rect x="29.9322%" y="501" width="0.0498%" height="15" fill="rgb(237,157,21)" fg:x="49290" fg:w="82"/><text x="30.1822%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (82 samples, 0.05%)</title><rect x="29.9322%" y="485" width="0.0498%" height="15" fill="rgb(222,94,11)" fg:x="49290" fg:w="82"/><text x="30.1822%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (82 samples, 0.05%)</title><rect x="29.9322%" y="469" width="0.0498%" height="15" fill="rgb(249,113,6)" fg:x="49290" fg:w="82"/><text x="30.1822%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (82 samples, 0.05%)</title><rect x="29.9322%" y="453" width="0.0498%" height="15" fill="rgb(238,137,36)" fg:x="49290" fg:w="82"/><text x="30.1822%" y="463.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (3,010 samples, 1.83%)</title><rect x="28.1657%" y="629" width="1.8279%" height="15" fill="rgb(210,102,26)" fg:x="46381" fg:w="3010"/><text x="28.4157%" y="639.50">&lt;..</text></g><g><title>&lt;tokio::io::util::chain::Chain&lt;T,U&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3,002 samples, 1.82%)</title><rect x="28.1705%" y="613" width="1.8230%" height="15" fill="rgb(218,30,30)" fg:x="46389" fg:w="3002"/><text x="28.4205%" y="623.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2,783 samples, 1.69%)</title><rect x="28.3035%" y="597" width="1.6900%" height="15" fill="rgb(214,67,26)" fg:x="46608" fg:w="2783"/><text x="28.5535%" y="607.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2,664 samples, 1.62%)</title><rect x="28.3758%" y="581" width="1.6178%" height="15" fill="rgb(251,9,53)" fg:x="46727" fg:w="2664"/><text x="28.6258%" y="591.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (580 samples, 0.35%)</title><rect x="29.6413%" y="565" width="0.3522%" height="15" fill="rgb(228,204,25)" fg:x="48811" fg:w="580"/><text x="29.8913%" y="575.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (565 samples, 0.34%)</title><rect x="29.6505%" y="549" width="0.3431%" height="15" fill="rgb(207,153,8)" fg:x="48826" fg:w="565"/><text x="29.9005%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (452 samples, 0.27%)</title><rect x="29.7191%" y="533" width="0.2745%" height="15" fill="rgb(242,9,16)" fg:x="48939" fg:w="452"/><text x="29.9691%" y="543.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.02%)</title><rect x="29.9936%" y="629" width="0.0152%" height="15" fill="rgb(217,211,10)" fg:x="49391" fg:w="25"/><text x="30.2436%" y="639.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (65 samples, 0.04%)</title><rect x="30.0087%" y="629" width="0.0395%" height="15" fill="rgb(219,228,52)" fg:x="49416" fg:w="65"/><text x="30.2587%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (62 samples, 0.04%)</title><rect x="30.0106%" y="613" width="0.0377%" height="15" fill="rgb(231,92,29)" fg:x="49419" fg:w="62"/><text x="30.2606%" y="623.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (50 samples, 0.03%)</title><rect x="30.0179%" y="597" width="0.0304%" height="15" fill="rgb(232,8,23)" fg:x="49431" fg:w="50"/><text x="30.2679%" y="607.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (22 samples, 0.01%)</title><rect x="30.0525%" y="629" width="0.0134%" height="15" fill="rgb(216,211,34)" fg:x="49488" fg:w="22"/><text x="30.3025%" y="639.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (3,311 samples, 2.01%)</title><rect x="28.0649%" y="645" width="2.0107%" height="15" fill="rgb(236,151,0)" fg:x="46215" fg:w="3311"/><text x="28.3149%" y="655.50">&lt;..</text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (29 samples, 0.02%)</title><rect x="30.0840%" y="629" width="0.0176%" height="15" fill="rgb(209,168,3)" fg:x="49540" fg:w="29"/><text x="30.3340%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (28 samples, 0.02%)</title><rect x="30.0847%" y="613" width="0.0170%" height="15" fill="rgb(208,129,28)" fg:x="49541" fg:w="28"/><text x="30.3347%" y="623.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (50 samples, 0.03%)</title><rect x="30.0755%" y="645" width="0.0304%" height="15" fill="rgb(229,78,22)" fg:x="49526" fg:w="50"/><text x="30.3255%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (47 samples, 0.03%)</title><rect x="30.1229%" y="629" width="0.0285%" height="15" fill="rgb(228,187,13)" fg:x="49604" fg:w="47"/><text x="30.3729%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (47 samples, 0.03%)</title><rect x="30.1229%" y="613" width="0.0285%" height="15" fill="rgb(240,119,24)" fg:x="49604" fg:w="47"/><text x="30.3729%" y="623.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32 (82 samples, 0.05%)</title><rect x="30.1059%" y="645" width="0.0498%" height="15" fill="rgb(209,194,42)" fg:x="49576" fg:w="82"/><text x="30.3559%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6,989 samples, 4.24%)</title><rect x="30.2104%" y="613" width="4.2442%" height="15" fill="rgb(247,200,46)" fg:x="49748" fg:w="6989"/><text x="30.4604%" y="623.50">alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6,989 samples, 4.24%)</title><rect x="30.2104%" y="597" width="4.2442%" height="15" fill="rgb(218,76,16)" fg:x="49748" fg:w="6989"/><text x="30.4604%" y="607.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6,989 samples, 4.24%)</title><rect x="30.2104%" y="581" width="4.2442%" height="15" fill="rgb(225,21,48)" fg:x="49748" fg:w="6989"/><text x="30.4604%" y="591.50">alloc..</text></g><g><title>core::intrinsics::copy_nonoverlapping (6,975 samples, 4.24%)</title><rect x="30.2189%" y="565" width="4.2357%" height="15" fill="rgb(239,223,50)" fg:x="49762" fg:w="6975"/><text x="30.4689%" y="575.50">core:..</text></g><g><title>[libc.so.6] (6,975 samples, 4.24%)</title><rect x="30.2189%" y="549" width="4.2357%" height="15" fill="rgb(244,45,21)" fg:x="49762" fg:w="6975"/><text x="30.4689%" y="559.50">[libc..</text></g><g><title>sz_index2size (114 samples, 0.07%)</title><rect x="34.5189%" y="389" width="0.0692%" height="15" fill="rgb(232,33,43)" fg:x="56843" fg:w="114"/><text x="34.7689%" y="399.50"></text></g><g><title>sz_index2size_lookup (114 samples, 0.07%)</title><rect x="34.5189%" y="373" width="0.0692%" height="15" fill="rgb(209,8,3)" fg:x="56843" fg:w="114"/><text x="34.7689%" y="383.50"></text></g><g><title>sz_index2size_lookup_impl (114 samples, 0.07%)</title><rect x="34.5189%" y="357" width="0.0692%" height="15" fill="rgb(214,25,53)" fg:x="56843" fg:w="114"/><text x="34.7689%" y="367.50"></text></g><g><title>aligned_usize_get (188 samples, 0.11%)</title><rect x="34.5183%" y="405" width="0.1142%" height="15" fill="rgb(254,186,54)" fg:x="56842" fg:w="188"/><text x="34.7683%" y="415.50"></text></g><g><title>sz_size2index (73 samples, 0.04%)</title><rect x="34.5882%" y="389" width="0.0443%" height="15" fill="rgb(208,174,49)" fg:x="56957" fg:w="73"/><text x="34.8382%" y="399.50"></text></g><g><title>sz_size2index_compute (65 samples, 0.04%)</title><rect x="34.5930%" y="373" width="0.0395%" height="15" fill="rgb(233,191,51)" fg:x="56965" fg:w="65"/><text x="34.8430%" y="383.50"></text></g><g><title>arena_choose_maybe_huge (82 samples, 0.05%)</title><rect x="34.7054%" y="341" width="0.0498%" height="15" fill="rgb(222,134,10)" fg:x="57150" fg:w="82"/><text x="34.9554%" y="351.50"></text></g><g><title>arena_choose (41 samples, 0.02%)</title><rect x="34.7303%" y="325" width="0.0249%" height="15" fill="rgb(230,226,20)" fg:x="57191" fg:w="41"/><text x="34.9803%" y="335.50"></text></g><g><title>arena_choose_impl (41 samples, 0.02%)</title><rect x="34.7303%" y="309" width="0.0249%" height="15" fill="rgb(251,111,25)" fg:x="57191" fg:w="41"/><text x="34.9803%" y="319.50"></text></g><g><title>_rjem_je_arena_malloc_hard (158 samples, 0.10%)</title><rect x="34.6641%" y="357" width="0.0959%" height="15" fill="rgb(224,40,46)" fg:x="57082" fg:w="158"/><text x="34.9141%" y="367.50"></text></g><g><title>_rjem_je_large_malloc (25 samples, 0.02%)</title><rect x="34.7600%" y="357" width="0.0152%" height="15" fill="rgb(236,108,47)" fg:x="57240" fg:w="25"/><text x="35.0100%" y="367.50"></text></g><g><title>_rjem_je_arena_get_ehooks (97 samples, 0.06%)</title><rect x="34.8833%" y="325" width="0.0589%" height="15" fill="rgb(234,93,0)" fg:x="57443" fg:w="97"/><text x="35.1333%" y="335.50"></text></g><g><title>rtree_leaf_elm_lookup (18 samples, 0.01%)</title><rect x="35.0333%" y="277" width="0.0109%" height="15" fill="rgb(224,213,32)" fg:x="57690" fg:w="18"/><text x="35.2833%" y="287.50"></text></g><g><title>_rjem_je_emap_remap (92 samples, 0.06%)</title><rect x="34.9993%" y="309" width="0.0559%" height="15" fill="rgb(251,11,48)" fg:x="57634" fg:w="92"/><text x="35.2493%" y="319.50"></text></g><g><title>rtree_write (37 samples, 0.02%)</title><rect x="35.0327%" y="293" width="0.0225%" height="15" fill="rgb(236,173,5)" fg:x="57689" fg:w="37"/><text x="35.2827%" y="303.50"></text></g><g><title>rtree_leaf_elm_write (18 samples, 0.01%)</title><rect x="35.0442%" y="277" width="0.0109%" height="15" fill="rgb(230,95,12)" fg:x="57708" fg:w="18"/><text x="35.2942%" y="287.50"></text></g><g><title>rtree_contents_encode (18 samples, 0.01%)</title><rect x="35.0442%" y="261" width="0.0109%" height="15" fill="rgb(232,209,1)" fg:x="57708" fg:w="18"/><text x="35.2942%" y="271.50"></text></g><g><title>rtree_leaf_elm_bits_encode (18 samples, 0.01%)</title><rect x="35.0442%" y="245" width="0.0109%" height="15" fill="rgb(232,6,1)" fg:x="57708" fg:w="18"/><text x="35.2942%" y="255.50"></text></g><g><title>pa_nactive_add (99 samples, 0.06%)</title><rect x="35.0697%" y="309" width="0.0601%" height="15" fill="rgb(210,224,50)" fg:x="57750" fg:w="99"/><text x="35.3197%" y="319.50"></text></g><g><title>atomic_fetch_add_zu (99 samples, 0.06%)</title><rect x="35.0697%" y="293" width="0.0601%" height="15" fill="rgb(228,127,35)" fg:x="57750" fg:w="99"/><text x="35.3197%" y="303.50"></text></g><g><title>pa_shard_uses_hpa (114 samples, 0.07%)</title><rect x="35.1298%" y="309" width="0.0692%" height="15" fill="rgb(245,102,45)" fg:x="57849" fg:w="114"/><text x="35.3798%" y="319.50"></text></g><g><title>atomic_load_b (114 samples, 0.07%)</title><rect x="35.1298%" y="293" width="0.0692%" height="15" fill="rgb(214,1,49)" fg:x="57849" fg:w="114"/><text x="35.3798%" y="303.50"></text></g><g><title>phn_merge_siblings (22 samples, 0.01%)</title><rect x="35.8434%" y="133" width="0.0134%" height="15" fill="rgb(226,163,40)" fg:x="59024" fg:w="22"/><text x="36.0934%" y="143.50"></text></g><g><title>phn_merge (20 samples, 0.01%)</title><rect x="35.8446%" y="117" width="0.0121%" height="15" fill="rgb(239,212,28)" fg:x="59026" fg:w="20"/><text x="36.0946%" y="127.50"></text></g><g><title>edata_heap_ph_cmp (20 samples, 0.01%)</title><rect x="35.8446%" y="101" width="0.0121%" height="15" fill="rgb(220,20,13)" fg:x="59026" fg:w="20"/><text x="36.0946%" y="111.50"></text></g><g><title>edata_snad_comp (20 samples, 0.01%)</title><rect x="35.8446%" y="85" width="0.0121%" height="15" fill="rgb(210,164,35)" fg:x="59026" fg:w="20"/><text x="36.0946%" y="95.50"></text></g><g><title>edata_cmp_summary_get (20 samples, 0.01%)</title><rect x="35.8446%" y="69" width="0.0121%" height="15" fill="rgb(248,109,41)" fg:x="59026" fg:w="20"/><text x="36.0946%" y="79.50"></text></g><g><title>edata_sn_get (20 samples, 0.01%)</title><rect x="35.8446%" y="53" width="0.0121%" height="15" fill="rgb(238,23,50)" fg:x="59026" fg:w="20"/><text x="36.0946%" y="63.50"></text></g><g><title>phn_next_get (296 samples, 0.18%)</title><rect x="35.8567%" y="133" width="0.1798%" height="15" fill="rgb(211,48,49)" fg:x="59046" fg:w="296"/><text x="36.1067%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_first (531 samples, 0.32%)</title><rect x="35.7146%" y="181" width="0.3225%" height="15" fill="rgb(223,36,21)" fg:x="58812" fg:w="531"/><text x="35.9646%" y="191.50"></text></g><g><title>ph_first (488 samples, 0.30%)</title><rect x="35.7407%" y="165" width="0.2963%" height="15" fill="rgb(207,123,46)" fg:x="58855" fg:w="488"/><text x="35.9907%" y="175.50"></text></g><g><title>ph_merge_aux (354 samples, 0.21%)</title><rect x="35.8221%" y="149" width="0.2150%" height="15" fill="rgb(240,218,32)" fg:x="58989" fg:w="354"/><text x="36.0721%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (67 samples, 0.04%)</title><rect x="36.0371%" y="181" width="0.0407%" height="15" fill="rgb(252,5,43)" fg:x="59343" fg:w="67"/><text x="36.2871%" y="191.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (54 samples, 0.03%)</title><rect x="36.0450%" y="165" width="0.0328%" height="15" fill="rgb(252,84,19)" fg:x="59356" fg:w="54"/><text x="36.2950%" y="175.50"></text></g><g><title>sz_psz2ind (35 samples, 0.02%)</title><rect x="36.0565%" y="149" width="0.0213%" height="15" fill="rgb(243,152,39)" fg:x="59375" fg:w="35"/><text x="36.3065%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (248 samples, 0.15%)</title><rect x="36.0778%" y="181" width="0.1506%" height="15" fill="rgb(234,160,15)" fg:x="59410" fg:w="248"/><text x="36.3278%" y="191.50"></text></g><g><title>fb_ffs (259 samples, 0.16%)</title><rect x="36.2284%" y="181" width="0.1573%" height="15" fill="rgb(237,34,20)" fg:x="59658" fg:w="259"/><text x="36.4784%" y="191.50"></text></g><g><title>fb_find_impl (259 samples, 0.16%)</title><rect x="36.2284%" y="165" width="0.1573%" height="15" fill="rgb(229,97,13)" fg:x="59658" fg:w="259"/><text x="36.4784%" y="175.50"></text></g><g><title>ffs_lu (27 samples, 0.02%)</title><rect x="36.3693%" y="149" width="0.0164%" height="15" fill="rgb(234,71,50)" fg:x="59890" fg:w="27"/><text x="36.6193%" y="159.50"></text></g><g><title>_rjem_je_eset_fit (1,584 samples, 0.96%)</title><rect x="35.4456%" y="213" width="0.9619%" height="15" fill="rgb(253,155,4)" fg:x="58369" fg:w="1584"/><text x="35.6956%" y="223.50"></text></g><g><title>eset_first_fit (1,546 samples, 0.94%)</title><rect x="35.4687%" y="197" width="0.9388%" height="15" fill="rgb(222,185,37)" fg:x="58407" fg:w="1546"/><text x="35.7187%" y="207.50"></text></g><g><title>sz_psz2ind (33 samples, 0.02%)</title><rect x="36.3875%" y="181" width="0.0200%" height="15" fill="rgb(251,177,13)" fg:x="59920" fg:w="33"/><text x="36.6375%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (52 samples, 0.03%)</title><rect x="36.4792%" y="181" width="0.0316%" height="15" fill="rgb(250,179,40)" fg:x="60071" fg:w="52"/><text x="36.7292%" y="191.50"></text></g><g><title>_rjem_je_emap_update_edata_state (379 samples, 0.23%)</title><rect x="36.4391%" y="197" width="0.2302%" height="15" fill="rgb(242,44,2)" fg:x="60005" fg:w="379"/><text x="36.6891%" y="207.50"></text></g><g><title>rtree_leaf_elm_state_update (261 samples, 0.16%)</title><rect x="36.5108%" y="181" width="0.1585%" height="15" fill="rgb(216,177,13)" fg:x="60123" fg:w="261"/><text x="36.7608%" y="191.50"></text></g><g><title>rtree_leaf_elm_bits_read (239 samples, 0.15%)</title><rect x="36.5241%" y="165" width="0.1451%" height="15" fill="rgb(216,106,43)" fg:x="60145" fg:w="239"/><text x="36.7741%" y="175.50"></text></g><g><title>atomic_load_p (239 samples, 0.15%)</title><rect x="36.5241%" y="149" width="0.1451%" height="15" fill="rgb(216,183,2)" fg:x="60145" fg:w="239"/><text x="36.7741%" y="159.50"></text></g><g><title>phn_next_get (61 samples, 0.04%)</title><rect x="36.7427%" y="117" width="0.0370%" height="15" fill="rgb(249,75,3)" fg:x="60505" fg:w="61"/><text x="36.9927%" y="127.50"></text></g><g><title>ph_merge_children (75 samples, 0.05%)</title><rect x="36.7348%" y="149" width="0.0455%" height="15" fill="rgb(219,67,39)" fg:x="60492" fg:w="75"/><text x="36.9848%" y="159.50"></text></g><g><title>phn_merge_siblings (75 samples, 0.05%)</title><rect x="36.7348%" y="133" width="0.0455%" height="15" fill="rgb(253,228,2)" fg:x="60492" fg:w="75"/><text x="36.9848%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_remove (119 samples, 0.07%)</title><rect x="36.7087%" y="181" width="0.0723%" height="15" fill="rgb(235,138,27)" fg:x="60449" fg:w="119"/><text x="36.9587%" y="191.50"></text></g><g><title>ph_remove (101 samples, 0.06%)</title><rect x="36.7197%" y="165" width="0.0613%" height="15" fill="rgb(236,97,51)" fg:x="60467" fg:w="101"/><text x="36.9697%" y="175.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (77 samples, 0.05%)</title><rect x="36.7810%" y="181" width="0.0468%" height="15" fill="rgb(240,80,30)" fg:x="60568" fg:w="77"/><text x="37.0310%" y="191.50"></text></g><g><title>sz_psz2ind (38 samples, 0.02%)</title><rect x="36.8047%" y="165" width="0.0231%" height="15" fill="rgb(230,178,19)" fg:x="60607" fg:w="38"/><text x="37.0547%" y="175.50"></text></g><g><title>edata_list_inactive_remove (201 samples, 0.12%)</title><rect x="36.8423%" y="181" width="0.1221%" height="15" fill="rgb(210,190,27)" fg:x="60669" fg:w="201"/><text x="37.0923%" y="191.50"></text></g><g><title>atomic_load_zu (246 samples, 0.15%)</title><rect x="36.9699%" y="165" width="0.1494%" height="15" fill="rgb(222,107,31)" fg:x="60879" fg:w="246"/><text x="37.2199%" y="175.50"></text></g><g><title>eset_stats_sub (261 samples, 0.16%)</title><rect x="36.9699%" y="181" width="0.1585%" height="15" fill="rgb(216,127,34)" fg:x="60879" fg:w="261"/><text x="37.2199%" y="191.50"></text></g><g><title>extent_recycle_extract (2,916 samples, 1.77%)</title><rect x="35.3989%" y="229" width="1.7708%" height="15" fill="rgb(234,116,52)" fg:x="58292" fg:w="2916"/><text x="35.6489%" y="239.50">e..</text></g><g><title>extent_activate_locked (1,255 samples, 0.76%)</title><rect x="36.4075%" y="213" width="0.7621%" height="15" fill="rgb(222,124,15)" fg:x="59953" fg:w="1255"/><text x="36.6575%" y="223.50"></text></g><g><title>_rjem_je_eset_remove (824 samples, 0.50%)</title><rect x="36.6693%" y="197" width="0.5004%" height="15" fill="rgb(231,179,28)" fg:x="60384" fg:w="824"/><text x="36.9193%" y="207.50"></text></g><g><title>sz_psz2ind (59 samples, 0.04%)</title><rect x="37.1338%" y="181" width="0.0358%" height="15" fill="rgb(226,93,45)" fg:x="61149" fg:w="59"/><text x="37.3838%" y="191.50"></text></g><g><title>rtree_leafkey (19 samples, 0.01%)</title><rect x="37.2255%" y="149" width="0.0115%" height="15" fill="rgb(215,8,51)" fg:x="61300" fg:w="19"/><text x="37.4755%" y="159.50"></text></g><g><title>rtree_leaf_elm_lookup (37 samples, 0.02%)</title><rect x="37.2170%" y="165" width="0.0225%" height="15" fill="rgb(223,106,5)" fg:x="61286" fg:w="37"/><text x="37.4670%" y="175.50"></text></g><g><title>_rjem_je_emap_update_edata_state (87 samples, 0.05%)</title><rect x="37.1915%" y="181" width="0.0528%" height="15" fill="rgb(250,191,5)" fg:x="61244" fg:w="87"/><text x="37.4415%" y="191.50"></text></g><g><title>_rjem_je_edata_heap_empty (85 samples, 0.05%)</title><rect x="37.2941%" y="165" width="0.0516%" height="15" fill="rgb(242,132,44)" fg:x="61413" fg:w="85"/><text x="37.5441%" y="175.50"></text></g><g><title>edata_heap_ph_cmp (72 samples, 0.04%)</title><rect x="37.3719%" y="133" width="0.0437%" height="15" fill="rgb(251,152,29)" fg:x="61541" fg:w="72"/><text x="37.6219%" y="143.50"></text></g><g><title>edata_snad_comp (72 samples, 0.04%)</title><rect x="37.3719%" y="117" width="0.0437%" height="15" fill="rgb(218,179,5)" fg:x="61541" fg:w="72"/><text x="37.6219%" y="127.50"></text></g><g><title>edata_cmp_summary_get (66 samples, 0.04%)</title><rect x="37.3755%" y="101" width="0.0401%" height="15" fill="rgb(227,67,19)" fg:x="61547" fg:w="66"/><text x="37.6255%" y="111.50"></text></g><g><title>edata_sn_get (65 samples, 0.04%)</title><rect x="37.3761%" y="85" width="0.0395%" height="15" fill="rgb(233,119,31)" fg:x="61548" fg:w="65"/><text x="37.6261%" y="95.50"></text></g><g><title>_rjem_je_edata_heap_insert (143 samples, 0.09%)</title><rect x="37.3458%" y="165" width="0.0868%" height="15" fill="rgb(241,120,22)" fg:x="61498" fg:w="143"/><text x="37.5958%" y="175.50"></text></g><g><title>ph_insert (133 samples, 0.08%)</title><rect x="37.3518%" y="149" width="0.0808%" height="15" fill="rgb(224,102,30)" fg:x="61508" fg:w="133"/><text x="37.6018%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (52 samples, 0.03%)</title><rect x="37.4326%" y="165" width="0.0316%" height="15" fill="rgb(210,164,37)" fg:x="61641" fg:w="52"/><text x="37.6826%" y="175.50"></text></g><g><title>sz_psz2ind (20 samples, 0.01%)</title><rect x="37.4520%" y="149" width="0.0121%" height="15" fill="rgb(226,191,16)" fg:x="61673" fg:w="20"/><text x="37.7020%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (23 samples, 0.01%)</title><rect x="37.4666%" y="165" width="0.0140%" height="15" fill="rgb(214,40,45)" fg:x="61697" fg:w="23"/><text x="37.7166%" y="175.50"></text></g><g><title>edata_list_inactive_append (110 samples, 0.07%)</title><rect x="37.4872%" y="165" width="0.0668%" height="15" fill="rgb(244,29,26)" fg:x="61731" fg:w="110"/><text x="37.7372%" y="175.50"></text></g><g><title>atomic_load_zu (67 samples, 0.04%)</title><rect x="37.5577%" y="149" width="0.0407%" height="15" fill="rgb(216,16,5)" fg:x="61847" fg:w="67"/><text x="37.8077%" y="159.50"></text></g><g><title>eset_stats_add (81 samples, 0.05%)</title><rect x="37.5540%" y="165" width="0.0492%" height="15" fill="rgb(249,76,35)" fg:x="61841" fg:w="81"/><text x="37.8040%" y="175.50"></text></g><g><title>fb_set (17 samples, 0.01%)</title><rect x="37.6032%" y="165" width="0.0103%" height="15" fill="rgb(207,11,44)" fg:x="61922" fg:w="17"/><text x="37.8532%" y="175.50"></text></g><g><title>extent_deactivate_locked (807 samples, 0.49%)</title><rect x="37.1696%" y="213" width="0.4901%" height="15" fill="rgb(228,190,49)" fg:x="61208" fg:w="807"/><text x="37.4196%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (807 samples, 0.49%)</title><rect x="37.1696%" y="197" width="0.4901%" height="15" fill="rgb(214,173,12)" fg:x="61208" fg:w="807"/><text x="37.4196%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (684 samples, 0.42%)</title><rect x="37.2443%" y="181" width="0.4154%" height="15" fill="rgb(218,26,35)" fg:x="61331" fg:w="684"/><text x="37.4943%" y="191.50"></text></g><g><title>sz_psz2ind (76 samples, 0.05%)</title><rect x="37.6136%" y="165" width="0.0462%" height="15" fill="rgb(220,200,19)" fg:x="61939" fg:w="76"/><text x="37.8636%" y="175.50"></text></g><g><title>edata_avail_ph_cmp (55 samples, 0.03%)</title><rect x="37.8619%" y="85" width="0.0334%" height="15" fill="rgb(239,95,49)" fg:x="62348" fg:w="55"/><text x="38.1119%" y="95.50"></text></g><g><title>edata_esnead_comp (55 samples, 0.03%)</title><rect x="37.8619%" y="69" width="0.0334%" height="15" fill="rgb(235,85,53)" fg:x="62348" fg:w="55"/><text x="38.1119%" y="79.50"></text></g><g><title>edata_esn_comp (52 samples, 0.03%)</title><rect x="37.8638%" y="53" width="0.0316%" height="15" fill="rgb(233,133,31)" fg:x="62351" fg:w="52"/><text x="38.1138%" y="63.50"></text></g><g><title>edata_esn_get (52 samples, 0.03%)</title><rect x="37.8638%" y="37" width="0.0316%" height="15" fill="rgb(218,25,20)" fg:x="62351" fg:w="52"/><text x="38.1138%" y="47.50"></text></g><g><title>phn_merge (69 samples, 0.04%)</title><rect x="37.8613%" y="101" width="0.0419%" height="15" fill="rgb(252,210,38)" fg:x="62347" fg:w="69"/><text x="38.1113%" y="111.50"></text></g><g><title>phn_next_get (68 samples, 0.04%)</title><rect x="37.9032%" y="101" width="0.0413%" height="15" fill="rgb(242,134,21)" fg:x="62416" fg:w="68"/><text x="38.1532%" y="111.50"></text></g><g><title>phn_merge_siblings (149 samples, 0.09%)</title><rect x="37.8571%" y="117" width="0.0905%" height="15" fill="rgb(213,28,48)" fg:x="62340" fg:w="149"/><text x="38.1071%" y="127.50"></text></g><g><title>phn_next_get (28 samples, 0.02%)</title><rect x="37.9476%" y="117" width="0.0170%" height="15" fill="rgb(250,196,2)" fg:x="62489" fg:w="28"/><text x="38.1976%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_first (242 samples, 0.15%)</title><rect x="37.8188%" y="165" width="0.1470%" height="15" fill="rgb(227,5,17)" fg:x="62277" fg:w="242"/><text x="38.0688%" y="175.50"></text></g><g><title>ph_first (221 samples, 0.13%)</title><rect x="37.8316%" y="149" width="0.1342%" height="15" fill="rgb(221,226,24)" fg:x="62298" fg:w="221"/><text x="38.0816%" y="159.50"></text></g><g><title>ph_merge_aux (206 samples, 0.13%)</title><rect x="37.8407%" y="133" width="0.1251%" height="15" fill="rgb(211,5,48)" fg:x="62313" fg:w="206"/><text x="38.0907%" y="143.50"></text></g><g><title>edata_avail_ph_cmp (71 samples, 0.04%)</title><rect x="38.0423%" y="85" width="0.0431%" height="15" fill="rgb(219,150,6)" fg:x="62645" fg:w="71"/><text x="38.2923%" y="95.50"></text></g><g><title>edata_esnead_comp (71 samples, 0.04%)</title><rect x="38.0423%" y="69" width="0.0431%" height="15" fill="rgb(251,46,16)" fg:x="62645" fg:w="71"/><text x="38.2923%" y="79.50"></text></g><g><title>edata_esn_comp (52 samples, 0.03%)</title><rect x="38.0538%" y="53" width="0.0316%" height="15" fill="rgb(220,204,40)" fg:x="62664" fg:w="52"/><text x="38.3038%" y="63.50"></text></g><g><title>edata_esn_get (36 samples, 0.02%)</title><rect x="38.0635%" y="37" width="0.0219%" height="15" fill="rgb(211,85,2)" fg:x="62680" fg:w="36"/><text x="38.3135%" y="47.50"></text></g><g><title>phn_lchild_get (46 samples, 0.03%)</title><rect x="38.0872%" y="69" width="0.0279%" height="15" fill="rgb(229,17,7)" fg:x="62719" fg:w="46"/><text x="38.3372%" y="79.50"></text></g><g><title>phn_lchild_set (29 samples, 0.02%)</title><rect x="38.1152%" y="69" width="0.0176%" height="15" fill="rgb(239,72,28)" fg:x="62765" fg:w="29"/><text x="38.3652%" y="79.50"></text></g><g><title>phn_merge (195 samples, 0.12%)</title><rect x="38.0368%" y="101" width="0.1184%" height="15" fill="rgb(230,47,54)" fg:x="62636" fg:w="195"/><text x="38.2868%" y="111.50"></text></g><g><title>phn_merge_ordered (115 samples, 0.07%)</title><rect x="38.0854%" y="85" width="0.0698%" height="15" fill="rgb(214,50,8)" fg:x="62716" fg:w="115"/><text x="38.3354%" y="95.50"></text></g><g><title>phn_prev_set (37 samples, 0.02%)</title><rect x="38.1328%" y="69" width="0.0225%" height="15" fill="rgb(216,198,43)" fg:x="62794" fg:w="37"/><text x="38.3828%" y="79.50"></text></g><g><title>phn_next_get (706 samples, 0.43%)</title><rect x="38.1552%" y="101" width="0.4287%" height="15" fill="rgb(234,20,35)" fg:x="62831" fg:w="706"/><text x="38.4052%" y="111.50"></text></g><g><title>phn_next_set (30 samples, 0.02%)</title><rect x="38.5840%" y="101" width="0.0182%" height="15" fill="rgb(254,45,19)" fg:x="63537" fg:w="30"/><text x="38.8340%" y="111.50"></text></g><g><title>ph_merge_children (1,004 samples, 0.61%)</title><rect x="38.0083%" y="133" width="0.6097%" height="15" fill="rgb(219,14,44)" fg:x="62589" fg:w="1004"/><text x="38.2583%" y="143.50"></text></g><g><title>phn_merge_siblings (1,004 samples, 0.61%)</title><rect x="38.0083%" y="117" width="0.6097%" height="15" fill="rgb(217,220,26)" fg:x="62589" fg:w="1004"/><text x="38.2583%" y="127.50"></text></g><g><title>phn_prev_set (26 samples, 0.02%)</title><rect x="38.6022%" y="101" width="0.0158%" height="15" fill="rgb(213,158,28)" fg:x="63567" fg:w="26"/><text x="38.8522%" y="111.50"></text></g><g><title>_rjem_je_edata_avail_remove (1,081 samples, 0.66%)</title><rect x="37.9658%" y="165" width="0.6565%" height="15" fill="rgb(252,51,52)" fg:x="62519" fg:w="1081"/><text x="38.2158%" y="175.50"></text></g><g><title>ph_remove (1,061 samples, 0.64%)</title><rect x="37.9779%" y="149" width="0.6443%" height="15" fill="rgb(246,89,16)" fg:x="62539" fg:w="1061"/><text x="38.2279%" y="159.50"></text></g><g><title>pthread_mutex_trylock (294 samples, 0.18%)</title><rect x="38.6459%" y="133" width="0.1785%" height="15" fill="rgb(216,158,49)" fg:x="63639" fg:w="294"/><text x="38.8959%" y="143.50"></text></g><g><title>malloc_mutex_trylock_final (323 samples, 0.20%)</title><rect x="38.6307%" y="149" width="0.1961%" height="15" fill="rgb(236,107,19)" fg:x="63614" fg:w="323"/><text x="38.8807%" y="159.50"></text></g><g><title>malloc_mutex_lock (330 samples, 0.20%)</title><rect x="38.6307%" y="165" width="0.2004%" height="15" fill="rgb(228,185,30)" fg:x="63614" fg:w="330"/><text x="38.8807%" y="175.50"></text></g><g><title>[libc.so.6] (175 samples, 0.11%)</title><rect x="38.8354%" y="149" width="0.1063%" height="15" fill="rgb(246,134,8)" fg:x="63951" fg:w="175"/><text x="39.0854%" y="159.50"></text></g><g><title>pthread_mutex_unlock (29 samples, 0.02%)</title><rect x="38.9417%" y="149" width="0.0176%" height="15" fill="rgb(214,143,50)" fg:x="64126" fg:w="29"/><text x="39.1917%" y="159.50"></text></g><g><title>_rjem_je_edata_cache_get (1,938 samples, 1.18%)</title><rect x="37.7933%" y="181" width="1.1769%" height="15" fill="rgb(228,75,8)" fg:x="62235" fg:w="1938"/><text x="38.0433%" y="191.50"></text></g><g><title>malloc_mutex_unlock (229 samples, 0.14%)</title><rect x="38.8311%" y="165" width="0.1391%" height="15" fill="rgb(207,175,4)" fg:x="63944" fg:w="229"/><text x="39.0811%" y="175.50"></text></g><g><title>pthread_mutex_unlock@plt (18 samples, 0.01%)</title><rect x="38.9593%" y="149" width="0.0109%" height="15" fill="rgb(205,108,24)" fg:x="64155" fg:w="18"/><text x="39.2093%" y="159.50"></text></g><g><title>rtree_contents_encode (28 samples, 0.02%)</title><rect x="38.9884%" y="133" width="0.0170%" height="15" fill="rgb(244,120,49)" fg:x="64203" fg:w="28"/><text x="39.2384%" y="143.50"></text></g><g><title>rtree_leaf_elm_bits_encode (28 samples, 0.02%)</title><rect x="38.9884%" y="117" width="0.0170%" height="15" fill="rgb(223,47,38)" fg:x="64203" fg:w="28"/><text x="39.2384%" y="127.50"></text></g><g><title>_rjem_je_emap_split_commit (59 samples, 0.04%)</title><rect x="38.9702%" y="181" width="0.0358%" height="15" fill="rgb(229,179,11)" fg:x="64173" fg:w="59"/><text x="39.2202%" y="191.50"></text></g><g><title>emap_rtree_write_acquired (50 samples, 0.03%)</title><rect x="38.9757%" y="165" width="0.0304%" height="15" fill="rgb(231,122,1)" fg:x="64182" fg:w="50"/><text x="39.2257%" y="175.50"></text></g><g><title>rtree_leaf_elm_write (29 samples, 0.02%)</title><rect x="38.9884%" y="149" width="0.0176%" height="15" fill="rgb(245,119,9)" fg:x="64203" fg:w="29"/><text x="39.2384%" y="159.50"></text></g><g><title>rtree_leafkey (25 samples, 0.02%)</title><rect x="39.0807%" y="133" width="0.0152%" height="15" fill="rgb(241,163,25)" fg:x="64355" fg:w="25"/><text x="39.3307%" y="143.50"></text></g><g><title>_rjem_je_emap_split_prepare (166 samples, 0.10%)</title><rect x="39.0060%" y="181" width="0.1008%" height="15" fill="rgb(217,214,3)" fg:x="64232" fg:w="166"/><text x="39.2560%" y="191.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (103 samples, 0.06%)</title><rect x="39.0443%" y="165" width="0.0625%" height="15" fill="rgb(240,86,28)" fg:x="64295" fg:w="103"/><text x="39.2943%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (74 samples, 0.04%)</title><rect x="39.0619%" y="149" width="0.0449%" height="15" fill="rgb(215,47,9)" fg:x="64324" fg:w="74"/><text x="39.3119%" y="159.50"></text></g><g><title>rtree_subkey (18 samples, 0.01%)</title><rect x="39.0959%" y="133" width="0.0109%" height="15" fill="rgb(252,25,45)" fg:x="64380" fg:w="18"/><text x="39.3459%" y="143.50"></text></g><g><title>edata_committed_set (17 samples, 0.01%)</title><rect x="39.1087%" y="165" width="0.0103%" height="15" fill="rgb(251,164,9)" fg:x="64401" fg:w="17"/><text x="39.3587%" y="175.50"></text></g><g><title>edata_init (39 samples, 0.02%)</title><rect x="39.1087%" y="181" width="0.0237%" height="15" fill="rgb(233,194,0)" fg:x="64401" fg:w="39"/><text x="39.3587%" y="191.50"></text></g><g><title>ehooks_split (48 samples, 0.03%)</title><rect x="39.1348%" y="181" width="0.0291%" height="15" fill="rgb(249,111,24)" fg:x="64444" fg:w="48"/><text x="39.3848%" y="191.50"></text></g><g><title>extent_recycle_split (3,310 samples, 2.01%)</title><rect x="37.1696%" y="229" width="2.0101%" height="15" fill="rgb(250,223,3)" fg:x="61208" fg:w="3310"/><text x="37.4196%" y="239.50">e..</text></g><g><title>extent_split_interior (2,503 samples, 1.52%)</title><rect x="37.6597%" y="213" width="1.5200%" height="15" fill="rgb(236,178,37)" fg:x="62015" fg:w="2503"/><text x="37.9097%" y="223.50"></text></g><g><title>extent_split_impl (2,436 samples, 1.48%)</title><rect x="37.7004%" y="197" width="1.4793%" height="15" fill="rgb(241,158,50)" fg:x="62082" fg:w="2436"/><text x="37.9504%" y="207.50"></text></g><g><title>ehooks_split_will_fail (26 samples, 0.02%)</title><rect x="39.1639%" y="181" width="0.0158%" height="15" fill="rgb(213,121,41)" fg:x="64492" fg:w="26"/><text x="39.4139%" y="191.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (26 samples, 0.02%)</title><rect x="39.1639%" y="165" width="0.0158%" height="15" fill="rgb(240,92,3)" fg:x="64492" fg:w="26"/><text x="39.4139%" y="175.50"></text></g><g><title>atomic_load_p (26 samples, 0.02%)</title><rect x="39.1639%" y="149" width="0.0158%" height="15" fill="rgb(205,123,3)" fg:x="64492" fg:w="26"/><text x="39.4139%" y="159.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (48 samples, 0.03%)</title><rect x="39.1797%" y="213" width="0.0291%" height="15" fill="rgb(205,97,47)" fg:x="64518" fg:w="48"/><text x="39.4297%" y="223.50"></text></g><g><title>spin_cpu_spinwait (23 samples, 0.01%)</title><rect x="39.1949%" y="197" width="0.0140%" height="15" fill="rgb(247,152,14)" fg:x="64543" fg:w="23"/><text x="39.4449%" y="207.50"></text></g><g><title>pthread_mutex_trylock (364 samples, 0.22%)</title><rect x="39.2174%" y="197" width="0.2210%" height="15" fill="rgb(248,195,53)" fg:x="64580" fg:w="364"/><text x="39.4674%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (427 samples, 0.26%)</title><rect x="39.2089%" y="213" width="0.2593%" height="15" fill="rgb(226,201,16)" fg:x="64566" fg:w="427"/><text x="39.4589%" y="223.50"></text></g><g><title>pthread_mutex_trylock@plt (49 samples, 0.03%)</title><rect x="39.4384%" y="197" width="0.0298%" height="15" fill="rgb(205,98,0)" fg:x="64944" fg:w="49"/><text x="39.6884%" y="207.50"></text></g><g><title>malloc_mutex_lock (479 samples, 0.29%)</title><rect x="39.1797%" y="229" width="0.2909%" height="15" fill="rgb(214,191,48)" fg:x="64518" fg:w="479"/><text x="39.4297%" y="239.50"></text></g><g><title>[libc.so.6] (344 samples, 0.21%)</title><rect x="39.4754%" y="213" width="0.2089%" height="15" fill="rgb(237,112,39)" fg:x="65005" fg:w="344"/><text x="39.7254%" y="223.50"></text></g><g><title>extent_recycle (7,191 samples, 4.37%)</title><rect x="35.3333%" y="245" width="4.3669%" height="15" fill="rgb(247,203,27)" fg:x="58184" fg:w="7191"/><text x="35.5833%" y="255.50">exten..</text></g><g><title>malloc_mutex_unlock (378 samples, 0.23%)</title><rect x="39.4706%" y="229" width="0.2295%" height="15" fill="rgb(235,124,28)" fg:x="64997" fg:w="378"/><text x="39.7206%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc (7,258 samples, 4.41%)</title><rect x="35.2932%" y="261" width="4.4075%" height="15" fill="rgb(208,207,46)" fg:x="58118" fg:w="7258"/><text x="35.5432%" y="271.50">_rjem..</text></g><g><title>_rjem_je_eset_fit (21 samples, 0.01%)</title><rect x="39.7050%" y="197" width="0.0128%" height="15" fill="rgb(234,176,4)" fg:x="65383" fg:w="21"/><text x="39.9550%" y="207.50"></text></g><g><title>eset_first_fit (21 samples, 0.01%)</title><rect x="39.7050%" y="181" width="0.0128%" height="15" fill="rgb(230,133,28)" fg:x="65383" fg:w="21"/><text x="39.9550%" y="191.50"></text></g><g><title>extent_recycle_extract (44 samples, 0.03%)</title><rect x="39.7044%" y="213" width="0.0267%" height="15" fill="rgb(211,137,40)" fg:x="65382" fg:w="44"/><text x="39.9544%" y="223.50"></text></g><g><title>extent_activate_locked (22 samples, 0.01%)</title><rect x="39.7177%" y="197" width="0.0134%" height="15" fill="rgb(254,35,13)" fg:x="65404" fg:w="22"/><text x="39.9677%" y="207.50"></text></g><g><title>extent_deactivate_locked (24 samples, 0.01%)</title><rect x="39.7311%" y="197" width="0.0146%" height="15" fill="rgb(225,49,51)" fg:x="65426" fg:w="24"/><text x="39.9811%" y="207.50"></text></g><g><title>extent_deactivate_locked_impl (24 samples, 0.01%)</title><rect x="39.7311%" y="181" width="0.0146%" height="15" fill="rgb(251,10,15)" fg:x="65426" fg:w="24"/><text x="39.9811%" y="191.50"></text></g><g><title>_rjem_je_eset_insert (21 samples, 0.01%)</title><rect x="39.7329%" y="165" width="0.0128%" height="15" fill="rgb(228,207,15)" fg:x="65429" fg:w="21"/><text x="39.9829%" y="175.50"></text></g><g><title>phn_next_get (18 samples, 0.01%)</title><rect x="39.7609%" y="85" width="0.0109%" height="15" fill="rgb(241,99,19)" fg:x="65475" fg:w="18"/><text x="40.0109%" y="95.50"></text></g><g><title>_rjem_je_edata_avail_remove (29 samples, 0.02%)</title><rect x="39.7554%" y="149" width="0.0176%" height="15" fill="rgb(207,104,49)" fg:x="65466" fg:w="29"/><text x="40.0054%" y="159.50"></text></g><g><title>ph_remove (27 samples, 0.02%)</title><rect x="39.7566%" y="133" width="0.0164%" height="15" fill="rgb(234,99,18)" fg:x="65468" fg:w="27"/><text x="40.0066%" y="143.50"></text></g><g><title>ph_merge_children (25 samples, 0.02%)</title><rect x="39.7578%" y="117" width="0.0152%" height="15" fill="rgb(213,191,49)" fg:x="65470" fg:w="25"/><text x="40.0078%" y="127.50"></text></g><g><title>phn_merge_siblings (25 samples, 0.02%)</title><rect x="39.7578%" y="101" width="0.0152%" height="15" fill="rgb(210,226,19)" fg:x="65470" fg:w="25"/><text x="40.0078%" y="111.50"></text></g><g><title>_rjem_je_edata_cache_get (49 samples, 0.03%)</title><rect x="39.7542%" y="165" width="0.0298%" height="15" fill="rgb(229,97,18)" fg:x="65464" fg:w="49"/><text x="40.0042%" y="175.50"></text></g><g><title>extent_recycle_split (96 samples, 0.06%)</title><rect x="39.7311%" y="213" width="0.0583%" height="15" fill="rgb(211,167,15)" fg:x="65426" fg:w="96"/><text x="39.9811%" y="223.50"></text></g><g><title>extent_split_interior (72 samples, 0.04%)</title><rect x="39.7457%" y="197" width="0.0437%" height="15" fill="rgb(210,169,34)" fg:x="65450" fg:w="72"/><text x="39.9957%" y="207.50"></text></g><g><title>extent_split_impl (70 samples, 0.04%)</title><rect x="39.7469%" y="181" width="0.0425%" height="15" fill="rgb(241,121,31)" fg:x="65452" fg:w="70"/><text x="39.9969%" y="191.50"></text></g><g><title>extent_recycle (170 samples, 0.10%)</title><rect x="39.7032%" y="229" width="0.1032%" height="15" fill="rgb(232,40,11)" fg:x="65380" fg:w="170"/><text x="39.9532%" y="239.50"></text></g><g><title>malloc_mutex_unlock (19 samples, 0.01%)</title><rect x="39.7949%" y="213" width="0.0115%" height="15" fill="rgb(205,86,26)" fg:x="65531" fg:w="19"/><text x="40.0449%" y="223.50"></text></g><g><title>[libc.so.6] (19 samples, 0.01%)</title><rect x="39.7949%" y="197" width="0.0115%" height="15" fill="rgb(231,126,28)" fg:x="65531" fg:w="19"/><text x="40.0449%" y="207.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (189 samples, 0.11%)</title><rect x="39.7007%" y="261" width="0.1148%" height="15" fill="rgb(219,221,18)" fg:x="65376" fg:w="189"/><text x="39.9507%" y="271.50"></text></g><g><title>extent_alloc_retained (187 samples, 0.11%)</title><rect x="39.7020%" y="245" width="0.1136%" height="15" fill="rgb(211,40,0)" fg:x="65378" fg:w="187"/><text x="39.9520%" y="255.50"></text></g><g><title>pac_alloc_real (7,530 samples, 4.57%)</title><rect x="35.2561%" y="277" width="4.5727%" height="15" fill="rgb(239,85,43)" fg:x="58057" fg:w="7530"/><text x="35.5061%" y="287.50">pac_a..</text></g><g><title>_rjem_je_pa_alloc (8,081 samples, 4.91%)</title><rect x="34.9458%" y="325" width="4.9073%" height="15" fill="rgb(231,55,21)" fg:x="57546" fg:w="8081"/><text x="35.1958%" y="335.50">_rjem_..</text></g><g><title>pai_alloc (7,664 samples, 4.65%)</title><rect x="35.1991%" y="309" width="4.6541%" height="15" fill="rgb(225,184,43)" fg:x="57963" fg:w="7664"/><text x="35.4491%" y="319.50">pai_a..</text></g><g><title>pac_alloc_impl (7,642 samples, 4.64%)</title><rect x="35.2124%" y="293" width="4.6407%" height="15" fill="rgb(251,158,41)" fg:x="57985" fg:w="7642"/><text x="35.4624%" y="303.50">pac_a..</text></g><g><title>pac_ehooks_get (40 samples, 0.02%)</title><rect x="39.8289%" y="277" width="0.0243%" height="15" fill="rgb(234,159,37)" fg:x="65587" fg:w="40"/><text x="40.0789%" y="287.50"></text></g><g><title>arena_cache_oblivious_randomize (53 samples, 0.03%)</title><rect x="39.8532%" y="325" width="0.0322%" height="15" fill="rgb(216,204,22)" fg:x="65627" fg:w="53"/><text x="40.1032%" y="335.50"></text></g><g><title>prng_lg_range_u64 (27 samples, 0.02%)</title><rect x="39.8690%" y="309" width="0.0164%" height="15" fill="rgb(214,17,3)" fg:x="65653" fg:w="27"/><text x="40.1190%" y="319.50"></text></g><g><title>locked_inc_u64 (243 samples, 0.15%)</title><rect x="39.9054%" y="309" width="0.1476%" height="15" fill="rgb(212,111,17)" fg:x="65713" fg:w="243"/><text x="40.1554%" y="319.50"></text></g><g><title>atomic_fetch_add_u64 (243 samples, 0.15%)</title><rect x="39.9054%" y="293" width="0.1476%" height="15" fill="rgb(221,157,24)" fg:x="65713" fg:w="243"/><text x="40.1554%" y="303.50"></text></g><g><title>arena_large_malloc_stats_update (304 samples, 0.18%)</title><rect x="39.8853%" y="325" width="0.1846%" height="15" fill="rgb(252,16,13)" fg:x="65680" fg:w="304"/><text x="40.1353%" y="335.50"></text></g><g><title>sz_size2index (28 samples, 0.02%)</title><rect x="40.0530%" y="309" width="0.0170%" height="15" fill="rgb(221,62,2)" fg:x="65956" fg:w="28"/><text x="40.3030%" y="319.50"></text></g><g><title>sz_size2index_compute (28 samples, 0.02%)</title><rect x="40.0530%" y="293" width="0.0170%" height="15" fill="rgb(247,87,22)" fg:x="65956" fg:w="28"/><text x="40.3030%" y="303.50"></text></g><g><title>san_large_extent_decide_guard (32 samples, 0.02%)</title><rect x="40.0700%" y="325" width="0.0194%" height="15" fill="rgb(215,73,9)" fg:x="65984" fg:w="32"/><text x="40.3200%" y="335.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (8,755 samples, 5.32%)</title><rect x="34.8183%" y="341" width="5.3166%" height="15" fill="rgb(207,175,33)" fg:x="57336" fg:w="8755"/><text x="35.0683%" y="351.50">_rjem_j..</text></g><g><title>sz_size2index (75 samples, 0.05%)</title><rect x="40.0894%" y="325" width="0.0455%" height="15" fill="rgb(243,129,54)" fg:x="66016" fg:w="75"/><text x="40.3394%" y="335.50"></text></g><g><title>sz_size2index_compute (71 samples, 0.04%)</title><rect x="40.0918%" y="309" width="0.0431%" height="15" fill="rgb(227,119,45)" fg:x="66020" fg:w="71"/><text x="40.3418%" y="319.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (32 samples, 0.02%)</title><rect x="40.1355%" y="261" width="0.0194%" height="15" fill="rgb(205,109,36)" fg:x="66092" fg:w="32"/><text x="40.3855%" y="271.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (32 samples, 0.02%)</title><rect x="40.1355%" y="245" width="0.0194%" height="15" fill="rgb(205,6,39)" fg:x="66092" fg:w="32"/><text x="40.3855%" y="255.50"></text></g><g><title>arena_decay_dirty (34 samples, 0.02%)</title><rect x="40.1355%" y="293" width="0.0206%" height="15" fill="rgb(221,32,16)" fg:x="66092" fg:w="34"/><text x="40.3855%" y="303.50"></text></g><g><title>arena_decay_impl (34 samples, 0.02%)</title><rect x="40.1355%" y="277" width="0.0206%" height="15" fill="rgb(228,144,50)" fg:x="66092" fg:w="34"/><text x="40.3855%" y="287.50"></text></g><g><title>_rjem_je_arena_decay (43 samples, 0.03%)</title><rect x="40.1349%" y="309" width="0.0261%" height="15" fill="rgb(229,201,53)" fg:x="66091" fg:w="43"/><text x="40.3849%" y="319.50"></text></g><g><title>arena_decay_tick (59 samples, 0.04%)</title><rect x="40.1349%" y="341" width="0.0358%" height="15" fill="rgb(249,153,27)" fg:x="66091" fg:w="59"/><text x="40.3849%" y="351.50"></text></g><g><title>arena_decay_ticks (59 samples, 0.04%)</title><rect x="40.1349%" y="325" width="0.0358%" height="15" fill="rgb(227,106,25)" fg:x="66091" fg:w="59"/><text x="40.3849%" y="335.50"></text></g><g><title>_rjem_je_large_palloc (8,985 samples, 5.46%)</title><rect x="34.7752%" y="357" width="5.4563%" height="15" fill="rgb(230,65,29)" fg:x="57265" fg:w="8985"/><text x="35.0252%" y="367.50">_rjem_j..</text></g><g><title>sz_sa2u (100 samples, 0.06%)</title><rect x="40.1708%" y="341" width="0.0607%" height="15" fill="rgb(221,57,46)" fg:x="66150" fg:w="100"/><text x="40.4208%" y="351.50"></text></g><g><title>sz_s2u (25 samples, 0.02%)</title><rect x="40.2163%" y="325" width="0.0152%" height="15" fill="rgb(229,161,17)" fg:x="66225" fg:w="25"/><text x="40.4663%" y="335.50"></text></g><g><title>sz_s2u_compute (25 samples, 0.02%)</title><rect x="40.2163%" y="309" width="0.0152%" height="15" fill="rgb(222,213,11)" fg:x="66225" fg:w="25"/><text x="40.4663%" y="319.50"></text></g><g><title>_rjem_je_edata_heap_first (17 samples, 0.01%)</title><rect x="40.2795%" y="149" width="0.0103%" height="15" fill="rgb(235,35,13)" fg:x="66329" fg:w="17"/><text x="40.5295%" y="159.50"></text></g><g><title>ph_first (17 samples, 0.01%)</title><rect x="40.2795%" y="133" width="0.0103%" height="15" fill="rgb(233,158,34)" fg:x="66329" fg:w="17"/><text x="40.5295%" y="143.50"></text></g><g><title>_rjem_je_eset_fit (35 samples, 0.02%)</title><rect x="40.2758%" y="181" width="0.0213%" height="15" fill="rgb(215,151,48)" fg:x="66323" fg:w="35"/><text x="40.5258%" y="191.50"></text></g><g><title>eset_first_fit (34 samples, 0.02%)</title><rect x="40.2764%" y="165" width="0.0206%" height="15" fill="rgb(229,84,14)" fg:x="66324" fg:w="34"/><text x="40.5264%" y="175.50"></text></g><g><title>extent_recycle_extract (73 samples, 0.04%)</title><rect x="40.2740%" y="197" width="0.0443%" height="15" fill="rgb(229,68,14)" fg:x="66320" fg:w="73"/><text x="40.5240%" y="207.50"></text></g><g><title>extent_activate_locked (35 samples, 0.02%)</title><rect x="40.2971%" y="181" width="0.0213%" height="15" fill="rgb(243,106,26)" fg:x="66358" fg:w="35"/><text x="40.5471%" y="191.50"></text></g><g><title>_rjem_je_eset_remove (27 samples, 0.02%)</title><rect x="40.3019%" y="165" width="0.0164%" height="15" fill="rgb(206,45,38)" fg:x="66366" fg:w="27"/><text x="40.5519%" y="175.50"></text></g><g><title>pac_alloc_real (99 samples, 0.06%)</title><rect x="40.2722%" y="245" width="0.0601%" height="15" fill="rgb(226,6,15)" fg:x="66317" fg:w="99"/><text x="40.5222%" y="255.50"></text></g><g><title>_rjem_je_ecache_alloc (99 samples, 0.06%)</title><rect x="40.2722%" y="229" width="0.0601%" height="15" fill="rgb(232,22,54)" fg:x="66317" fg:w="99"/><text x="40.5222%" y="239.50"></text></g><g><title>extent_recycle (99 samples, 0.06%)</title><rect x="40.2722%" y="213" width="0.0601%" height="15" fill="rgb(229,222,32)" fg:x="66317" fg:w="99"/><text x="40.5222%" y="223.50"></text></g><g><title>arena_slab_alloc (140 samples, 0.09%)</title><rect x="40.2491%" y="309" width="0.0850%" height="15" fill="rgb(228,62,29)" fg:x="66279" fg:w="140"/><text x="40.4991%" y="319.50"></text></g><g><title>_rjem_je_pa_alloc (118 samples, 0.07%)</title><rect x="40.2625%" y="293" width="0.0717%" height="15" fill="rgb(251,103,34)" fg:x="66301" fg:w="118"/><text x="40.5125%" y="303.50"></text></g><g><title>pai_alloc (104 samples, 0.06%)</title><rect x="40.2710%" y="277" width="0.0632%" height="15" fill="rgb(233,12,30)" fg:x="66315" fg:w="104"/><text x="40.5210%" y="287.50"></text></g><g><title>pac_alloc_impl (103 samples, 0.06%)</title><rect x="40.2716%" y="261" width="0.0625%" height="15" fill="rgb(238,52,0)" fg:x="66316" fg:w="103"/><text x="40.5216%" y="271.50"></text></g><g><title>malloc_mutex_lock (22 samples, 0.01%)</title><rect x="40.3372%" y="309" width="0.0134%" height="15" fill="rgb(223,98,5)" fg:x="66424" fg:w="22"/><text x="40.5872%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (22 samples, 0.01%)</title><rect x="40.3372%" y="293" width="0.0134%" height="15" fill="rgb(228,75,37)" fg:x="66424" fg:w="22"/><text x="40.5872%" y="303.50"></text></g><g><title>pthread_mutex_trylock (22 samples, 0.01%)</title><rect x="40.3372%" y="277" width="0.0134%" height="15" fill="rgb(205,115,49)" fg:x="66424" fg:w="22"/><text x="40.5872%" y="287.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (204 samples, 0.12%)</title><rect x="40.2339%" y="341" width="0.1239%" height="15" fill="rgb(250,154,43)" fg:x="66254" fg:w="204"/><text x="40.4839%" y="351.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (204 samples, 0.12%)</title><rect x="40.2339%" y="325" width="0.1239%" height="15" fill="rgb(226,43,29)" fg:x="66254" fg:w="204"/><text x="40.4839%" y="335.50"></text></g><g><title>iallocztm (9,539 samples, 5.79%)</title><rect x="34.6325%" y="389" width="5.7927%" height="15" fill="rgb(249,228,39)" fg:x="57030" fg:w="9539"/><text x="34.8825%" y="399.50">iallocz..</text></g><g><title>arena_malloc (9,539 samples, 5.79%)</title><rect x="34.6325%" y="373" width="5.7927%" height="15" fill="rgb(216,79,43)" fg:x="57030" fg:w="9539"/><text x="34.8825%" y="383.50">arena_m..</text></g><g><title>tcache_alloc_small (319 samples, 0.19%)</title><rect x="40.2315%" y="357" width="0.1937%" height="15" fill="rgb(228,95,12)" fg:x="66250" fg:w="319"/><text x="40.4815%" y="367.50"></text></g><g><title>cache_bin_alloc (110 samples, 0.07%)</title><rect x="40.3584%" y="341" width="0.0668%" height="15" fill="rgb(249,221,15)" fg:x="66459" fg:w="110"/><text x="40.6084%" y="351.50"></text></g><g><title>cache_bin_alloc_impl (110 samples, 0.07%)</title><rect x="40.3584%" y="325" width="0.0668%" height="15" fill="rgb(233,34,13)" fg:x="66459" fg:w="110"/><text x="40.6084%" y="335.50"></text></g><g><title>imalloc_no_sample (9,557 samples, 5.80%)</title><rect x="34.6325%" y="405" width="5.8037%" height="15" fill="rgb(214,103,39)" fg:x="57030" fg:w="9557"/><text x="34.8825%" y="415.50">imalloc..</text></g><g><title>tcache_get_from_ind (18 samples, 0.01%)</title><rect x="40.4252%" y="389" width="0.0109%" height="15" fill="rgb(251,126,39)" fg:x="66569" fg:w="18"/><text x="40.6752%" y="399.50"></text></g><g><title>tsd_tcachep_get (18 samples, 0.01%)</title><rect x="40.4252%" y="373" width="0.0109%" height="15" fill="rgb(214,216,36)" fg:x="66569" fg:w="18"/><text x="40.6752%" y="383.50"></text></g><g><title>tsd_tcachep_get_unsafe (18 samples, 0.01%)</title><rect x="40.4252%" y="357" width="0.0109%" height="15" fill="rgb(220,221,8)" fg:x="66569" fg:w="18"/><text x="40.6752%" y="367.50"></text></g><g><title>peak_update (26 samples, 0.02%)</title><rect x="40.4629%" y="341" width="0.0158%" height="15" fill="rgb(240,216,3)" fg:x="66631" fg:w="26"/><text x="40.7129%" y="351.50"></text></g><g><title>_rjem_je_peak_event_update (27 samples, 0.02%)</title><rect x="40.4629%" y="357" width="0.0164%" height="15" fill="rgb(232,218,17)" fg:x="66631" fg:w="27"/><text x="40.7129%" y="367.50"></text></g><g><title>_rjem_je_peak_alloc_event_handler (38 samples, 0.02%)</title><rect x="40.4629%" y="373" width="0.0231%" height="15" fill="rgb(229,163,45)" fg:x="66631" fg:w="38"/><text x="40.7129%" y="383.50"></text></g><g><title>cache_bin_ncached_get_local (20 samples, 0.01%)</title><rect x="40.6809%" y="309" width="0.0121%" height="15" fill="rgb(231,110,42)" fg:x="66990" fg:w="20"/><text x="40.9309%" y="319.50"></text></g><g><title>cache_bin_ncached_get_internal (20 samples, 0.01%)</title><rect x="40.6809%" y="293" width="0.0121%" height="15" fill="rgb(208,170,48)" fg:x="66990" fg:w="20"/><text x="40.9309%" y="303.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (87 samples, 0.05%)</title><rect x="40.6554%" y="325" width="0.0528%" height="15" fill="rgb(239,116,25)" fg:x="66948" fg:w="87"/><text x="40.9054%" y="335.50"></text></g><g><title>cache_bin_nstashed_get_local (25 samples, 0.02%)</title><rect x="40.6930%" y="309" width="0.0152%" height="15" fill="rgb(219,200,50)" fg:x="67010" fg:w="25"/><text x="40.9430%" y="319.50"></text></g><g><title>cache_bin_nstashed_get_internal (25 samples, 0.02%)</title><rect x="40.6930%" y="293" width="0.0152%" height="15" fill="rgb(245,200,0)" fg:x="67010" fg:w="25"/><text x="40.9430%" y="303.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (21 samples, 0.01%)</title><rect x="40.6954%" y="277" width="0.0128%" height="15" fill="rgb(245,119,33)" fg:x="67014" fg:w="21"/><text x="40.9454%" y="287.50"></text></g><g><title>cache_bin_low_water_set (17 samples, 0.01%)</title><rect x="40.7124%" y="325" width="0.0103%" height="15" fill="rgb(231,125,12)" fg:x="67042" fg:w="17"/><text x="40.9624%" y="335.50"></text></g><g><title>cache_bin_finish_flush (22 samples, 0.01%)</title><rect x="40.7361%" y="277" width="0.0134%" height="15" fill="rgb(216,96,41)" fg:x="67081" fg:w="22"/><text x="40.9861%" y="287.50"></text></g><g><title>_rjem_je_pa_dalloc (25 samples, 0.02%)</title><rect x="40.7932%" y="245" width="0.0152%" height="15" fill="rgb(248,43,45)" fg:x="67175" fg:w="25"/><text x="41.0432%" y="255.50"></text></g><g><title>extent_deactivate_locked (25 samples, 0.02%)</title><rect x="40.8151%" y="213" width="0.0152%" height="15" fill="rgb(217,222,7)" fg:x="67211" fg:w="25"/><text x="41.0651%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (25 samples, 0.02%)</title><rect x="40.8151%" y="197" width="0.0152%" height="15" fill="rgb(233,28,6)" fg:x="67211" fg:w="25"/><text x="41.0651%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (21 samples, 0.01%)</title><rect x="40.8175%" y="181" width="0.0128%" height="15" fill="rgb(231,218,15)" fg:x="67215" fg:w="21"/><text x="41.0675%" y="191.50"></text></g><g><title>extent_try_coalesce_large (48 samples, 0.03%)</title><rect x="40.8303%" y="213" width="0.0291%" height="15" fill="rgb(226,171,48)" fg:x="67236" fg:w="48"/><text x="41.0803%" y="223.50"></text></g><g><title>extent_try_coalesce_impl (48 samples, 0.03%)</title><rect x="40.8303%" y="197" width="0.0291%" height="15" fill="rgb(235,201,9)" fg:x="67236" fg:w="48"/><text x="41.0803%" y="207.50"></text></g><g><title>extent_coalesce (32 samples, 0.02%)</title><rect x="40.8400%" y="181" width="0.0194%" height="15" fill="rgb(217,80,15)" fg:x="67252" fg:w="32"/><text x="41.0900%" y="191.50"></text></g><g><title>extent_merge_impl (19 samples, 0.01%)</title><rect x="40.8479%" y="165" width="0.0115%" height="15" fill="rgb(219,152,8)" fg:x="67265" fg:w="19"/><text x="41.0979%" y="175.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (119 samples, 0.07%)</title><rect x="40.7896%" y="261" width="0.0723%" height="15" fill="rgb(243,107,38)" fg:x="67169" fg:w="119"/><text x="41.0396%" y="271.50"></text></g><g><title>pac_dalloc_impl (88 samples, 0.05%)</title><rect x="40.8084%" y="245" width="0.0534%" height="15" fill="rgb(231,17,5)" fg:x="67200" fg:w="88"/><text x="41.0584%" y="255.50"></text></g><g><title>_rjem_je_extent_record (82 samples, 0.05%)</title><rect x="40.8120%" y="229" width="0.0498%" height="15" fill="rgb(209,25,54)" fg:x="67206" fg:w="82"/><text x="41.0620%" y="239.50"></text></g><g><title>arena_dalloc_bin_locked_step (39 samples, 0.02%)</title><rect x="40.8673%" y="261" width="0.0237%" height="15" fill="rgb(219,0,2)" fg:x="67297" fg:w="39"/><text x="41.1173%" y="271.50"></text></g><g><title>edata_arena_ind_get (106 samples, 0.06%)</title><rect x="40.9098%" y="261" width="0.0644%" height="15" fill="rgb(246,9,5)" fg:x="67367" fg:w="106"/><text x="41.1598%" y="271.50"></text></g><g><title>pthread_mutex_trylock (122 samples, 0.07%)</title><rect x="40.9742%" y="229" width="0.0741%" height="15" fill="rgb(226,159,4)" fg:x="67473" fg:w="122"/><text x="41.2242%" y="239.50"></text></g><g><title>malloc_mutex_trylock_final (123 samples, 0.07%)</title><rect x="40.9742%" y="245" width="0.0747%" height="15" fill="rgb(219,175,34)" fg:x="67473" fg:w="123"/><text x="41.2242%" y="255.50"></text></g><g><title>malloc_mutex_lock (138 samples, 0.08%)</title><rect x="40.9742%" y="261" width="0.0838%" height="15" fill="rgb(236,10,46)" fg:x="67473" fg:w="138"/><text x="41.2242%" y="271.50"></text></g><g><title>malloc_mutex_unlock (18 samples, 0.01%)</title><rect x="41.0580%" y="261" width="0.0109%" height="15" fill="rgb(240,211,16)" fg:x="67611" fg:w="18"/><text x="41.3080%" y="271.50"></text></g><g><title>rtree_leaf_elm_read (93 samples, 0.06%)</title><rect x="41.1375%" y="229" width="0.0565%" height="15" fill="rgb(205,3,43)" fg:x="67742" fg:w="93"/><text x="41.3875%" y="239.50"></text></g><g><title>rtree_leaf_elm_bits_read (92 samples, 0.06%)</title><rect x="41.1381%" y="213" width="0.0559%" height="15" fill="rgb(245,7,22)" fg:x="67743" fg:w="92"/><text x="41.3881%" y="223.50"></text></g><g><title>atomic_load_p (92 samples, 0.06%)</title><rect x="41.1381%" y="197" width="0.0559%" height="15" fill="rgb(239,132,32)" fg:x="67743" fg:w="92"/><text x="41.3881%" y="207.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (217 samples, 0.13%)</title><rect x="41.0689%" y="261" width="0.1318%" height="15" fill="rgb(228,202,34)" fg:x="67629" fg:w="217"/><text x="41.3189%" y="271.50"></text></g><g><title>emap_edata_lookup_batch (214 samples, 0.13%)</title><rect x="41.0707%" y="245" width="0.1300%" height="15" fill="rgb(254,200,22)" fg:x="67632" fg:w="214"/><text x="41.3207%" y="255.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (789 samples, 0.48%)</title><rect x="40.7276%" y="309" width="0.4791%" height="15" fill="rgb(219,10,39)" fg:x="67067" fg:w="789"/><text x="40.9776%" y="319.50"></text></g><g><title>tcache_bin_flush_bottom (783 samples, 0.48%)</title><rect x="40.7313%" y="293" width="0.4755%" height="15" fill="rgb(226,210,39)" fg:x="67073" fg:w="783"/><text x="40.9813%" y="303.50"></text></g><g><title>tcache_bin_flush_impl (752 samples, 0.46%)</title><rect x="40.7501%" y="277" width="0.4567%" height="15" fill="rgb(208,219,16)" fg:x="67104" fg:w="752"/><text x="41.0001%" y="287.50"></text></g><g><title>tcache_gc_small (814 samples, 0.49%)</title><rect x="40.7228%" y="325" width="0.4943%" height="15" fill="rgb(216,158,51)" fg:x="67059" fg:w="814"/><text x="40.9728%" y="335.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (1,020 samples, 0.62%)</title><rect x="40.6037%" y="357" width="0.6194%" height="15" fill="rgb(233,14,44)" fg:x="66863" fg:w="1020"/><text x="40.8537%" y="367.50"></text></g><g><title>tcache_event (997 samples, 0.61%)</title><rect x="40.6177%" y="341" width="0.6054%" height="15" fill="rgb(237,97,39)" fg:x="66886" fg:w="997"/><text x="40.8677%" y="351.50"></text></g><g><title>atomic_fence (96 samples, 0.06%)</title><rect x="41.2487%" y="293" width="0.0583%" height="15" fill="rgb(218,198,43)" fg:x="67925" fg:w="96"/><text x="41.4987%" y="303.50"></text></g><g><title>te_adjust_thresholds_helper (132 samples, 0.08%)</title><rect x="41.2341%" y="357" width="0.0802%" height="15" fill="rgb(231,104,20)" fg:x="67901" fg:w="132"/><text x="41.4841%" y="367.50"></text></g><g><title>te_ctx_next_event_set (122 samples, 0.07%)</title><rect x="41.2402%" y="341" width="0.0741%" height="15" fill="rgb(254,36,13)" fg:x="67911" fg:w="122"/><text x="41.4902%" y="351.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (119 samples, 0.07%)</title><rect x="41.2420%" y="325" width="0.0723%" height="15" fill="rgb(248,14,50)" fg:x="67914" fg:w="119"/><text x="41.4920%" y="335.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (115 samples, 0.07%)</title><rect x="41.2444%" y="309" width="0.0698%" height="15" fill="rgb(217,107,29)" fg:x="67918" fg:w="115"/><text x="41.4944%" y="319.50"></text></g><g><title>_rjem_je_te_event_trigger (1,374 samples, 0.83%)</title><rect x="40.4859%" y="373" width="0.8344%" height="15" fill="rgb(251,169,33)" fg:x="66669" fg:w="1374"/><text x="40.7359%" y="383.50"></text></g><g><title>imalloc_body (11,230 samples, 6.82%)</title><rect x="34.5171%" y="421" width="6.8196%" height="15" fill="rgb(217,108,32)" fg:x="56840" fg:w="11230"/><text x="34.7671%" y="431.50">imalloc_b..</text></g><g><title>thread_alloc_event (1,483 samples, 0.90%)</title><rect x="40.4361%" y="405" width="0.9006%" height="15" fill="rgb(219,66,42)" fg:x="66587" fg:w="1483"/><text x="40.6861%" y="415.50"></text></g><g><title>te_event_advance (1,483 samples, 0.90%)</title><rect x="40.4361%" y="389" width="0.9006%" height="15" fill="rgb(206,180,7)" fg:x="66587" fg:w="1483"/><text x="40.6861%" y="399.50"></text></g><g><title>te_ctx_get (21 samples, 0.01%)</title><rect x="41.3240%" y="373" width="0.0128%" height="15" fill="rgb(208,226,31)" fg:x="68049" fg:w="21"/><text x="41.5740%" y="383.50"></text></g><g><title>_rjem_je_malloc_default (11,339 samples, 6.89%)</title><rect x="34.4685%" y="453" width="6.8858%" height="15" fill="rgb(218,26,49)" fg:x="56760" fg:w="11339"/><text x="34.7185%" y="463.50">_rjem_je_..</text></g><g><title>imalloc (11,259 samples, 6.84%)</title><rect x="34.5171%" y="437" width="6.8372%" height="15" fill="rgb(233,197,48)" fg:x="56840" fg:w="11259"/><text x="34.7671%" y="447.50">imalloc</text></g><g><title>tsd_fetch (29 samples, 0.02%)</title><rect x="41.3367%" y="421" width="0.0176%" height="15" fill="rgb(252,181,51)" fg:x="68070" fg:w="29"/><text x="41.5867%" y="431.50"></text></g><g><title>tsd_fetch_impl (29 samples, 0.02%)</title><rect x="41.3367%" y="405" width="0.0176%" height="15" fill="rgb(253,90,19)" fg:x="68070" fg:w="29"/><text x="41.5867%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11,360 samples, 6.90%)</title><rect x="34.4685%" y="533" width="6.8986%" height="15" fill="rgb(215,171,30)" fg:x="56760" fg:w="11360"/><text x="34.7185%" y="543.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::Global::alloc_impl (11,360 samples, 6.90%)</title><rect x="34.4685%" y="517" width="6.8986%" height="15" fill="rgb(214,222,9)" fg:x="56760" fg:w="11360"/><text x="34.7185%" y="527.50">alloc::al..</text></g><g><title>alloc::alloc::alloc (11,360 samples, 6.90%)</title><rect x="34.4685%" y="501" width="6.8986%" height="15" fill="rgb(223,3,22)" fg:x="56760" fg:w="11360"/><text x="34.7185%" y="511.50">alloc::al..</text></g><g><title>__rust_alloc (11,360 samples, 6.90%)</title><rect x="34.4685%" y="485" width="6.8986%" height="15" fill="rgb(225,196,46)" fg:x="56760" fg:w="11360"/><text x="34.7185%" y="495.50">__rust_al..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11,360 samples, 6.90%)</title><rect x="34.4685%" y="469" width="6.8986%" height="15" fill="rgb(209,110,37)" fg:x="56760" fg:w="11360"/><text x="34.7185%" y="479.50">&lt;tikv_jem..</text></g><g><title>_rjem_malloc (20 samples, 0.01%)</title><rect x="41.3549%" y="453" width="0.0121%" height="15" fill="rgb(249,89,12)" fg:x="68100" fg:w="20"/><text x="41.6049%" y="463.50"></text></g><g><title>imalloc_fastpath (20 samples, 0.01%)</title><rect x="41.3549%" y="437" width="0.0121%" height="15" fill="rgb(226,27,33)" fg:x="68100" fg:w="20"/><text x="41.6049%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11,369 samples, 6.90%)</title><rect x="34.4637%" y="613" width="6.9040%" height="15" fill="rgb(213,82,22)" fg:x="56752" fg:w="11369"/><text x="34.7137%" y="623.50">alloc::ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11,369 samples, 6.90%)</title><rect x="34.4637%" y="597" width="6.9040%" height="15" fill="rgb(248,140,0)" fg:x="56752" fg:w="11369"/><text x="34.7137%" y="607.50">alloc::ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11,369 samples, 6.90%)</title><rect x="34.4637%" y="581" width="6.9040%" height="15" fill="rgb(228,106,3)" fg:x="56752" fg:w="11369"/><text x="34.7137%" y="591.50">alloc::ra..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (11,369 samples, 6.90%)</title><rect x="34.4637%" y="565" width="6.9040%" height="15" fill="rgb(209,23,37)" fg:x="56752" fg:w="11369"/><text x="34.7137%" y="575.50">alloc::ra..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (11,369 samples, 6.90%)</title><rect x="34.4637%" y="549" width="6.9040%" height="15" fill="rgb(241,93,50)" fg:x="56752" fg:w="11369"/><text x="34.7137%" y="559.50">alloc::ra..</text></g><g><title>bytes::bytes_mut::Shared::is_unique (99 samples, 0.06%)</title><rect x="41.3683%" y="613" width="0.0601%" height="15" fill="rgb(253,46,43)" fg:x="68122" fg:w="99"/><text x="41.6183%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (98 samples, 0.06%)</title><rect x="41.3689%" y="597" width="0.0595%" height="15" fill="rgb(226,206,43)" fg:x="68123" fg:w="98"/><text x="41.6189%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (98 samples, 0.06%)</title><rect x="41.3689%" y="581" width="0.0595%" height="15" fill="rgb(217,54,7)" fg:x="68123" fg:w="98"/><text x="41.6189%" y="591.50"></text></g><g><title>bytes::bytes_mut::release_shared (3,996 samples, 2.43%)</title><rect x="41.4339%" y="613" width="2.4266%" height="15" fill="rgb(223,5,52)" fg:x="68230" fg:w="3996"/><text x="41.6839%" y="623.50">by..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3,974 samples, 2.41%)</title><rect x="41.4472%" y="597" width="2.4133%" height="15" fill="rgb(206,52,46)" fg:x="68252" fg:w="3974"/><text x="41.6972%" y="607.50">co..</text></g><g><title>core::sync::atomic::atomic_sub (3,974 samples, 2.41%)</title><rect x="41.4472%" y="581" width="2.4133%" height="15" fill="rgb(253,136,11)" fg:x="68252" fg:w="3974"/><text x="41.6972%" y="591.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (182 samples, 0.11%)</title><rect x="43.8696%" y="613" width="0.1105%" height="15" fill="rgb(208,106,33)" fg:x="72241" fg:w="182"/><text x="44.1196%" y="623.50"></text></g><g><title>[libc.so.6] (182 samples, 0.11%)</title><rect x="43.8696%" y="597" width="0.1105%" height="15" fill="rgb(206,54,4)" fg:x="72241" fg:w="182"/><text x="44.1196%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (22,785 samples, 13.84%)</title><rect x="30.1557%" y="645" width="13.8366%" height="15" fill="rgb(213,3,15)" fg:x="49658" fg:w="22785"/><text x="30.4057%" y="655.50">bytes::bytes_mut::Byt..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (22,765 samples, 13.82%)</title><rect x="30.1678%" y="629" width="13.8245%" height="15" fill="rgb(252,211,39)" fg:x="49678" fg:w="22765"/><text x="30.4178%" y="639.50">bytes::bytes_mut::Byt..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (32 samples, 0.02%)</title><rect x="44.0117%" y="629" width="0.0194%" height="15" fill="rgb(223,6,36)" fg:x="72475" fg:w="32"/><text x="44.2617%" y="639.50"></text></g><g><title>_rjem_je_arena_bin_choose (21 samples, 0.01%)</title><rect x="44.1478%" y="341" width="0.0128%" height="15" fill="rgb(252,169,45)" fg:x="72699" fg:w="21"/><text x="44.3978%" y="351.50"></text></g><g><title>arena_get_bin (18 samples, 0.01%)</title><rect x="44.1496%" y="325" width="0.0109%" height="15" fill="rgb(212,48,26)" fg:x="72702" fg:w="18"/><text x="44.3996%" y="335.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (31 samples, 0.02%)</title><rect x="44.1605%" y="341" width="0.0188%" height="15" fill="rgb(251,102,48)" fg:x="72720" fg:w="31"/><text x="44.4105%" y="351.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (30 samples, 0.02%)</title><rect x="44.1611%" y="325" width="0.0182%" height="15" fill="rgb(243,208,16)" fg:x="72721" fg:w="30"/><text x="44.4111%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (27 samples, 0.02%)</title><rect x="44.1629%" y="309" width="0.0164%" height="15" fill="rgb(219,96,24)" fg:x="72724" fg:w="27"/><text x="44.4129%" y="319.50"></text></g><g><title>ph_remove_first (27 samples, 0.02%)</title><rect x="44.1629%" y="293" width="0.0164%" height="15" fill="rgb(219,33,29)" fg:x="72724" fg:w="27"/><text x="44.4129%" y="303.50"></text></g><g><title>cfs_lu (35 samples, 0.02%)</title><rect x="44.2273%" y="325" width="0.0213%" height="15" fill="rgb(223,176,5)" fg:x="72830" fg:w="35"/><text x="44.4773%" y="335.50"></text></g><g><title>arena_slab_reg_alloc_batch (106 samples, 0.06%)</title><rect x="44.1854%" y="341" width="0.0644%" height="15" fill="rgb(228,140,14)" fg:x="72761" fg:w="106"/><text x="44.4354%" y="351.50"></text></g><g><title>edata_nfree_get (23 samples, 0.01%)</title><rect x="44.2540%" y="341" width="0.0140%" height="15" fill="rgb(217,179,31)" fg:x="72874" fg:w="23"/><text x="44.5040%" y="351.50"></text></g><g><title>pthread_mutex_trylock (70 samples, 0.04%)</title><rect x="44.2686%" y="309" width="0.0425%" height="15" fill="rgb(230,9,30)" fg:x="72898" fg:w="70"/><text x="44.5186%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (73 samples, 0.04%)</title><rect x="44.2680%" y="325" width="0.0443%" height="15" fill="rgb(230,136,20)" fg:x="72897" fg:w="73"/><text x="44.5180%" y="335.50"></text></g><g><title>malloc_mutex_lock (77 samples, 0.05%)</title><rect x="44.2680%" y="341" width="0.0468%" height="15" fill="rgb(215,210,22)" fg:x="72897" fg:w="77"/><text x="44.5180%" y="351.50"></text></g><g><title>[libc.so.6] (20 samples, 0.01%)</title><rect x="44.3154%" y="325" width="0.0121%" height="15" fill="rgb(218,43,5)" fg:x="72975" fg:w="20"/><text x="44.5654%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (331 samples, 0.20%)</title><rect x="44.1289%" y="357" width="0.2010%" height="15" fill="rgb(216,11,5)" fg:x="72668" fg:w="331"/><text x="44.3789%" y="367.50"></text></g><g><title>malloc_mutex_unlock (25 samples, 0.02%)</title><rect x="44.3148%" y="341" width="0.0152%" height="15" fill="rgb(209,82,29)" fg:x="72974" fg:w="25"/><text x="44.5648%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (354 samples, 0.21%)</title><rect x="44.1210%" y="373" width="0.2150%" height="15" fill="rgb(244,115,12)" fg:x="72655" fg:w="354"/><text x="44.3710%" y="383.50"></text></g><g><title>imalloc_no_sample (396 samples, 0.24%)</title><rect x="44.1144%" y="437" width="0.2405%" height="15" fill="rgb(222,82,18)" fg:x="72644" fg:w="396"/><text x="44.3644%" y="447.50"></text></g><g><title>iallocztm (396 samples, 0.24%)</title><rect x="44.1144%" y="421" width="0.2405%" height="15" fill="rgb(249,227,8)" fg:x="72644" fg:w="396"/><text x="44.3644%" y="431.50"></text></g><g><title>arena_malloc (396 samples, 0.24%)</title><rect x="44.1144%" y="405" width="0.2405%" height="15" fill="rgb(253,141,45)" fg:x="72644" fg:w="396"/><text x="44.3644%" y="415.50"></text></g><g><title>tcache_alloc_small (396 samples, 0.24%)</title><rect x="44.1144%" y="389" width="0.2405%" height="15" fill="rgb(234,184,4)" fg:x="72644" fg:w="396"/><text x="44.3644%" y="399.50"></text></g><g><title>imalloc_body (404 samples, 0.25%)</title><rect x="44.1131%" y="453" width="0.2453%" height="15" fill="rgb(218,194,23)" fg:x="72642" fg:w="404"/><text x="44.3631%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (413 samples, 0.25%)</title><rect x="44.1101%" y="485" width="0.2508%" height="15" fill="rgb(235,66,41)" fg:x="72637" fg:w="413"/><text x="44.3601%" y="495.50"></text></g><g><title>imalloc (408 samples, 0.25%)</title><rect x="44.1131%" y="469" width="0.2478%" height="15" fill="rgb(245,217,1)" fg:x="72642" fg:w="408"/><text x="44.3631%" y="479.50"></text></g><g><title>cache_bin_alloc_easy (151 samples, 0.09%)</title><rect x="44.4392%" y="453" width="0.0917%" height="15" fill="rgb(229,91,1)" fg:x="73179" fg:w="151"/><text x="44.6892%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (151 samples, 0.09%)</title><rect x="44.4392%" y="437" width="0.0917%" height="15" fill="rgb(207,101,30)" fg:x="73179" fg:w="151"/><text x="44.6892%" y="447.50"></text></g><g><title>sz_size2index_usize_fastpath (34 samples, 0.02%)</title><rect x="44.5370%" y="453" width="0.0206%" height="15" fill="rgb(223,82,49)" fg:x="73340" fg:w="34"/><text x="44.7870%" y="463.50"></text></g><g><title>sz_index2size_lookup_impl (34 samples, 0.02%)</title><rect x="44.5370%" y="437" width="0.0206%" height="15" fill="rgb(218,167,17)" fg:x="73340" fg:w="34"/><text x="44.7870%" y="447.50"></text></g><g><title>__rust_alloc (745 samples, 0.45%)</title><rect x="44.1083%" y="517" width="0.4524%" height="15" fill="rgb(208,103,14)" fg:x="72634" fg:w="745"/><text x="44.3583%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (745 samples, 0.45%)</title><rect x="44.1083%" y="501" width="0.4524%" height="15" fill="rgb(238,20,8)" fg:x="72634" fg:w="745"/><text x="44.3583%" y="511.50"></text></g><g><title>_rjem_malloc (329 samples, 0.20%)</title><rect x="44.3609%" y="485" width="0.1998%" height="15" fill="rgb(218,80,54)" fg:x="73050" fg:w="329"/><text x="44.6109%" y="495.50"></text></g><g><title>imalloc_fastpath (310 samples, 0.19%)</title><rect x="44.3724%" y="469" width="0.1883%" height="15" fill="rgb(240,144,17)" fg:x="73069" fg:w="310"/><text x="44.6224%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (868 samples, 0.53%)</title><rect x="44.0482%" y="597" width="0.5271%" height="15" fill="rgb(245,27,50)" fg:x="72535" fg:w="868"/><text x="44.2982%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (770 samples, 0.47%)</title><rect x="44.1077%" y="581" width="0.4676%" height="15" fill="rgb(251,51,7)" fg:x="72633" fg:w="770"/><text x="44.3577%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (769 samples, 0.47%)</title><rect x="44.1083%" y="565" width="0.4670%" height="15" fill="rgb(245,217,29)" fg:x="72634" fg:w="769"/><text x="44.3583%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (769 samples, 0.47%)</title><rect x="44.1083%" y="549" width="0.4670%" height="15" fill="rgb(221,176,29)" fg:x="72634" fg:w="769"/><text x="44.3583%" y="559.50"></text></g><g><title>alloc::alloc::alloc (769 samples, 0.47%)</title><rect x="44.1083%" y="533" width="0.4670%" height="15" fill="rgb(212,180,24)" fg:x="72634" fg:w="769"/><text x="44.3583%" y="543.50"></text></g><g><title>core::ptr::read_volatile (24 samples, 0.01%)</title><rect x="44.5607%" y="517" width="0.0146%" height="15" fill="rgb(254,24,2)" fg:x="73379" fg:w="24"/><text x="44.8107%" y="527.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (895 samples, 0.54%)</title><rect x="44.0427%" y="613" width="0.5435%" height="15" fill="rgb(230,100,2)" fg:x="72526" fg:w="895"/><text x="44.2927%" y="623.50"></text></g><g><title>bytes::bytes_mut::rebuild_vec (18 samples, 0.01%)</title><rect x="44.5753%" y="597" width="0.0109%" height="15" fill="rgb(219,142,25)" fg:x="73403" fg:w="18"/><text x="44.8253%" y="607.50"></text></g><g><title>bytes::bytes_mut::increment_shared (91 samples, 0.06%)</title><rect x="44.5862%" y="613" width="0.0553%" height="15" fill="rgb(240,73,43)" fg:x="73421" fg:w="91"/><text x="44.8362%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (91 samples, 0.06%)</title><rect x="44.5862%" y="597" width="0.0553%" height="15" fill="rgb(214,114,15)" fg:x="73421" fg:w="91"/><text x="44.8362%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (91 samples, 0.06%)</title><rect x="44.5862%" y="581" width="0.0553%" height="15" fill="rgb(207,130,4)" fg:x="73421" fg:w="91"/><text x="44.8362%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (1,005 samples, 0.61%)</title><rect x="44.0318%" y="629" width="0.6103%" height="15" fill="rgb(221,25,40)" fg:x="72508" fg:w="1005"/><text x="44.2818%" y="639.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (28,550 samples, 17.34%)</title><rect x="27.3076%" y="661" width="17.3375%" height="15" fill="rgb(241,184,7)" fg:x="44968" fg:w="28550"/><text x="27.5576%" y="671.50">fastwebsockets::ReadHalf::p..</text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1,075 samples, 0.65%)</title><rect x="43.9923%" y="645" width="0.6528%" height="15" fill="rgb(235,159,4)" fg:x="72443" fg:w="1075"/><text x="44.2423%" y="655.50"></text></g><g><title>fastwebsockets::frame::Payload::to_mut (69 samples, 0.04%)</title><rect x="44.7678%" y="645" width="0.0419%" height="15" fill="rgb(214,87,48)" fg:x="73720" fg:w="69"/><text x="45.0178%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.04%)</title><rect x="55.5656%" y="613" width="0.0449%" height="15" fill="rgb(246,198,24)" fg:x="91501" fg:w="74"/><text x="55.8156%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_mut (67 samples, 0.04%)</title><rect x="55.6105%" y="613" width="0.0407%" height="15" fill="rgb(209,66,40)" fg:x="91575" fg:w="67"/><text x="55.8605%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (28 samples, 0.02%)</title><rect x="55.6792%" y="549" width="0.0170%" height="15" fill="rgb(233,147,39)" fg:x="91688" fg:w="28"/><text x="55.9292%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (28 samples, 0.02%)</title><rect x="55.6792%" y="533" width="0.0170%" height="15" fill="rgb(231,145,52)" fg:x="91688" fg:w="28"/><text x="55.9292%" y="543.50"></text></g><g><title>fastwebsockets::mask::unmask_easy::_{{closure}} (28 samples, 0.02%)</title><rect x="55.6792%" y="517" width="0.0170%" height="15" fill="rgb(206,20,26)" fg:x="91688" fg:w="28"/><text x="55.9292%" y="527.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (48,371 samples, 29.37%)</title><rect x="26.3251%" y="693" width="29.3741%" height="15" fill="rgb(238,220,4)" fg:x="43350" fg:w="48371"/><text x="26.5751%" y="703.50">fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_..</text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (47,318 samples, 28.73%)</title><rect x="26.9645%" y="677" width="28.7347%" height="15" fill="rgb(252,195,42)" fg:x="44403" fg:w="47318"/><text x="27.2145%" y="687.50">fastwebsockets::ReadHalf::read_frame_inner::_{..</text></g><g><title>fastwebsockets::frame::Frame::unmask (18,203 samples, 11.05%)</title><rect x="44.6451%" y="661" width="11.0541%" height="15" fill="rgb(209,10,6)" fg:x="73518" fg:w="18203"/><text x="44.8951%" y="671.50">fastwebsockets::..</text></g><g><title>fastwebsockets::mask::unmask (17,932 samples, 10.89%)</title><rect x="44.8097%" y="645" width="10.8895%" height="15" fill="rgb(229,3,52)" fg:x="73789" fg:w="17932"/><text x="45.0597%" y="655.50">fastwebsockets::..</text></g><g><title>fastwebsockets::mask::unmask_fallback (17,932 samples, 10.89%)</title><rect x="44.8097%" y="629" width="10.8895%" height="15" fill="rgb(253,49,37)" fg:x="73789" fg:w="17932"/><text x="45.0597%" y="639.50">fastwebsockets::..</text></g><g><title>fastwebsockets::mask::unmask_easy (79 samples, 0.05%)</title><rect x="55.6512%" y="613" width="0.0480%" height="15" fill="rgb(240,103,49)" fg:x="91642" fg:w="79"/><text x="55.9012%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (79 samples, 0.05%)</title><rect x="55.6512%" y="597" width="0.0480%" height="15" fill="rgb(250,182,30)" fg:x="91642" fg:w="79"/><text x="55.9012%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (79 samples, 0.05%)</title><rect x="55.6512%" y="581" width="0.0480%" height="15" fill="rgb(248,8,30)" fg:x="91642" fg:w="79"/><text x="55.9012%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (79 samples, 0.05%)</title><rect x="55.6512%" y="565" width="0.0480%" height="15" fill="rgb(237,120,30)" fg:x="91642" fg:w="79"/><text x="55.9012%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (49,708 samples, 30.19%)</title><rect x="25.7026%" y="725" width="30.1861%" height="15" fill="rgb(221,146,34)" fg:x="42325" fg:w="49708"/><text x="25.9526%" y="735.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Futur..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (49,708 samples, 30.19%)</title><rect x="25.7026%" y="709" width="30.1861%" height="15" fill="rgb(242,55,13)" fg:x="42325" fg:w="49708"/><text x="25.9526%" y="719.50">wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::We..</text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (312 samples, 0.19%)</title><rect x="55.6992%" y="693" width="0.1895%" height="15" fill="rgb(242,112,31)" fg:x="91721" fg:w="312"/><text x="55.9492%" y="703.50"></text></g><g><title>cache_bin_dalloc_easy (82 samples, 0.05%)</title><rect x="56.0162%" y="581" width="0.0498%" height="15" fill="rgb(249,192,27)" fg:x="92243" fg:w="82"/><text x="56.2662%" y="591.50"></text></g><g><title>cache_bin_full (40 samples, 0.02%)</title><rect x="56.0417%" y="565" width="0.0243%" height="15" fill="rgb(208,204,44)" fg:x="92285" fg:w="40"/><text x="56.2917%" y="575.50"></text></g><g><title>sz_index2size (43 samples, 0.03%)</title><rect x="56.0660%" y="581" width="0.0261%" height="15" fill="rgb(208,93,54)" fg:x="92325" fg:w="43"/><text x="56.3160%" y="591.50"></text></g><g><title>sz_index2size_lookup (43 samples, 0.03%)</title><rect x="56.0660%" y="565" width="0.0261%" height="15" fill="rgb(242,1,31)" fg:x="92325" fg:w="43"/><text x="56.3160%" y="575.50"></text></g><g><title>sz_index2size_lookup_impl (43 samples, 0.03%)</title><rect x="56.0660%" y="549" width="0.0261%" height="15" fill="rgb(241,83,25)" fg:x="92325" fg:w="43"/><text x="56.3160%" y="559.50"></text></g><g><title>_rjem_sdallocx (219 samples, 0.13%)</title><rect x="55.9652%" y="613" width="0.1330%" height="15" fill="rgb(205,169,50)" fg:x="92159" fg:w="219"/><text x="56.2152%" y="623.50"></text></g><g><title>free_fastpath (219 samples, 0.13%)</title><rect x="55.9652%" y="597" width="0.1330%" height="15" fill="rgb(239,186,37)" fg:x="92159" fg:w="219"/><text x="56.2152%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (248 samples, 0.15%)</title><rect x="55.9555%" y="677" width="0.1506%" height="15" fill="rgb(205,221,10)" fg:x="92143" fg:w="248"/><text x="56.2055%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (248 samples, 0.15%)</title><rect x="55.9555%" y="661" width="0.1506%" height="15" fill="rgb(218,196,15)" fg:x="92143" fg:w="248"/><text x="56.2055%" y="671.50"></text></g><g><title>__rust_dealloc (248 samples, 0.15%)</title><rect x="55.9555%" y="645" width="0.1506%" height="15" fill="rgb(218,196,35)" fg:x="92143" fg:w="248"/><text x="56.2055%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (248 samples, 0.15%)</title><rect x="55.9555%" y="629" width="0.1506%" height="15" fill="rgb(233,63,24)" fg:x="92143" fg:w="248"/><text x="56.2055%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (255 samples, 0.15%)</title><rect x="55.9518%" y="693" width="0.1549%" height="15" fill="rgb(225,8,4)" fg:x="92137" fg:w="255"/><text x="56.2018%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (374 samples, 0.23%)</title><rect x="55.8887%" y="725" width="0.2271%" height="15" fill="rgb(234,105,35)" fg:x="92033" fg:w="374"/><text x="56.1387%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (374 samples, 0.23%)</title><rect x="55.8887%" y="709" width="0.2271%" height="15" fill="rgb(236,21,32)" fg:x="92033" fg:w="374"/><text x="56.1387%" y="719.50"></text></g><g><title>__rust_alloc (29 samples, 0.02%)</title><rect x="56.1273%" y="613" width="0.0176%" height="15" fill="rgb(228,109,6)" fg:x="92426" fg:w="29"/><text x="56.3773%" y="623.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (29 samples, 0.02%)</title><rect x="56.1273%" y="597" width="0.0176%" height="15" fill="rgb(229,215,31)" fg:x="92426" fg:w="29"/><text x="56.3773%" y="607.50"></text></g><g><title>_rjem_malloc (29 samples, 0.02%)</title><rect x="56.1273%" y="581" width="0.0176%" height="15" fill="rgb(221,52,54)" fg:x="92426" fg:w="29"/><text x="56.3773%" y="591.50"></text></g><g><title>imalloc_fastpath (29 samples, 0.02%)</title><rect x="56.1273%" y="565" width="0.0176%" height="15" fill="rgb(252,129,43)" fg:x="92426" fg:w="29"/><text x="56.3773%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (50,588 samples, 30.72%)</title><rect x="25.4251%" y="757" width="30.7205%" height="15" fill="rgb(248,183,27)" fg:x="41868" fg:w="50588"/><text x="25.6751%" y="767.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (50,588 samples, 30.72%)</title><rect x="25.4251%" y="741" width="30.7205%" height="15" fill="rgb(250,0,22)" fg:x="41868" fg:w="50588"/><text x="25.6751%" y="751.50">&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (49 samples, 0.03%)</title><rect x="56.1158%" y="725" width="0.0298%" height="15" fill="rgb(213,166,10)" fg:x="92407" fg:w="49"/><text x="56.3658%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (46 samples, 0.03%)</title><rect x="56.1176%" y="709" width="0.0279%" height="15" fill="rgb(207,163,36)" fg:x="92410" fg:w="46"/><text x="56.3676%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (46 samples, 0.03%)</title><rect x="56.1176%" y="693" width="0.0279%" height="15" fill="rgb(208,122,22)" fg:x="92410" fg:w="46"/><text x="56.3676%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (31 samples, 0.02%)</title><rect x="56.1267%" y="677" width="0.0188%" height="15" fill="rgb(207,104,49)" fg:x="92425" fg:w="31"/><text x="56.3767%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.02%)</title><rect x="56.1273%" y="661" width="0.0182%" height="15" fill="rgb(248,211,50)" fg:x="92426" fg:w="30"/><text x="56.3773%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.02%)</title><rect x="56.1273%" y="645" width="0.0182%" height="15" fill="rgb(217,13,45)" fg:x="92426" fg:w="30"/><text x="56.3773%" y="655.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.02%)</title><rect x="56.1273%" y="629" width="0.0182%" height="15" fill="rgb(211,216,49)" fg:x="92426" fg:w="30"/><text x="56.3773%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (155 samples, 0.09%)</title><rect x="56.1808%" y="725" width="0.0941%" height="15" fill="rgb(221,58,53)" fg:x="92514" fg:w="155"/><text x="56.4308%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (155 samples, 0.09%)</title><rect x="56.1808%" y="709" width="0.0941%" height="15" fill="rgb(220,112,41)" fg:x="92514" fg:w="155"/><text x="56.4308%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (155 samples, 0.09%)</title><rect x="56.1808%" y="693" width="0.0941%" height="15" fill="rgb(236,38,28)" fg:x="92514" fg:w="155"/><text x="56.4308%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (146 samples, 0.09%)</title><rect x="56.1862%" y="677" width="0.0887%" height="15" fill="rgb(227,195,22)" fg:x="92523" fg:w="146"/><text x="56.4362%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (146 samples, 0.09%)</title><rect x="56.1862%" y="661" width="0.0887%" height="15" fill="rgb(214,55,33)" fg:x="92523" fg:w="146"/><text x="56.4362%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;wisp_mux::mux::inner::WsEvent,flume::async::AsyncSignal&gt;&gt;&gt; (116 samples, 0.07%)</title><rect x="56.2749%" y="725" width="0.0704%" height="15" fill="rgb(248,80,13)" fg:x="92669" fg:w="116"/><text x="56.5249%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.07%)</title><rect x="56.2749%" y="709" width="0.0704%" height="15" fill="rgb(238,52,6)" fg:x="92669" fg:w="116"/><text x="56.5249%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (110 samples, 0.07%)</title><rect x="56.2785%" y="693" width="0.0668%" height="15" fill="rgb(224,198,47)" fg:x="92675" fg:w="110"/><text x="56.5285%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (110 samples, 0.07%)</title><rect x="56.2785%" y="677" width="0.0668%" height="15" fill="rgb(233,171,20)" fg:x="92675" fg:w="110"/><text x="56.5285%" y="687.50"></text></g><g><title>core::mem::drop (121 samples, 0.07%)</title><rect x="56.3757%" y="693" width="0.0735%" height="15" fill="rgb(241,30,25)" fg:x="92835" fg:w="121"/><text x="56.6257%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;wisp_mux::mux::inner::WsEvent&gt;&gt;&gt; (121 samples, 0.07%)</title><rect x="56.3757%" y="677" width="0.0735%" height="15" fill="rgb(207,171,38)" fg:x="92835" fg:w="121"/><text x="56.6257%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.07%)</title><rect x="56.3757%" y="661" width="0.0735%" height="15" fill="rgb(234,70,1)" fg:x="92835" fg:w="121"/><text x="56.6257%" y="671.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (118 samples, 0.07%)</title><rect x="56.3775%" y="645" width="0.0717%" height="15" fill="rgb(232,178,18)" fg:x="92838" fg:w="118"/><text x="56.6275%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (96 samples, 0.06%)</title><rect x="56.3909%" y="629" width="0.0583%" height="15" fill="rgb(241,78,40)" fg:x="92860" fg:w="96"/><text x="56.6409%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_swap (96 samples, 0.06%)</title><rect x="56.3909%" y="613" width="0.0583%" height="15" fill="rgb(222,35,25)" fg:x="92860" fg:w="96"/><text x="56.6409%" y="623.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (51 samples, 0.03%)</title><rect x="56.4492%" y="693" width="0.0310%" height="15" fill="rgb(207,92,16)" fg:x="92956" fg:w="51"/><text x="56.6992%" y="703.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (640 samples, 0.39%)</title><rect x="56.3466%" y="725" width="0.3887%" height="15" fill="rgb(216,59,51)" fg:x="92787" fg:w="640"/><text x="56.5966%" y="735.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (640 samples, 0.39%)</title><rect x="56.3466%" y="709" width="0.3887%" height="15" fill="rgb(213,80,28)" fg:x="92787" fg:w="640"/><text x="56.5966%" y="719.50"></text></g><g><title>flume::wait_lock (413 samples, 0.25%)</title><rect x="56.4844%" y="693" width="0.2508%" height="15" fill="rgb(220,93,7)" fg:x="93014" fg:w="413"/><text x="56.7344%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (413 samples, 0.25%)</title><rect x="56.4844%" y="677" width="0.2508%" height="15" fill="rgb(225,24,44)" fg:x="93014" fg:w="413"/><text x="56.7344%" y="687.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (409 samples, 0.25%)</title><rect x="56.4868%" y="661" width="0.2484%" height="15" fill="rgb(243,74,40)" fg:x="93018" fg:w="409"/><text x="56.7368%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (402 samples, 0.24%)</title><rect x="56.4911%" y="645" width="0.2441%" height="15" fill="rgb(228,39,7)" fg:x="93025" fg:w="402"/><text x="56.7411%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (402 samples, 0.24%)</title><rect x="56.4911%" y="629" width="0.2441%" height="15" fill="rgb(227,79,8)" fg:x="93025" fg:w="402"/><text x="56.7411%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (33 samples, 0.02%)</title><rect x="56.7352%" y="709" width="0.0200%" height="15" fill="rgb(236,58,11)" fg:x="93427" fg:w="33"/><text x="56.9852%" y="719.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (1,153 samples, 0.70%)</title><rect x="56.1455%" y="757" width="0.7002%" height="15" fill="rgb(249,63,35)" fg:x="92456" fg:w="1153"/><text x="56.3955%" y="767.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (1,153 samples, 0.70%)</title><rect x="56.1455%" y="741" width="0.7002%" height="15" fill="rgb(252,114,16)" fg:x="92456" fg:w="1153"/><text x="56.3955%" y="751.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (182 samples, 0.11%)</title><rect x="56.7352%" y="725" width="0.1105%" height="15" fill="rgb(254,151,24)" fg:x="93427" fg:w="182"/><text x="56.9852%" y="735.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (146 samples, 0.09%)</title><rect x="56.7571%" y="709" width="0.0887%" height="15" fill="rgb(253,54,39)" fg:x="93463" fg:w="146"/><text x="57.0071%" y="719.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (146 samples, 0.09%)</title><rect x="56.7571%" y="693" width="0.0887%" height="15" fill="rgb(243,25,45)" fg:x="93463" fg:w="146"/><text x="57.0071%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (133 samples, 0.08%)</title><rect x="56.7650%" y="677" width="0.0808%" height="15" fill="rgb(234,134,9)" fg:x="93476" fg:w="133"/><text x="57.0150%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (133 samples, 0.08%)</title><rect x="56.7650%" y="661" width="0.0808%" height="15" fill="rgb(227,166,31)" fg:x="93476" fg:w="133"/><text x="57.0150%" y="671.50"></text></g><g><title>cache_bin_dalloc_easy (35 samples, 0.02%)</title><rect x="56.9769%" y="549" width="0.0213%" height="15" fill="rgb(245,143,41)" fg:x="93825" fg:w="35"/><text x="57.2269%" y="559.50"></text></g><g><title>cache_bin_full (18 samples, 0.01%)</title><rect x="56.9872%" y="533" width="0.0109%" height="15" fill="rgb(238,181,32)" fg:x="93842" fg:w="18"/><text x="57.2372%" y="543.50"></text></g><g><title>_rjem_sdallocx (105 samples, 0.06%)</title><rect x="56.9417%" y="581" width="0.0638%" height="15" fill="rgb(224,113,18)" fg:x="93767" fg:w="105"/><text x="57.1917%" y="591.50"></text></g><g><title>free_fastpath (105 samples, 0.06%)</title><rect x="56.9417%" y="565" width="0.0638%" height="15" fill="rgb(240,229,28)" fg:x="93767" fg:w="105"/><text x="57.1917%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (128 samples, 0.08%)</title><rect x="56.9380%" y="645" width="0.0777%" height="15" fill="rgb(250,185,3)" fg:x="93761" fg:w="128"/><text x="57.1880%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (128 samples, 0.08%)</title><rect x="56.9380%" y="629" width="0.0777%" height="15" fill="rgb(212,59,25)" fg:x="93761" fg:w="128"/><text x="57.1880%" y="639.50"></text></g><g><title>__rust_dealloc (128 samples, 0.08%)</title><rect x="56.9380%" y="613" width="0.0777%" height="15" fill="rgb(221,87,20)" fg:x="93761" fg:w="128"/><text x="57.1880%" y="623.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (128 samples, 0.08%)</title><rect x="56.9380%" y="597" width="0.0777%" height="15" fill="rgb(213,74,28)" fg:x="93761" fg:w="128"/><text x="57.1880%" y="607.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (17 samples, 0.01%)</title><rect x="57.0054%" y="581" width="0.0103%" height="15" fill="rgb(224,132,34)" fg:x="93872" fg:w="17"/><text x="57.2554%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.09%)</title><rect x="56.9289%" y="661" width="0.0881%" height="15" fill="rgb(222,101,24)" fg:x="93746" fg:w="145"/><text x="57.1789%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (52,449 samples, 31.85%)</title><rect x="25.1755%" y="837" width="31.8506%" height="15" fill="rgb(254,142,4)" fg:x="41457" fg:w="52449"/><text x="25.4255%" y="847.50">core::ops::function::impls::&lt;impl core::ops::functi..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (52,446 samples, 31.85%)</title><rect x="25.1773%" y="821" width="31.8488%" height="15" fill="rgb(230,229,49)" fg:x="41460" fg:w="52446"/><text x="25.4273%" y="831.50">wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (52,048 samples, 31.61%)</title><rect x="25.4190%" y="805" width="31.6071%" height="15" fill="rgb(238,70,47)" fg:x="41858" fg:w="52048"/><text x="25.6690%" y="815.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (52,048 samples, 31.61%)</title><rect x="25.4190%" y="789" width="31.6071%" height="15" fill="rgb(231,160,17)" fg:x="41858" fg:w="52048"/><text x="25.6690%" y="799.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (52,048 samples, 31.61%)</title><rect x="25.4190%" y="773" width="31.6071%" height="15" fill="rgb(218,68,53)" fg:x="41858" fg:w="52048"/><text x="25.6690%" y="783.50">&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as c..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (297 samples, 0.18%)</title><rect x="56.8457%" y="757" width="0.1804%" height="15" fill="rgb(236,111,10)" fg:x="93609" fg:w="297"/><text x="57.0957%" y="767.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (208 samples, 0.13%)</title><rect x="56.8998%" y="741" width="0.1263%" height="15" fill="rgb(224,34,41)" fg:x="93698" fg:w="208"/><text x="57.1498%" y="751.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (208 samples, 0.13%)</title><rect x="56.8998%" y="725" width="0.1263%" height="15" fill="rgb(241,118,19)" fg:x="93698" fg:w="208"/><text x="57.1498%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt;&gt; (208 samples, 0.13%)</title><rect x="56.8998%" y="709" width="0.1263%" height="15" fill="rgb(238,129,25)" fg:x="93698" fg:w="208"/><text x="57.1498%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (208 samples, 0.13%)</title><rect x="56.8998%" y="693" width="0.1263%" height="15" fill="rgb(238,22,31)" fg:x="93698" fg:w="208"/><text x="57.1498%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (208 samples, 0.13%)</title><rect x="56.8998%" y="677" width="0.1263%" height="15" fill="rgb(222,174,48)" fg:x="93698" fg:w="208"/><text x="57.1498%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (350 samples, 0.21%)</title><rect x="57.0261%" y="821" width="0.2125%" height="15" fill="rgb(206,152,40)" fg:x="93906" fg:w="350"/><text x="57.2761%" y="831.50"></text></g><g><title>core::ptr::swap (342 samples, 0.21%)</title><rect x="57.0309%" y="805" width="0.2077%" height="15" fill="rgb(218,99,54)" fg:x="93914" fg:w="342"/><text x="57.2809%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (339 samples, 0.21%)</title><rect x="57.0328%" y="789" width="0.2059%" height="15" fill="rgb(220,174,26)" fg:x="93917" fg:w="339"/><text x="57.2828%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (36 samples, 0.02%)</title><rect x="57.2386%" y="757" width="0.0219%" height="15" fill="rgb(245,116,9)" fg:x="94256" fg:w="36"/><text x="57.4886%" y="767.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (36 samples, 0.02%)</title><rect x="57.2386%" y="741" width="0.0219%" height="15" fill="rgb(209,72,35)" fg:x="94256" fg:w="36"/><text x="57.4886%" y="751.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (36 samples, 0.02%)</title><rect x="57.2386%" y="725" width="0.0219%" height="15" fill="rgb(226,126,21)" fg:x="94256" fg:w="36"/><text x="57.4886%" y="735.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (53,134 samples, 32.27%)</title><rect x="25.0115%" y="869" width="32.2666%" height="15" fill="rgb(227,192,1)" fg:x="41187" fg:w="53134"/><text x="25.2615%" y="879.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::f..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (53,134 samples, 32.27%)</title><rect x="25.0115%" y="853" width="32.2666%" height="15" fill="rgb(237,180,29)" fg:x="41187" fg:w="53134"/><text x="25.2615%" y="863.50">wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{c..</text></g><g><title>futures_util::async_await::random::shuffle (415 samples, 0.25%)</title><rect x="57.0261%" y="837" width="0.2520%" height="15" fill="rgb(230,197,35)" fg:x="93906" fg:w="415"/><text x="57.2761%" y="847.50"></text></g><g><title>futures_util::async_await::random::gen_index (65 samples, 0.04%)</title><rect x="57.2386%" y="821" width="0.0395%" height="15" fill="rgb(246,193,31)" fg:x="94256" fg:w="65"/><text x="57.4886%" y="831.50"></text></g><g><title>futures_util::async_await::random::random (65 samples, 0.04%)</title><rect x="57.2386%" y="805" width="0.0395%" height="15" fill="rgb(241,36,4)" fg:x="94256" fg:w="65"/><text x="57.4886%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (65 samples, 0.04%)</title><rect x="57.2386%" y="789" width="0.0395%" height="15" fill="rgb(241,130,17)" fg:x="94256" fg:w="65"/><text x="57.4886%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (65 samples, 0.04%)</title><rect x="57.2386%" y="773" width="0.0395%" height="15" fill="rgb(206,137,32)" fg:x="94256" fg:w="65"/><text x="57.4886%" y="783.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (29 samples, 0.02%)</title><rect x="57.2605%" y="757" width="0.0176%" height="15" fill="rgb(237,228,51)" fg:x="94292" fg:w="29"/><text x="57.5105%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::mux::inner::MuxInner&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;::handle_packet::{{closure}}&gt; (21 samples, 0.01%)</title><rect x="57.2860%" y="869" width="0.0128%" height="15" fill="rgb(243,6,42)" fg:x="94334" fg:w="21"/><text x="57.5360%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (247 samples, 0.15%)</title><rect x="57.5101%" y="837" width="0.1500%" height="15" fill="rgb(251,74,28)" fg:x="94703" fg:w="247"/><text x="57.7601%" y="847.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (247 samples, 0.15%)</title><rect x="57.5101%" y="821" width="0.1500%" height="15" fill="rgb(218,20,49)" fg:x="94703" fg:w="247"/><text x="57.7601%" y="831.50"></text></g><g><title>inallocx (50 samples, 0.03%)</title><rect x="57.6953%" y="597" width="0.0304%" height="15" fill="rgb(238,28,14)" fg:x="95008" fg:w="50"/><text x="57.9453%" y="607.50"></text></g><g><title>aligned_usize_get (46 samples, 0.03%)</title><rect x="57.6977%" y="581" width="0.0279%" height="15" fill="rgb(229,40,46)" fg:x="95012" fg:w="46"/><text x="57.9477%" y="591.50"></text></g><g><title>sz_s2u (46 samples, 0.03%)</title><rect x="57.6977%" y="565" width="0.0279%" height="15" fill="rgb(244,195,20)" fg:x="95012" fg:w="46"/><text x="57.9477%" y="575.50"></text></g><g><title>sz_s2u_compute (42 samples, 0.03%)</title><rect x="57.7002%" y="549" width="0.0255%" height="15" fill="rgb(253,56,35)" fg:x="95016" fg:w="42"/><text x="57.9502%" y="559.50"></text></g><g><title>arena_get_from_edata (23 samples, 0.01%)</title><rect x="57.7457%" y="517" width="0.0140%" height="15" fill="rgb(210,149,44)" fg:x="95091" fg:w="23"/><text x="57.9957%" y="527.50"></text></g><g><title>atomic_load_p (23 samples, 0.01%)</title><rect x="57.7457%" y="501" width="0.0140%" height="15" fill="rgb(240,135,12)" fg:x="95091" fg:w="23"/><text x="57.9957%" y="511.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (20 samples, 0.01%)</title><rect x="57.7663%" y="501" width="0.0121%" height="15" fill="rgb(251,24,50)" fg:x="95125" fg:w="20"/><text x="58.0163%" y="511.50"></text></g><g><title>pa_nactive_sub (23 samples, 0.01%)</title><rect x="57.7858%" y="485" width="0.0140%" height="15" fill="rgb(243,200,47)" fg:x="95157" fg:w="23"/><text x="58.0358%" y="495.50"></text></g><g><title>atomic_fetch_sub_zu (23 samples, 0.01%)</title><rect x="57.7858%" y="469" width="0.0140%" height="15" fill="rgb(224,166,26)" fg:x="95157" fg:w="23"/><text x="58.0358%" y="479.50"></text></g><g><title>_rjem_je_pa_dalloc (37 samples, 0.02%)</title><rect x="57.7785%" y="501" width="0.0225%" height="15" fill="rgb(233,0,47)" fg:x="95145" fg:w="37"/><text x="58.0285%" y="511.50"></text></g><g><title>[libc.so.6] (30 samples, 0.02%)</title><rect x="57.8046%" y="485" width="0.0182%" height="15" fill="rgb(253,80,5)" fg:x="95188" fg:w="30"/><text x="58.0546%" y="495.50"></text></g><g><title>atomic_load_zu (17 samples, 0.01%)</title><rect x="57.8331%" y="469" width="0.0103%" height="15" fill="rgb(214,133,25)" fg:x="95235" fg:w="17"/><text x="58.0831%" y="479.50"></text></g><g><title>extent_deactivate_locked (78 samples, 0.05%)</title><rect x="57.8435%" y="469" width="0.0474%" height="15" fill="rgb(209,27,14)" fg:x="95252" fg:w="78"/><text x="58.0935%" y="479.50"></text></g><g><title>extent_deactivate_locked_impl (78 samples, 0.05%)</title><rect x="57.8435%" y="453" width="0.0474%" height="15" fill="rgb(219,102,51)" fg:x="95252" fg:w="78"/><text x="58.0935%" y="463.50"></text></g><g><title>_rjem_je_eset_insert (64 samples, 0.04%)</title><rect x="57.8520%" y="437" width="0.0389%" height="15" fill="rgb(237,18,16)" fg:x="95266" fg:w="64"/><text x="58.1020%" y="447.50"></text></g><g><title>extent_can_acquire_neighbor (26 samples, 0.02%)</title><rect x="57.9261%" y="405" width="0.0158%" height="15" fill="rgb(241,85,17)" fg:x="95388" fg:w="26"/><text x="58.1761%" y="415.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (69 samples, 0.04%)</title><rect x="57.9078%" y="437" width="0.0419%" height="15" fill="rgb(236,90,42)" fg:x="95358" fg:w="69"/><text x="58.1578%" y="447.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (67 samples, 0.04%)</title><rect x="57.9091%" y="421" width="0.0407%" height="15" fill="rgb(249,57,21)" fg:x="95360" fg:w="67"/><text x="58.1591%" y="431.50"></text></g><g><title>atomic_load_zu (21 samples, 0.01%)</title><rect x="57.9759%" y="389" width="0.0128%" height="15" fill="rgb(243,12,36)" fg:x="95470" fg:w="21"/><text x="58.2259%" y="399.50"></text></g><g><title>eset_stats_sub (24 samples, 0.01%)</title><rect x="57.9759%" y="405" width="0.0146%" height="15" fill="rgb(253,128,47)" fg:x="95470" fg:w="24"/><text x="58.2259%" y="415.50"></text></g><g><title>_rjem_je_eset_remove (62 samples, 0.04%)</title><rect x="57.9540%" y="421" width="0.0377%" height="15" fill="rgb(207,33,20)" fg:x="95434" fg:w="62"/><text x="58.2040%" y="431.50"></text></g><g><title>_rjem_je_edata_avail_insert (29 samples, 0.02%)</title><rect x="58.0111%" y="373" width="0.0176%" height="15" fill="rgb(233,215,35)" fg:x="95528" fg:w="29"/><text x="58.2611%" y="383.50"></text></g><g><title>ph_insert (29 samples, 0.02%)</title><rect x="58.0111%" y="357" width="0.0176%" height="15" fill="rgb(249,188,52)" fg:x="95528" fg:w="29"/><text x="58.2611%" y="367.50"></text></g><g><title>malloc_mutex_trylock_final (25 samples, 0.02%)</title><rect x="58.0287%" y="357" width="0.0152%" height="15" fill="rgb(225,12,32)" fg:x="95557" fg:w="25"/><text x="58.2787%" y="367.50"></text></g><g><title>pthread_mutex_trylock (23 samples, 0.01%)</title><rect x="58.0299%" y="341" width="0.0140%" height="15" fill="rgb(247,98,14)" fg:x="95559" fg:w="23"/><text x="58.2799%" y="351.50"></text></g><g><title>_rjem_je_edata_cache_put (58 samples, 0.04%)</title><rect x="58.0105%" y="389" width="0.0352%" height="15" fill="rgb(247,219,48)" fg:x="95527" fg:w="58"/><text x="58.2605%" y="399.50"></text></g><g><title>malloc_mutex_lock (28 samples, 0.02%)</title><rect x="58.0287%" y="373" width="0.0170%" height="15" fill="rgb(253,60,48)" fg:x="95557" fg:w="28"/><text x="58.2787%" y="383.50"></text></g><g><title>extent_try_coalesce_large (273 samples, 0.17%)</title><rect x="57.8908%" y="469" width="0.1658%" height="15" fill="rgb(245,15,52)" fg:x="95330" fg:w="273"/><text x="58.1408%" y="479.50"></text></g><g><title>extent_try_coalesce_impl (267 samples, 0.16%)</title><rect x="57.8945%" y="453" width="0.1621%" height="15" fill="rgb(220,133,28)" fg:x="95336" fg:w="267"/><text x="58.1445%" y="463.50"></text></g><g><title>extent_coalesce (175 samples, 0.11%)</title><rect x="57.9503%" y="437" width="0.1063%" height="15" fill="rgb(217,180,4)" fg:x="95428" fg:w="175"/><text x="58.2003%" y="447.50"></text></g><g><title>extent_merge_impl (107 samples, 0.06%)</title><rect x="57.9916%" y="421" width="0.0650%" height="15" fill="rgb(251,24,1)" fg:x="95496" fg:w="107"/><text x="58.2416%" y="431.50"></text></g><g><title>extent_merge_impl (90 samples, 0.05%)</title><rect x="58.0020%" y="405" width="0.0547%" height="15" fill="rgb(212,185,49)" fg:x="95513" fg:w="90"/><text x="58.2520%" y="415.50"></text></g><g><title>_rjem_je_extent_record (397 samples, 0.24%)</title><rect x="57.8253%" y="485" width="0.2411%" height="15" fill="rgb(215,175,22)" fg:x="95222" fg:w="397"/><text x="58.0753%" y="495.50"></text></g><g><title>large_dalloc_finish_impl (511 samples, 0.31%)</title><rect x="57.7597%" y="517" width="0.3103%" height="15" fill="rgb(250,205,14)" fg:x="95114" fg:w="511"/><text x="58.0097%" y="527.50"></text></g><g><title>pac_dalloc_impl (443 samples, 0.27%)</title><rect x="57.8010%" y="501" width="0.2690%" height="15" fill="rgb(225,211,22)" fg:x="95182" fg:w="443"/><text x="58.0510%" y="511.50"></text></g><g><title>locked_inc_u64 (27 samples, 0.02%)</title><rect x="58.0767%" y="469" width="0.0164%" height="15" fill="rgb(251,179,42)" fg:x="95636" fg:w="27"/><text x="58.3267%" y="479.50"></text></g><g><title>atomic_fetch_add_u64 (27 samples, 0.02%)</title><rect x="58.0767%" y="453" width="0.0164%" height="15" fill="rgb(208,216,51)" fg:x="95636" fg:w="27"/><text x="58.3267%" y="463.50"></text></g><g><title>arena_large_dalloc_stats_update (42 samples, 0.03%)</title><rect x="58.0736%" y="485" width="0.0255%" height="15" fill="rgb(235,36,11)" fg:x="95631" fg:w="42"/><text x="58.3236%" y="495.50"></text></g><g><title>_rjem_je_large_dalloc (591 samples, 0.36%)</title><rect x="57.7427%" y="533" width="0.3589%" height="15" fill="rgb(213,189,28)" fg:x="95086" fg:w="591"/><text x="57.9927%" y="543.50"></text></g><g><title>large_dalloc_prep_impl (52 samples, 0.03%)</title><rect x="58.0700%" y="517" width="0.0316%" height="15" fill="rgb(227,203,42)" fg:x="95625" fg:w="52"/><text x="58.3200%" y="527.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (46 samples, 0.03%)</title><rect x="58.0736%" y="501" width="0.0279%" height="15" fill="rgb(244,72,36)" fg:x="95631" fg:w="46"/><text x="58.3236%" y="511.50"></text></g><g><title>arena_dalloc_large (627 samples, 0.38%)</title><rect x="57.7323%" y="549" width="0.3808%" height="15" fill="rgb(213,53,17)" fg:x="95069" fg:w="627"/><text x="57.9823%" y="559.50"></text></g><g><title>isdalloct (664 samples, 0.40%)</title><rect x="57.7257%" y="581" width="0.4032%" height="15" fill="rgb(207,167,3)" fg:x="95058" fg:w="664"/><text x="57.9757%" y="591.50"></text></g><g><title>arena_sdalloc (664 samples, 0.40%)</title><rect x="57.7257%" y="565" width="0.4032%" height="15" fill="rgb(216,98,30)" fg:x="95058" fg:w="664"/><text x="57.9757%" y="575.50"></text></g><g><title>tcache_dalloc_small (26 samples, 0.02%)</title><rect x="58.1131%" y="549" width="0.0158%" height="15" fill="rgb(236,123,15)" fg:x="95696" fg:w="26"/><text x="58.3631%" y="559.50"></text></g><g><title>cache_bin_dalloc_easy (26 samples, 0.02%)</title><rect x="58.1131%" y="533" width="0.0158%" height="15" fill="rgb(248,81,50)" fg:x="95696" fg:w="26"/><text x="58.3631%" y="543.50"></text></g><g><title>cache_bin_full (22 samples, 0.01%)</title><rect x="58.1155%" y="517" width="0.0134%" height="15" fill="rgb(214,120,4)" fg:x="95700" fg:w="22"/><text x="58.3655%" y="527.50"></text></g><g><title>sz_size2index (45 samples, 0.03%)</title><rect x="58.1289%" y="581" width="0.0273%" height="15" fill="rgb(208,179,34)" fg:x="95722" fg:w="45"/><text x="58.3789%" y="591.50"></text></g><g><title>sz_size2index_compute (40 samples, 0.02%)</title><rect x="58.1319%" y="565" width="0.0243%" height="15" fill="rgb(227,140,7)" fg:x="95727" fg:w="40"/><text x="58.3819%" y="575.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (17 samples, 0.01%)</title><rect x="58.2321%" y="517" width="0.0103%" height="15" fill="rgb(214,22,6)" fg:x="95892" fg:w="17"/><text x="58.4821%" y="527.50"></text></g><g><title>malloc_mutex_trylock_final (23 samples, 0.01%)</title><rect x="58.2813%" y="437" width="0.0140%" height="15" fill="rgb(207,137,27)" fg:x="95973" fg:w="23"/><text x="58.5313%" y="447.50"></text></g><g><title>pthread_mutex_trylock (23 samples, 0.01%)</title><rect x="58.2813%" y="421" width="0.0140%" height="15" fill="rgb(210,8,46)" fg:x="95973" fg:w="23"/><text x="58.5313%" y="431.50"></text></g><g><title>malloc_mutex_lock (24 samples, 0.01%)</title><rect x="58.2813%" y="453" width="0.0146%" height="15" fill="rgb(240,16,54)" fg:x="95973" fg:w="24"/><text x="58.5313%" y="463.50"></text></g><g><title>rtree_leaf_elm_read (17 samples, 0.01%)</title><rect x="58.3099%" y="421" width="0.0103%" height="15" fill="rgb(211,209,29)" fg:x="96020" fg:w="17"/><text x="58.5599%" y="431.50"></text></g><g><title>rtree_leaf_elm_bits_read (17 samples, 0.01%)</title><rect x="58.3099%" y="405" width="0.0103%" height="15" fill="rgb(226,228,24)" fg:x="96020" fg:w="17"/><text x="58.5599%" y="415.50"></text></g><g><title>atomic_load_p (17 samples, 0.01%)</title><rect x="58.3099%" y="389" width="0.0103%" height="15" fill="rgb(222,84,9)" fg:x="96020" fg:w="17"/><text x="58.5599%" y="399.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (43 samples, 0.03%)</title><rect x="58.2971%" y="453" width="0.0261%" height="15" fill="rgb(234,203,30)" fg:x="95999" fg:w="43"/><text x="58.5471%" y="463.50"></text></g><g><title>emap_edata_lookup_batch (43 samples, 0.03%)</title><rect x="58.2971%" y="437" width="0.0261%" height="15" fill="rgb(238,109,14)" fg:x="95999" fg:w="43"/><text x="58.5471%" y="447.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (134 samples, 0.08%)</title><rect x="58.2424%" y="501" width="0.0814%" height="15" fill="rgb(233,206,34)" fg:x="95909" fg:w="134"/><text x="58.4924%" y="511.50"></text></g><g><title>tcache_bin_flush_bottom (133 samples, 0.08%)</title><rect x="58.2431%" y="485" width="0.0808%" height="15" fill="rgb(220,167,47)" fg:x="95910" fg:w="133"/><text x="58.4931%" y="495.50"></text></g><g><title>tcache_bin_flush_impl (128 samples, 0.08%)</title><rect x="58.2461%" y="469" width="0.0777%" height="15" fill="rgb(238,105,10)" fg:x="95915" fg:w="128"/><text x="58.4961%" y="479.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (205 samples, 0.12%)</title><rect x="58.2024%" y="533" width="0.1245%" height="15" fill="rgb(213,227,17)" fg:x="95843" fg:w="205"/><text x="58.4524%" y="543.50"></text></g><g><title>tcache_gc_small (139 samples, 0.08%)</title><rect x="58.2424%" y="517" width="0.0844%" height="15" fill="rgb(217,132,38)" fg:x="95909" fg:w="139"/><text x="58.4924%" y="527.50"></text></g><g><title>atomic_fence (20 samples, 0.01%)</title><rect x="58.3348%" y="469" width="0.0121%" height="15" fill="rgb(242,146,4)" fg:x="96061" fg:w="20"/><text x="58.5848%" y="479.50"></text></g><g><title>te_adjust_thresholds_helper (32 samples, 0.02%)</title><rect x="58.3311%" y="533" width="0.0194%" height="15" fill="rgb(212,61,9)" fg:x="96055" fg:w="32"/><text x="58.5811%" y="543.50"></text></g><g><title>te_ctx_next_event_set (30 samples, 0.02%)</title><rect x="58.3323%" y="517" width="0.0182%" height="15" fill="rgb(247,126,22)" fg:x="96057" fg:w="30"/><text x="58.5823%" y="527.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (29 samples, 0.02%)</title><rect x="58.3329%" y="501" width="0.0176%" height="15" fill="rgb(220,196,2)" fg:x="96058" fg:w="29"/><text x="58.5829%" y="511.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (28 samples, 0.02%)</title><rect x="58.3335%" y="485" width="0.0170%" height="15" fill="rgb(208,46,4)" fg:x="96059" fg:w="28"/><text x="58.5835%" y="495.50"></text></g><g><title>_rjem_je_te_event_trigger (290 samples, 0.18%)</title><rect x="58.1787%" y="549" width="0.1761%" height="15" fill="rgb(252,104,46)" fg:x="95804" fg:w="290"/><text x="58.4287%" y="559.50"></text></g><g><title>isfree (1,050 samples, 0.64%)</title><rect x="57.7257%" y="597" width="0.6376%" height="15" fill="rgb(237,152,48)" fg:x="95058" fg:w="1050"/><text x="57.9757%" y="607.50"></text></g><g><title>thread_dalloc_event (341 samples, 0.21%)</title><rect x="58.1562%" y="581" width="0.2071%" height="15" fill="rgb(221,59,37)" fg:x="95767" fg:w="341"/><text x="58.4062%" y="591.50"></text></g><g><title>te_event_advance (341 samples, 0.21%)</title><rect x="58.1562%" y="565" width="0.2071%" height="15" fill="rgb(209,202,51)" fg:x="95767" fg:w="341"/><text x="58.4062%" y="575.50"></text></g><g><title>_rjem_je_sdallocx_default (1,143 samples, 0.69%)</title><rect x="57.6819%" y="613" width="0.6941%" height="15" fill="rgb(228,81,30)" fg:x="94986" fg:w="1143"/><text x="57.9319%" y="623.50"></text></g><g><title>tsd_fetch_min (18 samples, 0.01%)</title><rect x="58.3651%" y="597" width="0.0109%" height="15" fill="rgb(227,42,39)" fg:x="96111" fg:w="18"/><text x="58.6151%" y="607.50"></text></g><g><title>tsd_fetch_impl (18 samples, 0.01%)</title><rect x="58.3651%" y="581" width="0.0109%" height="15" fill="rgb(221,26,2)" fg:x="96111" fg:w="18"/><text x="58.6151%" y="591.50"></text></g><g><title>core::mem::drop (1,158 samples, 0.70%)</title><rect x="57.6783%" y="789" width="0.7032%" height="15" fill="rgb(254,61,31)" fg:x="94980" fg:w="1158"/><text x="57.9283%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1,158 samples, 0.70%)</title><rect x="57.6783%" y="773" width="0.7032%" height="15" fill="rgb(222,173,38)" fg:x="94980" fg:w="1158"/><text x="57.9283%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1,157 samples, 0.70%)</title><rect x="57.6789%" y="757" width="0.7026%" height="15" fill="rgb(218,50,12)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,157 samples, 0.70%)</title><rect x="57.6789%" y="741" width="0.7026%" height="15" fill="rgb(223,88,40)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,157 samples, 0.70%)</title><rect x="57.6789%" y="725" width="0.7026%" height="15" fill="rgb(237,54,19)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,157 samples, 0.70%)</title><rect x="57.6789%" y="709" width="0.7026%" height="15" fill="rgb(251,129,25)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,157 samples, 0.70%)</title><rect x="57.6789%" y="693" width="0.7026%" height="15" fill="rgb(238,97,19)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,157 samples, 0.70%)</title><rect x="57.6789%" y="677" width="0.7026%" height="15" fill="rgb(240,169,18)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1,157 samples, 0.70%)</title><rect x="57.6789%" y="661" width="0.7026%" height="15" fill="rgb(230,187,49)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="671.50"></text></g><g><title>__rust_dealloc (1,157 samples, 0.70%)</title><rect x="57.6789%" y="645" width="0.7026%" height="15" fill="rgb(209,44,26)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,157 samples, 0.70%)</title><rect x="57.6789%" y="629" width="0.7026%" height="15" fill="rgb(244,0,6)" fg:x="94981" fg:w="1157"/><text x="57.9289%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (135 samples, 0.08%)</title><rect x="58.3815%" y="789" width="0.0820%" height="15" fill="rgb(248,18,21)" fg:x="96138" fg:w="135"/><text x="58.6315%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (135 samples, 0.08%)</title><rect x="58.3815%" y="773" width="0.0820%" height="15" fill="rgb(245,180,19)" fg:x="96138" fg:w="135"/><text x="58.6315%" y="783.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1,370 samples, 0.83%)</title><rect x="57.6698%" y="821" width="0.8320%" height="15" fill="rgb(252,118,36)" fg:x="94966" fg:w="1370"/><text x="57.9198%" y="831.50"></text></g><g><title>bytes::bytes_mut::release_shared (1,359 samples, 0.83%)</title><rect x="57.6765%" y="805" width="0.8253%" height="15" fill="rgb(210,224,19)" fg:x="94977" fg:w="1359"/><text x="57.9265%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (63 samples, 0.04%)</title><rect x="58.4635%" y="789" width="0.0383%" height="15" fill="rgb(218,30,24)" fg:x="96273" fg:w="63"/><text x="58.7135%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (63 samples, 0.04%)</title><rect x="58.4635%" y="773" width="0.0383%" height="15" fill="rgb(219,75,50)" fg:x="96273" fg:w="63"/><text x="58.7135%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1,396 samples, 0.85%)</title><rect x="57.6698%" y="837" width="0.8477%" height="15" fill="rgb(234,72,50)" fg:x="94966" fg:w="1396"/><text x="57.9198%" y="847.50"></text></g><g><title>_rjem_sdallocx (26 samples, 0.02%)</title><rect x="58.5017%" y="821" width="0.0158%" height="15" fill="rgb(219,100,48)" fg:x="96336" fg:w="26"/><text x="58.7517%" y="831.50"></text></g><g><title>free_fastpath (26 samples, 0.02%)</title><rect x="58.5017%" y="805" width="0.0158%" height="15" fill="rgb(253,5,41)" fg:x="96336" fg:w="26"/><text x="58.7517%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (87 samples, 0.05%)</title><rect x="58.5218%" y="837" width="0.0528%" height="15" fill="rgb(247,181,11)" fg:x="96369" fg:w="87"/><text x="58.7718%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (87 samples, 0.05%)</title><rect x="58.5218%" y="821" width="0.0528%" height="15" fill="rgb(222,223,25)" fg:x="96369" fg:w="87"/><text x="58.7718%" y="831.50"></text></g><g><title>tokio::runtime::task::state::State::load (18 samples, 0.01%)</title><rect x="58.6250%" y="693" width="0.0109%" height="15" fill="rgb(214,198,28)" fg:x="96539" fg:w="18"/><text x="58.8750%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.01%)</title><rect x="58.6250%" y="677" width="0.0109%" height="15" fill="rgb(230,46,43)" fg:x="96539" fg:w="18"/><text x="58.8750%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.01%)</title><rect x="58.6250%" y="661" width="0.0109%" height="15" fill="rgb(233,65,53)" fg:x="96539" fg:w="18"/><text x="58.8750%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (42 samples, 0.03%)</title><rect x="58.6123%" y="773" width="0.0255%" height="15" fill="rgb(221,121,27)" fg:x="96518" fg:w="42"/><text x="58.8623%" y="783.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (30 samples, 0.02%)</title><rect x="58.6196%" y="757" width="0.0182%" height="15" fill="rgb(247,70,47)" fg:x="96530" fg:w="30"/><text x="58.8696%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (30 samples, 0.02%)</title><rect x="58.6196%" y="741" width="0.0182%" height="15" fill="rgb(228,85,35)" fg:x="96530" fg:w="30"/><text x="58.8696%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (25 samples, 0.02%)</title><rect x="58.6226%" y="725" width="0.0152%" height="15" fill="rgb(209,50,18)" fg:x="96535" fg:w="25"/><text x="58.8726%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (25 samples, 0.02%)</title><rect x="58.6226%" y="709" width="0.0152%" height="15" fill="rgb(250,19,35)" fg:x="96535" fg:w="25"/><text x="58.8726%" y="719.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (54 samples, 0.03%)</title><rect x="58.6068%" y="789" width="0.0328%" height="15" fill="rgb(253,107,29)" fg:x="96509" fg:w="54"/><text x="58.8568%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (36 samples, 0.02%)</title><rect x="58.6457%" y="773" width="0.0219%" height="15" fill="rgb(252,179,29)" fg:x="96573" fg:w="36"/><text x="58.8957%" y="783.50"></text></g><g><title>core::ptr::read (36 samples, 0.02%)</title><rect x="58.6457%" y="757" width="0.0219%" height="15" fill="rgb(238,194,6)" fg:x="96573" fg:w="36"/><text x="58.8957%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (41 samples, 0.02%)</title><rect x="58.6432%" y="789" width="0.0249%" height="15" fill="rgb(238,164,29)" fg:x="96569" fg:w="41"/><text x="58.8932%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (50 samples, 0.03%)</title><rect x="58.6821%" y="773" width="0.0304%" height="15" fill="rgb(224,25,9)" fg:x="96633" fg:w="50"/><text x="58.9321%" y="783.50"></text></g><g><title>core::ptr::write (46 samples, 0.03%)</title><rect x="58.6845%" y="757" width="0.0279%" height="15" fill="rgb(244,153,23)" fg:x="96637" fg:w="46"/><text x="58.9345%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (96 samples, 0.06%)</title><rect x="58.6681%" y="789" width="0.0583%" height="15" fill="rgb(212,203,14)" fg:x="96610" fg:w="96"/><text x="58.9181%" y="799.50"></text></g><g><title>core::mem::drop (37 samples, 0.02%)</title><rect x="58.7264%" y="789" width="0.0225%" height="15" fill="rgb(220,164,20)" fg:x="96706" fg:w="37"/><text x="58.9764%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (37 samples, 0.02%)</title><rect x="58.7264%" y="773" width="0.0225%" height="15" fill="rgb(222,203,48)" fg:x="96706" fg:w="37"/><text x="58.9764%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="58.7264%" y="757" width="0.0225%" height="15" fill="rgb(215,159,22)" fg:x="96706" fg:w="37"/><text x="58.9764%" y="767.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (35 samples, 0.02%)</title><rect x="58.7277%" y="741" width="0.0213%" height="15" fill="rgb(216,183,47)" fg:x="96708" fg:w="35"/><text x="58.9777%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (35 samples, 0.02%)</title><rect x="58.7277%" y="725" width="0.0213%" height="15" fill="rgb(229,195,25)" fg:x="96708" fg:w="35"/><text x="58.9777%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_swap (35 samples, 0.02%)</title><rect x="58.7277%" y="709" width="0.0213%" height="15" fill="rgb(224,132,51)" fg:x="96708" fg:w="35"/><text x="58.9777%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.04%)</title><rect x="58.7562%" y="789" width="0.0395%" height="15" fill="rgb(240,63,7)" fg:x="96755" fg:w="65"/><text x="59.0062%" y="799.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::_{{closure}} (50 samples, 0.03%)</title><rect x="58.7653%" y="773" width="0.0304%" height="15" fill="rgb(249,182,41)" fg:x="96770" fg:w="50"/><text x="59.0153%" y="783.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::fire_send (40 samples, 0.02%)</title><rect x="58.7714%" y="757" width="0.0243%" height="15" fill="rgb(243,47,26)" fg:x="96780" fg:w="40"/><text x="59.0214%" y="767.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::lock (33 samples, 0.02%)</title><rect x="58.7756%" y="741" width="0.0200%" height="15" fill="rgb(233,48,2)" fg:x="96787" fg:w="33"/><text x="59.0256%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (33 samples, 0.02%)</title><rect x="58.7756%" y="725" width="0.0200%" height="15" fill="rgb(244,165,34)" fg:x="96787" fg:w="33"/><text x="59.0256%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (194 samples, 0.12%)</title><rect x="58.8023%" y="789" width="0.1178%" height="15" fill="rgb(207,89,7)" fg:x="96831" fg:w="194"/><text x="59.0523%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.12%)</title><rect x="58.8023%" y="773" width="0.1178%" height="15" fill="rgb(244,117,36)" fg:x="96831" fg:w="194"/><text x="59.0523%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (186 samples, 0.11%)</title><rect x="58.8072%" y="757" width="0.1130%" height="15" fill="rgb(226,144,34)" fg:x="96839" fg:w="186"/><text x="59.0572%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (180 samples, 0.11%)</title><rect x="58.8108%" y="741" width="0.1093%" height="15" fill="rgb(213,23,19)" fg:x="96845" fg:w="180"/><text x="59.0608%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (180 samples, 0.11%)</title><rect x="58.8108%" y="725" width="0.1093%" height="15" fill="rgb(217,75,12)" fg:x="96845" fg:w="180"/><text x="59.0608%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (326 samples, 0.20%)</title><rect x="58.9366%" y="741" width="0.1980%" height="15" fill="rgb(224,159,17)" fg:x="97052" fg:w="326"/><text x="59.1866%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (326 samples, 0.20%)</title><rect x="58.9366%" y="725" width="0.1980%" height="15" fill="rgb(217,118,1)" fg:x="97052" fg:w="326"/><text x="59.1866%" y="735.50"></text></g><g><title>flume::Sender&lt;T&gt;::try_send (924 samples, 0.56%)</title><rect x="58.5789%" y="837" width="0.5611%" height="15" fill="rgb(232,180,48)" fg:x="96463" fg:w="924"/><text x="58.8289%" y="847.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (908 samples, 0.55%)</title><rect x="58.5886%" y="821" width="0.5514%" height="15" fill="rgb(230,27,33)" fg:x="96479" fg:w="908"/><text x="58.8386%" y="831.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (908 samples, 0.55%)</title><rect x="58.5886%" y="805" width="0.5514%" height="15" fill="rgb(205,31,21)" fg:x="96479" fg:w="908"/><text x="58.8386%" y="815.50"></text></g><g><title>flume::wait_lock (355 samples, 0.22%)</title><rect x="58.9244%" y="789" width="0.2156%" height="15" fill="rgb(253,59,4)" fg:x="97032" fg:w="355"/><text x="59.1744%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (355 samples, 0.22%)</title><rect x="58.9244%" y="773" width="0.2156%" height="15" fill="rgb(224,201,9)" fg:x="97032" fg:w="355"/><text x="59.1744%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (345 samples, 0.21%)</title><rect x="58.9305%" y="757" width="0.2095%" height="15" fill="rgb(229,206,30)" fg:x="97042" fg:w="345"/><text x="59.1805%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (72 samples, 0.04%)</title><rect x="59.2390%" y="741" width="0.0437%" height="15" fill="rgb(212,67,47)" fg:x="97550" fg:w="72"/><text x="59.4890%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (72 samples, 0.04%)</title><rect x="59.2390%" y="725" width="0.0437%" height="15" fill="rgb(211,96,50)" fg:x="97550" fg:w="72"/><text x="59.4890%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 0.04%)</title><rect x="59.2390%" y="709" width="0.0437%" height="15" fill="rgb(252,114,18)" fg:x="97550" fg:w="72"/><text x="59.4890%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (239 samples, 0.15%)</title><rect x="59.1400%" y="837" width="0.1451%" height="15" fill="rgb(223,58,37)" fg:x="97387" fg:w="239"/><text x="59.3900%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (239 samples, 0.15%)</title><rect x="59.1400%" y="821" width="0.1451%" height="15" fill="rgb(237,70,4)" fg:x="97387" fg:w="239"/><text x="59.3900%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (239 samples, 0.15%)</title><rect x="59.1400%" y="805" width="0.1451%" height="15" fill="rgb(244,85,46)" fg:x="97387" fg:w="239"/><text x="59.3900%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (194 samples, 0.12%)</title><rect x="59.1673%" y="789" width="0.1178%" height="15" fill="rgb(223,39,52)" fg:x="97432" fg:w="194"/><text x="59.4173%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (194 samples, 0.12%)</title><rect x="59.1673%" y="773" width="0.1178%" height="15" fill="rgb(218,200,14)" fg:x="97432" fg:w="194"/><text x="59.4173%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (194 samples, 0.12%)</title><rect x="59.1673%" y="757" width="0.1178%" height="15" fill="rgb(208,171,16)" fg:x="97432" fg:w="194"/><text x="59.4173%" y="767.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::handle_data_packet (3,105 samples, 1.89%)</title><rect x="57.4099%" y="853" width="1.8856%" height="15" fill="rgb(234,200,18)" fg:x="94538" fg:w="3105"/><text x="57.6599%" y="863.50">w..</text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (17 samples, 0.01%)</title><rect x="59.2851%" y="837" width="0.0103%" height="15" fill="rgb(228,45,11)" fg:x="97626" fg:w="17"/><text x="59.5351%" y="847.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::handle_packet::_{{closure}} (3,279 samples, 1.99%)</title><rect x="57.3048%" y="869" width="1.9912%" height="15" fill="rgb(237,182,11)" fg:x="94365" fg:w="3279"/><text x="57.5548%" y="879.50">w..</text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (20 samples, 0.01%)</title><rect x="59.6556%" y="837" width="0.0121%" height="15" fill="rgb(241,175,49)" fg:x="98236" fg:w="20"/><text x="59.9056%" y="847.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (17 samples, 0.01%)</title><rect x="59.6853%" y="821" width="0.0103%" height="15" fill="rgb(247,38,35)" fg:x="98285" fg:w="17"/><text x="59.9353%" y="831.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (17 samples, 0.01%)</title><rect x="59.6853%" y="805" width="0.0103%" height="15" fill="rgb(228,39,49)" fg:x="98285" fg:w="17"/><text x="59.9353%" y="815.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (33 samples, 0.02%)</title><rect x="59.6956%" y="821" width="0.0200%" height="15" fill="rgb(226,101,26)" fg:x="98302" fg:w="33"/><text x="59.9456%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (30 samples, 0.02%)</title><rect x="59.6975%" y="805" width="0.0182%" height="15" fill="rgb(206,141,19)" fg:x="98305" fg:w="30"/><text x="59.9475%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (20 samples, 0.01%)</title><rect x="59.7035%" y="789" width="0.0121%" height="15" fill="rgb(211,200,13)" fg:x="98315" fg:w="20"/><text x="59.9535%" y="799.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (85 samples, 0.05%)</title><rect x="59.6677%" y="837" width="0.0516%" height="15" fill="rgb(241,121,6)" fg:x="98256" fg:w="85"/><text x="59.9177%" y="847.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::chunk (17 samples, 0.01%)</title><rect x="59.7230%" y="821" width="0.0103%" height="15" fill="rgb(234,221,29)" fg:x="98347" fg:w="17"/><text x="59.9730%" y="831.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::chunk (17 samples, 0.01%)</title><rect x="59.7230%" y="805" width="0.0103%" height="15" fill="rgb(229,136,5)" fg:x="98347" fg:w="17"/><text x="59.9730%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (17 samples, 0.01%)</title><rect x="59.7418%" y="789" width="0.0103%" height="15" fill="rgb(238,36,11)" fg:x="98378" fg:w="17"/><text x="59.9918%" y="799.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (55 samples, 0.03%)</title><rect x="59.7193%" y="837" width="0.0334%" height="15" fill="rgb(251,55,41)" fg:x="98341" fg:w="55"/><text x="59.9693%" y="847.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (32 samples, 0.02%)</title><rect x="59.7333%" y="821" width="0.0194%" height="15" fill="rgb(242,34,40)" fg:x="98364" fg:w="32"/><text x="59.9833%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (24 samples, 0.01%)</title><rect x="59.7381%" y="805" width="0.0146%" height="15" fill="rgb(215,42,17)" fg:x="98372" fg:w="24"/><text x="59.9881%" y="815.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::process_wisp_message::_{{closure}} (759 samples, 0.46%)</title><rect x="59.2961%" y="869" width="0.4609%" height="15" fill="rgb(207,44,46)" fg:x="97644" fg:w="759"/><text x="59.5461%" y="879.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (446 samples, 0.27%)</title><rect x="59.4861%" y="853" width="0.2708%" height="15" fill="rgb(211,206,28)" fg:x="97957" fg:w="446"/><text x="59.7361%" y="863.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (58,854 samples, 35.74%)</title><rect x="24.0180%" y="885" width="35.7401%" height="15" fill="rgb(237,167,16)" fg:x="39551" fg:w="58854"/><text x="24.2680%" y="895.50">wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure..</text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}} (58,987 samples, 35.82%)</title><rect x="23.9379%" y="949" width="35.8209%" height="15" fill="rgb(233,66,6)" fg:x="39419" fg:w="58987"/><text x="24.1879%" y="959.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::fut..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (58,987 samples, 35.82%)</title><rect x="23.9379%" y="933" width="35.8209%" height="15" fill="rgb(246,123,29)" fg:x="39419" fg:w="58987"/><text x="24.1879%" y="943.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future:..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (58,987 samples, 35.82%)</title><rect x="23.9379%" y="917" width="35.8209%" height="15" fill="rgb(209,62,40)" fg:x="39419" fg:w="58987"/><text x="24.1879%" y="927.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::fu..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}} (58,928 samples, 35.79%)</title><rect x="23.9737%" y="901" width="35.7851%" height="15" fill="rgb(218,4,25)" fg:x="39478" fg:w="58928"/><text x="24.2237%" y="911.50">wisp_mux::mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure..</text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.01%)</title><rect x="59.7655%" y="869" width="0.0103%" height="15" fill="rgb(253,91,49)" fg:x="98417" fg:w="17"/><text x="60.0155%" y="879.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (17 samples, 0.01%)</title><rect x="59.7655%" y="853" width="0.0103%" height="15" fill="rgb(228,155,29)" fg:x="98417" fg:w="17"/><text x="60.0155%" y="863.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (17 samples, 0.01%)</title><rect x="59.7655%" y="837" width="0.0103%" height="15" fill="rgb(243,57,37)" fg:x="98417" fg:w="17"/><text x="60.0155%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (46 samples, 0.03%)</title><rect x="59.7588%" y="949" width="0.0279%" height="15" fill="rgb(244,167,17)" fg:x="98406" fg:w="46"/><text x="60.0088%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (35 samples, 0.02%)</title><rect x="59.7655%" y="933" width="0.0213%" height="15" fill="rgb(207,181,38)" fg:x="98417" fg:w="35"/><text x="60.0155%" y="943.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (35 samples, 0.02%)</title><rect x="59.7655%" y="917" width="0.0213%" height="15" fill="rgb(211,8,23)" fg:x="98417" fg:w="35"/><text x="60.0155%" y="927.50"></text></g><g><title>tokio::runtime::context::budget (35 samples, 0.02%)</title><rect x="59.7655%" y="901" width="0.0213%" height="15" fill="rgb(235,11,44)" fg:x="98417" fg:w="35"/><text x="60.0155%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.02%)</title><rect x="59.7655%" y="885" width="0.0213%" height="15" fill="rgb(248,18,52)" fg:x="98417" fg:w="35"/><text x="60.0155%" y="895.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (18 samples, 0.01%)</title><rect x="59.7758%" y="869" width="0.0109%" height="15" fill="rgb(208,4,7)" fg:x="98434" fg:w="18"/><text x="60.0258%" y="879.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop::_{{closure}} (18 samples, 0.01%)</title><rect x="59.7758%" y="853" width="0.0109%" height="15" fill="rgb(240,17,39)" fg:x="98434" fg:w="18"/><text x="60.0258%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (18 samples, 0.01%)</title><rect x="59.7758%" y="837" width="0.0109%" height="15" fill="rgb(207,170,3)" fg:x="98434" fg:w="18"/><text x="60.0258%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.01%)</title><rect x="59.7758%" y="821" width="0.0109%" height="15" fill="rgb(236,100,52)" fg:x="98434" fg:w="18"/><text x="60.0258%" y="831.50"></text></g><g><title>core::mem::replace (18 samples, 0.01%)</title><rect x="59.7758%" y="805" width="0.0109%" height="15" fill="rgb(246,78,51)" fg:x="98434" fg:w="18"/><text x="60.0258%" y="815.50"></text></g><g><title>core::ptr::write (18 samples, 0.01%)</title><rect x="59.7758%" y="789" width="0.0109%" height="15" fill="rgb(211,17,15)" fg:x="98434" fg:w="18"/><text x="60.0258%" y="799.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (59,051 samples, 35.86%)</title><rect x="23.9336%" y="997" width="35.8598%" height="15" fill="rgb(209,59,46)" fg:x="39412" fg:w="59051"/><text x="24.1836%" y="1007.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::fut..</text></g><g><title>tokio::runtime::coop::with_unconstrained (59,050 samples, 35.86%)</title><rect x="23.9342%" y="981" width="35.8592%" height="15" fill="rgb(210,92,25)" fg:x="39413" fg:w="59050"/><text x="24.1842%" y="991.50">tokio::runtime::coop::with_unconstrained</text></g><g><title>tokio::runtime::coop::with_budget (59,050 samples, 35.86%)</title><rect x="23.9342%" y="965" width="35.8592%" height="15" fill="rgb(238,174,52)" fg:x="39413" fg:w="59050"/><text x="24.1842%" y="975.50">tokio::runtime::coop::with_budget</text></g><g><title>core::ops::function::FnOnce::call_once (52 samples, 0.03%)</title><rect x="59.7934%" y="933" width="0.0316%" height="15" fill="rgb(230,73,7)" fg:x="98463" fg:w="52"/><text x="60.0434%" y="943.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (52 samples, 0.03%)</title><rect x="59.7934%" y="917" width="0.0316%" height="15" fill="rgb(243,124,40)" fg:x="98463" fg:w="52"/><text x="60.0434%" y="927.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (52 samples, 0.03%)</title><rect x="59.7934%" y="901" width="0.0316%" height="15" fill="rgb(244,170,11)" fg:x="98463" fg:w="52"/><text x="60.0434%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (48 samples, 0.03%)</title><rect x="59.7958%" y="885" width="0.0291%" height="15" fill="rgb(207,114,54)" fg:x="98467" fg:w="48"/><text x="60.0458%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (73 samples, 0.04%)</title><rect x="59.7934%" y="997" width="0.0443%" height="15" fill="rgb(205,42,20)" fg:x="98463" fg:w="73"/><text x="60.0434%" y="1007.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (73 samples, 0.04%)</title><rect x="59.7934%" y="981" width="0.0443%" height="15" fill="rgb(230,30,28)" fg:x="98463" fg:w="73"/><text x="60.0434%" y="991.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (73 samples, 0.04%)</title><rect x="59.7934%" y="965" width="0.0443%" height="15" fill="rgb(205,73,54)" fg:x="98463" fg:w="73"/><text x="60.0434%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (73 samples, 0.04%)</title><rect x="59.7934%" y="949" width="0.0443%" height="15" fill="rgb(254,227,23)" fg:x="98463" fg:w="73"/><text x="60.0434%" y="959.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (21 samples, 0.01%)</title><rect x="59.8250%" y="933" width="0.0128%" height="15" fill="rgb(228,202,34)" fg:x="98515" fg:w="21"/><text x="60.0750%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (21 samples, 0.01%)</title><rect x="59.8250%" y="917" width="0.0128%" height="15" fill="rgb(222,225,37)" fg:x="98515" fg:w="21"/><text x="60.0750%" y="927.50"></text></g><g><title>core::mem::replace (21 samples, 0.01%)</title><rect x="59.8250%" y="901" width="0.0128%" height="15" fill="rgb(221,14,54)" fg:x="98515" fg:w="21"/><text x="60.0750%" y="911.50"></text></g><g><title>core::ptr::write (21 samples, 0.01%)</title><rect x="59.8250%" y="885" width="0.0128%" height="15" fill="rgb(254,102,2)" fg:x="98515" fg:w="21"/><text x="60.0750%" y="895.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::listener_mut (33 samples, 0.02%)</title><rect x="59.9653%" y="933" width="0.0200%" height="15" fill="rgb(232,104,17)" fg:x="98746" fg:w="33"/><text x="60.2153%" y="943.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (33 samples, 0.02%)</title><rect x="59.9653%" y="917" width="0.0200%" height="15" fill="rgb(250,220,14)" fg:x="98746" fg:w="33"/><text x="60.2153%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (33 samples, 0.02%)</title><rect x="59.9653%" y="901" width="0.0200%" height="15" fill="rgb(241,158,9)" fg:x="98746" fg:w="33"/><text x="60.2153%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (40 samples, 0.02%)</title><rect x="60.1049%" y="901" width="0.0243%" height="15" fill="rgb(246,9,43)" fg:x="98976" fg:w="40"/><text x="60.3549%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (39 samples, 0.02%)</title><rect x="60.1055%" y="885" width="0.0237%" height="15" fill="rgb(206,73,33)" fg:x="98977" fg:w="39"/><text x="60.3555%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.02%)</title><rect x="60.1055%" y="869" width="0.0237%" height="15" fill="rgb(222,79,8)" fg:x="98977" fg:w="39"/><text x="60.3555%" y="879.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (39 samples, 0.02%)</title><rect x="60.1055%" y="853" width="0.0237%" height="15" fill="rgb(234,8,54)" fg:x="98977" fg:w="39"/><text x="60.3555%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (36 samples, 0.02%)</title><rect x="60.1074%" y="837" width="0.0219%" height="15" fill="rgb(209,134,38)" fg:x="98980" fg:w="36"/><text x="60.3574%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_swap (36 samples, 0.02%)</title><rect x="60.1074%" y="821" width="0.0219%" height="15" fill="rgb(230,127,29)" fg:x="98980" fg:w="36"/><text x="60.3574%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (263 samples, 0.16%)</title><rect x="60.1359%" y="853" width="0.1597%" height="15" fill="rgb(242,44,41)" fg:x="99027" fg:w="263"/><text x="60.3859%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (263 samples, 0.16%)</title><rect x="60.1359%" y="837" width="0.1597%" height="15" fill="rgb(222,56,43)" fg:x="99027" fg:w="263"/><text x="60.3859%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (551 samples, 0.33%)</title><rect x="59.9616%" y="949" width="0.3346%" height="15" fill="rgb(238,39,47)" fg:x="98740" fg:w="551"/><text x="60.2116%" y="959.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (512 samples, 0.31%)</title><rect x="59.9853%" y="933" width="0.3109%" height="15" fill="rgb(226,79,43)" fg:x="98779" fg:w="512"/><text x="60.2353%" y="943.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (333 samples, 0.20%)</title><rect x="60.0940%" y="917" width="0.2022%" height="15" fill="rgb(242,105,53)" fg:x="98958" fg:w="333"/><text x="60.3440%" y="927.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (270 samples, 0.16%)</title><rect x="60.1323%" y="901" width="0.1640%" height="15" fill="rgb(251,132,46)" fg:x="99021" fg:w="270"/><text x="60.3823%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (270 samples, 0.16%)</title><rect x="60.1323%" y="885" width="0.1640%" height="15" fill="rgb(231,77,14)" fg:x="99021" fg:w="270"/><text x="60.3823%" y="895.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (266 samples, 0.16%)</title><rect x="60.1347%" y="869" width="0.1615%" height="15" fill="rgb(240,135,9)" fg:x="99025" fg:w="266"/><text x="60.3847%" y="879.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (213 samples, 0.13%)</title><rect x="60.8768%" y="741" width="0.1293%" height="15" fill="rgb(248,109,14)" fg:x="100247" fg:w="213"/><text x="61.1268%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (36 samples, 0.02%)</title><rect x="60.9843%" y="725" width="0.0219%" height="15" fill="rgb(227,146,52)" fg:x="100424" fg:w="36"/><text x="61.2343%" y="735.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (128 samples, 0.08%)</title><rect x="61.0122%" y="741" width="0.0777%" height="15" fill="rgb(232,54,3)" fg:x="100470" fg:w="128"/><text x="61.2622%" y="751.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project_replace (19 samples, 0.01%)</title><rect x="61.0784%" y="725" width="0.0115%" height="15" fill="rgb(229,201,43)" fg:x="100579" fg:w="19"/><text x="61.3284%" y="735.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (29 samples, 0.02%)</title><rect x="61.2757%" y="661" width="0.0176%" height="15" fill="rgb(252,161,33)" fg:x="100904" fg:w="29"/><text x="61.5257%" y="671.50"></text></g><g><title>edata_nfree_get (17 samples, 0.01%)</title><rect x="61.3085%" y="341" width="0.0103%" height="15" fill="rgb(226,146,40)" fg:x="100958" fg:w="17"/><text x="61.5585%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (17 samples, 0.01%)</title><rect x="61.3189%" y="325" width="0.0103%" height="15" fill="rgb(219,47,25)" fg:x="100975" fg:w="17"/><text x="61.5689%" y="335.50"></text></g><g><title>pthread_mutex_trylock (17 samples, 0.01%)</title><rect x="61.3189%" y="309" width="0.0103%" height="15" fill="rgb(250,135,13)" fg:x="100975" fg:w="17"/><text x="61.5689%" y="319.50"></text></g><g><title>malloc_mutex_lock (18 samples, 0.01%)</title><rect x="61.3189%" y="341" width="0.0109%" height="15" fill="rgb(219,229,18)" fg:x="100975" fg:w="18"/><text x="61.5689%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (65 samples, 0.04%)</title><rect x="61.2952%" y="373" width="0.0395%" height="15" fill="rgb(217,152,27)" fg:x="100936" fg:w="65"/><text x="61.5452%" y="383.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (65 samples, 0.04%)</title><rect x="61.2952%" y="357" width="0.0395%" height="15" fill="rgb(225,71,47)" fg:x="100936" fg:w="65"/><text x="61.5452%" y="367.50"></text></g><g><title>_rjem_je_malloc_default (71 samples, 0.04%)</title><rect x="61.2934%" y="485" width="0.0431%" height="15" fill="rgb(220,139,14)" fg:x="100933" fg:w="71"/><text x="61.5434%" y="495.50"></text></g><g><title>imalloc (71 samples, 0.04%)</title><rect x="61.2934%" y="469" width="0.0431%" height="15" fill="rgb(247,54,32)" fg:x="100933" fg:w="71"/><text x="61.5434%" y="479.50"></text></g><g><title>imalloc_body (71 samples, 0.04%)</title><rect x="61.2934%" y="453" width="0.0431%" height="15" fill="rgb(252,131,39)" fg:x="100933" fg:w="71"/><text x="61.5434%" y="463.50"></text></g><g><title>imalloc_no_sample (70 samples, 0.04%)</title><rect x="61.2940%" y="437" width="0.0425%" height="15" fill="rgb(210,108,39)" fg:x="100934" fg:w="70"/><text x="61.5440%" y="447.50"></text></g><g><title>iallocztm (70 samples, 0.04%)</title><rect x="61.2940%" y="421" width="0.0425%" height="15" fill="rgb(205,23,29)" fg:x="100934" fg:w="70"/><text x="61.5440%" y="431.50"></text></g><g><title>arena_malloc (70 samples, 0.04%)</title><rect x="61.2940%" y="405" width="0.0425%" height="15" fill="rgb(246,139,46)" fg:x="100934" fg:w="70"/><text x="61.5440%" y="415.50"></text></g><g><title>tcache_alloc_small (70 samples, 0.04%)</title><rect x="61.2940%" y="389" width="0.0425%" height="15" fill="rgb(250,81,26)" fg:x="100934" fg:w="70"/><text x="61.5440%" y="399.50"></text></g><g><title>cache_bin_alloc_easy (26 samples, 0.02%)</title><rect x="61.3377%" y="453" width="0.0158%" height="15" fill="rgb(214,104,7)" fg:x="101006" fg:w="26"/><text x="61.5877%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (26 samples, 0.02%)</title><rect x="61.3377%" y="437" width="0.0158%" height="15" fill="rgb(233,189,8)" fg:x="101006" fg:w="26"/><text x="61.5877%" y="447.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (100 samples, 0.06%)</title><rect x="61.2934%" y="661" width="0.0607%" height="15" fill="rgb(228,141,17)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (100 samples, 0.06%)</title><rect x="61.2934%" y="645" width="0.0607%" height="15" fill="rgb(247,157,1)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (100 samples, 0.06%)</title><rect x="61.2934%" y="629" width="0.0607%" height="15" fill="rgb(249,225,5)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 0.06%)</title><rect x="61.2934%" y="613" width="0.0607%" height="15" fill="rgb(242,55,13)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (100 samples, 0.06%)</title><rect x="61.2934%" y="597" width="0.0607%" height="15" fill="rgb(230,49,50)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (100 samples, 0.06%)</title><rect x="61.2934%" y="581" width="0.0607%" height="15" fill="rgb(241,111,38)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (100 samples, 0.06%)</title><rect x="61.2934%" y="565" width="0.0607%" height="15" fill="rgb(252,155,4)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (100 samples, 0.06%)</title><rect x="61.2934%" y="549" width="0.0607%" height="15" fill="rgb(212,69,32)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="559.50"></text></g><g><title>alloc::alloc::alloc (100 samples, 0.06%)</title><rect x="61.2934%" y="533" width="0.0607%" height="15" fill="rgb(243,107,47)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="543.50"></text></g><g><title>__rust_alloc (100 samples, 0.06%)</title><rect x="61.2934%" y="517" width="0.0607%" height="15" fill="rgb(247,130,12)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (100 samples, 0.06%)</title><rect x="61.2934%" y="501" width="0.0607%" height="15" fill="rgb(233,74,16)" fg:x="100933" fg:w="100"/><text x="61.5434%" y="511.50"></text></g><g><title>_rjem_malloc (29 samples, 0.02%)</title><rect x="61.3365%" y="485" width="0.0176%" height="15" fill="rgb(208,58,18)" fg:x="101004" fg:w="29"/><text x="61.5865%" y="495.50"></text></g><g><title>imalloc_fastpath (29 samples, 0.02%)</title><rect x="61.3365%" y="469" width="0.0176%" height="15" fill="rgb(242,225,1)" fg:x="101004" fg:w="29"/><text x="61.5865%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (137 samples, 0.08%)</title><rect x="61.2739%" y="709" width="0.0832%" height="15" fill="rgb(249,39,40)" fg:x="100901" fg:w="137"/><text x="61.5239%" y="719.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (137 samples, 0.08%)</title><rect x="61.2739%" y="693" width="0.0832%" height="15" fill="rgb(207,72,44)" fg:x="100901" fg:w="137"/><text x="61.5239%" y="703.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (137 samples, 0.08%)</title><rect x="61.2739%" y="677" width="0.0832%" height="15" fill="rgb(215,193,12)" fg:x="100901" fg:w="137"/><text x="61.5239%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="61.3571%" y="709" width="0.0103%" height="15" fill="rgb(248,41,39)" fg:x="101038" fg:w="17"/><text x="61.6071%" y="719.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as futures_core::future::FusedFuture&gt;::is_terminated (64 samples, 0.04%)</title><rect x="61.5423%" y="629" width="0.0389%" height="15" fill="rgb(253,85,4)" fg:x="101343" fg:w="64"/><text x="61.7923%" y="639.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (40 samples, 0.02%)</title><rect x="61.5569%" y="613" width="0.0243%" height="15" fill="rgb(243,70,31)" fg:x="101367" fg:w="40"/><text x="61.8069%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (40 samples, 0.02%)</title><rect x="61.5569%" y="597" width="0.0243%" height="15" fill="rgb(253,195,26)" fg:x="101367" fg:w="40"/><text x="61.8069%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.02%)</title><rect x="61.5569%" y="581" width="0.0243%" height="15" fill="rgb(243,42,11)" fg:x="101367" fg:w="40"/><text x="61.8069%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (70 samples, 0.04%)</title><rect x="61.5405%" y="645" width="0.0425%" height="15" fill="rgb(239,66,17)" fg:x="101340" fg:w="70"/><text x="61.7905%" y="655.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (114 samples, 0.07%)</title><rect x="61.5830%" y="645" width="0.0692%" height="15" fill="rgb(217,132,21)" fg:x="101410" fg:w="114"/><text x="61.8330%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.02%)</title><rect x="61.6905%" y="581" width="0.0206%" height="15" fill="rgb(252,202,21)" fg:x="101587" fg:w="34"/><text x="61.9405%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (34 samples, 0.02%)</title><rect x="61.6905%" y="565" width="0.0206%" height="15" fill="rgb(233,98,36)" fg:x="101587" fg:w="34"/><text x="61.9405%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.02%)</title><rect x="61.6905%" y="549" width="0.0206%" height="15" fill="rgb(216,153,54)" fg:x="101587" fg:w="34"/><text x="61.9405%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (34 samples, 0.02%)</title><rect x="61.6905%" y="533" width="0.0206%" height="15" fill="rgb(250,99,7)" fg:x="101587" fg:w="34"/><text x="61.9405%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (34 samples, 0.02%)</title><rect x="61.6905%" y="517" width="0.0206%" height="15" fill="rgb(207,56,50)" fg:x="101587" fg:w="34"/><text x="61.9405%" y="527.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (17 samples, 0.01%)</title><rect x="61.7178%" y="581" width="0.0103%" height="15" fill="rgb(244,61,34)" fg:x="101632" fg:w="17"/><text x="61.9678%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.02%)</title><rect x="61.7628%" y="565" width="0.0188%" height="15" fill="rgb(241,50,38)" fg:x="101706" fg:w="31"/><text x="62.0128%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.02%)</title><rect x="61.7628%" y="549" width="0.0188%" height="15" fill="rgb(212,166,30)" fg:x="101706" fg:w="31"/><text x="62.0128%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.02%)</title><rect x="61.7628%" y="533" width="0.0188%" height="15" fill="rgb(249,127,32)" fg:x="101706" fg:w="31"/><text x="62.0128%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (98 samples, 0.06%)</title><rect x="61.7925%" y="549" width="0.0595%" height="15" fill="rgb(209,103,0)" fg:x="101755" fg:w="98"/><text x="62.0425%" y="559.50"></text></g><g><title>core::ptr::read (89 samples, 0.05%)</title><rect x="61.7980%" y="533" width="0.0540%" height="15" fill="rgb(238,209,51)" fg:x="101764" fg:w="89"/><text x="62.0480%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (132 samples, 0.08%)</title><rect x="61.7816%" y="565" width="0.0802%" height="15" fill="rgb(237,56,23)" fg:x="101737" fg:w="132"/><text x="62.0316%" y="575.50"></text></g><g><title>core::mem::drop (158 samples, 0.10%)</title><rect x="61.8642%" y="565" width="0.0959%" height="15" fill="rgb(215,153,46)" fg:x="101873" fg:w="158"/><text x="62.1142%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (158 samples, 0.10%)</title><rect x="61.8642%" y="549" width="0.0959%" height="15" fill="rgb(224,49,31)" fg:x="101873" fg:w="158"/><text x="62.1142%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.10%)</title><rect x="61.8642%" y="533" width="0.0959%" height="15" fill="rgb(250,18,42)" fg:x="101873" fg:w="158"/><text x="62.1142%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (150 samples, 0.09%)</title><rect x="61.8690%" y="517" width="0.0911%" height="15" fill="rgb(215,176,39)" fg:x="101881" fg:w="150"/><text x="62.1190%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (140 samples, 0.09%)</title><rect x="61.8751%" y="501" width="0.0850%" height="15" fill="rgb(223,77,29)" fg:x="101891" fg:w="140"/><text x="62.1251%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (140 samples, 0.09%)</title><rect x="61.8751%" y="485" width="0.0850%" height="15" fill="rgb(234,94,52)" fg:x="101891" fg:w="140"/><text x="62.1251%" y="495.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (25 samples, 0.02%)</title><rect x="61.9601%" y="565" width="0.0152%" height="15" fill="rgb(220,154,50)" fg:x="102031" fg:w="25"/><text x="62.2101%" y="575.50"></text></g><g><title>_rjem_je_eset_fit (24 samples, 0.01%)</title><rect x="62.0203%" y="133" width="0.0146%" height="15" fill="rgb(212,11,10)" fg:x="102130" fg:w="24"/><text x="62.2703%" y="143.50"></text></g><g><title>eset_first_fit (23 samples, 0.01%)</title><rect x="62.0209%" y="117" width="0.0140%" height="15" fill="rgb(205,166,19)" fg:x="102131" fg:w="23"/><text x="62.2709%" y="127.50"></text></g><g><title>extent_recycle_extract (45 samples, 0.03%)</title><rect x="62.0190%" y="149" width="0.0273%" height="15" fill="rgb(244,198,16)" fg:x="102128" fg:w="45"/><text x="62.2690%" y="159.50"></text></g><g><title>extent_activate_locked (19 samples, 0.01%)</title><rect x="62.0348%" y="133" width="0.0115%" height="15" fill="rgb(219,69,12)" fg:x="102154" fg:w="19"/><text x="62.2848%" y="143.50"></text></g><g><title>extent_recycle_split (25 samples, 0.02%)</title><rect x="62.0464%" y="149" width="0.0152%" height="15" fill="rgb(245,30,7)" fg:x="102173" fg:w="25"/><text x="62.2964%" y="159.50"></text></g><g><title>extent_split_interior (19 samples, 0.01%)</title><rect x="62.0500%" y="133" width="0.0115%" height="15" fill="rgb(218,221,48)" fg:x="102179" fg:w="19"/><text x="62.3000%" y="143.50"></text></g><g><title>extent_split_impl (18 samples, 0.01%)</title><rect x="62.0506%" y="117" width="0.0109%" height="15" fill="rgb(216,66,15)" fg:x="102180" fg:w="18"/><text x="62.3006%" y="127.50"></text></g><g><title>pac_alloc_real (74 samples, 0.04%)</title><rect x="62.0184%" y="197" width="0.0449%" height="15" fill="rgb(226,122,50)" fg:x="102127" fg:w="74"/><text x="62.2684%" y="207.50"></text></g><g><title>_rjem_je_ecache_alloc (73 samples, 0.04%)</title><rect x="62.0190%" y="181" width="0.0443%" height="15" fill="rgb(239,156,16)" fg:x="102128" fg:w="73"/><text x="62.2690%" y="191.50"></text></g><g><title>extent_recycle (73 samples, 0.04%)</title><rect x="62.0190%" y="165" width="0.0443%" height="15" fill="rgb(224,27,38)" fg:x="102128" fg:w="73"/><text x="62.2690%" y="175.50"></text></g><g><title>arena_slab_alloc (108 samples, 0.07%)</title><rect x="61.9990%" y="261" width="0.0656%" height="15" fill="rgb(224,39,27)" fg:x="102095" fg:w="108"/><text x="62.2490%" y="271.50"></text></g><g><title>_rjem_je_pa_alloc (97 samples, 0.06%)</title><rect x="62.0057%" y="245" width="0.0589%" height="15" fill="rgb(215,92,29)" fg:x="102106" fg:w="97"/><text x="62.2557%" y="255.50"></text></g><g><title>pai_alloc (78 samples, 0.05%)</title><rect x="62.0172%" y="229" width="0.0474%" height="15" fill="rgb(207,159,16)" fg:x="102125" fg:w="78"/><text x="62.2672%" y="239.50"></text></g><g><title>pac_alloc_impl (78 samples, 0.05%)</title><rect x="62.0172%" y="213" width="0.0474%" height="15" fill="rgb(238,163,47)" fg:x="102125" fg:w="78"/><text x="62.2672%" y="223.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (159 samples, 0.10%)</title><rect x="61.9881%" y="277" width="0.0966%" height="15" fill="rgb(219,91,49)" fg:x="102077" fg:w="159"/><text x="62.2381%" y="287.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (161 samples, 0.10%)</title><rect x="61.9875%" y="293" width="0.0978%" height="15" fill="rgb(227,167,31)" fg:x="102076" fg:w="161"/><text x="62.2375%" y="303.50"></text></g><g><title>imalloc_no_sample (163 samples, 0.10%)</title><rect x="61.9875%" y="357" width="0.0990%" height="15" fill="rgb(234,80,54)" fg:x="102076" fg:w="163"/><text x="62.2375%" y="367.50"></text></g><g><title>iallocztm (163 samples, 0.10%)</title><rect x="61.9875%" y="341" width="0.0990%" height="15" fill="rgb(212,114,2)" fg:x="102076" fg:w="163"/><text x="62.2375%" y="351.50"></text></g><g><title>arena_malloc (163 samples, 0.10%)</title><rect x="61.9875%" y="325" width="0.0990%" height="15" fill="rgb(234,50,24)" fg:x="102076" fg:w="163"/><text x="62.2375%" y="335.50"></text></g><g><title>tcache_alloc_small (163 samples, 0.10%)</title><rect x="61.9875%" y="309" width="0.0990%" height="15" fill="rgb(221,68,8)" fg:x="102076" fg:w="163"/><text x="62.2375%" y="319.50"></text></g><g><title>_rjem_je_malloc_default (166 samples, 0.10%)</title><rect x="61.9863%" y="405" width="0.1008%" height="15" fill="rgb(254,180,31)" fg:x="102074" fg:w="166"/><text x="62.2363%" y="415.50"></text></g><g><title>imalloc (164 samples, 0.10%)</title><rect x="61.9875%" y="389" width="0.0996%" height="15" fill="rgb(247,130,50)" fg:x="102076" fg:w="164"/><text x="62.2375%" y="399.50"></text></g><g><title>imalloc_body (164 samples, 0.10%)</title><rect x="61.9875%" y="373" width="0.0996%" height="15" fill="rgb(211,109,4)" fg:x="102076" fg:w="164"/><text x="62.2375%" y="383.50"></text></g><g><title>cache_bin_alloc_easy (23 samples, 0.01%)</title><rect x="62.0889%" y="373" width="0.0140%" height="15" fill="rgb(238,50,21)" fg:x="102243" fg:w="23"/><text x="62.3389%" y="383.50"></text></g><g><title>cache_bin_alloc_impl (23 samples, 0.01%)</title><rect x="62.0889%" y="357" width="0.0140%" height="15" fill="rgb(225,57,45)" fg:x="102243" fg:w="23"/><text x="62.3389%" y="367.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (209 samples, 0.13%)</title><rect x="61.9765%" y="549" width="0.1269%" height="15" fill="rgb(209,196,50)" fg:x="102058" fg:w="209"/><text x="62.2265%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (209 samples, 0.13%)</title><rect x="61.9765%" y="533" width="0.1269%" height="15" fill="rgb(242,140,13)" fg:x="102058" fg:w="209"/><text x="62.2265%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (209 samples, 0.13%)</title><rect x="61.9765%" y="517" width="0.1269%" height="15" fill="rgb(217,111,7)" fg:x="102058" fg:w="209"/><text x="62.2265%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (193 samples, 0.12%)</title><rect x="61.9863%" y="501" width="0.1172%" height="15" fill="rgb(253,193,51)" fg:x="102074" fg:w="193"/><text x="62.2363%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (193 samples, 0.12%)</title><rect x="61.9863%" y="485" width="0.1172%" height="15" fill="rgb(252,70,29)" fg:x="102074" fg:w="193"/><text x="62.2363%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (193 samples, 0.12%)</title><rect x="61.9863%" y="469" width="0.1172%" height="15" fill="rgb(232,127,12)" fg:x="102074" fg:w="193"/><text x="62.2363%" y="479.50"></text></g><g><title>alloc::alloc::alloc (193 samples, 0.12%)</title><rect x="61.9863%" y="453" width="0.1172%" height="15" fill="rgb(211,180,21)" fg:x="102074" fg:w="193"/><text x="62.2363%" y="463.50"></text></g><g><title>__rust_alloc (193 samples, 0.12%)</title><rect x="61.9863%" y="437" width="0.1172%" height="15" fill="rgb(229,72,13)" fg:x="102074" fg:w="193"/><text x="62.2363%" y="447.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (193 samples, 0.12%)</title><rect x="61.9863%" y="421" width="0.1172%" height="15" fill="rgb(240,211,49)" fg:x="102074" fg:w="193"/><text x="62.2363%" y="431.50"></text></g><g><title>_rjem_malloc (27 samples, 0.02%)</title><rect x="62.0871%" y="405" width="0.0164%" height="15" fill="rgb(219,149,40)" fg:x="102240" fg:w="27"/><text x="62.3371%" y="415.50"></text></g><g><title>imalloc_fastpath (26 samples, 0.02%)</title><rect x="62.0877%" y="389" width="0.0158%" height="15" fill="rgb(210,127,46)" fg:x="102241" fg:w="26"/><text x="62.3377%" y="399.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (220 samples, 0.13%)</title><rect x="61.9753%" y="565" width="0.1336%" height="15" fill="rgb(220,106,7)" fg:x="102056" fg:w="220"/><text x="62.2253%" y="575.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (753 samples, 0.46%)</title><rect x="61.7282%" y="581" width="0.4573%" height="15" fill="rgb(249,31,22)" fg:x="101649" fg:w="753"/><text x="61.9782%" y="591.50"></text></g><g><title>flume::wait_lock (126 samples, 0.08%)</title><rect x="62.1089%" y="565" width="0.0765%" height="15" fill="rgb(253,1,49)" fg:x="102276" fg:w="126"/><text x="62.3589%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (126 samples, 0.08%)</title><rect x="62.1089%" y="549" width="0.0765%" height="15" fill="rgb(227,144,33)" fg:x="102276" fg:w="126"/><text x="62.3589%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (118 samples, 0.07%)</title><rect x="62.1138%" y="533" width="0.0717%" height="15" fill="rgb(249,163,44)" fg:x="102284" fg:w="118"/><text x="62.3638%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (112 samples, 0.07%)</title><rect x="62.1174%" y="517" width="0.0680%" height="15" fill="rgb(234,15,39)" fg:x="102290" fg:w="112"/><text x="62.3674%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (112 samples, 0.07%)</title><rect x="62.1174%" y="501" width="0.0680%" height="15" fill="rgb(207,66,16)" fg:x="102290" fg:w="112"/><text x="62.3674%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (19 samples, 0.01%)</title><rect x="62.1952%" y="533" width="0.0115%" height="15" fill="rgb(233,112,24)" fg:x="102418" fg:w="19"/><text x="62.4452%" y="543.50"></text></g><g><title>core::ptr::read (19 samples, 0.01%)</title><rect x="62.1952%" y="517" width="0.0115%" height="15" fill="rgb(230,90,22)" fg:x="102418" fg:w="19"/><text x="62.4452%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (34 samples, 0.02%)</title><rect x="62.1939%" y="549" width="0.0206%" height="15" fill="rgb(229,61,13)" fg:x="102416" fg:w="34"/><text x="62.4439%" y="559.50"></text></g><g><title>core::mem::drop (19 samples, 0.01%)</title><rect x="62.2146%" y="549" width="0.0115%" height="15" fill="rgb(225,57,24)" fg:x="102450" fg:w="19"/><text x="62.4646%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (19 samples, 0.01%)</title><rect x="62.2146%" y="533" width="0.0115%" height="15" fill="rgb(208,169,48)" fg:x="102450" fg:w="19"/><text x="62.4646%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.01%)</title><rect x="62.2146%" y="517" width="0.0115%" height="15" fill="rgb(244,218,51)" fg:x="102450" fg:w="19"/><text x="62.4646%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (17 samples, 0.01%)</title><rect x="62.2158%" y="501" width="0.0103%" height="15" fill="rgb(214,148,10)" fg:x="102452" fg:w="17"/><text x="62.4658%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (17 samples, 0.01%)</title><rect x="62.2158%" y="485" width="0.0103%" height="15" fill="rgb(225,174,27)" fg:x="102452" fg:w="17"/><text x="62.4658%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.01%)</title><rect x="62.2158%" y="469" width="0.0103%" height="15" fill="rgb(230,96,26)" fg:x="102452" fg:w="17"/><text x="62.4658%" y="479.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (111 samples, 0.07%)</title><rect x="62.1854%" y="581" width="0.0674%" height="15" fill="rgb(232,10,30)" fg:x="102402" fg:w="111"/><text x="62.4354%" y="591.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (111 samples, 0.07%)</title><rect x="62.1854%" y="565" width="0.0674%" height="15" fill="rgb(222,8,50)" fg:x="102402" fg:w="111"/><text x="62.4354%" y="575.50"></text></g><g><title>flume::wait_lock (36 samples, 0.02%)</title><rect x="62.2310%" y="549" width="0.0219%" height="15" fill="rgb(213,81,27)" fg:x="102477" fg:w="36"/><text x="62.4810%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.02%)</title><rect x="62.2310%" y="533" width="0.0219%" height="15" fill="rgb(245,50,10)" fg:x="102477" fg:w="36"/><text x="62.4810%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (35 samples, 0.02%)</title><rect x="62.2316%" y="517" width="0.0213%" height="15" fill="rgb(216,100,18)" fg:x="102478" fg:w="35"/><text x="62.4816%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (35 samples, 0.02%)</title><rect x="62.2316%" y="501" width="0.0213%" height="15" fill="rgb(236,147,54)" fg:x="102478" fg:w="35"/><text x="62.4816%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.02%)</title><rect x="62.2316%" y="485" width="0.0213%" height="15" fill="rgb(205,143,26)" fg:x="102478" fg:w="35"/><text x="62.4816%" y="495.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (971 samples, 0.59%)</title><rect x="61.6711%" y="613" width="0.5897%" height="15" fill="rgb(236,26,9)" fg:x="101555" fg:w="971"/><text x="61.9211%" y="623.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (971 samples, 0.59%)</title><rect x="61.6711%" y="597" width="0.5897%" height="15" fill="rgb(221,165,53)" fg:x="101555" fg:w="971"/><text x="61.9211%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17 samples, 0.01%)</title><rect x="62.3081%" y="533" width="0.0103%" height="15" fill="rgb(214,110,17)" fg:x="102604" fg:w="17"/><text x="62.5581%" y="543.50"></text></g><g><title>core::mem::replace (17 samples, 0.01%)</title><rect x="62.3081%" y="517" width="0.0103%" height="15" fill="rgb(237,197,12)" fg:x="102604" fg:w="17"/><text x="62.5581%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (19 samples, 0.01%)</title><rect x="62.3081%" y="549" width="0.0115%" height="15" fill="rgb(205,84,17)" fg:x="102604" fg:w="19"/><text x="62.5581%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (87 samples, 0.05%)</title><rect x="62.3221%" y="549" width="0.0528%" height="15" fill="rgb(237,18,45)" fg:x="102627" fg:w="87"/><text x="62.5721%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (78 samples, 0.05%)</title><rect x="62.3275%" y="533" width="0.0474%" height="15" fill="rgb(221,87,14)" fg:x="102636" fg:w="78"/><text x="62.5775%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.05%)</title><rect x="62.3275%" y="517" width="0.0474%" height="15" fill="rgb(238,186,15)" fg:x="102636" fg:w="78"/><text x="62.5775%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (74 samples, 0.04%)</title><rect x="62.3300%" y="501" width="0.0449%" height="15" fill="rgb(208,115,11)" fg:x="102640" fg:w="74"/><text x="62.5800%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (73 samples, 0.04%)</title><rect x="62.3306%" y="485" width="0.0443%" height="15" fill="rgb(254,175,0)" fg:x="102641" fg:w="73"/><text x="62.5806%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (73 samples, 0.04%)</title><rect x="62.3306%" y="469" width="0.0443%" height="15" fill="rgb(227,24,42)" fg:x="102641" fg:w="73"/><text x="62.5806%" y="479.50"></text></g><g><title>event_listener::TaskRef::into_task (106 samples, 0.06%)</title><rect x="62.3749%" y="549" width="0.0644%" height="15" fill="rgb(223,211,37)" fg:x="102714" fg:w="106"/><text x="62.6249%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (106 samples, 0.06%)</title><rect x="62.3749%" y="533" width="0.0644%" height="15" fill="rgb(235,49,27)" fg:x="102714" fg:w="106"/><text x="62.6249%" y="543.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (97 samples, 0.06%)</title><rect x="62.3804%" y="517" width="0.0589%" height="15" fill="rgb(254,97,51)" fg:x="102723" fg:w="97"/><text x="62.6304%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (94 samples, 0.06%)</title><rect x="62.3822%" y="501" width="0.0571%" height="15" fill="rgb(249,51,40)" fg:x="102726" fg:w="94"/><text x="62.6322%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (92 samples, 0.06%)</title><rect x="62.3834%" y="485" width="0.0559%" height="15" fill="rgb(210,128,45)" fg:x="102728" fg:w="92"/><text x="62.6334%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (92 samples, 0.06%)</title><rect x="62.3834%" y="469" width="0.0559%" height="15" fill="rgb(224,137,50)" fg:x="102728" fg:w="92"/><text x="62.6334%" y="479.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (446 samples, 0.27%)</title><rect x="62.2607%" y="597" width="0.2708%" height="15" fill="rgb(242,15,9)" fg:x="102526" fg:w="446"/><text x="62.5107%" y="607.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (436 samples, 0.26%)</title><rect x="62.2668%" y="581" width="0.2648%" height="15" fill="rgb(233,187,41)" fg:x="102536" fg:w="436"/><text x="62.5168%" y="591.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (398 samples, 0.24%)</title><rect x="62.2899%" y="565" width="0.2417%" height="15" fill="rgb(227,2,29)" fg:x="102574" fg:w="398"/><text x="62.5399%" y="575.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (150 samples, 0.09%)</title><rect x="62.4405%" y="549" width="0.0911%" height="15" fill="rgb(222,70,3)" fg:x="102822" fg:w="150"/><text x="62.6905%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (150 samples, 0.09%)</title><rect x="62.4405%" y="533" width="0.0911%" height="15" fill="rgb(213,11,42)" fg:x="102822" fg:w="150"/><text x="62.6905%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (143 samples, 0.09%)</title><rect x="62.4447%" y="517" width="0.0868%" height="15" fill="rgb(225,150,9)" fg:x="102829" fg:w="143"/><text x="62.6947%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (139 samples, 0.08%)</title><rect x="62.4472%" y="501" width="0.0844%" height="15" fill="rgb(230,162,45)" fg:x="102833" fg:w="139"/><text x="62.6972%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (139 samples, 0.08%)</title><rect x="62.4472%" y="485" width="0.0844%" height="15" fill="rgb(222,14,52)" fg:x="102833" fg:w="139"/><text x="62.6972%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,768 samples, 1.07%)</title><rect x="61.4610%" y="677" width="1.0736%" height="15" fill="rgb(254,198,14)" fg:x="101209" fg:w="1768"/><text x="61.7110%" y="687.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (1,759 samples, 1.07%)</title><rect x="61.4664%" y="661" width="1.0682%" height="15" fill="rgb(220,217,30)" fg:x="101218" fg:w="1759"/><text x="61.7164%" y="671.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1,453 samples, 0.88%)</title><rect x="61.6523%" y="645" width="0.8824%" height="15" fill="rgb(215,146,41)" fg:x="101524" fg:w="1453"/><text x="61.9023%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,422 samples, 0.86%)</title><rect x="61.6711%" y="629" width="0.8635%" height="15" fill="rgb(217,27,36)" fg:x="101555" fg:w="1422"/><text x="61.9211%" y="639.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (451 samples, 0.27%)</title><rect x="62.2607%" y="613" width="0.2739%" height="15" fill="rgb(219,218,39)" fg:x="102526" fg:w="451"/><text x="62.5107%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (160 samples, 0.10%)</title><rect x="62.5346%" y="661" width="0.0972%" height="15" fill="rgb(219,4,42)" fg:x="102977" fg:w="160"/><text x="62.7846%" y="671.50"></text></g><g><title>core::ptr::swap (158 samples, 0.10%)</title><rect x="62.5358%" y="645" width="0.0959%" height="15" fill="rgb(249,119,36)" fg:x="102979" fg:w="158"/><text x="62.7858%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (157 samples, 0.10%)</title><rect x="62.5364%" y="629" width="0.0953%" height="15" fill="rgb(209,23,33)" fg:x="102980" fg:w="157"/><text x="62.7864%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (24 samples, 0.01%)</title><rect x="62.6318%" y="597" width="0.0146%" height="15" fill="rgb(211,10,0)" fg:x="103137" fg:w="24"/><text x="62.8818%" y="607.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (24 samples, 0.01%)</title><rect x="62.6318%" y="581" width="0.0146%" height="15" fill="rgb(208,99,37)" fg:x="103137" fg:w="24"/><text x="62.8818%" y="591.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (24 samples, 0.01%)</title><rect x="62.6318%" y="565" width="0.0146%" height="15" fill="rgb(213,132,31)" fg:x="103137" fg:w="24"/><text x="62.8818%" y="575.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,125 samples, 1.29%)</title><rect x="61.3681%" y="709" width="1.2904%" height="15" fill="rgb(243,129,40)" fg:x="101056" fg:w="2125"/><text x="61.6181%" y="719.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (2,125 samples, 1.29%)</title><rect x="61.3681%" y="693" width="1.2904%" height="15" fill="rgb(210,66,33)" fg:x="101056" fg:w="2125"/><text x="61.6181%" y="703.50"></text></g><g><title>futures_util::async_await::random::shuffle (204 samples, 0.12%)</title><rect x="62.5346%" y="677" width="0.1239%" height="15" fill="rgb(209,189,4)" fg:x="102977" fg:w="204"/><text x="62.7846%" y="687.50"></text></g><g><title>futures_util::async_await::random::gen_index (44 samples, 0.03%)</title><rect x="62.6318%" y="661" width="0.0267%" height="15" fill="rgb(214,107,37)" fg:x="103137" fg:w="44"/><text x="62.8818%" y="671.50"></text></g><g><title>futures_util::async_await::random::random (44 samples, 0.03%)</title><rect x="62.6318%" y="645" width="0.0267%" height="15" fill="rgb(245,88,54)" fg:x="103137" fg:w="44"/><text x="62.8818%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (44 samples, 0.03%)</title><rect x="62.6318%" y="629" width="0.0267%" height="15" fill="rgb(205,146,20)" fg:x="103137" fg:w="44"/><text x="62.8818%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44 samples, 0.03%)</title><rect x="62.6318%" y="613" width="0.0267%" height="15" fill="rgb(220,161,25)" fg:x="103137" fg:w="44"/><text x="62.8818%" y="623.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (20 samples, 0.01%)</title><rect x="62.6464%" y="597" width="0.0121%" height="15" fill="rgb(215,152,15)" fg:x="103161" fg:w="20"/><text x="62.8964%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (28 samples, 0.02%)</title><rect x="62.6858%" y="629" width="0.0170%" height="15" fill="rgb(233,192,44)" fg:x="103226" fg:w="28"/><text x="62.9358%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;bytes::bytes::Bytes,dyn flume::signal::Signal&gt;&gt;&gt; (41 samples, 0.02%)</title><rect x="62.6834%" y="661" width="0.0249%" height="15" fill="rgb(240,170,46)" fg:x="103222" fg:w="41"/><text x="62.9334%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.02%)</title><rect x="62.6834%" y="645" width="0.0249%" height="15" fill="rgb(207,104,33)" fg:x="103222" fg:w="41"/><text x="62.9334%" y="655.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (105 samples, 0.06%)</title><rect x="62.6621%" y="693" width="0.0638%" height="15" fill="rgb(219,21,39)" fg:x="103187" fg:w="105"/><text x="62.9121%" y="703.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (105 samples, 0.06%)</title><rect x="62.6621%" y="677" width="0.0638%" height="15" fill="rgb(214,133,29)" fg:x="103187" fg:w="105"/><text x="62.9121%" y="687.50"></text></g><g><title>flume::wait_lock (17 samples, 0.01%)</title><rect x="62.7156%" y="661" width="0.0103%" height="15" fill="rgb(226,93,6)" fg:x="103275" fg:w="17"/><text x="62.9656%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.01%)</title><rect x="62.7156%" y="645" width="0.0103%" height="15" fill="rgb(252,222,34)" fg:x="103275" fg:w="17"/><text x="62.9656%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (17 samples, 0.01%)</title><rect x="62.7156%" y="629" width="0.0103%" height="15" fill="rgb(252,92,48)" fg:x="103275" fg:w="17"/><text x="62.9656%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (128 samples, 0.08%)</title><rect x="62.6591%" y="709" width="0.0777%" height="15" fill="rgb(245,223,24)" fg:x="103182" fg:w="128"/><text x="62.9091%" y="719.50"></text></g><g><title>cache_bin_dalloc_easy (29 samples, 0.02%)</title><rect x="62.7374%" y="645" width="0.0176%" height="15" fill="rgb(205,176,3)" fg:x="103311" fg:w="29"/><text x="62.9874%" y="655.50"></text></g><g><title>_rjem_sdallocx (42 samples, 0.03%)</title><rect x="62.7368%" y="677" width="0.0255%" height="15" fill="rgb(235,151,15)" fg:x="103310" fg:w="42"/><text x="62.9868%" y="687.50"></text></g><g><title>free_fastpath (42 samples, 0.03%)</title><rect x="62.7368%" y="661" width="0.0255%" height="15" fill="rgb(237,209,11)" fg:x="103310" fg:w="42"/><text x="62.9868%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt; (131 samples, 0.08%)</title><rect x="62.7666%" y="613" width="0.0796%" height="15" fill="rgb(243,227,24)" fg:x="103359" fg:w="131"/><text x="63.0166%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.08%)</title><rect x="62.7666%" y="597" width="0.0796%" height="15" fill="rgb(239,193,16)" fg:x="103359" fg:w="131"/><text x="63.0166%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (119 samples, 0.07%)</title><rect x="62.7739%" y="581" width="0.0723%" height="15" fill="rgb(231,27,9)" fg:x="103371" fg:w="119"/><text x="63.0239%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (119 samples, 0.07%)</title><rect x="62.7739%" y="565" width="0.0723%" height="15" fill="rgb(219,169,10)" fg:x="103371" fg:w="119"/><text x="63.0239%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (91 samples, 0.06%)</title><rect x="62.8595%" y="581" width="0.0553%" height="15" fill="rgb(244,229,43)" fg:x="103512" fg:w="91"/><text x="63.1095%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (85 samples, 0.05%)</title><rect x="62.8631%" y="565" width="0.0516%" height="15" fill="rgb(254,38,20)" fg:x="103518" fg:w="85"/><text x="63.1131%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (82 samples, 0.05%)</title><rect x="62.8650%" y="549" width="0.0498%" height="15" fill="rgb(250,47,30)" fg:x="103521" fg:w="82"/><text x="63.1150%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (73 samples, 0.04%)</title><rect x="62.8704%" y="533" width="0.0443%" height="15" fill="rgb(224,124,36)" fg:x="103530" fg:w="73"/><text x="63.1204%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (73 samples, 0.04%)</title><rect x="62.8704%" y="517" width="0.0443%" height="15" fill="rgb(246,68,51)" fg:x="103530" fg:w="73"/><text x="63.1204%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (73 samples, 0.04%)</title><rect x="62.8704%" y="501" width="0.0443%" height="15" fill="rgb(253,43,49)" fg:x="103530" fg:w="73"/><text x="63.1204%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (67 samples, 0.04%)</title><rect x="62.8741%" y="485" width="0.0407%" height="15" fill="rgb(219,54,36)" fg:x="103536" fg:w="67"/><text x="63.1241%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (63 samples, 0.04%)</title><rect x="62.8765%" y="469" width="0.0383%" height="15" fill="rgb(227,133,34)" fg:x="103540" fg:w="63"/><text x="63.1265%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (59 samples, 0.04%)</title><rect x="62.8789%" y="453" width="0.0358%" height="15" fill="rgb(247,227,15)" fg:x="103544" fg:w="59"/><text x="63.1289%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (59 samples, 0.04%)</title><rect x="62.8789%" y="437" width="0.0358%" height="15" fill="rgb(229,96,14)" fg:x="103544" fg:w="59"/><text x="63.1289%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (120 samples, 0.07%)</title><rect x="62.9202%" y="565" width="0.0729%" height="15" fill="rgb(220,79,17)" fg:x="103612" fg:w="120"/><text x="63.1702%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (114 samples, 0.07%)</title><rect x="62.9239%" y="549" width="0.0692%" height="15" fill="rgb(205,131,53)" fg:x="103618" fg:w="114"/><text x="63.1739%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.07%)</title><rect x="62.9239%" y="533" width="0.0692%" height="15" fill="rgb(209,50,29)" fg:x="103618" fg:w="114"/><text x="63.1739%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (110 samples, 0.07%)</title><rect x="62.9263%" y="517" width="0.0668%" height="15" fill="rgb(245,86,46)" fg:x="103622" fg:w="110"/><text x="63.1763%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (104 samples, 0.06%)</title><rect x="62.9299%" y="501" width="0.0632%" height="15" fill="rgb(235,66,46)" fg:x="103628" fg:w="104"/><text x="63.1799%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (104 samples, 0.06%)</title><rect x="62.9299%" y="485" width="0.0632%" height="15" fill="rgb(232,148,31)" fg:x="103628" fg:w="104"/><text x="63.1799%" y="495.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (160 samples, 0.10%)</title><rect x="62.9931%" y="565" width="0.0972%" height="15" fill="rgb(217,149,8)" fg:x="103732" fg:w="160"/><text x="63.2431%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (160 samples, 0.10%)</title><rect x="62.9931%" y="549" width="0.0972%" height="15" fill="rgb(209,183,11)" fg:x="103732" fg:w="160"/><text x="63.2431%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (152 samples, 0.09%)</title><rect x="62.9980%" y="533" width="0.0923%" height="15" fill="rgb(208,55,20)" fg:x="103740" fg:w="152"/><text x="63.2480%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (143 samples, 0.09%)</title><rect x="63.0034%" y="517" width="0.0868%" height="15" fill="rgb(218,39,14)" fg:x="103749" fg:w="143"/><text x="63.2534%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (143 samples, 0.09%)</title><rect x="63.0034%" y="501" width="0.0868%" height="15" fill="rgb(216,169,33)" fg:x="103749" fg:w="143"/><text x="63.2534%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;event_listener::EventListener&gt;&gt; (638 samples, 0.39%)</title><rect x="62.7368%" y="709" width="0.3874%" height="15" fill="rgb(233,80,24)" fg:x="103310" fg:w="638"/><text x="62.9868%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (638 samples, 0.39%)</title><rect x="62.7368%" y="693" width="0.3874%" height="15" fill="rgb(213,179,31)" fg:x="103310" fg:w="638"/><text x="62.9868%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (596 samples, 0.36%)</title><rect x="62.7623%" y="677" width="0.3619%" height="15" fill="rgb(209,19,5)" fg:x="103352" fg:w="596"/><text x="63.0123%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (596 samples, 0.36%)</title><rect x="62.7623%" y="661" width="0.3619%" height="15" fill="rgb(219,18,35)" fg:x="103352" fg:w="596"/><text x="63.0123%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (596 samples, 0.36%)</title><rect x="62.7623%" y="645" width="0.3619%" height="15" fill="rgb(209,169,16)" fg:x="103352" fg:w="596"/><text x="63.0123%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (589 samples, 0.36%)</title><rect x="62.7666%" y="629" width="0.3577%" height="15" fill="rgb(245,90,51)" fg:x="103359" fg:w="589"/><text x="63.0166%" y="639.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (447 samples, 0.27%)</title><rect x="62.8528%" y="613" width="0.2714%" height="15" fill="rgb(220,99,45)" fg:x="103501" fg:w="447"/><text x="63.1028%" y="623.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (447 samples, 0.27%)</title><rect x="62.8528%" y="597" width="0.2714%" height="15" fill="rgb(249,89,25)" fg:x="103501" fg:w="447"/><text x="63.1028%" y="607.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (345 samples, 0.21%)</title><rect x="62.9148%" y="581" width="0.2095%" height="15" fill="rgb(239,193,0)" fg:x="103603" fg:w="345"/><text x="63.1648%" y="591.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (56 samples, 0.03%)</title><rect x="63.0903%" y="565" width="0.0340%" height="15" fill="rgb(231,126,1)" fg:x="103892" fg:w="56"/><text x="63.3403%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (20 samples, 0.01%)</title><rect x="63.1267%" y="709" width="0.0121%" height="15" fill="rgb(243,166,3)" fg:x="103952" fg:w="20"/><text x="63.3767%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.01%)</title><rect x="63.1267%" y="693" width="0.0121%" height="15" fill="rgb(223,22,34)" fg:x="103952" fg:w="20"/><text x="63.3767%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (127 samples, 0.08%)</title><rect x="63.1388%" y="709" width="0.0771%" height="15" fill="rgb(251,52,51)" fg:x="103972" fg:w="127"/><text x="63.3888%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (127 samples, 0.08%)</title><rect x="63.1388%" y="693" width="0.0771%" height="15" fill="rgb(221,165,28)" fg:x="103972" fg:w="127"/><text x="63.3888%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (188 samples, 0.11%)</title><rect x="63.2214%" y="693" width="0.1142%" height="15" fill="rgb(218,121,47)" fg:x="104108" fg:w="188"/><text x="63.4714%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (181 samples, 0.11%)</title><rect x="63.2257%" y="677" width="0.1099%" height="15" fill="rgb(209,120,9)" fg:x="104115" fg:w="181"/><text x="63.4757%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (181 samples, 0.11%)</title><rect x="63.2257%" y="661" width="0.1099%" height="15" fill="rgb(236,68,12)" fg:x="104115" fg:w="181"/><text x="63.4757%" y="671.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (20 samples, 0.01%)</title><rect x="63.3575%" y="453" width="0.0121%" height="15" fill="rgb(225,194,26)" fg:x="104332" fg:w="20"/><text x="63.6075%" y="463.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (19 samples, 0.01%)</title><rect x="63.3581%" y="437" width="0.0115%" height="15" fill="rgb(231,84,39)" fg:x="104333" fg:w="19"/><text x="63.6081%" y="447.50"></text></g><g><title>imalloc_no_sample (21 samples, 0.01%)</title><rect x="63.3575%" y="517" width="0.0128%" height="15" fill="rgb(210,11,45)" fg:x="104332" fg:w="21"/><text x="63.6075%" y="527.50"></text></g><g><title>iallocztm (21 samples, 0.01%)</title><rect x="63.3575%" y="501" width="0.0128%" height="15" fill="rgb(224,54,52)" fg:x="104332" fg:w="21"/><text x="63.6075%" y="511.50"></text></g><g><title>arena_malloc (21 samples, 0.01%)</title><rect x="63.3575%" y="485" width="0.0128%" height="15" fill="rgb(238,102,14)" fg:x="104332" fg:w="21"/><text x="63.6075%" y="495.50"></text></g><g><title>tcache_alloc_small (21 samples, 0.01%)</title><rect x="63.3575%" y="469" width="0.0128%" height="15" fill="rgb(243,160,52)" fg:x="104332" fg:w="21"/><text x="63.6075%" y="479.50"></text></g><g><title>_rjem_je_malloc_default (30 samples, 0.02%)</title><rect x="63.3569%" y="565" width="0.0182%" height="15" fill="rgb(216,114,19)" fg:x="104331" fg:w="30"/><text x="63.6069%" y="575.50"></text></g><g><title>imalloc (29 samples, 0.02%)</title><rect x="63.3575%" y="549" width="0.0176%" height="15" fill="rgb(244,166,37)" fg:x="104332" fg:w="29"/><text x="63.6075%" y="559.50"></text></g><g><title>imalloc_body (29 samples, 0.02%)</title><rect x="63.3575%" y="533" width="0.0176%" height="15" fill="rgb(246,29,44)" fg:x="104332" fg:w="29"/><text x="63.6075%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (38 samples, 0.02%)</title><rect x="63.3915%" y="533" width="0.0231%" height="15" fill="rgb(215,56,53)" fg:x="104388" fg:w="38"/><text x="63.6415%" y="543.50"></text></g><g><title>cache_bin_alloc_impl (38 samples, 0.02%)</title><rect x="63.3915%" y="517" width="0.0231%" height="15" fill="rgb(217,60,2)" fg:x="104388" fg:w="38"/><text x="63.6415%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (148 samples, 0.09%)</title><rect x="63.3356%" y="693" width="0.0899%" height="15" fill="rgb(207,26,24)" fg:x="104296" fg:w="148"/><text x="63.5856%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (148 samples, 0.09%)</title><rect x="63.3356%" y="677" width="0.0899%" height="15" fill="rgb(252,210,15)" fg:x="104296" fg:w="148"/><text x="63.5856%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (117 samples, 0.07%)</title><rect x="63.3544%" y="661" width="0.0711%" height="15" fill="rgb(253,209,26)" fg:x="104327" fg:w="117"/><text x="63.6044%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.07%)</title><rect x="63.3544%" y="645" width="0.0711%" height="15" fill="rgb(238,170,14)" fg:x="104327" fg:w="117"/><text x="63.6044%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.07%)</title><rect x="63.3544%" y="629" width="0.0711%" height="15" fill="rgb(216,178,15)" fg:x="104327" fg:w="117"/><text x="63.6044%" y="639.50"></text></g><g><title>alloc::alloc::alloc (117 samples, 0.07%)</title><rect x="63.3544%" y="613" width="0.0711%" height="15" fill="rgb(250,197,2)" fg:x="104327" fg:w="117"/><text x="63.6044%" y="623.50"></text></g><g><title>__rust_alloc (117 samples, 0.07%)</title><rect x="63.3544%" y="597" width="0.0711%" height="15" fill="rgb(212,70,42)" fg:x="104327" fg:w="117"/><text x="63.6044%" y="607.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (117 samples, 0.07%)</title><rect x="63.3544%" y="581" width="0.0711%" height="15" fill="rgb(227,213,9)" fg:x="104327" fg:w="117"/><text x="63.6044%" y="591.50"></text></g><g><title>_rjem_malloc (83 samples, 0.05%)</title><rect x="63.3751%" y="565" width="0.0504%" height="15" fill="rgb(245,99,25)" fg:x="104361" fg:w="83"/><text x="63.6251%" y="575.50"></text></g><g><title>imalloc_fastpath (72 samples, 0.04%)</title><rect x="63.3818%" y="549" width="0.0437%" height="15" fill="rgb(250,82,29)" fg:x="104372" fg:w="72"/><text x="63.6318%" y="559.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (27 samples, 0.02%)</title><rect x="63.4255%" y="693" width="0.0164%" height="15" fill="rgb(241,226,54)" fg:x="104444" fg:w="27"/><text x="63.6755%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (17 samples, 0.01%)</title><rect x="63.4315%" y="677" width="0.0103%" height="15" fill="rgb(221,99,41)" fg:x="104454" fg:w="17"/><text x="63.6815%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="63.4315%" y="661" width="0.0103%" height="15" fill="rgb(213,90,21)" fg:x="104454" fg:w="17"/><text x="63.6815%" y="671.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (29 samples, 0.02%)</title><rect x="63.4528%" y="661" width="0.0176%" height="15" fill="rgb(205,208,24)" fg:x="104489" fg:w="29"/><text x="63.7028%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (159 samples, 0.10%)</title><rect x="63.4704%" y="661" width="0.0966%" height="15" fill="rgb(246,31,12)" fg:x="104518" fg:w="159"/><text x="63.7204%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (145 samples, 0.09%)</title><rect x="63.4789%" y="645" width="0.0881%" height="15" fill="rgb(213,154,6)" fg:x="104532" fg:w="145"/><text x="63.7289%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.09%)</title><rect x="63.4789%" y="629" width="0.0881%" height="15" fill="rgb(222,163,29)" fg:x="104532" fg:w="145"/><text x="63.7289%" y="639.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (125 samples, 0.08%)</title><rect x="63.4911%" y="613" width="0.0759%" height="15" fill="rgb(227,201,8)" fg:x="104552" fg:w="125"/><text x="63.7411%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (116 samples, 0.07%)</title><rect x="63.4965%" y="597" width="0.0704%" height="15" fill="rgb(233,9,32)" fg:x="104561" fg:w="116"/><text x="63.7465%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (116 samples, 0.07%)</title><rect x="63.4965%" y="581" width="0.0704%" height="15" fill="rgb(217,54,24)" fg:x="104561" fg:w="116"/><text x="63.7465%" y="591.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (787 samples, 0.48%)</title><rect x="63.2166%" y="709" width="0.4779%" height="15" fill="rgb(235,192,0)" fg:x="104100" fg:w="787"/><text x="63.4666%" y="719.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::listen (416 samples, 0.25%)</title><rect x="63.4419%" y="693" width="0.2526%" height="15" fill="rgb(235,45,9)" fg:x="104471" fg:w="416"/><text x="63.6919%" y="703.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert (416 samples, 0.25%)</title><rect x="63.4419%" y="677" width="0.2526%" height="15" fill="rgb(246,42,40)" fg:x="104471" fg:w="416"/><text x="63.6919%" y="687.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (210 samples, 0.13%)</title><rect x="63.5670%" y="661" width="0.1275%" height="15" fill="rgb(248,111,24)" fg:x="104677" fg:w="210"/><text x="63.8170%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (210 samples, 0.13%)</title><rect x="63.5670%" y="645" width="0.1275%" height="15" fill="rgb(249,65,22)" fg:x="104677" fg:w="210"/><text x="63.8170%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (205 samples, 0.12%)</title><rect x="63.5700%" y="629" width="0.1245%" height="15" fill="rgb(238,111,51)" fg:x="104682" fg:w="205"/><text x="63.8200%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (195 samples, 0.12%)</title><rect x="63.5761%" y="613" width="0.1184%" height="15" fill="rgb(250,118,22)" fg:x="104692" fg:w="195"/><text x="63.8261%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (195 samples, 0.12%)</title><rect x="63.5761%" y="597" width="0.1184%" height="15" fill="rgb(234,84,26)" fg:x="104692" fg:w="195"/><text x="63.8261%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (131 samples, 0.08%)</title><rect x="63.7072%" y="661" width="0.0796%" height="15" fill="rgb(243,172,12)" fg:x="104908" fg:w="131"/><text x="63.9572%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.08%)</title><rect x="63.7072%" y="645" width="0.0796%" height="15" fill="rgb(236,150,49)" fg:x="104908" fg:w="131"/><text x="63.9572%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (125 samples, 0.08%)</title><rect x="63.7109%" y="629" width="0.0759%" height="15" fill="rgb(225,197,26)" fg:x="104914" fg:w="125"/><text x="63.9609%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (119 samples, 0.07%)</title><rect x="63.7145%" y="613" width="0.0723%" height="15" fill="rgb(214,17,42)" fg:x="104920" fg:w="119"/><text x="63.9645%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (119 samples, 0.07%)</title><rect x="63.7145%" y="597" width="0.0723%" height="15" fill="rgb(224,165,40)" fg:x="104920" fg:w="119"/><text x="63.9645%" y="607.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (54 samples, 0.03%)</title><rect x="63.7868%" y="661" width="0.0328%" height="15" fill="rgb(246,100,4)" fg:x="105039" fg:w="54"/><text x="64.0368%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (446 samples, 0.27%)</title><rect x="63.8287%" y="613" width="0.2708%" height="15" fill="rgb(222,103,0)" fg:x="105108" fg:w="446"/><text x="64.0787%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (446 samples, 0.27%)</title><rect x="63.8287%" y="597" width="0.2708%" height="15" fill="rgb(227,189,26)" fg:x="105108" fg:w="446"/><text x="64.0787%" y="607.50"></text></g><g><title>flume::Receiver&lt;T&gt;::is_empty (668 samples, 0.41%)</title><rect x="63.6945%" y="709" width="0.4057%" height="15" fill="rgb(214,202,17)" fg:x="104887" fg:w="668"/><text x="63.9445%" y="719.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_empty (664 samples, 0.40%)</title><rect x="63.6969%" y="693" width="0.4032%" height="15" fill="rgb(229,111,3)" fg:x="104891" fg:w="664"/><text x="63.9469%" y="703.50"></text></g><g><title>flume::Shared&lt;T&gt;::len (656 samples, 0.40%)</title><rect x="63.7018%" y="677" width="0.3984%" height="15" fill="rgb(229,172,15)" fg:x="104899" fg:w="656"/><text x="63.9518%" y="687.50"></text></g><g><title>flume::wait_lock (462 samples, 0.28%)</title><rect x="63.8196%" y="661" width="0.2806%" height="15" fill="rgb(230,224,35)" fg:x="105093" fg:w="462"/><text x="64.0696%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (462 samples, 0.28%)</title><rect x="63.8196%" y="645" width="0.2806%" height="15" fill="rgb(251,141,6)" fg:x="105093" fg:w="462"/><text x="64.0696%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (455 samples, 0.28%)</title><rect x="63.8238%" y="629" width="0.2763%" height="15" fill="rgb(225,208,6)" fg:x="105100" fg:w="455"/><text x="64.0738%" y="639.50"></text></g><g><title>extent_recycle_extract (19 samples, 0.01%)</title><rect x="64.1445%" y="293" width="0.0115%" height="15" fill="rgb(246,181,16)" fg:x="105628" fg:w="19"/><text x="64.3945%" y="303.50"></text></g><g><title>extent_recycle_split (21 samples, 0.01%)</title><rect x="64.1560%" y="293" width="0.0128%" height="15" fill="rgb(227,129,36)" fg:x="105647" fg:w="21"/><text x="64.4060%" y="303.50"></text></g><g><title>extent_split_interior (20 samples, 0.01%)</title><rect x="64.1566%" y="277" width="0.0121%" height="15" fill="rgb(248,117,24)" fg:x="105648" fg:w="20"/><text x="64.4066%" y="287.50"></text></g><g><title>extent_split_impl (20 samples, 0.01%)</title><rect x="64.1566%" y="261" width="0.0121%" height="15" fill="rgb(214,185,35)" fg:x="105648" fg:w="20"/><text x="64.4066%" y="271.50"></text></g><g><title>arena_slab_alloc (58 samples, 0.04%)</title><rect x="64.1360%" y="405" width="0.0352%" height="15" fill="rgb(236,150,34)" fg:x="105614" fg:w="58"/><text x="64.3860%" y="415.50"></text></g><g><title>_rjem_je_pa_alloc (50 samples, 0.03%)</title><rect x="64.1408%" y="389" width="0.0304%" height="15" fill="rgb(243,228,27)" fg:x="105622" fg:w="50"/><text x="64.3908%" y="399.50"></text></g><g><title>pai_alloc (44 samples, 0.03%)</title><rect x="64.1445%" y="373" width="0.0267%" height="15" fill="rgb(245,77,44)" fg:x="105628" fg:w="44"/><text x="64.3945%" y="383.50"></text></g><g><title>pac_alloc_impl (44 samples, 0.03%)</title><rect x="64.1445%" y="357" width="0.0267%" height="15" fill="rgb(235,214,42)" fg:x="105628" fg:w="44"/><text x="64.3945%" y="367.50"></text></g><g><title>pac_alloc_real (44 samples, 0.03%)</title><rect x="64.1445%" y="341" width="0.0267%" height="15" fill="rgb(221,74,3)" fg:x="105628" fg:w="44"/><text x="64.3945%" y="351.50"></text></g><g><title>_rjem_je_ecache_alloc (44 samples, 0.03%)</title><rect x="64.1445%" y="325" width="0.0267%" height="15" fill="rgb(206,121,29)" fg:x="105628" fg:w="44"/><text x="64.3945%" y="335.50"></text></g><g><title>extent_recycle (44 samples, 0.03%)</title><rect x="64.1445%" y="309" width="0.0267%" height="15" fill="rgb(249,131,53)" fg:x="105628" fg:w="44"/><text x="64.3945%" y="319.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (94 samples, 0.06%)</title><rect x="64.1305%" y="421" width="0.0571%" height="15" fill="rgb(236,170,29)" fg:x="105605" fg:w="94"/><text x="64.3805%" y="431.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (95 samples, 0.06%)</title><rect x="64.1305%" y="437" width="0.0577%" height="15" fill="rgb(247,96,15)" fg:x="105605" fg:w="95"/><text x="64.3805%" y="447.50"></text></g><g><title>imalloc_body (97 samples, 0.06%)</title><rect x="64.1305%" y="517" width="0.0589%" height="15" fill="rgb(211,210,7)" fg:x="105605" fg:w="97"/><text x="64.3805%" y="527.50"></text></g><g><title>imalloc_no_sample (97 samples, 0.06%)</title><rect x="64.1305%" y="501" width="0.0589%" height="15" fill="rgb(240,88,50)" fg:x="105605" fg:w="97"/><text x="64.3805%" y="511.50"></text></g><g><title>iallocztm (97 samples, 0.06%)</title><rect x="64.1305%" y="485" width="0.0589%" height="15" fill="rgb(209,229,26)" fg:x="105605" fg:w="97"/><text x="64.3805%" y="495.50"></text></g><g><title>arena_malloc (97 samples, 0.06%)</title><rect x="64.1305%" y="469" width="0.0589%" height="15" fill="rgb(210,68,23)" fg:x="105605" fg:w="97"/><text x="64.3805%" y="479.50"></text></g><g><title>tcache_alloc_small (97 samples, 0.06%)</title><rect x="64.1305%" y="453" width="0.0589%" height="15" fill="rgb(229,180,13)" fg:x="105605" fg:w="97"/><text x="64.3805%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (99 samples, 0.06%)</title><rect x="64.1299%" y="549" width="0.0601%" height="15" fill="rgb(236,53,44)" fg:x="105604" fg:w="99"/><text x="64.3799%" y="559.50"></text></g><g><title>imalloc (98 samples, 0.06%)</title><rect x="64.1305%" y="533" width="0.0595%" height="15" fill="rgb(244,214,29)" fg:x="105605" fg:w="98"/><text x="64.3805%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame (146 samples, 0.09%)</title><rect x="64.1214%" y="693" width="0.0887%" height="15" fill="rgb(220,75,29)" fg:x="105590" fg:w="146"/><text x="64.3714%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (146 samples, 0.09%)</title><rect x="64.1214%" y="677" width="0.0887%" height="15" fill="rgb(214,183,37)" fg:x="105590" fg:w="146"/><text x="64.3714%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (146 samples, 0.09%)</title><rect x="64.1214%" y="661" width="0.0887%" height="15" fill="rgb(239,117,29)" fg:x="105590" fg:w="146"/><text x="64.3714%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (138 samples, 0.08%)</title><rect x="64.1263%" y="645" width="0.0838%" height="15" fill="rgb(237,171,35)" fg:x="105598" fg:w="138"/><text x="64.3763%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.08%)</title><rect x="64.1263%" y="629" width="0.0838%" height="15" fill="rgb(229,178,53)" fg:x="105598" fg:w="138"/><text x="64.3763%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.08%)</title><rect x="64.1263%" y="613" width="0.0838%" height="15" fill="rgb(210,102,19)" fg:x="105598" fg:w="138"/><text x="64.3763%" y="623.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.08%)</title><rect x="64.1263%" y="597" width="0.0838%" height="15" fill="rgb(235,127,22)" fg:x="105598" fg:w="138"/><text x="64.3763%" y="607.50"></text></g><g><title>__rust_alloc (138 samples, 0.08%)</title><rect x="64.1263%" y="581" width="0.0838%" height="15" fill="rgb(244,31,31)" fg:x="105598" fg:w="138"/><text x="64.3763%" y="591.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (138 samples, 0.08%)</title><rect x="64.1263%" y="565" width="0.0838%" height="15" fill="rgb(231,43,21)" fg:x="105598" fg:w="138"/><text x="64.3763%" y="575.50"></text></g><g><title>_rjem_malloc (33 samples, 0.02%)</title><rect x="64.1900%" y="549" width="0.0200%" height="15" fill="rgb(217,131,35)" fg:x="105703" fg:w="33"/><text x="64.4400%" y="559.50"></text></g><g><title>imalloc_fastpath (33 samples, 0.02%)</title><rect x="64.1900%" y="533" width="0.0200%" height="15" fill="rgb(221,149,4)" fg:x="105703" fg:w="33"/><text x="64.4400%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (30 samples, 0.02%)</title><rect x="64.1918%" y="517" width="0.0182%" height="15" fill="rgb(232,170,28)" fg:x="105706" fg:w="30"/><text x="64.4418%" y="527.50"></text></g><g><title>cache_bin_alloc_impl (30 samples, 0.02%)</title><rect x="64.1918%" y="501" width="0.0182%" height="15" fill="rgb(238,56,10)" fg:x="105706" fg:w="30"/><text x="64.4418%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame (18 samples, 0.01%)</title><rect x="64.2174%" y="661" width="0.0109%" height="15" fill="rgb(235,196,14)" fg:x="105748" fg:w="18"/><text x="64.4674%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (18 samples, 0.01%)</title><rect x="64.2174%" y="645" width="0.0109%" height="15" fill="rgb(216,45,48)" fg:x="105748" fg:w="18"/><text x="64.4674%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.01%)</title><rect x="64.2174%" y="629" width="0.0109%" height="15" fill="rgb(238,213,17)" fg:x="105748" fg:w="18"/><text x="64.4674%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.01%)</title><rect x="64.2180%" y="613" width="0.0103%" height="15" fill="rgb(212,13,2)" fg:x="105749" fg:w="17"/><text x="64.4680%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.01%)</title><rect x="64.2180%" y="597" width="0.0103%" height="15" fill="rgb(240,114,20)" fg:x="105749" fg:w="17"/><text x="64.4680%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.01%)</title><rect x="64.2180%" y="581" width="0.0103%" height="15" fill="rgb(228,41,40)" fg:x="105749" fg:w="17"/><text x="64.4680%" y="591.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.01%)</title><rect x="64.2180%" y="565" width="0.0103%" height="15" fill="rgb(244,132,35)" fg:x="105749" fg:w="17"/><text x="64.4680%" y="575.50"></text></g><g><title>__rust_alloc (17 samples, 0.01%)</title><rect x="64.2180%" y="549" width="0.0103%" height="15" fill="rgb(253,189,4)" fg:x="105749" fg:w="17"/><text x="64.4680%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.01%)</title><rect x="64.2180%" y="533" width="0.0103%" height="15" fill="rgb(224,37,19)" fg:x="105749" fg:w="17"/><text x="64.4680%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (21 samples, 0.01%)</title><rect x="64.2914%" y="549" width="0.0128%" height="15" fill="rgb(235,223,18)" fg:x="105870" fg:w="21"/><text x="64.5414%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.01%)</title><rect x="64.2914%" y="533" width="0.0128%" height="15" fill="rgb(235,163,25)" fg:x="105870" fg:w="21"/><text x="64.5414%" y="543.50"></text></g><g><title>[libc.so.6] (21 samples, 0.01%)</title><rect x="64.2914%" y="517" width="0.0128%" height="15" fill="rgb(217,145,28)" fg:x="105870" fg:w="21"/><text x="64.5414%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (121 samples, 0.07%)</title><rect x="64.2331%" y="629" width="0.0735%" height="15" fill="rgb(223,223,32)" fg:x="105774" fg:w="121"/><text x="64.4831%" y="639.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame::_{{closure}} (121 samples, 0.07%)</title><rect x="64.2331%" y="613" width="0.0735%" height="15" fill="rgb(227,189,39)" fg:x="105774" fg:w="121"/><text x="64.4831%" y="623.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (73 samples, 0.04%)</title><rect x="64.2623%" y="597" width="0.0443%" height="15" fill="rgb(248,10,22)" fg:x="105822" fg:w="73"/><text x="64.5123%" y="607.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (52 samples, 0.03%)</title><rect x="64.2750%" y="581" width="0.0316%" height="15" fill="rgb(248,46,39)" fg:x="105843" fg:w="52"/><text x="64.5250%" y="591.50"></text></g><g><title>fastwebsockets::frame::Frame::write (26 samples, 0.02%)</title><rect x="64.2908%" y="565" width="0.0158%" height="15" fill="rgb(248,113,48)" fg:x="105869" fg:w="26"/><text x="64.5408%" y="575.50"></text></g><g><title>extent_recycle_extract (17 samples, 0.01%)</title><rect x="64.3261%" y="229" width="0.0103%" height="15" fill="rgb(245,16,25)" fg:x="105927" fg:w="17"/><text x="64.5761%" y="239.50"></text></g><g><title>pac_alloc_real (23 samples, 0.01%)</title><rect x="64.3261%" y="277" width="0.0140%" height="15" fill="rgb(249,152,16)" fg:x="105927" fg:w="23"/><text x="64.5761%" y="287.50"></text></g><g><title>_rjem_je_ecache_alloc (23 samples, 0.01%)</title><rect x="64.3261%" y="261" width="0.0140%" height="15" fill="rgb(250,16,1)" fg:x="105927" fg:w="23"/><text x="64.5761%" y="271.50"></text></g><g><title>extent_recycle (23 samples, 0.01%)</title><rect x="64.3261%" y="245" width="0.0140%" height="15" fill="rgb(249,138,3)" fg:x="105927" fg:w="23"/><text x="64.5761%" y="255.50"></text></g><g><title>_rjem_je_pa_alloc (32 samples, 0.02%)</title><rect x="64.3218%" y="325" width="0.0194%" height="15" fill="rgb(227,71,41)" fg:x="105920" fg:w="32"/><text x="64.5718%" y="335.50"></text></g><g><title>pai_alloc (26 samples, 0.02%)</title><rect x="64.3254%" y="309" width="0.0158%" height="15" fill="rgb(209,184,23)" fg:x="105926" fg:w="26"/><text x="64.5754%" y="319.50"></text></g><g><title>pac_alloc_impl (26 samples, 0.02%)</title><rect x="64.3254%" y="293" width="0.0158%" height="15" fill="rgb(223,215,31)" fg:x="105926" fg:w="26"/><text x="64.5754%" y="303.50"></text></g><g><title>arena_slab_alloc (38 samples, 0.02%)</title><rect x="64.3194%" y="341" width="0.0231%" height="15" fill="rgb(210,146,28)" fg:x="105916" fg:w="38"/><text x="64.5694%" y="351.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (69 samples, 0.04%)</title><rect x="64.3163%" y="357" width="0.0419%" height="15" fill="rgb(209,183,41)" fg:x="105911" fg:w="69"/><text x="64.5663%" y="367.50"></text></g><g><title>_rjem_je_malloc_default (73 samples, 0.04%)</title><rect x="64.3145%" y="485" width="0.0443%" height="15" fill="rgb(209,224,45)" fg:x="105908" fg:w="73"/><text x="64.5645%" y="495.50"></text></g><g><title>imalloc (72 samples, 0.04%)</title><rect x="64.3151%" y="469" width="0.0437%" height="15" fill="rgb(224,209,51)" fg:x="105909" fg:w="72"/><text x="64.5651%" y="479.50"></text></g><g><title>imalloc_body (72 samples, 0.04%)</title><rect x="64.3151%" y="453" width="0.0437%" height="15" fill="rgb(223,17,39)" fg:x="105909" fg:w="72"/><text x="64.5651%" y="463.50"></text></g><g><title>imalloc_no_sample (72 samples, 0.04%)</title><rect x="64.3151%" y="437" width="0.0437%" height="15" fill="rgb(234,204,37)" fg:x="105909" fg:w="72"/><text x="64.5651%" y="447.50"></text></g><g><title>iallocztm (72 samples, 0.04%)</title><rect x="64.3151%" y="421" width="0.0437%" height="15" fill="rgb(236,120,5)" fg:x="105909" fg:w="72"/><text x="64.5651%" y="431.50"></text></g><g><title>arena_malloc (72 samples, 0.04%)</title><rect x="64.3151%" y="405" width="0.0437%" height="15" fill="rgb(248,97,27)" fg:x="105909" fg:w="72"/><text x="64.5651%" y="415.50"></text></g><g><title>tcache_alloc_small (72 samples, 0.04%)</title><rect x="64.3151%" y="389" width="0.0437%" height="15" fill="rgb(240,66,17)" fg:x="105909" fg:w="72"/><text x="64.5651%" y="399.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (71 samples, 0.04%)</title><rect x="64.3157%" y="373" width="0.0431%" height="15" fill="rgb(210,79,3)" fg:x="105910" fg:w="71"/><text x="64.5657%" y="383.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (234 samples, 0.14%)</title><rect x="64.2283%" y="661" width="0.1421%" height="15" fill="rgb(214,176,27)" fg:x="105766" fg:w="234"/><text x="64.4783%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (234 samples, 0.14%)</title><rect x="64.2283%" y="645" width="0.1421%" height="15" fill="rgb(235,185,3)" fg:x="105766" fg:w="234"/><text x="64.4783%" y="655.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (98 samples, 0.06%)</title><rect x="64.3109%" y="629" width="0.0595%" height="15" fill="rgb(227,24,12)" fg:x="105902" fg:w="98"/><text x="64.5609%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (98 samples, 0.06%)</title><rect x="64.3109%" y="613" width="0.0595%" height="15" fill="rgb(252,169,48)" fg:x="105902" fg:w="98"/><text x="64.5609%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (98 samples, 0.06%)</title><rect x="64.3109%" y="597" width="0.0595%" height="15" fill="rgb(212,65,1)" fg:x="105902" fg:w="98"/><text x="64.5609%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (92 samples, 0.06%)</title><rect x="64.3145%" y="581" width="0.0559%" height="15" fill="rgb(242,39,24)" fg:x="105908" fg:w="92"/><text x="64.5645%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92 samples, 0.06%)</title><rect x="64.3145%" y="565" width="0.0559%" height="15" fill="rgb(249,32,23)" fg:x="105908" fg:w="92"/><text x="64.5645%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92 samples, 0.06%)</title><rect x="64.3145%" y="549" width="0.0559%" height="15" fill="rgb(251,195,23)" fg:x="105908" fg:w="92"/><text x="64.5645%" y="559.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.06%)</title><rect x="64.3145%" y="533" width="0.0559%" height="15" fill="rgb(236,174,8)" fg:x="105908" fg:w="92"/><text x="64.5645%" y="543.50"></text></g><g><title>__rust_alloc (92 samples, 0.06%)</title><rect x="64.3145%" y="517" width="0.0559%" height="15" fill="rgb(220,197,8)" fg:x="105908" fg:w="92"/><text x="64.5645%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (92 samples, 0.06%)</title><rect x="64.3145%" y="501" width="0.0559%" height="15" fill="rgb(240,108,37)" fg:x="105908" fg:w="92"/><text x="64.5645%" y="511.50"></text></g><g><title>_rjem_malloc (19 samples, 0.01%)</title><rect x="64.3588%" y="485" width="0.0115%" height="15" fill="rgb(232,176,24)" fg:x="105981" fg:w="19"/><text x="64.6088%" y="495.50"></text></g><g><title>imalloc_fastpath (19 samples, 0.01%)</title><rect x="64.3588%" y="469" width="0.0115%" height="15" fill="rgb(243,35,29)" fg:x="105981" fg:w="19"/><text x="64.6088%" y="479.50"></text></g><g><title>cache_bin_alloc_easy (18 samples, 0.01%)</title><rect x="64.3595%" y="453" width="0.0109%" height="15" fill="rgb(210,37,18)" fg:x="105982" fg:w="18"/><text x="64.6095%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (18 samples, 0.01%)</title><rect x="64.3595%" y="437" width="0.0109%" height="15" fill="rgb(224,184,40)" fg:x="105982" fg:w="18"/><text x="64.6095%" y="447.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (272 samples, 0.17%)</title><rect x="64.2101%" y="693" width="0.1652%" height="15" fill="rgb(236,39,29)" fg:x="105736" fg:w="272"/><text x="64.4601%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (272 samples, 0.17%)</title><rect x="64.2101%" y="677" width="0.1652%" height="15" fill="rgb(232,48,39)" fg:x="105736" fg:w="272"/><text x="64.4601%" y="687.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (94 samples, 0.06%)</title><rect x="64.3752%" y="693" width="0.0571%" height="15" fill="rgb(236,34,42)" fg:x="106008" fg:w="94"/><text x="64.6252%" y="703.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (30 samples, 0.02%)</title><rect x="64.4426%" y="645" width="0.0182%" height="15" fill="rgb(243,106,37)" fg:x="106119" fg:w="30"/><text x="64.6926%" y="655.50"></text></g><g><title>core::task::wake::Waker::wake (26 samples, 0.02%)</title><rect x="64.4451%" y="629" width="0.0158%" height="15" fill="rgb(218,96,6)" fg:x="106123" fg:w="26"/><text x="64.6951%" y="639.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (26 samples, 0.02%)</title><rect x="64.4451%" y="613" width="0.0158%" height="15" fill="rgb(235,130,12)" fg:x="106123" fg:w="26"/><text x="64.6951%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (26 samples, 0.02%)</title><rect x="64.4451%" y="597" width="0.0158%" height="15" fill="rgb(231,95,0)" fg:x="106123" fg:w="26"/><text x="64.6951%" y="607.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (6,297 samples, 3.82%)</title><rect x="60.6381%" y="757" width="3.8240%" height="15" fill="rgb(228,12,23)" fg:x="99854" fg:w="6297"/><text x="60.8881%" y="767.50">&lt;fut..</text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (5,553 samples, 3.37%)</title><rect x="61.0899%" y="741" width="3.3722%" height="15" fill="rgb(216,12,1)" fg:x="100598" fg:w="5553"/><text x="61.3399%" y="751.50">wis..</text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (5,430 samples, 3.30%)</title><rect x="61.1646%" y="725" width="3.2975%" height="15" fill="rgb(219,59,3)" fg:x="100721" fg:w="5430"/><text x="61.4146%" y="735.50">wis..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_frame::_{{closure}} (590 samples, 0.36%)</title><rect x="64.1038%" y="709" width="0.3583%" height="15" fill="rgb(215,208,46)" fg:x="105561" fg:w="590"/><text x="64.3538%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (47 samples, 0.03%)</title><rect x="64.4335%" y="693" width="0.0285%" height="15" fill="rgb(254,224,29)" fg:x="106104" fg:w="47"/><text x="64.6835%" y="703.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.03%)</title><rect x="64.4335%" y="677" width="0.0285%" height="15" fill="rgb(232,14,29)" fg:x="106104" fg:w="47"/><text x="64.6835%" y="687.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (47 samples, 0.03%)</title><rect x="64.4335%" y="661" width="0.0285%" height="15" fill="rgb(208,45,52)" fg:x="106104" fg:w="47"/><text x="64.6835%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (6,310 samples, 3.83%)</title><rect x="60.6327%" y="773" width="3.8319%" height="15" fill="rgb(234,191,28)" fg:x="99845" fg:w="6310"/><text x="60.8827%" y="783.50">&lt;cor..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (6,361 samples, 3.86%)</title><rect x="60.6327%" y="805" width="3.8628%" height="15" fill="rgb(244,67,43)" fg:x="99845" fg:w="6361"/><text x="60.8827%" y="815.50">&lt;S a..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (6,361 samples, 3.86%)</title><rect x="60.6327%" y="789" width="3.8628%" height="15" fill="rgb(236,189,24)" fg:x="99845" fg:w="6361"/><text x="60.8827%" y="799.50">&lt;wis..</text></g><g><title>core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::map_err (51 samples, 0.03%)</title><rect x="64.4645%" y="773" width="0.0310%" height="15" fill="rgb(239,214,33)" fg:x="106155" fg:w="51"/><text x="64.7145%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (18 samples, 0.01%)</title><rect x="64.4955%" y="805" width="0.0109%" height="15" fill="rgb(226,176,41)" fg:x="106206" fg:w="18"/><text x="64.7455%" y="815.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (6,580 samples, 4.00%)</title><rect x="60.5167%" y="853" width="3.9958%" height="15" fill="rgb(248,47,8)" fg:x="99654" fg:w="6580"/><text x="60.7667%" y="863.50">&lt;tok..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (6,580 samples, 4.00%)</title><rect x="60.5167%" y="837" width="3.9958%" height="15" fill="rgb(218,81,44)" fg:x="99654" fg:w="6580"/><text x="60.7667%" y="847.50">&lt;wis..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (6,580 samples, 4.00%)</title><rect x="60.5167%" y="821" width="3.9958%" height="15" fill="rgb(213,98,6)" fg:x="99654" fg:w="6580"/><text x="60.7667%" y="831.50">&lt;fut..</text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (6,622 samples, 4.02%)</title><rect x="60.5063%" y="869" width="4.0213%" height="15" fill="rgb(222,85,22)" fg:x="99637" fg:w="6622"/><text x="60.7563%" y="879.50">&lt;tok..</text></g><g><title>core::option::Option&lt;T&gt;::take (22 samples, 0.01%)</title><rect x="64.5143%" y="853" width="0.0134%" height="15" fill="rgb(239,46,39)" fg:x="106237" fg:w="22"/><text x="64.7643%" y="863.50"></text></g><g><title>core::mem::replace (22 samples, 0.01%)</title><rect x="64.5143%" y="837" width="0.0134%" height="15" fill="rgb(237,12,29)" fg:x="106237" fg:w="22"/><text x="64.7643%" y="847.50"></text></g><g><title>core::ptr::write (20 samples, 0.01%)</title><rect x="64.5155%" y="821" width="0.0121%" height="15" fill="rgb(214,77,8)" fg:x="106239" fg:w="20"/><text x="64.7655%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.01%)</title><rect x="64.5392%" y="821" width="0.0109%" height="15" fill="rgb(217,168,37)" fg:x="106278" fg:w="18"/><text x="64.7892%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (17 samples, 0.01%)</title><rect x="64.5398%" y="805" width="0.0103%" height="15" fill="rgb(221,217,23)" fg:x="106279" fg:w="17"/><text x="64.7898%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (17 samples, 0.01%)</title><rect x="64.5398%" y="789" width="0.0103%" height="15" fill="rgb(243,229,36)" fg:x="106279" fg:w="17"/><text x="64.7898%" y="799.50"></text></g><g><title>[libc.so.6] (651 samples, 0.40%)</title><rect x="64.8957%" y="677" width="0.3953%" height="15" fill="rgb(251,163,40)" fg:x="106865" fg:w="651"/><text x="65.1457%" y="687.50"></text></g><g><title>__send (1,157 samples, 0.70%)</title><rect x="64.6686%" y="693" width="0.7026%" height="15" fill="rgb(237,222,12)" fg:x="106491" fg:w="1157"/><text x="64.9186%" y="703.50"></text></g><g><title>[unknown] (132 samples, 0.08%)</title><rect x="65.2910%" y="677" width="0.0802%" height="15" fill="rgb(248,132,6)" fg:x="107516" fg:w="132"/><text x="65.5410%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,192 samples, 0.72%)</title><rect x="64.6631%" y="789" width="0.7239%" height="15" fill="rgb(227,167,50)" fg:x="106482" fg:w="1192"/><text x="64.9131%" y="799.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,192 samples, 0.72%)</title><rect x="64.6631%" y="773" width="0.7239%" height="15" fill="rgb(242,84,37)" fg:x="106482" fg:w="1192"/><text x="64.9131%" y="783.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,192 samples, 0.72%)</title><rect x="64.6631%" y="757" width="0.7239%" height="15" fill="rgb(212,4,50)" fg:x="106482" fg:w="1192"/><text x="64.9131%" y="767.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1,192 samples, 0.72%)</title><rect x="64.6631%" y="741" width="0.7239%" height="15" fill="rgb(230,228,32)" fg:x="106482" fg:w="1192"/><text x="64.9131%" y="751.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1,192 samples, 0.72%)</title><rect x="64.6631%" y="725" width="0.7239%" height="15" fill="rgb(248,217,23)" fg:x="106482" fg:w="1192"/><text x="64.9131%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1,192 samples, 0.72%)</title><rect x="64.6631%" y="709" width="0.7239%" height="15" fill="rgb(238,197,32)" fg:x="106482" fg:w="1192"/><text x="64.9131%" y="719.50"></text></g><g><title>std::sys::pal::unix::cvt (26 samples, 0.02%)</title><rect x="65.3712%" y="693" width="0.0158%" height="15" fill="rgb(236,106,1)" fg:x="107648" fg:w="26"/><text x="65.6212%" y="703.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (36 samples, 0.02%)</title><rect x="65.4161%" y="757" width="0.0219%" height="15" fill="rgb(219,228,13)" fg:x="107722" fg:w="36"/><text x="65.6661%" y="767.50"></text></g><g><title>tokio::runtime::context::budget (36 samples, 0.02%)</title><rect x="65.4161%" y="741" width="0.0219%" height="15" fill="rgb(238,30,35)" fg:x="107722" fg:w="36"/><text x="65.6661%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.02%)</title><rect x="65.4161%" y="725" width="0.0219%" height="15" fill="rgb(236,70,23)" fg:x="107722" fg:w="36"/><text x="65.6661%" y="735.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (23 samples, 0.01%)</title><rect x="65.4240%" y="709" width="0.0140%" height="15" fill="rgb(249,104,48)" fg:x="107735" fg:w="23"/><text x="65.6740%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (23 samples, 0.01%)</title><rect x="65.4240%" y="693" width="0.0140%" height="15" fill="rgb(254,117,50)" fg:x="107735" fg:w="23"/><text x="65.6740%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (84 samples, 0.05%)</title><rect x="65.4695%" y="741" width="0.0510%" height="15" fill="rgb(223,152,4)" fg:x="107810" fg:w="84"/><text x="65.7195%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (84 samples, 0.05%)</title><rect x="65.4695%" y="725" width="0.0510%" height="15" fill="rgb(245,6,2)" fg:x="107810" fg:w="84"/><text x="65.7195%" y="735.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (17 samples, 0.01%)</title><rect x="65.5242%" y="741" width="0.0103%" height="15" fill="rgb(249,150,24)" fg:x="107900" fg:w="17"/><text x="65.7742%" y="751.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (17 samples, 0.01%)</title><rect x="65.5242%" y="725" width="0.0103%" height="15" fill="rgb(228,185,42)" fg:x="107900" fg:w="17"/><text x="65.7742%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 0.01%)</title><rect x="65.5242%" y="709" width="0.0103%" height="15" fill="rgb(226,39,33)" fg:x="107900" fg:w="17"/><text x="65.7742%" y="719.50"></text></g><g><title>&lt;tokio::io::util::write::Write&lt;W&gt; as core::future::future::Future&gt;::poll (1,664 samples, 1.01%)</title><rect x="64.5277%" y="869" width="1.0105%" height="15" fill="rgb(221,166,19)" fg:x="106259" fg:w="1664"/><text x="64.7777%" y="879.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,664 samples, 1.01%)</title><rect x="64.5277%" y="853" width="1.0105%" height="15" fill="rgb(209,109,2)" fg:x="106259" fg:w="1664"/><text x="64.7777%" y="863.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,654 samples, 1.00%)</title><rect x="64.5337%" y="837" width="1.0044%" height="15" fill="rgb(252,216,26)" fg:x="106269" fg:w="1654"/><text x="64.7837%" y="847.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1,627 samples, 0.99%)</title><rect x="64.5501%" y="821" width="0.9880%" height="15" fill="rgb(227,173,36)" fg:x="106296" fg:w="1627"/><text x="64.8001%" y="831.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1,506 samples, 0.91%)</title><rect x="64.6236%" y="805" width="0.9145%" height="15" fill="rgb(209,90,7)" fg:x="106417" fg:w="1506"/><text x="64.8736%" y="815.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (241 samples, 0.15%)</title><rect x="65.3918%" y="789" width="0.1464%" height="15" fill="rgb(250,194,11)" fg:x="107682" fg:w="241"/><text x="65.6418%" y="799.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (232 samples, 0.14%)</title><rect x="65.3973%" y="773" width="0.1409%" height="15" fill="rgb(220,72,50)" fg:x="107691" fg:w="232"/><text x="65.6473%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (165 samples, 0.10%)</title><rect x="65.4380%" y="757" width="0.1002%" height="15" fill="rgb(222,106,48)" fg:x="107758" fg:w="165"/><text x="65.6880%" y="767.50"></text></g><g><title>cache_bin_dalloc_easy (43 samples, 0.03%)</title><rect x="65.5843%" y="725" width="0.0261%" height="15" fill="rgb(216,220,45)" fg:x="107999" fg:w="43"/><text x="65.8343%" y="735.50"></text></g><g><title>sz_index2size (25 samples, 0.02%)</title><rect x="65.6104%" y="725" width="0.0152%" height="15" fill="rgb(234,112,18)" fg:x="108042" fg:w="25"/><text x="65.8604%" y="735.50"></text></g><g><title>sz_index2size_lookup (25 samples, 0.02%)</title><rect x="65.6104%" y="709" width="0.0152%" height="15" fill="rgb(206,179,9)" fg:x="108042" fg:w="25"/><text x="65.8604%" y="719.50"></text></g><g><title>sz_index2size_lookup_impl (25 samples, 0.02%)</title><rect x="65.6104%" y="693" width="0.0152%" height="15" fill="rgb(215,115,40)" fg:x="108042" fg:w="25"/><text x="65.8604%" y="703.50"></text></g><g><title>_rjem_sdallocx (112 samples, 0.07%)</title><rect x="65.5612%" y="757" width="0.0680%" height="15" fill="rgb(222,69,34)" fg:x="107961" fg:w="112"/><text x="65.8112%" y="767.50"></text></g><g><title>free_fastpath (112 samples, 0.07%)</title><rect x="65.5612%" y="741" width="0.0680%" height="15" fill="rgb(209,161,10)" fg:x="107961" fg:w="112"/><text x="65.8112%" y="751.50"></text></g><g><title>inallocx (93 samples, 0.06%)</title><rect x="65.7058%" y="501" width="0.0565%" height="15" fill="rgb(217,6,38)" fg:x="108199" fg:w="93"/><text x="65.9558%" y="511.50"></text></g><g><title>aligned_usize_get (81 samples, 0.05%)</title><rect x="65.7131%" y="485" width="0.0492%" height="15" fill="rgb(229,229,48)" fg:x="108211" fg:w="81"/><text x="65.9631%" y="495.50"></text></g><g><title>sz_s2u (81 samples, 0.05%)</title><rect x="65.7131%" y="469" width="0.0492%" height="15" fill="rgb(225,21,28)" fg:x="108211" fg:w="81"/><text x="65.9631%" y="479.50"></text></g><g><title>sz_s2u_compute (73 samples, 0.04%)</title><rect x="65.7179%" y="453" width="0.0443%" height="15" fill="rgb(206,33,13)" fg:x="108219" fg:w="73"/><text x="65.9679%" y="463.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (31 samples, 0.02%)</title><rect x="65.7981%" y="389" width="0.0188%" height="15" fill="rgb(242,178,17)" fg:x="108351" fg:w="31"/><text x="66.0481%" y="399.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (31 samples, 0.02%)</title><rect x="65.7981%" y="373" width="0.0188%" height="15" fill="rgb(220,162,5)" fg:x="108351" fg:w="31"/><text x="66.0481%" y="383.50"></text></g><g><title>arena_decay_dirty (38 samples, 0.02%)</title><rect x="65.7975%" y="421" width="0.0231%" height="15" fill="rgb(210,33,43)" fg:x="108350" fg:w="38"/><text x="66.0475%" y="431.50"></text></g><g><title>arena_decay_impl (37 samples, 0.02%)</title><rect x="65.7981%" y="405" width="0.0225%" height="15" fill="rgb(216,116,54)" fg:x="108351" fg:w="37"/><text x="66.0481%" y="415.50"></text></g><g><title>_rjem_je_arena_decay (50 samples, 0.03%)</title><rect x="65.7956%" y="437" width="0.0304%" height="15" fill="rgb(249,92,24)" fg:x="108347" fg:w="50"/><text x="66.0456%" y="447.50"></text></g><g><title>ticker_geom_ticks (29 samples, 0.02%)</title><rect x="65.8485%" y="389" width="0.0176%" height="15" fill="rgb(231,189,14)" fg:x="108434" fg:w="29"/><text x="66.0985%" y="399.50"></text></g><g><title>arena_decay_tick (30 samples, 0.02%)</title><rect x="65.8485%" y="421" width="0.0182%" height="15" fill="rgb(230,8,41)" fg:x="108434" fg:w="30"/><text x="66.0985%" y="431.50"></text></g><g><title>arena_decay_ticks (30 samples, 0.02%)</title><rect x="65.8485%" y="405" width="0.0182%" height="15" fill="rgb(249,7,27)" fg:x="108434" fg:w="30"/><text x="66.0985%" y="415.50"></text></g><g><title>arena_get_from_edata (715 samples, 0.43%)</title><rect x="65.8667%" y="421" width="0.4342%" height="15" fill="rgb(232,86,5)" fg:x="108464" fg:w="715"/><text x="66.1167%" y="431.50"></text></g><g><title>atomic_load_p (715 samples, 0.43%)</title><rect x="65.8667%" y="405" width="0.4342%" height="15" fill="rgb(224,175,18)" fg:x="108464" fg:w="715"/><text x="66.1167%" y="415.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (53 samples, 0.03%)</title><rect x="66.3337%" y="405" width="0.0322%" height="15" fill="rgb(220,129,12)" fg:x="109233" fg:w="53"/><text x="66.5837%" y="415.50"></text></g><g><title>decay_immediately (30 samples, 0.02%)</title><rect x="66.3476%" y="389" width="0.0182%" height="15" fill="rgb(210,19,36)" fg:x="109256" fg:w="30"/><text x="66.5976%" y="399.50"></text></g><g><title>decay_ms_read (30 samples, 0.02%)</title><rect x="66.3476%" y="373" width="0.0182%" height="15" fill="rgb(219,96,14)" fg:x="109256" fg:w="30"/><text x="66.5976%" y="383.50"></text></g><g><title>atomic_load_zd (30 samples, 0.02%)</title><rect x="66.3476%" y="357" width="0.0182%" height="15" fill="rgb(249,106,1)" fg:x="109256" fg:w="30"/><text x="66.5976%" y="367.50"></text></g><g><title>_rjem_je_emap_remap (32 samples, 0.02%)</title><rect x="66.3950%" y="389" width="0.0194%" height="15" fill="rgb(249,155,20)" fg:x="109334" fg:w="32"/><text x="66.6450%" y="399.50"></text></g><g><title>pa_nactive_sub (232 samples, 0.14%)</title><rect x="66.4266%" y="389" width="0.1409%" height="15" fill="rgb(244,168,9)" fg:x="109386" fg:w="232"/><text x="66.6766%" y="399.50"></text></g><g><title>atomic_fetch_sub_zu (232 samples, 0.14%)</title><rect x="66.4266%" y="373" width="0.1409%" height="15" fill="rgb(216,23,50)" fg:x="109386" fg:w="232"/><text x="66.6766%" y="383.50"></text></g><g><title>_rjem_je_pa_dalloc (341 samples, 0.21%)</title><rect x="66.3659%" y="405" width="0.2071%" height="15" fill="rgb(224,219,20)" fg:x="109286" fg:w="341"/><text x="66.6159%" y="415.50"></text></g><g><title>[libc.so.6] (318 samples, 0.19%)</title><rect x="66.5972%" y="389" width="0.1931%" height="15" fill="rgb(222,156,15)" fg:x="109667" fg:w="318"/><text x="66.8472%" y="399.50"></text></g><g><title>atomic_load_zu (56 samples, 0.03%)</title><rect x="66.8669%" y="373" width="0.0340%" height="15" fill="rgb(231,97,17)" fg:x="110111" fg:w="56"/><text x="67.1169%" y="383.50"></text></g><g><title>rtree_leaf_elm_lookup (26 samples, 0.02%)</title><rect x="66.9610%" y="325" width="0.0158%" height="15" fill="rgb(218,70,48)" fg:x="110266" fg:w="26"/><text x="67.2110%" y="335.50"></text></g><g><title>_rjem_je_emap_update_edata_state (103 samples, 0.06%)</title><rect x="66.9233%" y="341" width="0.0625%" height="15" fill="rgb(212,196,52)" fg:x="110204" fg:w="103"/><text x="67.1733%" y="351.50"></text></g><g><title>_rjem_je_edata_heap_empty (106 samples, 0.06%)</title><rect x="67.0594%" y="325" width="0.0644%" height="15" fill="rgb(243,203,18)" fg:x="110428" fg:w="106"/><text x="67.3094%" y="335.50"></text></g><g><title>edata_heap_ph_cmp (180 samples, 0.11%)</title><rect x="67.1754%" y="293" width="0.1093%" height="15" fill="rgb(252,125,41)" fg:x="110619" fg:w="180"/><text x="67.4254%" y="303.50"></text></g><g><title>edata_snad_comp (180 samples, 0.11%)</title><rect x="67.1754%" y="277" width="0.1093%" height="15" fill="rgb(223,180,33)" fg:x="110619" fg:w="180"/><text x="67.4254%" y="287.50"></text></g><g><title>edata_cmp_summary_get (173 samples, 0.11%)</title><rect x="67.1796%" y="261" width="0.1051%" height="15" fill="rgb(254,159,46)" fg:x="110626" fg:w="173"/><text x="67.4296%" y="271.50"></text></g><g><title>edata_sn_get (173 samples, 0.11%)</title><rect x="67.1796%" y="245" width="0.1051%" height="15" fill="rgb(254,38,10)" fg:x="110626" fg:w="173"/><text x="67.4296%" y="255.50"></text></g><g><title>ph_try_aux_merge_pair (17 samples, 0.01%)</title><rect x="67.2895%" y="293" width="0.0103%" height="15" fill="rgb(208,217,32)" fg:x="110807" fg:w="17"/><text x="67.5395%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_insert (315 samples, 0.19%)</title><rect x="67.1237%" y="325" width="0.1913%" height="15" fill="rgb(221,120,13)" fg:x="110534" fg:w="315"/><text x="67.3737%" y="335.50"></text></g><g><title>ph_insert (302 samples, 0.18%)</title><rect x="67.1316%" y="309" width="0.1834%" height="15" fill="rgb(246,54,52)" fg:x="110547" fg:w="302"/><text x="67.3816%" y="319.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (47 samples, 0.03%)</title><rect x="67.3150%" y="325" width="0.0285%" height="15" fill="rgb(242,34,25)" fg:x="110849" fg:w="47"/><text x="67.5650%" y="335.50"></text></g><g><title>edata_cmp_summary_comp (56 samples, 0.03%)</title><rect x="67.3466%" y="325" width="0.0340%" height="15" fill="rgb(247,209,9)" fg:x="110901" fg:w="56"/><text x="67.5966%" y="335.50"></text></g><g><title>edata_list_inactive_append (161 samples, 0.10%)</title><rect x="67.3849%" y="325" width="0.0978%" height="15" fill="rgb(228,71,26)" fg:x="110964" fg:w="161"/><text x="67.6349%" y="335.50"></text></g><g><title>atomic_load_zu (60 samples, 0.04%)</title><rect x="67.4857%" y="309" width="0.0364%" height="15" fill="rgb(222,145,49)" fg:x="111130" fg:w="60"/><text x="67.7357%" y="319.50"></text></g><g><title>eset_stats_add (81 samples, 0.05%)</title><rect x="67.4826%" y="325" width="0.0492%" height="15" fill="rgb(218,121,17)" fg:x="111125" fg:w="81"/><text x="67.7326%" y="335.50"></text></g><g><title>fb_set (33 samples, 0.02%)</title><rect x="67.5318%" y="325" width="0.0200%" height="15" fill="rgb(244,50,7)" fg:x="111206" fg:w="33"/><text x="67.7818%" y="335.50"></text></g><g><title>extent_deactivate_locked (1,145 samples, 0.70%)</title><rect x="66.9051%" y="373" width="0.6953%" height="15" fill="rgb(246,229,37)" fg:x="110174" fg:w="1145"/><text x="67.1551%" y="383.50"></text></g><g><title>extent_deactivate_locked_impl (1,145 samples, 0.70%)</title><rect x="66.9051%" y="357" width="0.6953%" height="15" fill="rgb(225,18,5)" fg:x="110174" fg:w="1145"/><text x="67.1551%" y="367.50"></text></g><g><title>_rjem_je_eset_insert (1,012 samples, 0.61%)</title><rect x="66.9859%" y="341" width="0.6146%" height="15" fill="rgb(213,204,8)" fg:x="110307" fg:w="1012"/><text x="67.2359%" y="351.50"></text></g><g><title>sz_psz2ind (80 samples, 0.05%)</title><rect x="67.5519%" y="325" width="0.0486%" height="15" fill="rgb(238,103,6)" fg:x="111239" fg:w="80"/><text x="67.8019%" y="335.50"></text></g><g><title>rtree_leaf_elm_lookup (33 samples, 0.02%)</title><rect x="67.9108%" y="293" width="0.0200%" height="15" fill="rgb(222,25,35)" fg:x="111830" fg:w="33"/><text x="68.1608%" y="303.50"></text></g><g><title>_rjem_je_emap_update_edata_state (172 samples, 0.10%)</title><rect x="67.8804%" y="309" width="0.1045%" height="15" fill="rgb(213,203,35)" fg:x="111780" fg:w="172"/><text x="68.1304%" y="319.50"></text></g><g><title>rtree_leaf_elm_state_update (89 samples, 0.05%)</title><rect x="67.9308%" y="293" width="0.0540%" height="15" fill="rgb(221,79,53)" fg:x="111863" fg:w="89"/><text x="68.1808%" y="303.50"></text></g><g><title>rtree_leaf_elm_bits_read (71 samples, 0.04%)</title><rect x="67.9417%" y="277" width="0.0431%" height="15" fill="rgb(243,200,35)" fg:x="111881" fg:w="71"/><text x="68.1917%" y="287.50"></text></g><g><title>atomic_load_p (71 samples, 0.04%)</title><rect x="67.9417%" y="261" width="0.0431%" height="15" fill="rgb(248,60,25)" fg:x="111881" fg:w="71"/><text x="68.1917%" y="271.50"></text></g><g><title>edata_committed_get (74 samples, 0.04%)</title><rect x="68.0340%" y="293" width="0.0449%" height="15" fill="rgb(227,53,46)" fg:x="112033" fg:w="74"/><text x="68.2840%" y="303.50"></text></g><g><title>extent_can_acquire_neighbor (197 samples, 0.12%)</title><rect x="67.9848%" y="309" width="0.1196%" height="15" fill="rgb(216,120,32)" fg:x="111952" fg:w="197"/><text x="68.2348%" y="319.50"></text></g><g><title>extent_neighbor_head_state_mergeable (36 samples, 0.02%)</title><rect x="68.0826%" y="293" width="0.0219%" height="15" fill="rgb(220,134,1)" fg:x="112113" fg:w="36"/><text x="68.3326%" y="303.50"></text></g><g><title>rtree_leaf_elm_lookup (66 samples, 0.04%)</title><rect x="68.1045%" y="309" width="0.0401%" height="15" fill="rgb(237,168,5)" fg:x="112149" fg:w="66"/><text x="68.3545%" y="319.50"></text></g><g><title>rtree_leaf_elm_bits_decode (45 samples, 0.03%)</title><rect x="68.1446%" y="293" width="0.0273%" height="15" fill="rgb(231,100,33)" fg:x="112215" fg:w="45"/><text x="68.3946%" y="303.50"></text></g><g><title>rtree_leaf_elm_read (368 samples, 0.22%)</title><rect x="68.1446%" y="309" width="0.2235%" height="15" fill="rgb(236,177,47)" fg:x="112215" fg:w="368"/><text x="68.3946%" y="319.50"></text></g><g><title>rtree_leaf_elm_bits_read (323 samples, 0.20%)</title><rect x="68.1719%" y="293" width="0.1961%" height="15" fill="rgb(235,7,49)" fg:x="112260" fg:w="323"/><text x="68.4219%" y="303.50"></text></g><g><title>atomic_load_p (323 samples, 0.20%)</title><rect x="68.1719%" y="277" width="0.1961%" height="15" fill="rgb(232,119,22)" fg:x="112260" fg:w="323"/><text x="68.4219%" y="287.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1,037 samples, 0.63%)</title><rect x="67.7395%" y="341" width="0.6297%" height="15" fill="rgb(254,73,53)" fg:x="111548" fg:w="1037"/><text x="67.9895%" y="351.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (995 samples, 0.60%)</title><rect x="67.7650%" y="325" width="0.6042%" height="15" fill="rgb(251,35,20)" fg:x="111590" fg:w="995"/><text x="68.0150%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_first (34 samples, 0.02%)</title><rect x="68.4294%" y="309" width="0.0206%" height="15" fill="rgb(241,119,20)" fg:x="112684" fg:w="34"/><text x="68.6794%" y="319.50"></text></g><g><title>ph_merge_children (81 samples, 0.05%)</title><rect x="68.5144%" y="277" width="0.0492%" height="15" fill="rgb(207,102,14)" fg:x="112824" fg:w="81"/><text x="68.7644%" y="287.50"></text></g><g><title>phn_merge_siblings (42 samples, 0.03%)</title><rect x="68.5381%" y="261" width="0.0255%" height="15" fill="rgb(248,201,50)" fg:x="112863" fg:w="42"/><text x="68.7881%" y="271.50"></text></g><g><title>phn_next_get (31 samples, 0.02%)</title><rect x="68.5447%" y="245" width="0.0188%" height="15" fill="rgb(222,185,44)" fg:x="112874" fg:w="31"/><text x="68.7947%" y="255.50"></text></g><g><title>phn_next_get (21 samples, 0.01%)</title><rect x="68.5678%" y="277" width="0.0128%" height="15" fill="rgb(218,107,18)" fg:x="112912" fg:w="21"/><text x="68.8178%" y="287.50"></text></g><g><title>_rjem_je_edata_heap_remove (227 samples, 0.14%)</title><rect x="68.4500%" y="309" width="0.1378%" height="15" fill="rgb(237,177,39)" fg:x="112718" fg:w="227"/><text x="68.7000%" y="319.50"></text></g><g><title>ph_remove (203 samples, 0.12%)</title><rect x="68.4646%" y="293" width="0.1233%" height="15" fill="rgb(246,69,6)" fg:x="112742" fg:w="203"/><text x="68.7146%" y="303.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (57 samples, 0.03%)</title><rect x="68.5879%" y="309" width="0.0346%" height="15" fill="rgb(234,208,37)" fg:x="112945" fg:w="57"/><text x="68.8379%" y="319.50"></text></g><g><title>sz_psz2ind (24 samples, 0.01%)</title><rect x="68.6079%" y="293" width="0.0146%" height="15" fill="rgb(225,4,6)" fg:x="112978" fg:w="24"/><text x="68.8579%" y="303.50"></text></g><g><title>edata_list_inactive_remove (159 samples, 0.10%)</title><rect x="68.6370%" y="309" width="0.0966%" height="15" fill="rgb(233,45,0)" fg:x="113026" fg:w="159"/><text x="68.8870%" y="319.50"></text></g><g><title>atomic_load_zu (153 samples, 0.09%)</title><rect x="68.7397%" y="293" width="0.0929%" height="15" fill="rgb(226,136,5)" fg:x="113195" fg:w="153"/><text x="68.9897%" y="303.50"></text></g><g><title>eset_stats_sub (169 samples, 0.10%)</title><rect x="68.7379%" y="309" width="0.1026%" height="15" fill="rgb(211,91,47)" fg:x="113192" fg:w="169"/><text x="68.9879%" y="319.50"></text></g><g><title>_rjem_je_eset_remove (792 samples, 0.48%)</title><rect x="68.3954%" y="325" width="0.4810%" height="15" fill="rgb(242,88,51)" fg:x="112628" fg:w="792"/><text x="68.6454%" y="335.50"></text></g><g><title>sz_psz2ind (49 samples, 0.03%)</title><rect x="68.8466%" y="309" width="0.0298%" height="15" fill="rgb(230,91,28)" fg:x="113371" fg:w="49"/><text x="69.0966%" y="319.50"></text></g><g><title>lg_ceil (17 samples, 0.01%)</title><rect x="68.8660%" y="293" width="0.0103%" height="15" fill="rgb(254,186,29)" fg:x="113403" fg:w="17"/><text x="69.1160%" y="303.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (60 samples, 0.04%)</title><rect x="68.9188%" y="293" width="0.0364%" height="15" fill="rgb(238,6,4)" fg:x="113490" fg:w="60"/><text x="69.1688%" y="303.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (45 samples, 0.03%)</title><rect x="68.9279%" y="277" width="0.0273%" height="15" fill="rgb(221,151,16)" fg:x="113505" fg:w="45"/><text x="69.1779%" y="287.50"></text></g><g><title>extent_in_dss_helper (17 samples, 0.01%)</title><rect x="68.9449%" y="261" width="0.0103%" height="15" fill="rgb(251,143,52)" fg:x="113533" fg:w="17"/><text x="69.1949%" y="271.50"></text></g><g><title>ehooks_merge (112 samples, 0.07%)</title><rect x="68.9061%" y="309" width="0.0680%" height="15" fill="rgb(206,90,15)" fg:x="113469" fg:w="112"/><text x="69.1561%" y="319.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (31 samples, 0.02%)</title><rect x="68.9553%" y="293" width="0.0188%" height="15" fill="rgb(218,35,8)" fg:x="113550" fg:w="31"/><text x="69.2053%" y="303.50"></text></g><g><title>atomic_load_p (31 samples, 0.02%)</title><rect x="68.9553%" y="277" width="0.0188%" height="15" fill="rgb(239,215,6)" fg:x="113550" fg:w="31"/><text x="69.2053%" y="287.50"></text></g><g><title>[libc.so.6] (218 samples, 0.13%)</title><rect x="69.0166%" y="293" width="0.1324%" height="15" fill="rgb(245,116,39)" fg:x="113651" fg:w="218"/><text x="69.2666%" y="303.50"></text></g><g><title>edata_avail_ph_cmp (103 samples, 0.06%)</title><rect x="69.1860%" y="245" width="0.0625%" height="15" fill="rgb(242,65,28)" fg:x="113930" fg:w="103"/><text x="69.4360%" y="255.50"></text></g><g><title>edata_esnead_comp (103 samples, 0.06%)</title><rect x="69.1860%" y="229" width="0.0625%" height="15" fill="rgb(252,132,53)" fg:x="113930" fg:w="103"/><text x="69.4360%" y="239.50"></text></g><g><title>edata_esn_comp (98 samples, 0.06%)</title><rect x="69.1891%" y="213" width="0.0595%" height="15" fill="rgb(224,159,50)" fg:x="113935" fg:w="98"/><text x="69.4391%" y="223.50"></text></g><g><title>edata_esn_get (91 samples, 0.06%)</title><rect x="69.1933%" y="197" width="0.0553%" height="15" fill="rgb(224,93,4)" fg:x="113942" fg:w="91"/><text x="69.4433%" y="207.50"></text></g><g><title>edata_avail_ph_cmp (102 samples, 0.06%)</title><rect x="69.2704%" y="213" width="0.0619%" height="15" fill="rgb(208,81,34)" fg:x="114069" fg:w="102"/><text x="69.5204%" y="223.50"></text></g><g><title>edata_esnead_comp (102 samples, 0.06%)</title><rect x="69.2704%" y="197" width="0.0619%" height="15" fill="rgb(233,92,54)" fg:x="114069" fg:w="102"/><text x="69.5204%" y="207.50"></text></g><g><title>edata_esn_comp (93 samples, 0.06%)</title><rect x="69.2759%" y="181" width="0.0565%" height="15" fill="rgb(237,21,14)" fg:x="114078" fg:w="93"/><text x="69.5259%" y="191.50"></text></g><g><title>edata_esn_get (88 samples, 0.05%)</title><rect x="69.2789%" y="165" width="0.0534%" height="15" fill="rgb(249,128,51)" fg:x="114083" fg:w="88"/><text x="69.5289%" y="175.50"></text></g><g><title>phn_merge (176 samples, 0.11%)</title><rect x="69.2668%" y="229" width="0.1069%" height="15" fill="rgb(223,129,24)" fg:x="114063" fg:w="176"/><text x="69.5168%" y="239.50"></text></g><g><title>phn_merge_ordered (68 samples, 0.04%)</title><rect x="69.3324%" y="213" width="0.0413%" height="15" fill="rgb(231,168,25)" fg:x="114171" fg:w="68"/><text x="69.5824%" y="223.50"></text></g><g><title>phn_prev_set (48 samples, 0.03%)</title><rect x="69.3445%" y="197" width="0.0291%" height="15" fill="rgb(224,39,20)" fg:x="114191" fg:w="48"/><text x="69.5945%" y="207.50"></text></g><g><title>phn_next_get (50 samples, 0.03%)</title><rect x="69.3737%" y="229" width="0.0304%" height="15" fill="rgb(225,152,53)" fg:x="114239" fg:w="50"/><text x="69.6237%" y="239.50"></text></g><g><title>ph_try_aux_merge_pair (273 samples, 0.17%)</title><rect x="69.2510%" y="245" width="0.1658%" height="15" fill="rgb(252,17,24)" fg:x="114037" fg:w="273"/><text x="69.5010%" y="255.50"></text></g><g><title>_rjem_je_edata_avail_insert (461 samples, 0.28%)</title><rect x="69.1593%" y="277" width="0.2800%" height="15" fill="rgb(250,114,30)" fg:x="113886" fg:w="461"/><text x="69.4093%" y="287.50"></text></g><g><title>ph_insert (453 samples, 0.28%)</title><rect x="69.1642%" y="261" width="0.2751%" height="15" fill="rgb(229,5,4)" fg:x="113894" fg:w="453"/><text x="69.4142%" y="271.50"></text></g><g><title>pthread_mutex_trylock (323 samples, 0.20%)</title><rect x="69.4471%" y="245" width="0.1961%" height="15" fill="rgb(225,176,49)" fg:x="114360" fg:w="323"/><text x="69.6971%" y="255.50"></text></g><g><title>malloc_mutex_trylock_final (335 samples, 0.20%)</title><rect x="69.4417%" y="261" width="0.2034%" height="15" fill="rgb(224,221,49)" fg:x="114351" fg:w="335"/><text x="69.6917%" y="271.50"></text></g><g><title>_rjem_je_edata_cache_put (827 samples, 0.50%)</title><rect x="69.1508%" y="293" width="0.5022%" height="15" fill="rgb(253,169,27)" fg:x="113872" fg:w="827"/><text x="69.4008%" y="303.50"></text></g><g><title>malloc_mutex_lock (348 samples, 0.21%)</title><rect x="69.4417%" y="277" width="0.2113%" height="15" fill="rgb(211,206,16)" fg:x="114351" fg:w="348"/><text x="69.6917%" y="287.50"></text></g><g><title>rtree_contents_encode (21 samples, 0.01%)</title><rect x="69.6591%" y="245" width="0.0128%" height="15" fill="rgb(244,87,35)" fg:x="114709" fg:w="21"/><text x="69.9091%" y="255.50"></text></g><g><title>rtree_leaf_elm_bits_encode (21 samples, 0.01%)</title><rect x="69.6591%" y="229" width="0.0128%" height="15" fill="rgb(246,28,10)" fg:x="114709" fg:w="21"/><text x="69.9091%" y="239.50"></text></g><g><title>emap_rtree_write_acquired (29 samples, 0.02%)</title><rect x="69.6560%" y="277" width="0.0176%" height="15" fill="rgb(229,12,44)" fg:x="114704" fg:w="29"/><text x="69.9060%" y="287.50"></text></g><g><title>rtree_leaf_elm_write (24 samples, 0.01%)</title><rect x="69.6591%" y="261" width="0.0146%" height="15" fill="rgb(210,145,37)" fg:x="114709" fg:w="24"/><text x="69.9091%" y="271.50"></text></g><g><title>_rjem_je_emap_merge_commit (47 samples, 0.03%)</title><rect x="69.6530%" y="293" width="0.0285%" height="15" fill="rgb(227,112,52)" fg:x="114699" fg:w="47"/><text x="69.9030%" y="303.50"></text></g><g><title>edata_base_get (17 samples, 0.01%)</title><rect x="69.7016%" y="261" width="0.0103%" height="15" fill="rgb(238,155,34)" fg:x="114779" fg:w="17"/><text x="69.9516%" y="271.50"></text></g><g><title>_rjem_je_emap_merge_prepare (128 samples, 0.08%)</title><rect x="69.6815%" y="293" width="0.0777%" height="15" fill="rgb(239,226,36)" fg:x="114746" fg:w="128"/><text x="69.9315%" y="303.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (101 samples, 0.06%)</title><rect x="69.6979%" y="277" width="0.0613%" height="15" fill="rgb(230,16,23)" fg:x="114773" fg:w="101"/><text x="69.9479%" y="287.50"></text></g><g><title>rtree_leaf_elm_lookup (65 samples, 0.04%)</title><rect x="69.7198%" y="261" width="0.0395%" height="15" fill="rgb(236,171,36)" fg:x="114809" fg:w="65"/><text x="69.9698%" y="271.50"></text></g><g><title>extent_try_coalesce_large (3,588 samples, 2.18%)</title><rect x="67.6029%" y="373" width="2.1789%" height="15" fill="rgb(221,22,14)" fg:x="111323" fg:w="3588"/><text x="67.8529%" y="383.50">e..</text></g><g><title>extent_try_coalesce_impl (3,557 samples, 2.16%)</title><rect x="67.6217%" y="357" width="2.1601%" height="15" fill="rgb(242,43,11)" fg:x="111354" fg:w="3557"/><text x="67.8717%" y="367.50">e..</text></g><g><title>extent_coalesce (2,318 samples, 1.41%)</title><rect x="68.3741%" y="341" width="1.4076%" height="15" fill="rgb(232,69,23)" fg:x="112593" fg:w="2318"/><text x="68.6241%" y="351.50"></text></g><g><title>extent_merge_impl (1,491 samples, 0.91%)</title><rect x="68.8763%" y="325" width="0.9054%" height="15" fill="rgb(216,180,54)" fg:x="113420" fg:w="1491"/><text x="69.1263%" y="335.50"></text></g><g><title>extent_merge_impl (1,330 samples, 0.81%)</title><rect x="68.9741%" y="309" width="0.8077%" height="15" fill="rgb(216,5,24)" fg:x="113581" fg:w="1330"/><text x="69.2241%" y="319.50"></text></g><g><title>atomic_load_b (27 samples, 0.02%)</title><rect x="69.7969%" y="341" width="0.0164%" height="15" fill="rgb(225,89,9)" fg:x="114936" fg:w="27"/><text x="70.0469%" y="351.50"></text></g><g><title>pthread_mutex_trylock (43 samples, 0.03%)</title><rect x="69.8145%" y="325" width="0.0261%" height="15" fill="rgb(243,75,33)" fg:x="114965" fg:w="43"/><text x="70.0645%" y="335.50"></text></g><g><title>malloc_mutex_trylock_final (46 samples, 0.03%)</title><rect x="69.8133%" y="341" width="0.0279%" height="15" fill="rgb(247,141,45)" fg:x="114963" fg:w="46"/><text x="70.0633%" y="351.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (157 samples, 0.10%)</title><rect x="69.7890%" y="357" width="0.0953%" height="15" fill="rgb(232,177,36)" fg:x="114923" fg:w="157"/><text x="70.0390%" y="367.50"></text></g><g><title>spin_cpu_spinwait (71 samples, 0.04%)</title><rect x="69.8413%" y="341" width="0.0431%" height="15" fill="rgb(219,125,36)" fg:x="115009" fg:w="71"/><text x="70.0913%" y="351.50"></text></g><g><title>pthread_mutex_trylock (245 samples, 0.15%)</title><rect x="69.8935%" y="341" width="0.1488%" height="15" fill="rgb(227,94,9)" fg:x="115095" fg:w="245"/><text x="70.1435%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (280 samples, 0.17%)</title><rect x="69.8844%" y="357" width="0.1700%" height="15" fill="rgb(240,34,52)" fg:x="115080" fg:w="280"/><text x="70.1344%" y="367.50"></text></g><g><title>pthread_mutex_trylock@plt (20 samples, 0.01%)</title><rect x="70.0423%" y="341" width="0.0121%" height="15" fill="rgb(216,45,12)" fg:x="115340" fg:w="20"/><text x="70.2923%" y="351.50"></text></g><g><title>malloc_mutex_lock (455 samples, 0.28%)</title><rect x="69.7817%" y="373" width="0.2763%" height="15" fill="rgb(246,21,19)" fg:x="114911" fg:w="455"/><text x="70.0317%" y="383.50"></text></g><g><title>_rjem_je_extent_record (5,379 samples, 3.27%)</title><rect x="66.8001%" y="389" width="3.2665%" height="15" fill="rgb(213,98,42)" fg:x="110001" fg:w="5379"/><text x="67.0501%" y="399.50">_rj..</text></g><g><title>pac_ehooks_get (35 samples, 0.02%)</title><rect x="70.0690%" y="389" width="0.0213%" height="15" fill="rgb(250,136,47)" fg:x="115384" fg:w="35"/><text x="70.3190%" y="399.50"></text></g><g><title>large_dalloc_finish_impl (6,253 samples, 3.80%)</title><rect x="66.3009%" y="421" width="3.7972%" height="15" fill="rgb(251,124,27)" fg:x="109179" fg:w="6253"/><text x="66.5509%" y="431.50">larg..</text></g><g><title>pac_dalloc_impl (5,805 samples, 3.53%)</title><rect x="66.5729%" y="405" width="3.5252%" height="15" fill="rgb(229,180,14)" fg:x="109627" fg:w="5805"/><text x="66.8229%" y="415.50">pac..</text></g><g><title>locked_inc_u64 (424 samples, 0.26%)</title><rect x="70.2008%" y="373" width="0.2575%" height="15" fill="rgb(245,216,25)" fg:x="115601" fg:w="424"/><text x="70.4508%" y="383.50"></text></g><g><title>atomic_fetch_add_u64 (424 samples, 0.26%)</title><rect x="70.2008%" y="357" width="0.2575%" height="15" fill="rgb(251,43,5)" fg:x="115601" fg:w="424"/><text x="70.4508%" y="367.50"></text></g><g><title>arena_large_dalloc_stats_update (486 samples, 0.30%)</title><rect x="70.1868%" y="389" width="0.2951%" height="15" fill="rgb(250,128,24)" fg:x="115578" fg:w="486"/><text x="70.4368%" y="399.50"></text></g><g><title>sz_size2index (39 samples, 0.02%)</title><rect x="70.4582%" y="373" width="0.0237%" height="15" fill="rgb(217,117,27)" fg:x="116025" fg:w="39"/><text x="70.7082%" y="383.50"></text></g><g><title>sz_size2index_compute (39 samples, 0.02%)</title><rect x="70.4582%" y="357" width="0.0237%" height="15" fill="rgb(245,147,4)" fg:x="116025" fg:w="39"/><text x="70.7082%" y="367.50"></text></g><g><title>_rjem_je_large_dalloc (7,678 samples, 4.66%)</title><rect x="65.8290%" y="437" width="4.6626%" height="15" fill="rgb(242,201,35)" fg:x="108402" fg:w="7678"/><text x="66.0790%" y="447.50">_rjem..</text></g><g><title>large_dalloc_prep_impl (648 samples, 0.39%)</title><rect x="70.0981%" y="421" width="0.3935%" height="15" fill="rgb(218,181,1)" fg:x="115432" fg:w="648"/><text x="70.3481%" y="431.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (503 samples, 0.31%)</title><rect x="70.1862%" y="405" width="0.3055%" height="15" fill="rgb(222,6,29)" fg:x="115577" fg:w="503"/><text x="70.4362%" y="415.50"></text></g><g><title>rtree_leaf_elm_lookup (39 samples, 0.02%)</title><rect x="70.4916%" y="405" width="0.0237%" height="15" fill="rgb(208,186,3)" fg:x="116080" fg:w="39"/><text x="70.7416%" y="415.50"></text></g><g><title>emap_edata_lookup (410 samples, 0.25%)</title><rect x="70.4916%" y="437" width="0.2490%" height="15" fill="rgb(216,36,26)" fg:x="116080" fg:w="410"/><text x="70.7416%" y="447.50"></text></g><g><title>rtree_read (410 samples, 0.25%)</title><rect x="70.4916%" y="421" width="0.2490%" height="15" fill="rgb(248,201,23)" fg:x="116080" fg:w="410"/><text x="70.7416%" y="431.50"></text></g><g><title>rtree_leaf_elm_read (371 samples, 0.23%)</title><rect x="70.5153%" y="405" width="0.2253%" height="15" fill="rgb(251,170,31)" fg:x="116119" fg:w="371"/><text x="70.7653%" y="415.50"></text></g><g><title>rtree_leaf_elm_bits_read (364 samples, 0.22%)</title><rect x="70.5196%" y="389" width="0.2210%" height="15" fill="rgb(207,110,25)" fg:x="116126" fg:w="364"/><text x="70.7696%" y="399.50"></text></g><g><title>atomic_load_p (364 samples, 0.22%)</title><rect x="70.5196%" y="373" width="0.2210%" height="15" fill="rgb(250,54,15)" fg:x="116126" fg:w="364"/><text x="70.7696%" y="383.50"></text></g><g><title>isdalloct (8,202 samples, 4.98%)</title><rect x="65.7622%" y="485" width="4.9808%" height="15" fill="rgb(227,68,33)" fg:x="108292" fg:w="8202"/><text x="66.0122%" y="495.50">isdall..</text></g><g><title>arena_sdalloc (8,202 samples, 4.98%)</title><rect x="65.7622%" y="469" width="4.9808%" height="15" fill="rgb(238,34,41)" fg:x="108292" fg:w="8202"/><text x="66.0122%" y="479.50">arena_..</text></g><g><title>arena_dalloc_large (8,192 samples, 4.97%)</title><rect x="65.7683%" y="453" width="4.9747%" height="15" fill="rgb(220,11,15)" fg:x="108302" fg:w="8192"/><text x="66.0183%" y="463.50">arena_..</text></g><g><title>sz_size2index (51 samples, 0.03%)</title><rect x="70.7431%" y="485" width="0.0310%" height="15" fill="rgb(246,111,35)" fg:x="116494" fg:w="51"/><text x="70.9931%" y="495.50"></text></g><g><title>sz_size2index_compute (44 samples, 0.03%)</title><rect x="70.7473%" y="469" width="0.0267%" height="15" fill="rgb(209,88,53)" fg:x="116501" fg:w="44"/><text x="70.9973%" y="479.50"></text></g><g><title>_rjem_je_peak_dalloc_event_handler (22 samples, 0.01%)</title><rect x="70.7892%" y="453" width="0.0134%" height="15" fill="rgb(231,185,47)" fg:x="116570" fg:w="22"/><text x="71.0392%" y="463.50"></text></g><g><title>cache_bin_ncached_get_local (35 samples, 0.02%)</title><rect x="70.9775%" y="405" width="0.0213%" height="15" fill="rgb(233,154,1)" fg:x="116880" fg:w="35"/><text x="71.2275%" y="415.50"></text></g><g><title>cache_bin_ncached_get_internal (35 samples, 0.02%)</title><rect x="70.9775%" y="389" width="0.0213%" height="15" fill="rgb(225,15,46)" fg:x="116880" fg:w="35"/><text x="71.2275%" y="399.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (103 samples, 0.06%)</title><rect x="70.9489%" y="421" width="0.0625%" height="15" fill="rgb(211,135,41)" fg:x="116833" fg:w="103"/><text x="71.1989%" y="431.50"></text></g><g><title>cache_bin_nstashed_get_local (21 samples, 0.01%)</title><rect x="70.9987%" y="405" width="0.0128%" height="15" fill="rgb(208,54,0)" fg:x="116915" fg:w="21"/><text x="71.2487%" y="415.50"></text></g><g><title>cache_bin_nstashed_get_internal (21 samples, 0.01%)</title><rect x="70.9987%" y="389" width="0.0128%" height="15" fill="rgb(244,136,14)" fg:x="116915" fg:w="21"/><text x="71.2487%" y="399.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (18 samples, 0.01%)</title><rect x="71.0005%" y="373" width="0.0109%" height="15" fill="rgb(241,56,14)" fg:x="116918" fg:w="18"/><text x="71.2505%" y="383.50"></text></g><g><title>[libc.so.6] (43 samples, 0.03%)</title><rect x="71.0254%" y="357" width="0.0261%" height="15" fill="rgb(205,80,24)" fg:x="116959" fg:w="43"/><text x="71.2754%" y="367.50"></text></g><g><title>cache_bin_finish_flush (49 samples, 0.03%)</title><rect x="71.0248%" y="373" width="0.0298%" height="15" fill="rgb(220,57,4)" fg:x="116958" fg:w="49"/><text x="71.2748%" y="383.50"></text></g><g><title>_rjem_je_pa_dalloc (41 samples, 0.02%)</title><rect x="71.1013%" y="341" width="0.0249%" height="15" fill="rgb(226,193,50)" fg:x="117084" fg:w="41"/><text x="71.3513%" y="351.50"></text></g><g><title>eset_stats_add (17 samples, 0.01%)</title><rect x="71.1469%" y="261" width="0.0103%" height="15" fill="rgb(231,168,22)" fg:x="117159" fg:w="17"/><text x="71.3969%" y="271.50"></text></g><g><title>atomic_load_zu (17 samples, 0.01%)</title><rect x="71.1469%" y="245" width="0.0103%" height="15" fill="rgb(254,215,14)" fg:x="117159" fg:w="17"/><text x="71.3969%" y="255.50"></text></g><g><title>extent_deactivate_locked (45 samples, 0.03%)</title><rect x="71.1305%" y="309" width="0.0273%" height="15" fill="rgb(211,115,16)" fg:x="117132" fg:w="45"/><text x="71.3805%" y="319.50"></text></g><g><title>extent_deactivate_locked_impl (45 samples, 0.03%)</title><rect x="71.1305%" y="293" width="0.0273%" height="15" fill="rgb(236,210,16)" fg:x="117132" fg:w="45"/><text x="71.3805%" y="303.50"></text></g><g><title>_rjem_je_eset_insert (42 samples, 0.03%)</title><rect x="71.1323%" y="277" width="0.0255%" height="15" fill="rgb(221,94,12)" fg:x="117135" fg:w="42"/><text x="71.3823%" y="287.50"></text></g><g><title>extent_try_coalesce_large (35 samples, 0.02%)</title><rect x="71.1578%" y="309" width="0.0213%" height="15" fill="rgb(235,218,49)" fg:x="117177" fg:w="35"/><text x="71.4078%" y="319.50"></text></g><g><title>extent_try_coalesce_impl (35 samples, 0.02%)</title><rect x="71.1578%" y="293" width="0.0213%" height="15" fill="rgb(217,114,14)" fg:x="117177" fg:w="35"/><text x="71.4078%" y="303.50"></text></g><g><title>extent_coalesce (27 samples, 0.02%)</title><rect x="71.1627%" y="277" width="0.0164%" height="15" fill="rgb(216,145,22)" fg:x="117185" fg:w="27"/><text x="71.4127%" y="287.50"></text></g><g><title>_rjem_je_extent_record (87 samples, 0.05%)</title><rect x="71.1299%" y="325" width="0.0528%" height="15" fill="rgb(217,112,39)" fg:x="117131" fg:w="87"/><text x="71.3799%" y="335.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (143 samples, 0.09%)</title><rect x="71.0989%" y="357" width="0.0868%" height="15" fill="rgb(225,85,32)" fg:x="117080" fg:w="143"/><text x="71.3489%" y="367.50"></text></g><g><title>pac_dalloc_impl (98 samples, 0.06%)</title><rect x="71.1262%" y="341" width="0.0595%" height="15" fill="rgb(245,209,47)" fg:x="117125" fg:w="98"/><text x="71.3762%" y="351.50"></text></g><g><title>arena_bin_lower_slab (19 samples, 0.01%)</title><rect x="71.2082%" y="325" width="0.0115%" height="15" fill="rgb(218,220,15)" fg:x="117260" fg:w="19"/><text x="71.4582%" y="335.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_nonempty (21 samples, 0.01%)</title><rect x="71.2082%" y="341" width="0.0128%" height="15" fill="rgb(222,202,31)" fg:x="117260" fg:w="21"/><text x="71.4582%" y="351.50"></text></g><g><title>arena_dalloc_bin_locked_step (69 samples, 0.04%)</title><rect x="71.1906%" y="357" width="0.0419%" height="15" fill="rgb(243,203,4)" fg:x="117231" fg:w="69"/><text x="71.4406%" y="367.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (31 samples, 0.02%)</title><rect x="71.2331%" y="293" width="0.0188%" height="15" fill="rgb(237,92,17)" fg:x="117301" fg:w="31"/><text x="71.4831%" y="303.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (31 samples, 0.02%)</title><rect x="71.2331%" y="277" width="0.0188%" height="15" fill="rgb(231,119,7)" fg:x="117301" fg:w="31"/><text x="71.4831%" y="287.50"></text></g><g><title>arena_decay_dirty (32 samples, 0.02%)</title><rect x="71.2331%" y="325" width="0.0194%" height="15" fill="rgb(237,82,41)" fg:x="117301" fg:w="32"/><text x="71.4831%" y="335.50"></text></g><g><title>arena_decay_impl (32 samples, 0.02%)</title><rect x="71.2331%" y="309" width="0.0194%" height="15" fill="rgb(226,81,48)" fg:x="117301" fg:w="32"/><text x="71.4831%" y="319.50"></text></g><g><title>_rjem_je_arena_decay (36 samples, 0.02%)</title><rect x="71.2325%" y="341" width="0.0219%" height="15" fill="rgb(234,70,51)" fg:x="117300" fg:w="36"/><text x="71.4825%" y="351.50"></text></g><g><title>arena_decay_ticks (42 samples, 0.03%)</title><rect x="71.2325%" y="357" width="0.0255%" height="15" fill="rgb(251,86,4)" fg:x="117300" fg:w="42"/><text x="71.4825%" y="367.50"></text></g><g><title>edata_arena_ind_get (114 samples, 0.07%)</title><rect x="71.2635%" y="357" width="0.0692%" height="15" fill="rgb(244,144,28)" fg:x="117351" fg:w="114"/><text x="71.5135%" y="367.50"></text></g><g><title>pthread_mutex_trylock (156 samples, 0.09%)</title><rect x="71.3339%" y="325" width="0.0947%" height="15" fill="rgb(232,161,39)" fg:x="117467" fg:w="156"/><text x="71.5839%" y="335.50"></text></g><g><title>malloc_mutex_trylock_final (159 samples, 0.10%)</title><rect x="71.3327%" y="341" width="0.0966%" height="15" fill="rgb(247,34,51)" fg:x="117465" fg:w="159"/><text x="71.5827%" y="351.50"></text></g><g><title>malloc_mutex_lock (175 samples, 0.11%)</title><rect x="71.3327%" y="357" width="0.1063%" height="15" fill="rgb(225,132,2)" fg:x="117465" fg:w="175"/><text x="71.5827%" y="367.50"></text></g><g><title>rtree_leaf_elm_lookup (17 samples, 0.01%)</title><rect x="71.5319%" y="325" width="0.0103%" height="15" fill="rgb(209,159,44)" fg:x="117793" fg:w="17"/><text x="71.7819%" y="335.50"></text></g><g><title>rtree_leaf_elm_read (101 samples, 0.06%)</title><rect x="71.5422%" y="325" width="0.0613%" height="15" fill="rgb(251,214,1)" fg:x="117810" fg:w="101"/><text x="71.7922%" y="335.50"></text></g><g><title>rtree_leaf_elm_bits_read (100 samples, 0.06%)</title><rect x="71.5428%" y="309" width="0.0607%" height="15" fill="rgb(247,84,47)" fg:x="117811" fg:w="100"/><text x="71.7928%" y="319.50"></text></g><g><title>atomic_load_p (100 samples, 0.06%)</title><rect x="71.5428%" y="293" width="0.0607%" height="15" fill="rgb(240,111,43)" fg:x="117811" fg:w="100"/><text x="71.7928%" y="303.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (274 samples, 0.17%)</title><rect x="71.4469%" y="357" width="0.1664%" height="15" fill="rgb(215,214,35)" fg:x="117653" fg:w="274"/><text x="71.6969%" y="367.50"></text></g><g><title>emap_edata_lookup_batch (265 samples, 0.16%)</title><rect x="71.4523%" y="341" width="0.1609%" height="15" fill="rgb(248,207,23)" fg:x="117662" fg:w="265"/><text x="71.7023%" y="351.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (989 samples, 0.60%)</title><rect x="71.0200%" y="405" width="0.6006%" height="15" fill="rgb(214,186,4)" fg:x="116950" fg:w="989"/><text x="71.2700%" y="415.50"></text></g><g><title>tcache_bin_flush_bottom (984 samples, 0.60%)</title><rect x="71.0230%" y="389" width="0.5976%" height="15" fill="rgb(220,133,22)" fg:x="116955" fg:w="984"/><text x="71.2730%" y="399.50"></text></g><g><title>tcache_bin_flush_impl (930 samples, 0.56%)</title><rect x="71.0558%" y="373" width="0.5648%" height="15" fill="rgb(239,134,19)" fg:x="117009" fg:w="930"/><text x="71.3058%" y="383.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (1,241 samples, 0.75%)</title><rect x="70.8797%" y="437" width="0.7536%" height="15" fill="rgb(250,140,9)" fg:x="116719" fg:w="1241"/><text x="71.1297%" y="447.50"></text></g><g><title>tcache_gc_small (1,024 samples, 0.62%)</title><rect x="71.0115%" y="421" width="0.6218%" height="15" fill="rgb(225,59,14)" fg:x="116936" fg:w="1024"/><text x="71.2615%" y="431.50"></text></g><g><title>atomic_fence (107 samples, 0.06%)</title><rect x="71.6497%" y="373" width="0.0650%" height="15" fill="rgb(214,152,51)" fg:x="117987" fg:w="107"/><text x="71.8997%" y="383.50"></text></g><g><title>te_adjust_thresholds_helper (148 samples, 0.09%)</title><rect x="71.6339%" y="437" width="0.0899%" height="15" fill="rgb(251,227,43)" fg:x="117961" fg:w="148"/><text x="71.8839%" y="447.50"></text></g><g><title>te_ctx_next_event_set (132 samples, 0.08%)</title><rect x="71.6436%" y="421" width="0.0802%" height="15" fill="rgb(241,96,17)" fg:x="117977" fg:w="132"/><text x="71.8936%" y="431.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (132 samples, 0.08%)</title><rect x="71.6436%" y="405" width="0.0802%" height="15" fill="rgb(234,198,43)" fg:x="117977" fg:w="132"/><text x="71.8936%" y="415.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (126 samples, 0.08%)</title><rect x="71.6473%" y="389" width="0.0765%" height="15" fill="rgb(220,108,29)" fg:x="117983" fg:w="126"/><text x="71.8973%" y="399.50"></text></g><g><title>_rjem_je_te_event_trigger (1,538 samples, 0.93%)</title><rect x="70.8026%" y="453" width="0.9340%" height="15" fill="rgb(226,163,33)" fg:x="116592" fg:w="1538"/><text x="71.0526%" y="463.50"></text></g><g><title>isfree (9,855 samples, 5.98%)</title><rect x="65.7622%" y="501" width="5.9846%" height="15" fill="rgb(205,194,45)" fg:x="108292" fg:w="9855"/><text x="66.0122%" y="511.50">isfree</text></g><g><title>thread_dalloc_event (1,602 samples, 0.97%)</title><rect x="70.7740%" y="485" width="0.9728%" height="15" fill="rgb(206,143,44)" fg:x="116545" fg:w="1602"/><text x="71.0240%" y="495.50"></text></g><g><title>te_event_advance (1,602 samples, 0.97%)</title><rect x="70.7740%" y="469" width="0.9728%" height="15" fill="rgb(236,136,36)" fg:x="116545" fg:w="1602"/><text x="71.0240%" y="479.50"></text></g><g><title>te_ctx_get (17 samples, 0.01%)</title><rect x="71.7365%" y="453" width="0.0103%" height="15" fill="rgb(249,172,42)" fg:x="118130" fg:w="17"/><text x="71.9865%" y="463.50"></text></g><g><title>_rjem_je_sdallocx_default (10,000 samples, 6.07%)</title><rect x="65.6857%" y="517" width="6.0727%" height="15" fill="rgb(216,139,23)" fg:x="108166" fg:w="10000"/><text x="65.9357%" y="527.50">_rjem_je..</text></g><g><title>core::mem::drop (10,103 samples, 6.14%)</title><rect x="65.6353%" y="693" width="6.1352%" height="15" fill="rgb(207,166,20)" fg:x="108083" fg:w="10103"/><text x="65.8853%" y="703.50">core::me..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (10,103 samples, 6.14%)</title><rect x="65.6353%" y="677" width="6.1352%" height="15" fill="rgb(210,209,22)" fg:x="108083" fg:w="10103"/><text x="65.8853%" y="687.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (10,022 samples, 6.09%)</title><rect x="65.6845%" y="661" width="6.0860%" height="15" fill="rgb(232,118,20)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="671.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10,022 samples, 6.09%)</title><rect x="65.6845%" y="645" width="6.0860%" height="15" fill="rgb(238,113,42)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="655.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10,022 samples, 6.09%)</title><rect x="65.6845%" y="629" width="6.0860%" height="15" fill="rgb(231,42,5)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="639.50">core::pt..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,022 samples, 6.09%)</title><rect x="65.6845%" y="613" width="6.0860%" height="15" fill="rgb(243,166,24)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="623.50">&lt;alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,022 samples, 6.09%)</title><rect x="65.6845%" y="597" width="6.0860%" height="15" fill="rgb(237,226,12)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="607.50">alloc::r..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,022 samples, 6.09%)</title><rect x="65.6845%" y="581" width="6.0860%" height="15" fill="rgb(229,133,24)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="591.50">&lt;alloc::..</text></g><g><title>alloc::alloc::dealloc (10,022 samples, 6.09%)</title><rect x="65.6845%" y="565" width="6.0860%" height="15" fill="rgb(238,33,43)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="575.50">alloc::a..</text></g><g><title>__rust_dealloc (10,022 samples, 6.09%)</title><rect x="65.6845%" y="549" width="6.0860%" height="15" fill="rgb(227,59,38)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="559.50">__rust_d..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (10,022 samples, 6.09%)</title><rect x="65.6845%" y="533" width="6.0860%" height="15" fill="rgb(230,97,0)" fg:x="108164" fg:w="10022"/><text x="65.9345%" y="543.50">&lt;tikv_je..</text></g><g><title>_rjem_sdallocx (20 samples, 0.01%)</title><rect x="71.7584%" y="517" width="0.0121%" height="15" fill="rgb(250,173,50)" fg:x="118166" fg:w="20"/><text x="72.0084%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (684 samples, 0.42%)</title><rect x="71.7705%" y="693" width="0.4154%" height="15" fill="rgb(240,15,50)" fg:x="118186" fg:w="684"/><text x="72.0205%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (684 samples, 0.42%)</title><rect x="71.7705%" y="677" width="0.4154%" height="15" fill="rgb(221,93,22)" fg:x="118186" fg:w="684"/><text x="72.0205%" y="687.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (19,480 samples, 11.83%)</title><rect x="60.4013%" y="885" width="11.8296%" height="15" fill="rgb(245,180,53)" fg:x="99464" fg:w="19480"/><text x="60.6513%" y="895.50">epoxy_server::hand..</text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (11,013 samples, 6.69%)</title><rect x="65.5430%" y="869" width="6.6878%" height="15" fill="rgb(231,88,51)" fg:x="107931" fg:w="11013"/><text x="65.7930%" y="879.50">tokio::io..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (11,013 samples, 6.69%)</title><rect x="65.5430%" y="853" width="6.6878%" height="15" fill="rgb(240,58,21)" fg:x="107931" fg:w="11013"/><text x="65.7930%" y="863.50">&lt;tokio_ut..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (11,013 samples, 6.69%)</title><rect x="65.5430%" y="837" width="6.6878%" height="15" fill="rgb(237,21,10)" fg:x="107931" fg:w="11013"/><text x="65.7930%" y="847.50">&lt;wisp_mux..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (11,013 samples, 6.69%)</title><rect x="65.5430%" y="821" width="6.6878%" height="15" fill="rgb(218,43,11)" fg:x="107931" fg:w="11013"/><text x="65.7930%" y="831.50">&lt;futures_..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (10,990 samples, 6.67%)</title><rect x="65.5570%" y="805" width="6.6739%" height="15" fill="rgb(218,221,29)" fg:x="107954" fg:w="10990"/><text x="65.8070%" y="815.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (10,990 samples, 6.67%)</title><rect x="65.5570%" y="789" width="6.6739%" height="15" fill="rgb(214,118,42)" fg:x="107954" fg:w="10990"/><text x="65.8070%" y="799.50">core::ptr..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (10,990 samples, 6.67%)</title><rect x="65.5570%" y="773" width="6.6739%" height="15" fill="rgb(251,200,26)" fg:x="107954" fg:w="10990"/><text x="65.8070%" y="783.50">&lt;bytes::b..</text></g><g><title>bytes::bytes_mut::shared_v_drop (10,871 samples, 6.60%)</title><rect x="65.6293%" y="757" width="6.6016%" height="15" fill="rgb(237,101,39)" fg:x="108073" fg:w="10871"/><text x="65.8793%" y="767.50">bytes::by..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (10,871 samples, 6.60%)</title><rect x="65.6293%" y="741" width="6.6016%" height="15" fill="rgb(251,117,11)" fg:x="108073" fg:w="10871"/><text x="65.8793%" y="751.50">&lt;core::sy..</text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (10,871 samples, 6.60%)</title><rect x="65.6293%" y="725" width="6.6016%" height="15" fill="rgb(216,223,23)" fg:x="108073" fg:w="10871"/><text x="65.8793%" y="735.50">bytes::by..</text></g><g><title>bytes::bytes_mut::release_shared (10,870 samples, 6.60%)</title><rect x="65.6299%" y="709" width="6.6010%" height="15" fill="rgb(251,54,12)" fg:x="108074" fg:w="10870"/><text x="65.8799%" y="719.50">bytes::by..</text></g><g><title>core::sync::atomic::AtomicUsize::load (74 samples, 0.04%)</title><rect x="72.1859%" y="693" width="0.0449%" height="15" fill="rgb(254,176,54)" fg:x="118870" fg:w="74"/><text x="72.4359%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (74 samples, 0.04%)</title><rect x="72.1859%" y="677" width="0.0449%" height="15" fill="rgb(210,32,8)" fg:x="118870" fg:w="74"/><text x="72.4359%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.01%)</title><rect x="72.4446%" y="821" width="0.0134%" height="15" fill="rgb(235,52,38)" fg:x="119296" fg:w="22"/><text x="72.6946%" y="831.50"></text></g><g><title>[libc.so.6] (2,433 samples, 1.48%)</title><rect x="73.1831%" y="645" width="1.4775%" height="15" fill="rgb(231,4,44)" fg:x="120512" fg:w="2433"/><text x="73.4331%" y="655.50"></text></g><g><title>recv (3,695 samples, 2.24%)</title><rect x="72.6025%" y="661" width="2.2439%" height="15" fill="rgb(249,2,32)" fg:x="119556" fg:w="3695"/><text x="72.8525%" y="671.50">r..</text></g><g><title>[unknown] (306 samples, 0.19%)</title><rect x="74.6605%" y="645" width="0.1858%" height="15" fill="rgb(224,65,26)" fg:x="122945" fg:w="306"/><text x="74.9105%" y="655.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3,730 samples, 2.27%)</title><rect x="72.6013%" y="789" width="2.2651%" height="15" fill="rgb(250,73,40)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="799.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3,730 samples, 2.27%)</title><rect x="72.6013%" y="773" width="2.2651%" height="15" fill="rgb(253,177,16)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="783.50">m..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (3,730 samples, 2.27%)</title><rect x="72.6013%" y="757" width="2.2651%" height="15" fill="rgb(217,32,34)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="767.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (3,730 samples, 2.27%)</title><rect x="72.6013%" y="741" width="2.2651%" height="15" fill="rgb(212,7,10)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="751.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3,730 samples, 2.27%)</title><rect x="72.6013%" y="725" width="2.2651%" height="15" fill="rgb(245,89,8)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="735.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (3,730 samples, 2.27%)</title><rect x="72.6013%" y="709" width="2.2651%" height="15" fill="rgb(237,16,53)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="719.50">s..</text></g><g><title>std::sys::pal::unix::net::Socket::read (3,730 samples, 2.27%)</title><rect x="72.6013%" y="693" width="2.2651%" height="15" fill="rgb(250,204,30)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="703.50">s..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (3,730 samples, 2.27%)</title><rect x="72.6013%" y="677" width="2.2651%" height="15" fill="rgb(208,77,27)" fg:x="119554" fg:w="3730"/><text x="72.8513%" y="687.50">s..</text></g><g><title>std::sys::pal::unix::cvt (33 samples, 0.02%)</title><rect x="74.8464%" y="661" width="0.0200%" height="15" fill="rgb(250,204,28)" fg:x="123251" fg:w="33"/><text x="75.0964%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.02%)</title><rect x="74.8664%" y="789" width="0.0158%" height="15" fill="rgb(244,63,21)" fg:x="123284" fg:w="26"/><text x="75.1164%" y="799.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (30 samples, 0.02%)</title><rect x="74.8822%" y="789" width="0.0182%" height="15" fill="rgb(236,85,44)" fg:x="123310" fg:w="30"/><text x="75.1322%" y="799.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (27 samples, 0.02%)</title><rect x="74.8840%" y="773" width="0.0164%" height="15" fill="rgb(215,98,4)" fg:x="123313" fg:w="27"/><text x="75.1340%" y="783.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (42 samples, 0.03%)</title><rect x="74.9004%" y="789" width="0.0255%" height="15" fill="rgb(235,38,11)" fg:x="123340" fg:w="42"/><text x="75.1504%" y="799.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (44 samples, 0.03%)</title><rect x="74.9259%" y="789" width="0.0267%" height="15" fill="rgb(254,186,25)" fg:x="123382" fg:w="44"/><text x="75.1759%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (42 samples, 0.03%)</title><rect x="74.9271%" y="773" width="0.0255%" height="15" fill="rgb(225,55,31)" fg:x="123384" fg:w="42"/><text x="75.1771%" y="783.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (42 samples, 0.03%)</title><rect x="74.9271%" y="757" width="0.0255%" height="15" fill="rgb(211,15,21)" fg:x="123384" fg:w="42"/><text x="75.1771%" y="767.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (23 samples, 0.01%)</title><rect x="74.9387%" y="741" width="0.0140%" height="15" fill="rgb(215,187,41)" fg:x="123403" fg:w="23"/><text x="75.1887%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (23 samples, 0.01%)</title><rect x="74.9387%" y="725" width="0.0140%" height="15" fill="rgb(248,69,32)" fg:x="123403" fg:w="23"/><text x="75.1887%" y="735.50"></text></g><g><title>core::slice::index::get_offset_len_mut_noubcheck (23 samples, 0.01%)</title><rect x="74.9387%" y="709" width="0.0140%" height="15" fill="rgb(252,102,52)" fg:x="123403" fg:w="23"/><text x="75.1887%" y="719.50"></text></g><g><title>core::slice::index::get_mut_noubcheck (23 samples, 0.01%)</title><rect x="74.9387%" y="693" width="0.0140%" height="15" fill="rgb(253,140,32)" fg:x="123403" fg:w="23"/><text x="75.1887%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (65 samples, 0.04%)</title><rect x="75.0091%" y="709" width="0.0395%" height="15" fill="rgb(216,56,42)" fg:x="123519" fg:w="65"/><text x="75.2591%" y="719.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (65 samples, 0.04%)</title><rect x="75.0091%" y="693" width="0.0395%" height="15" fill="rgb(216,184,14)" fg:x="123519" fg:w="65"/><text x="75.2591%" y="703.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (65 samples, 0.04%)</title><rect x="75.0091%" y="677" width="0.0395%" height="15" fill="rgb(237,187,27)" fg:x="123519" fg:w="65"/><text x="75.2591%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (40 samples, 0.02%)</title><rect x="75.0243%" y="661" width="0.0243%" height="15" fill="rgb(219,65,3)" fg:x="123544" fg:w="40"/><text x="75.2743%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (24 samples, 0.01%)</title><rect x="75.0698%" y="677" width="0.0146%" height="15" fill="rgb(245,83,25)" fg:x="123619" fg:w="24"/><text x="75.3198%" y="687.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (17 samples, 0.01%)</title><rect x="75.0741%" y="661" width="0.0103%" height="15" fill="rgb(214,205,45)" fg:x="123626" fg:w="17"/><text x="75.3241%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (17 samples, 0.01%)</title><rect x="75.0741%" y="645" width="0.0103%" height="15" fill="rgb(241,20,18)" fg:x="123626" fg:w="17"/><text x="75.3241%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (17 samples, 0.01%)</title><rect x="75.0741%" y="629" width="0.0103%" height="15" fill="rgb(232,163,23)" fg:x="123626" fg:w="17"/><text x="75.3241%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (17 samples, 0.01%)</title><rect x="75.0741%" y="613" width="0.0103%" height="15" fill="rgb(214,5,46)" fg:x="123626" fg:w="17"/><text x="75.3241%" y="623.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (137 samples, 0.08%)</title><rect x="75.0091%" y="757" width="0.0832%" height="15" fill="rgb(229,78,17)" fg:x="123519" fg:w="137"/><text x="75.2591%" y="767.50"></text></g><g><title>tokio::runtime::context::budget (137 samples, 0.08%)</title><rect x="75.0091%" y="741" width="0.0832%" height="15" fill="rgb(248,89,10)" fg:x="123519" fg:w="137"/><text x="75.2591%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (137 samples, 0.08%)</title><rect x="75.0091%" y="725" width="0.0832%" height="15" fill="rgb(248,54,15)" fg:x="123519" fg:w="137"/><text x="75.2591%" y="735.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (72 samples, 0.04%)</title><rect x="75.0486%" y="709" width="0.0437%" height="15" fill="rgb(223,116,6)" fg:x="123584" fg:w="72"/><text x="75.2986%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (72 samples, 0.04%)</title><rect x="75.0486%" y="693" width="0.0437%" height="15" fill="rgb(205,125,38)" fg:x="123584" fg:w="72"/><text x="75.2986%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (199 samples, 0.12%)</title><rect x="75.1239%" y="741" width="0.1208%" height="15" fill="rgb(251,78,38)" fg:x="123708" fg:w="199"/><text x="75.3739%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (199 samples, 0.12%)</title><rect x="75.1239%" y="725" width="0.1208%" height="15" fill="rgb(253,78,28)" fg:x="123708" fg:w="199"/><text x="75.3739%" y="735.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (18 samples, 0.01%)</title><rect x="75.2447%" y="741" width="0.0109%" height="15" fill="rgb(209,120,3)" fg:x="123907" fg:w="18"/><text x="75.4947%" y="751.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (4,657 samples, 2.83%)</title><rect x="72.4319%" y="837" width="2.8280%" height="15" fill="rgb(238,229,9)" fg:x="119275" fg:w="4657"/><text x="72.6819%" y="847.50">&lt;t..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (4,614 samples, 2.80%)</title><rect x="72.4580%" y="821" width="2.8019%" height="15" fill="rgb(253,159,18)" fg:x="119318" fg:w="4614"/><text x="72.7080%" y="831.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (4,472 samples, 2.72%)</title><rect x="72.5442%" y="805" width="2.7157%" height="15" fill="rgb(244,42,34)" fg:x="119460" fg:w="4472"/><text x="72.7942%" y="815.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (506 samples, 0.31%)</title><rect x="74.9526%" y="789" width="0.3073%" height="15" fill="rgb(224,8,7)" fg:x="123426" fg:w="506"/><text x="75.2026%" y="799.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (480 samples, 0.29%)</title><rect x="74.9684%" y="773" width="0.2915%" height="15" fill="rgb(210,201,45)" fg:x="123452" fg:w="480"/><text x="75.2184%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (276 samples, 0.17%)</title><rect x="75.0923%" y="757" width="0.1676%" height="15" fill="rgb(252,185,21)" fg:x="123656" fg:w="276"/><text x="75.3423%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (29 samples, 0.02%)</title><rect x="75.2599%" y="837" width="0.0176%" height="15" fill="rgb(223,131,1)" fg:x="123932" fg:w="29"/><text x="75.5099%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (29 samples, 0.02%)</title><rect x="75.2599%" y="821" width="0.0176%" height="15" fill="rgb(245,141,16)" fg:x="123932" fg:w="29"/><text x="75.5099%" y="831.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (25 samples, 0.02%)</title><rect x="75.2623%" y="805" width="0.0152%" height="15" fill="rgb(229,55,45)" fg:x="123936" fg:w="25"/><text x="75.5123%" y="815.50"></text></g><g><title>core::slice::index::get_noubcheck (25 samples, 0.02%)</title><rect x="75.2623%" y="789" width="0.0152%" height="15" fill="rgb(208,92,15)" fg:x="123936" fg:w="25"/><text x="75.5123%" y="799.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (27 samples, 0.02%)</title><rect x="75.2775%" y="837" width="0.0164%" height="15" fill="rgb(234,185,47)" fg:x="123961" fg:w="27"/><text x="75.5275%" y="847.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.01%)</title><rect x="75.2824%" y="821" width="0.0115%" height="15" fill="rgb(253,104,50)" fg:x="123969" fg:w="19"/><text x="75.5324%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.01%)</title><rect x="75.2824%" y="805" width="0.0115%" height="15" fill="rgb(205,70,7)" fg:x="123969" fg:w="19"/><text x="75.5324%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.01%)</title><rect x="75.2824%" y="789" width="0.0115%" height="15" fill="rgb(240,178,43)" fg:x="123969" fg:w="19"/><text x="75.5324%" y="799.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (4,923 samples, 2.99%)</title><rect x="72.3256%" y="853" width="2.9896%" height="15" fill="rgb(214,112,2)" fg:x="119100" fg:w="4923"/><text x="72.5756%" y="863.50">&lt;to..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (35 samples, 0.02%)</title><rect x="75.2939%" y="837" width="0.0213%" height="15" fill="rgb(206,46,17)" fg:x="123988" fg:w="35"/><text x="75.5439%" y="847.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (4,956 samples, 3.01%)</title><rect x="72.3256%" y="869" width="3.0096%" height="15" fill="rgb(225,220,16)" fg:x="119100" fg:w="4956"/><text x="72.5756%" y="879.50">&lt;to..</text></g><g><title>core::option::Option&lt;T&gt;::take (33 samples, 0.02%)</title><rect x="75.3152%" y="853" width="0.0200%" height="15" fill="rgb(238,65,40)" fg:x="124023" fg:w="33"/><text x="75.5652%" y="863.50"></text></g><g><title>core::mem::replace (33 samples, 0.02%)</title><rect x="75.3152%" y="837" width="0.0200%" height="15" fill="rgb(230,151,21)" fg:x="124023" fg:w="33"/><text x="75.5652%" y="847.50"></text></g><g><title>core::ptr::write (27 samples, 0.02%)</title><rect x="75.3188%" y="821" width="0.0164%" height="15" fill="rgb(218,58,49)" fg:x="124029" fg:w="27"/><text x="75.5688%" y="831.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (110 samples, 0.07%)</title><rect x="75.3352%" y="869" width="0.0668%" height="15" fill="rgb(219,179,14)" fg:x="124056" fg:w="110"/><text x="75.5852%" y="879.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (110 samples, 0.07%)</title><rect x="75.3352%" y="853" width="0.0668%" height="15" fill="rgb(223,72,1)" fg:x="124056" fg:w="110"/><text x="75.5852%" y="863.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (347 samples, 0.21%)</title><rect x="75.5969%" y="853" width="0.2107%" height="15" fill="rgb(238,126,10)" fg:x="124487" fg:w="347"/><text x="75.8469%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload::{{closure}}&gt; (45 samples, 0.03%)</title><rect x="75.8077%" y="853" width="0.0273%" height="15" fill="rgb(224,206,38)" fg:x="124834" fg:w="45"/><text x="76.0577%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (49 samples, 0.03%)</title><rect x="76.5133%" y="837" width="0.0298%" height="15" fill="rgb(212,201,54)" fg:x="125996" fg:w="49"/><text x="76.7633%" y="847.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (44 samples, 0.03%)</title><rect x="76.6651%" y="773" width="0.0267%" height="15" fill="rgb(218,154,48)" fg:x="126246" fg:w="44"/><text x="76.9151%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (26 samples, 0.02%)</title><rect x="76.7003%" y="757" width="0.0158%" height="15" fill="rgb(232,93,24)" fg:x="126304" fg:w="26"/><text x="76.9503%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (137 samples, 0.08%)</title><rect x="76.6918%" y="773" width="0.0832%" height="15" fill="rgb(245,30,21)" fg:x="126290" fg:w="137"/><text x="76.9418%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (97 samples, 0.06%)</title><rect x="76.7161%" y="757" width="0.0589%" height="15" fill="rgb(242,148,29)" fg:x="126330" fg:w="97"/><text x="76.9661%" y="767.50"></text></g><g><title>[libc.so.6] (67 samples, 0.04%)</title><rect x="76.7344%" y="741" width="0.0407%" height="15" fill="rgb(244,153,54)" fg:x="126360" fg:w="67"/><text x="76.9844%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::get_vec_pos (21 samples, 0.01%)</title><rect x="76.7750%" y="725" width="0.0128%" height="15" fill="rgb(252,87,22)" fg:x="126427" fg:w="21"/><text x="77.0250%" y="735.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (340 samples, 0.21%)</title><rect x="76.6002%" y="789" width="0.2065%" height="15" fill="rgb(210,51,29)" fg:x="126139" fg:w="340"/><text x="76.8502%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::Payload&gt; (52 samples, 0.03%)</title><rect x="76.7750%" y="773" width="0.0316%" height="15" fill="rgb(242,136,47)" fg:x="126427" fg:w="52"/><text x="77.0250%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (52 samples, 0.03%)</title><rect x="76.7750%" y="757" width="0.0316%" height="15" fill="rgb(238,68,4)" fg:x="126427" fg:w="52"/><text x="77.0250%" y="767.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (52 samples, 0.03%)</title><rect x="76.7750%" y="741" width="0.0316%" height="15" fill="rgb(242,161,30)" fg:x="126427" fg:w="52"/><text x="77.0250%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (31 samples, 0.02%)</title><rect x="76.7878%" y="725" width="0.0188%" height="15" fill="rgb(218,58,44)" fg:x="126448" fg:w="31"/><text x="77.0378%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (31 samples, 0.02%)</title><rect x="76.7878%" y="709" width="0.0188%" height="15" fill="rgb(252,125,32)" fg:x="126448" fg:w="31"/><text x="77.0378%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.02%)</title><rect x="76.7878%" y="693" width="0.0188%" height="15" fill="rgb(219,178,0)" fg:x="126448" fg:w="31"/><text x="77.0378%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (31 samples, 0.02%)</title><rect x="76.7878%" y="677" width="0.0188%" height="15" fill="rgb(213,152,7)" fg:x="126448" fg:w="31"/><text x="77.0378%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (31 samples, 0.02%)</title><rect x="76.7878%" y="661" width="0.0188%" height="15" fill="rgb(249,109,34)" fg:x="126448" fg:w="31"/><text x="77.0378%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (22 samples, 0.01%)</title><rect x="76.8066%" y="741" width="0.0134%" height="15" fill="rgb(232,96,21)" fg:x="126479" fg:w="22"/><text x="77.0566%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (53 samples, 0.03%)</title><rect x="76.8200%" y="741" width="0.0322%" height="15" fill="rgb(228,27,39)" fg:x="126501" fg:w="53"/><text x="77.0700%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::capacity (24 samples, 0.01%)</title><rect x="76.8376%" y="725" width="0.0146%" height="15" fill="rgb(211,182,52)" fg:x="126530" fg:w="24"/><text x="77.0876%" y="735.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32_le (104 samples, 0.06%)</title><rect x="76.8066%" y="789" width="0.0632%" height="15" fill="rgb(234,178,38)" fg:x="126479" fg:w="104"/><text x="77.0566%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (104 samples, 0.06%)</title><rect x="76.8066%" y="773" width="0.0632%" height="15" fill="rgb(221,111,3)" fg:x="126479" fg:w="104"/><text x="77.0566%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (104 samples, 0.06%)</title><rect x="76.8066%" y="757" width="0.0632%" height="15" fill="rgb(228,175,21)" fg:x="126479" fg:w="104"/><text x="77.0566%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.01%)</title><rect x="76.8570%" y="741" width="0.0128%" height="15" fill="rgb(228,174,43)" fg:x="126562" fg:w="21"/><text x="77.1070%" y="751.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (39 samples, 0.02%)</title><rect x="76.8698%" y="741" width="0.0237%" height="15" fill="rgb(211,191,0)" fg:x="126583" fg:w="39"/><text x="77.1198%" y="751.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (117 samples, 0.07%)</title><rect x="76.8698%" y="789" width="0.0711%" height="15" fill="rgb(253,117,3)" fg:x="126583" fg:w="117"/><text x="77.1198%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (117 samples, 0.07%)</title><rect x="76.8698%" y="773" width="0.0711%" height="15" fill="rgb(241,127,19)" fg:x="126583" fg:w="117"/><text x="77.1198%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (117 samples, 0.07%)</title><rect x="76.8698%" y="757" width="0.0711%" height="15" fill="rgb(218,103,12)" fg:x="126583" fg:w="117"/><text x="77.1198%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.04%)</title><rect x="76.9014%" y="741" width="0.0395%" height="15" fill="rgb(236,214,43)" fg:x="126635" fg:w="65"/><text x="77.1514%" y="751.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (563 samples, 0.34%)</title><rect x="76.6002%" y="805" width="0.3419%" height="15" fill="rgb(244,144,19)" fg:x="126139" fg:w="563"/><text x="76.8502%" y="815.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (27 samples, 0.02%)</title><rect x="76.9445%" y="501" width="0.0164%" height="15" fill="rgb(246,188,10)" fg:x="126706" fg:w="27"/><text x="77.1945%" y="511.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (28 samples, 0.02%)</title><rect x="76.9445%" y="517" width="0.0170%" height="15" fill="rgb(212,193,33)" fg:x="126706" fg:w="28"/><text x="77.1945%" y="527.50"></text></g><g><title>imalloc_no_sample (35 samples, 0.02%)</title><rect x="76.9439%" y="581" width="0.0213%" height="15" fill="rgb(241,51,29)" fg:x="126705" fg:w="35"/><text x="77.1939%" y="591.50"></text></g><g><title>iallocztm (35 samples, 0.02%)</title><rect x="76.9439%" y="565" width="0.0213%" height="15" fill="rgb(211,58,19)" fg:x="126705" fg:w="35"/><text x="77.1939%" y="575.50"></text></g><g><title>arena_malloc (35 samples, 0.02%)</title><rect x="76.9439%" y="549" width="0.0213%" height="15" fill="rgb(229,111,26)" fg:x="126705" fg:w="35"/><text x="77.1939%" y="559.50"></text></g><g><title>tcache_alloc_small (35 samples, 0.02%)</title><rect x="76.9439%" y="533" width="0.0213%" height="15" fill="rgb(213,115,40)" fg:x="126705" fg:w="35"/><text x="77.1939%" y="543.50"></text></g><g><title>imalloc_body (36 samples, 0.02%)</title><rect x="76.9439%" y="597" width="0.0219%" height="15" fill="rgb(209,56,44)" fg:x="126705" fg:w="36"/><text x="77.1939%" y="607.50"></text></g><g><title>_rjem_je_malloc_default (39 samples, 0.02%)</title><rect x="76.9426%" y="629" width="0.0237%" height="15" fill="rgb(230,108,32)" fg:x="126703" fg:w="39"/><text x="77.1926%" y="639.50"></text></g><g><title>imalloc (37 samples, 0.02%)</title><rect x="76.9439%" y="613" width="0.0225%" height="15" fill="rgb(216,165,31)" fg:x="126705" fg:w="37"/><text x="77.1939%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (177 samples, 0.11%)</title><rect x="77.0137%" y="597" width="0.1075%" height="15" fill="rgb(218,122,21)" fg:x="126820" fg:w="177"/><text x="77.2637%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (177 samples, 0.11%)</title><rect x="77.0137%" y="581" width="0.1075%" height="15" fill="rgb(223,224,47)" fg:x="126820" fg:w="177"/><text x="77.2637%" y="591.50"></text></g><g><title>fastpath_success_finish (37 samples, 0.02%)</title><rect x="77.1212%" y="597" width="0.0225%" height="15" fill="rgb(238,102,44)" fg:x="126997" fg:w="37"/><text x="77.3712%" y="607.50"></text></g><g><title>thread_allocated_set (28 samples, 0.02%)</title><rect x="77.1267%" y="581" width="0.0170%" height="15" fill="rgb(236,46,40)" fg:x="127006" fg:w="28"/><text x="77.3767%" y="591.50"></text></g><g><title>sz_size2index_usize_fastpath (25 samples, 0.02%)</title><rect x="77.1437%" y="597" width="0.0152%" height="15" fill="rgb(247,202,50)" fg:x="127034" fg:w="25"/><text x="77.3937%" y="607.50"></text></g><g><title>sz_index2size_lookup_impl (25 samples, 0.02%)</title><rect x="77.1437%" y="581" width="0.0152%" height="15" fill="rgb(209,99,20)" fg:x="127034" fg:w="25"/><text x="77.3937%" y="591.50"></text></g><g><title>__rust_alloc (377 samples, 0.23%)</title><rect x="76.9426%" y="661" width="0.2289%" height="15" fill="rgb(252,27,34)" fg:x="126703" fg:w="377"/><text x="77.1926%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (377 samples, 0.23%)</title><rect x="76.9426%" y="645" width="0.2289%" height="15" fill="rgb(215,206,23)" fg:x="126703" fg:w="377"/><text x="77.1926%" y="655.50"></text></g><g><title>_rjem_malloc (338 samples, 0.21%)</title><rect x="76.9663%" y="629" width="0.2053%" height="15" fill="rgb(212,135,36)" fg:x="126742" fg:w="338"/><text x="77.2163%" y="639.50"></text></g><g><title>imalloc_fastpath (337 samples, 0.20%)</title><rect x="76.9669%" y="613" width="0.2046%" height="15" fill="rgb(240,189,1)" fg:x="126743" fg:w="337"/><text x="77.2169%" y="623.50"></text></g><g><title>te_malloc_fastpath_ctx (21 samples, 0.01%)</title><rect x="77.1588%" y="597" width="0.0128%" height="15" fill="rgb(242,56,20)" fg:x="127059" fg:w="21"/><text x="77.4088%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (409 samples, 0.25%)</title><rect x="76.9426%" y="709" width="0.2484%" height="15" fill="rgb(247,132,33)" fg:x="126703" fg:w="409"/><text x="77.1926%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (409 samples, 0.25%)</title><rect x="76.9426%" y="693" width="0.2484%" height="15" fill="rgb(208,149,11)" fg:x="126703" fg:w="409"/><text x="77.1926%" y="703.50"></text></g><g><title>alloc::alloc::alloc (409 samples, 0.25%)</title><rect x="76.9426%" y="677" width="0.2484%" height="15" fill="rgb(211,33,11)" fg:x="126703" fg:w="409"/><text x="77.1926%" y="687.50"></text></g><g><title>core::ptr::read_volatile (32 samples, 0.02%)</title><rect x="77.1716%" y="661" width="0.0194%" height="15" fill="rgb(221,29,38)" fg:x="127080" fg:w="32"/><text x="77.4216%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (411 samples, 0.25%)</title><rect x="76.9420%" y="789" width="0.2496%" height="15" fill="rgb(206,182,49)" fg:x="126702" fg:w="411"/><text x="77.1920%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (411 samples, 0.25%)</title><rect x="76.9420%" y="773" width="0.2496%" height="15" fill="rgb(216,140,1)" fg:x="126702" fg:w="411"/><text x="77.1920%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (411 samples, 0.25%)</title><rect x="76.9420%" y="757" width="0.2496%" height="15" fill="rgb(232,57,40)" fg:x="126702" fg:w="411"/><text x="77.1920%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (411 samples, 0.25%)</title><rect x="76.9420%" y="741" width="0.2496%" height="15" fill="rgb(224,186,18)" fg:x="126702" fg:w="411"/><text x="77.1920%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (411 samples, 0.25%)</title><rect x="76.9420%" y="725" width="0.2496%" height="15" fill="rgb(215,121,11)" fg:x="126702" fg:w="411"/><text x="77.1920%" y="735.50"></text></g><g><title>core::cmp::min (23 samples, 0.01%)</title><rect x="77.2056%" y="757" width="0.0140%" height="15" fill="rgb(245,147,10)" fg:x="127136" fg:w="23"/><text x="77.4556%" y="767.50"></text></g><g><title>core::cmp::Ord::min (23 samples, 0.01%)</title><rect x="77.2056%" y="741" width="0.0140%" height="15" fill="rgb(238,153,13)" fg:x="127136" fg:w="23"/><text x="77.4556%" y="751.50"></text></g><g><title>core::cmp::min_by (23 samples, 0.01%)</title><rect x="77.2056%" y="725" width="0.0140%" height="15" fill="rgb(233,108,0)" fg:x="127136" fg:w="23"/><text x="77.4556%" y="735.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (472 samples, 0.29%)</title><rect x="76.9420%" y="805" width="0.2866%" height="15" fill="rgb(212,157,17)" fg:x="126702" fg:w="472"/><text x="77.1920%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (61 samples, 0.04%)</title><rect x="77.1916%" y="789" width="0.0370%" height="15" fill="rgb(225,213,38)" fg:x="127113" fg:w="61"/><text x="77.4416%" y="799.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (38 samples, 0.02%)</title><rect x="77.2056%" y="773" width="0.0231%" height="15" fill="rgb(248,16,11)" fg:x="127136" fg:w="38"/><text x="77.4556%" y="783.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (1,290 samples, 0.78%)</title><rect x="76.5431%" y="821" width="0.7834%" height="15" fill="rgb(241,33,4)" fg:x="126045" fg:w="1290"/><text x="76.7931%" y="831.50"></text></g><g><title>wisp_mux::packet::PacketType::get_packet_size (161 samples, 0.10%)</title><rect x="77.2287%" y="805" width="0.0978%" height="15" fill="rgb(222,26,43)" fg:x="127174" fg:w="161"/><text x="77.4787%" y="815.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (58 samples, 0.04%)</title><rect x="77.2912%" y="789" width="0.0352%" height="15" fill="rgb(243,29,36)" fg:x="127277" fg:w="58"/><text x="77.5412%" y="799.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (1,291 samples, 0.78%)</title><rect x="76.5431%" y="837" width="0.7840%" height="15" fill="rgb(241,9,27)" fg:x="126045" fg:w="1291"/><text x="76.7931%" y="847.50"></text></g><g><title>wisp_mux::packet::Packet::new_data (64 samples, 0.04%)</title><rect x="77.3271%" y="837" width="0.0389%" height="15" fill="rgb(205,117,26)" fg:x="127336" fg:w="64"/><text x="77.5771%" y="847.50"></text></g><g><title>&lt;wisp_mux::Role as core::cmp::PartialEq&gt;::eq (49 samples, 0.03%)</title><rect x="77.7278%" y="821" width="0.0298%" height="15" fill="rgb(209,80,39)" fg:x="127996" fg:w="49"/><text x="77.9778%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (62 samples, 0.04%)</title><rect x="77.7576%" y="821" width="0.0377%" height="15" fill="rgb(239,155,6)" fg:x="128045" fg:w="62"/><text x="78.0076%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (179 samples, 0.11%)</title><rect x="77.7953%" y="821" width="0.1087%" height="15" fill="rgb(212,104,12)" fg:x="128107" fg:w="179"/><text x="78.0453%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (179 samples, 0.11%)</title><rect x="77.7953%" y="805" width="0.1087%" height="15" fill="rgb(234,204,3)" fg:x="128107" fg:w="179"/><text x="78.0453%" y="815.50"></text></g><g><title>_rjem_je_eset_fit (34 samples, 0.02%)</title><rect x="78.7493%" y="389" width="0.0206%" height="15" fill="rgb(251,218,7)" fg:x="129678" fg:w="34"/><text x="78.9993%" y="399.50"></text></g><g><title>eset_first_fit (34 samples, 0.02%)</title><rect x="78.7493%" y="373" width="0.0206%" height="15" fill="rgb(221,81,32)" fg:x="129678" fg:w="34"/><text x="78.9993%" y="383.50"></text></g><g><title>extent_recycle_extract (68 samples, 0.04%)</title><rect x="78.7474%" y="405" width="0.0413%" height="15" fill="rgb(214,152,26)" fg:x="129675" fg:w="68"/><text x="78.9974%" y="415.50"></text></g><g><title>extent_activate_locked (31 samples, 0.02%)</title><rect x="78.7699%" y="389" width="0.0188%" height="15" fill="rgb(223,22,3)" fg:x="129712" fg:w="31"/><text x="79.0199%" y="399.50"></text></g><g><title>_rjem_je_eset_remove (19 samples, 0.01%)</title><rect x="78.7772%" y="373" width="0.0115%" height="15" fill="rgb(207,174,7)" fg:x="129724" fg:w="19"/><text x="79.0272%" y="383.50"></text></g><g><title>_rjem_je_edata_cache_get (25 samples, 0.02%)</title><rect x="78.7936%" y="357" width="0.0152%" height="15" fill="rgb(224,19,52)" fg:x="129751" fg:w="25"/><text x="79.0436%" y="367.50"></text></g><g><title>extent_recycle_split (39 samples, 0.02%)</title><rect x="78.7887%" y="405" width="0.0237%" height="15" fill="rgb(228,24,14)" fg:x="129743" fg:w="39"/><text x="79.0387%" y="415.50"></text></g><g><title>extent_split_interior (34 samples, 0.02%)</title><rect x="78.7918%" y="389" width="0.0206%" height="15" fill="rgb(230,153,43)" fg:x="129748" fg:w="34"/><text x="79.0418%" y="399.50"></text></g><g><title>extent_split_impl (34 samples, 0.02%)</title><rect x="78.7918%" y="373" width="0.0206%" height="15" fill="rgb(231,106,12)" fg:x="129748" fg:w="34"/><text x="79.0418%" y="383.50"></text></g><g><title>_rjem_je_ecache_alloc (123 samples, 0.07%)</title><rect x="78.7462%" y="437" width="0.0747%" height="15" fill="rgb(215,92,2)" fg:x="129673" fg:w="123"/><text x="78.9962%" y="447.50"></text></g><g><title>extent_recycle (122 samples, 0.07%)</title><rect x="78.7468%" y="421" width="0.0741%" height="15" fill="rgb(249,143,25)" fg:x="129674" fg:w="122"/><text x="78.9968%" y="431.50"></text></g><g><title>pac_alloc_real (124 samples, 0.08%)</title><rect x="78.7462%" y="453" width="0.0753%" height="15" fill="rgb(252,7,35)" fg:x="129673" fg:w="124"/><text x="78.9962%" y="463.50"></text></g><g><title>_rjem_je_pa_alloc (147 samples, 0.09%)</title><rect x="78.7329%" y="501" width="0.0893%" height="15" fill="rgb(216,69,40)" fg:x="129651" fg:w="147"/><text x="78.9829%" y="511.50"></text></g><g><title>pai_alloc (126 samples, 0.08%)</title><rect x="78.7456%" y="485" width="0.0765%" height="15" fill="rgb(240,36,33)" fg:x="129672" fg:w="126"/><text x="78.9956%" y="495.50"></text></g><g><title>pac_alloc_impl (126 samples, 0.08%)</title><rect x="78.7456%" y="469" width="0.0765%" height="15" fill="rgb(231,128,14)" fg:x="129672" fg:w="126"/><text x="78.9956%" y="479.50"></text></g><g><title>arena_slab_alloc (170 samples, 0.10%)</title><rect x="78.7195%" y="517" width="0.1032%" height="15" fill="rgb(245,143,14)" fg:x="129629" fg:w="170"/><text x="78.9695%" y="527.50"></text></g><g><title>malloc_mutex_trylock_final (21 samples, 0.01%)</title><rect x="78.8319%" y="501" width="0.0128%" height="15" fill="rgb(222,130,28)" fg:x="129814" fg:w="21"/><text x="79.0819%" y="511.50"></text></g><g><title>pthread_mutex_trylock (21 samples, 0.01%)</title><rect x="78.8319%" y="485" width="0.0128%" height="15" fill="rgb(212,10,48)" fg:x="129814" fg:w="21"/><text x="79.0819%" y="495.50"></text></g><g><title>malloc_mutex_lock (25 samples, 0.02%)</title><rect x="78.8319%" y="517" width="0.0152%" height="15" fill="rgb(254,118,45)" fg:x="129814" fg:w="25"/><text x="79.0819%" y="527.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (249 samples, 0.15%)</title><rect x="78.7019%" y="549" width="0.1512%" height="15" fill="rgb(228,6,45)" fg:x="129600" fg:w="249"/><text x="78.9519%" y="559.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (245 samples, 0.15%)</title><rect x="78.7043%" y="533" width="0.1488%" height="15" fill="rgb(241,18,35)" fg:x="129604" fg:w="245"/><text x="78.9543%" y="543.50"></text></g><g><title>imalloc_no_sample (257 samples, 0.16%)</title><rect x="78.7007%" y="613" width="0.1561%" height="15" fill="rgb(227,214,53)" fg:x="129598" fg:w="257"/><text x="78.9507%" y="623.50"></text></g><g><title>iallocztm (257 samples, 0.16%)</title><rect x="78.7007%" y="597" width="0.1561%" height="15" fill="rgb(224,107,51)" fg:x="129598" fg:w="257"/><text x="78.9507%" y="607.50"></text></g><g><title>arena_malloc (257 samples, 0.16%)</title><rect x="78.7007%" y="581" width="0.1561%" height="15" fill="rgb(248,60,28)" fg:x="129598" fg:w="257"/><text x="78.9507%" y="591.50"></text></g><g><title>tcache_alloc_small (257 samples, 0.16%)</title><rect x="78.7007%" y="565" width="0.1561%" height="15" fill="rgb(249,101,23)" fg:x="129598" fg:w="257"/><text x="78.9507%" y="575.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (21 samples, 0.01%)</title><rect x="78.8659%" y="565" width="0.0128%" height="15" fill="rgb(228,51,19)" fg:x="129870" fg:w="21"/><text x="79.1159%" y="575.50"></text></g><g><title>tcache_event (21 samples, 0.01%)</title><rect x="78.8659%" y="549" width="0.0128%" height="15" fill="rgb(213,20,6)" fg:x="129870" fg:w="21"/><text x="79.1159%" y="559.50"></text></g><g><title>_rjem_je_te_event_trigger (37 samples, 0.02%)</title><rect x="78.8592%" y="581" width="0.0225%" height="15" fill="rgb(212,124,10)" fg:x="129859" fg:w="37"/><text x="79.1092%" y="591.50"></text></g><g><title>imalloc_body (304 samples, 0.18%)</title><rect x="78.7001%" y="629" width="0.1846%" height="15" fill="rgb(248,3,40)" fg:x="129597" fg:w="304"/><text x="78.9501%" y="639.50"></text></g><g><title>thread_alloc_event (46 samples, 0.03%)</title><rect x="78.8568%" y="613" width="0.0279%" height="15" fill="rgb(223,178,23)" fg:x="129855" fg:w="46"/><text x="79.1068%" y="623.50"></text></g><g><title>te_event_advance (46 samples, 0.03%)</title><rect x="78.8568%" y="597" width="0.0279%" height="15" fill="rgb(240,132,45)" fg:x="129855" fg:w="46"/><text x="79.1068%" y="607.50"></text></g><g><title>_rjem_je_malloc_default (306 samples, 0.19%)</title><rect x="78.6995%" y="661" width="0.1858%" height="15" fill="rgb(245,164,36)" fg:x="129596" fg:w="306"/><text x="78.9495%" y="671.50"></text></g><g><title>imalloc (305 samples, 0.19%)</title><rect x="78.7001%" y="645" width="0.1852%" height="15" fill="rgb(231,188,53)" fg:x="129597" fg:w="305"/><text x="78.9501%" y="655.50"></text></g><g><title>cache_bin_alloc_easy (129 samples, 0.08%)</title><rect x="78.9047%" y="629" width="0.0783%" height="15" fill="rgb(237,198,39)" fg:x="129934" fg:w="129"/><text x="79.1547%" y="639.50"></text></g><g><title>cache_bin_alloc_impl (129 samples, 0.08%)</title><rect x="78.9047%" y="613" width="0.0783%" height="15" fill="rgb(223,120,35)" fg:x="129934" fg:w="129"/><text x="79.1547%" y="623.50"></text></g><g><title>fastpath_success_finish (28 samples, 0.02%)</title><rect x="78.9831%" y="629" width="0.0170%" height="15" fill="rgb(253,107,49)" fg:x="130063" fg:w="28"/><text x="79.2331%" y="639.50"></text></g><g><title>thread_allocated_set (28 samples, 0.02%)</title><rect x="78.9831%" y="613" width="0.0170%" height="15" fill="rgb(216,44,31)" fg:x="130063" fg:w="28"/><text x="79.2331%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (669 samples, 0.41%)</title><rect x="78.6066%" y="805" width="0.4063%" height="15" fill="rgb(253,87,21)" fg:x="129443" fg:w="669"/><text x="78.8566%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (669 samples, 0.41%)</title><rect x="78.6066%" y="789" width="0.4063%" height="15" fill="rgb(226,18,2)" fg:x="129443" fg:w="669"/><text x="78.8566%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (669 samples, 0.41%)</title><rect x="78.6066%" y="773" width="0.4063%" height="15" fill="rgb(216,8,46)" fg:x="129443" fg:w="669"/><text x="78.8566%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (541 samples, 0.33%)</title><rect x="78.6843%" y="757" width="0.3285%" height="15" fill="rgb(226,140,39)" fg:x="129571" fg:w="541"/><text x="78.9343%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (541 samples, 0.33%)</title><rect x="78.6843%" y="741" width="0.3285%" height="15" fill="rgb(221,194,54)" fg:x="129571" fg:w="541"/><text x="78.9343%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (541 samples, 0.33%)</title><rect x="78.6843%" y="725" width="0.3285%" height="15" fill="rgb(213,92,11)" fg:x="129571" fg:w="541"/><text x="78.9343%" y="735.50"></text></g><g><title>alloc::alloc::alloc (541 samples, 0.33%)</title><rect x="78.6843%" y="709" width="0.3285%" height="15" fill="rgb(229,162,46)" fg:x="129571" fg:w="541"/><text x="78.9343%" y="719.50"></text></g><g><title>__rust_alloc (541 samples, 0.33%)</title><rect x="78.6843%" y="693" width="0.3285%" height="15" fill="rgb(214,111,36)" fg:x="129571" fg:w="541"/><text x="78.9343%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (541 samples, 0.33%)</title><rect x="78.6843%" y="677" width="0.3285%" height="15" fill="rgb(207,6,21)" fg:x="129571" fg:w="541"/><text x="78.9343%" y="687.50"></text></g><g><title>_rjem_malloc (210 samples, 0.13%)</title><rect x="78.8853%" y="661" width="0.1275%" height="15" fill="rgb(213,127,38)" fg:x="129902" fg:w="210"/><text x="79.1353%" y="671.50"></text></g><g><title>imalloc_fastpath (210 samples, 0.13%)</title><rect x="78.8853%" y="645" width="0.1275%" height="15" fill="rgb(238,118,32)" fg:x="129902" fg:w="210"/><text x="79.1353%" y="655.50"></text></g><g><title>imalloc_no_sample (22 samples, 0.01%)</title><rect x="79.4154%" y="581" width="0.0134%" height="15" fill="rgb(240,139,39)" fg:x="130775" fg:w="22"/><text x="79.6654%" y="591.50"></text></g><g><title>iallocztm (22 samples, 0.01%)</title><rect x="79.4154%" y="565" width="0.0134%" height="15" fill="rgb(235,10,37)" fg:x="130775" fg:w="22"/><text x="79.6654%" y="575.50"></text></g><g><title>arena_malloc (22 samples, 0.01%)</title><rect x="79.4154%" y="549" width="0.0134%" height="15" fill="rgb(249,171,38)" fg:x="130775" fg:w="22"/><text x="79.6654%" y="559.50"></text></g><g><title>tcache_alloc_small (22 samples, 0.01%)</title><rect x="79.4154%" y="533" width="0.0134%" height="15" fill="rgb(242,144,32)" fg:x="130775" fg:w="22"/><text x="79.6654%" y="543.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (24 samples, 0.01%)</title><rect x="79.4416%" y="533" width="0.0146%" height="15" fill="rgb(217,117,21)" fg:x="130818" fg:w="24"/><text x="79.6916%" y="543.50"></text></g><g><title>tcache_event (24 samples, 0.01%)</title><rect x="79.4416%" y="517" width="0.0146%" height="15" fill="rgb(249,87,1)" fg:x="130818" fg:w="24"/><text x="79.6916%" y="527.50"></text></g><g><title>_rjem_je_te_event_trigger (53 samples, 0.03%)</title><rect x="79.4300%" y="549" width="0.0322%" height="15" fill="rgb(248,196,48)" fg:x="130799" fg:w="53"/><text x="79.6800%" y="559.50"></text></g><g><title>_rjem_je_malloc_default (83 samples, 0.05%)</title><rect x="79.4148%" y="629" width="0.0504%" height="15" fill="rgb(251,206,33)" fg:x="130774" fg:w="83"/><text x="79.6648%" y="639.50"></text></g><g><title>imalloc (82 samples, 0.05%)</title><rect x="79.4154%" y="613" width="0.0498%" height="15" fill="rgb(232,141,28)" fg:x="130775" fg:w="82"/><text x="79.6654%" y="623.50"></text></g><g><title>imalloc_body (82 samples, 0.05%)</title><rect x="79.4154%" y="597" width="0.0498%" height="15" fill="rgb(209,167,14)" fg:x="130775" fg:w="82"/><text x="79.6654%" y="607.50"></text></g><g><title>thread_alloc_event (60 samples, 0.04%)</title><rect x="79.4288%" y="581" width="0.0364%" height="15" fill="rgb(225,11,50)" fg:x="130797" fg:w="60"/><text x="79.6788%" y="591.50"></text></g><g><title>te_event_advance (60 samples, 0.04%)</title><rect x="79.4288%" y="565" width="0.0364%" height="15" fill="rgb(209,50,20)" fg:x="130797" fg:w="60"/><text x="79.6788%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (61 samples, 0.04%)</title><rect x="79.4804%" y="597" width="0.0370%" height="15" fill="rgb(212,17,46)" fg:x="130882" fg:w="61"/><text x="79.7304%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (61 samples, 0.04%)</title><rect x="79.4804%" y="581" width="0.0370%" height="15" fill="rgb(216,101,39)" fg:x="130882" fg:w="61"/><text x="79.7304%" y="591.50"></text></g><g><title>fastpath_success_finish (33 samples, 0.02%)</title><rect x="79.5175%" y="597" width="0.0200%" height="15" fill="rgb(212,228,48)" fg:x="130943" fg:w="33"/><text x="79.7675%" y="607.50"></text></g><g><title>thread_allocated_set (33 samples, 0.02%)</title><rect x="79.5175%" y="581" width="0.0200%" height="15" fill="rgb(250,6,50)" fg:x="130943" fg:w="33"/><text x="79.7675%" y="591.50"></text></g><g><title>__rust_alloc (247 samples, 0.15%)</title><rect x="79.4021%" y="661" width="0.1500%" height="15" fill="rgb(250,160,48)" fg:x="130753" fg:w="247"/><text x="79.6521%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (247 samples, 0.15%)</title><rect x="79.4021%" y="645" width="0.1500%" height="15" fill="rgb(244,216,33)" fg:x="130753" fg:w="247"/><text x="79.6521%" y="655.50"></text></g><g><title>_rjem_malloc (143 samples, 0.09%)</title><rect x="79.4652%" y="629" width="0.0868%" height="15" fill="rgb(207,157,5)" fg:x="130857" fg:w="143"/><text x="79.7152%" y="639.50"></text></g><g><title>imalloc_fastpath (143 samples, 0.09%)</title><rect x="79.4652%" y="613" width="0.0868%" height="15" fill="rgb(228,199,8)" fg:x="130857" fg:w="143"/><text x="79.7152%" y="623.50"></text></g><g><title>te_malloc_fastpath_ctx (22 samples, 0.01%)</title><rect x="79.5387%" y="597" width="0.0134%" height="15" fill="rgb(227,80,20)" fg:x="130978" fg:w="22"/><text x="79.7887%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (365 samples, 0.22%)</title><rect x="79.3310%" y="773" width="0.2217%" height="15" fill="rgb(222,9,33)" fg:x="130636" fg:w="365"/><text x="79.5810%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (295 samples, 0.18%)</title><rect x="79.3735%" y="757" width="0.1791%" height="15" fill="rgb(239,44,28)" fg:x="130706" fg:w="295"/><text x="79.6235%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (295 samples, 0.18%)</title><rect x="79.3735%" y="741" width="0.1791%" height="15" fill="rgb(249,187,43)" fg:x="130706" fg:w="295"/><text x="79.6235%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (248 samples, 0.15%)</title><rect x="79.4021%" y="725" width="0.1506%" height="15" fill="rgb(216,141,28)" fg:x="130753" fg:w="248"/><text x="79.6521%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (248 samples, 0.15%)</title><rect x="79.4021%" y="709" width="0.1506%" height="15" fill="rgb(230,154,53)" fg:x="130753" fg:w="248"/><text x="79.6521%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (248 samples, 0.15%)</title><rect x="79.4021%" y="693" width="0.1506%" height="15" fill="rgb(227,82,4)" fg:x="130753" fg:w="248"/><text x="79.6521%" y="703.50"></text></g><g><title>alloc::alloc::alloc (248 samples, 0.15%)</title><rect x="79.4021%" y="677" width="0.1506%" height="15" fill="rgb(220,107,16)" fg:x="130753" fg:w="248"/><text x="79.6521%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.02%)</title><rect x="81.0101%" y="709" width="0.0231%" height="15" fill="rgb(207,187,2)" fg:x="133401" fg:w="38"/><text x="81.2601%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;::write_frame::{{closure}}&gt; (84 samples, 0.05%)</title><rect x="81.0332%" y="709" width="0.0510%" height="15" fill="rgb(210,162,52)" fg:x="133439" fg:w="84"/><text x="81.2832%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (96 samples, 0.06%)</title><rect x="81.8081%" y="693" width="0.0583%" height="15" fill="rgb(217,216,49)" fg:x="134715" fg:w="96"/><text x="82.0581%" y="703.50"></text></g><g><title>&lt;fastwebsockets::Role as core::cmp::PartialEq&gt;::eq (60 samples, 0.04%)</title><rect x="82.6194%" y="677" width="0.0364%" height="15" fill="rgb(218,146,49)" fg:x="136051" fg:w="60"/><text x="82.8694%" y="687.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (388 samples, 0.24%)</title><rect x="82.6595%" y="677" width="0.2356%" height="15" fill="rgb(216,55,40)" fg:x="136117" fg:w="388"/><text x="82.9095%" y="687.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (371 samples, 0.23%)</title><rect x="83.0208%" y="645" width="0.2253%" height="15" fill="rgb(208,196,21)" fg:x="136712" fg:w="371"/><text x="83.2708%" y="655.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (20 samples, 0.01%)</title><rect x="83.2339%" y="629" width="0.0121%" height="15" fill="rgb(242,117,42)" fg:x="137063" fg:w="20"/><text x="83.4839%" y="639.50"></text></g><g><title>[libc.so.6] (2,338 samples, 1.42%)</title><rect x="83.9712%" y="501" width="1.4198%" height="15" fill="rgb(210,11,23)" fg:x="138277" fg:w="2338"/><text x="84.2212%" y="511.50"></text></g><g><title>__send (3,660 samples, 2.22%)</title><rect x="83.4094%" y="517" width="2.2226%" height="15" fill="rgb(217,110,2)" fg:x="137352" fg:w="3660"/><text x="83.6594%" y="527.50">_..</text></g><g><title>[unknown] (397 samples, 0.24%)</title><rect x="85.3910%" y="501" width="0.2411%" height="15" fill="rgb(229,77,54)" fg:x="140615" fg:w="397"/><text x="85.6410%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3,792 samples, 2.30%)</title><rect x="83.3961%" y="613" width="2.3028%" height="15" fill="rgb(218,53,16)" fg:x="137330" fg:w="3792"/><text x="83.6461%" y="623.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3,792 samples, 2.30%)</title><rect x="83.3961%" y="597" width="2.3028%" height="15" fill="rgb(215,38,13)" fg:x="137330" fg:w="3792"/><text x="83.6461%" y="607.50">m..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (3,792 samples, 2.30%)</title><rect x="83.3961%" y="581" width="2.3028%" height="15" fill="rgb(235,42,18)" fg:x="137330" fg:w="3792"/><text x="83.6461%" y="591.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (3,792 samples, 2.30%)</title><rect x="83.3961%" y="565" width="2.3028%" height="15" fill="rgb(219,66,54)" fg:x="137330" fg:w="3792"/><text x="83.6461%" y="575.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (3,792 samples, 2.30%)</title><rect x="83.3961%" y="549" width="2.3028%" height="15" fill="rgb(222,205,4)" fg:x="137330" fg:w="3792"/><text x="83.6461%" y="559.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (3,792 samples, 2.30%)</title><rect x="83.3961%" y="533" width="2.3028%" height="15" fill="rgb(227,213,46)" fg:x="137330" fg:w="3792"/><text x="83.6461%" y="543.50">s..</text></g><g><title>std::sys::pal::unix::cvt (110 samples, 0.07%)</title><rect x="85.6320%" y="517" width="0.0668%" height="15" fill="rgb(250,145,42)" fg:x="141012" fg:w="110"/><text x="85.8820%" y="527.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (61 samples, 0.04%)</title><rect x="85.6618%" y="501" width="0.0370%" height="15" fill="rgb(219,15,2)" fg:x="141061" fg:w="61"/><text x="85.9118%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (56 samples, 0.03%)</title><rect x="85.7729%" y="533" width="0.0340%" height="15" fill="rgb(231,181,52)" fg:x="141244" fg:w="56"/><text x="86.0229%" y="543.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (56 samples, 0.03%)</title><rect x="85.7729%" y="517" width="0.0340%" height="15" fill="rgb(235,1,42)" fg:x="141244" fg:w="56"/><text x="86.0229%" y="527.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (56 samples, 0.03%)</title><rect x="85.7729%" y="501" width="0.0340%" height="15" fill="rgb(249,88,27)" fg:x="141244" fg:w="56"/><text x="86.0229%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (31 samples, 0.02%)</title><rect x="85.7881%" y="485" width="0.0188%" height="15" fill="rgb(235,145,16)" fg:x="141269" fg:w="31"/><text x="86.0381%" y="495.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (29 samples, 0.02%)</title><rect x="85.8337%" y="501" width="0.0176%" height="15" fill="rgb(237,114,19)" fg:x="141344" fg:w="29"/><text x="86.0837%" y="511.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (20 samples, 0.01%)</title><rect x="85.8391%" y="485" width="0.0121%" height="15" fill="rgb(238,51,50)" fg:x="141353" fg:w="20"/><text x="86.0891%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (20 samples, 0.01%)</title><rect x="85.8391%" y="469" width="0.0121%" height="15" fill="rgb(205,194,25)" fg:x="141353" fg:w="20"/><text x="86.0891%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (20 samples, 0.01%)</title><rect x="85.8391%" y="453" width="0.0121%" height="15" fill="rgb(215,203,17)" fg:x="141353" fg:w="20"/><text x="86.0891%" y="463.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (20 samples, 0.01%)</title><rect x="85.8391%" y="437" width="0.0121%" height="15" fill="rgb(233,112,49)" fg:x="141353" fg:w="20"/><text x="86.0891%" y="447.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (151 samples, 0.09%)</title><rect x="85.7729%" y="581" width="0.0917%" height="15" fill="rgb(241,130,26)" fg:x="141244" fg:w="151"/><text x="86.0229%" y="591.50"></text></g><g><title>tokio::runtime::context::budget (151 samples, 0.09%)</title><rect x="85.7729%" y="565" width="0.0917%" height="15" fill="rgb(252,223,19)" fg:x="141244" fg:w="151"/><text x="86.0229%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (151 samples, 0.09%)</title><rect x="85.7729%" y="549" width="0.0917%" height="15" fill="rgb(211,95,25)" fg:x="141244" fg:w="151"/><text x="86.0229%" y="559.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (95 samples, 0.06%)</title><rect x="85.8069%" y="533" width="0.0577%" height="15" fill="rgb(251,182,27)" fg:x="141300" fg:w="95"/><text x="86.0569%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (95 samples, 0.06%)</title><rect x="85.8069%" y="517" width="0.0577%" height="15" fill="rgb(238,24,4)" fg:x="141300" fg:w="95"/><text x="86.0569%" y="527.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (22 samples, 0.01%)</title><rect x="85.8513%" y="501" width="0.0134%" height="15" fill="rgb(224,220,25)" fg:x="141373" fg:w="22"/><text x="86.1013%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (429 samples, 0.26%)</title><rect x="85.9005%" y="565" width="0.2605%" height="15" fill="rgb(239,133,26)" fg:x="141454" fg:w="429"/><text x="86.1505%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (429 samples, 0.26%)</title><rect x="85.9005%" y="549" width="0.2605%" height="15" fill="rgb(211,94,48)" fg:x="141454" fg:w="429"/><text x="86.1505%" y="559.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (19 samples, 0.01%)</title><rect x="86.1610%" y="565" width="0.0115%" height="15" fill="rgb(239,87,6)" fg:x="141883" fg:w="19"/><text x="86.4110%" y="575.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,225 samples, 3.17%)</title><rect x="83.0056%" y="661" width="3.1730%" height="15" fill="rgb(227,62,0)" fg:x="136687" fg:w="5225"/><text x="83.2556%" y="671.50">&lt;&amp;m..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (4,829 samples, 2.93%)</title><rect x="83.2461%" y="645" width="2.9325%" height="15" fill="rgb(211,226,4)" fg:x="137083" fg:w="4829"/><text x="83.4961%" y="655.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (4,683 samples, 2.84%)</title><rect x="83.3348%" y="629" width="2.8438%" height="15" fill="rgb(253,38,52)" fg:x="137229" fg:w="4683"/><text x="83.5848%" y="639.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (775 samples, 0.47%)</title><rect x="85.7080%" y="613" width="0.4706%" height="15" fill="rgb(229,126,40)" fg:x="141137" fg:w="775"/><text x="85.9580%" y="623.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (746 samples, 0.45%)</title><rect x="85.7256%" y="597" width="0.4530%" height="15" fill="rgb(229,165,44)" fg:x="141166" fg:w="746"/><text x="85.9756%" y="607.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (517 samples, 0.31%)</title><rect x="85.8646%" y="581" width="0.3140%" height="15" fill="rgb(247,95,47)" fg:x="141395" fg:w="517"/><text x="86.1146%" y="591.50"></text></g><g><title>core::ptr::read (81 samples, 0.05%)</title><rect x="86.1786%" y="629" width="0.0492%" height="15" fill="rgb(216,140,30)" fg:x="141912" fg:w="81"/><text x="86.4286%" y="639.50"></text></g><g><title>core::mem::take (100 samples, 0.06%)</title><rect x="86.1786%" y="661" width="0.0607%" height="15" fill="rgb(246,214,8)" fg:x="141912" fg:w="100"/><text x="86.4286%" y="671.50"></text></g><g><title>core::mem::replace (100 samples, 0.06%)</title><rect x="86.1786%" y="645" width="0.0607%" height="15" fill="rgb(227,224,15)" fg:x="141912" fg:w="100"/><text x="86.4286%" y="655.50"></text></g><g><title>core::ptr::write (19 samples, 0.01%)</title><rect x="86.2278%" y="629" width="0.0115%" height="15" fill="rgb(233,175,4)" fg:x="141993" fg:w="19"/><text x="86.4778%" y="639.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (5,529 samples, 3.36%)</title><rect x="82.8951%" y="677" width="3.3576%" height="15" fill="rgb(221,66,45)" fg:x="136505" fg:w="5529"/><text x="83.1451%" y="687.50">&lt;to..</text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (22 samples, 0.01%)</title><rect x="86.2393%" y="661" width="0.0134%" height="15" fill="rgb(221,178,18)" fg:x="142012" fg:w="22"/><text x="86.4893%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_checked (22 samples, 0.01%)</title><rect x="86.2393%" y="645" width="0.0134%" height="15" fill="rgb(213,81,29)" fg:x="142012" fg:w="22"/><text x="86.4893%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (21 samples, 0.01%)</title><rect x="86.2399%" y="629" width="0.0128%" height="15" fill="rgb(220,89,49)" fg:x="142013" fg:w="21"/><text x="86.4899%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (21 samples, 0.01%)</title><rect x="86.2399%" y="613" width="0.0128%" height="15" fill="rgb(227,60,33)" fg:x="142013" fg:w="21"/><text x="86.4899%" y="623.50"></text></g><g><title>cache_bin_dalloc_easy (128 samples, 0.08%)</title><rect x="86.4233%" y="453" width="0.0777%" height="15" fill="rgb(205,113,12)" fg:x="142315" fg:w="128"/><text x="86.6733%" y="463.50"></text></g><g><title>cache_bin_full (51 samples, 0.03%)</title><rect x="86.4701%" y="437" width="0.0310%" height="15" fill="rgb(211,32,1)" fg:x="142392" fg:w="51"/><text x="86.7201%" y="447.50"></text></g><g><title>sz_index2size (55 samples, 0.03%)</title><rect x="86.5010%" y="453" width="0.0334%" height="15" fill="rgb(246,2,12)" fg:x="142443" fg:w="55"/><text x="86.7510%" y="463.50"></text></g><g><title>sz_index2size_lookup (55 samples, 0.03%)</title><rect x="86.5010%" y="437" width="0.0334%" height="15" fill="rgb(243,37,27)" fg:x="142443" fg:w="55"/><text x="86.7510%" y="447.50"></text></g><g><title>sz_index2size_lookup_impl (55 samples, 0.03%)</title><rect x="86.5010%" y="421" width="0.0334%" height="15" fill="rgb(248,211,31)" fg:x="142443" fg:w="55"/><text x="86.7510%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (487 samples, 0.30%)</title><rect x="86.2527%" y="677" width="0.2957%" height="15" fill="rgb(242,146,47)" fg:x="142034" fg:w="487"/><text x="86.5027%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (487 samples, 0.30%)</title><rect x="86.2527%" y="661" width="0.2957%" height="15" fill="rgb(206,70,20)" fg:x="142034" fg:w="487"/><text x="86.5027%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (398 samples, 0.24%)</title><rect x="86.3067%" y="645" width="0.2417%" height="15" fill="rgb(215,10,51)" fg:x="142123" fg:w="398"/><text x="86.5567%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (398 samples, 0.24%)</title><rect x="86.3067%" y="629" width="0.2417%" height="15" fill="rgb(243,178,53)" fg:x="142123" fg:w="398"/><text x="86.5567%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (329 samples, 0.20%)</title><rect x="86.3486%" y="613" width="0.1998%" height="15" fill="rgb(233,221,20)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (329 samples, 0.20%)</title><rect x="86.3486%" y="597" width="0.1998%" height="15" fill="rgb(218,95,35)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (329 samples, 0.20%)</title><rect x="86.3486%" y="581" width="0.1998%" height="15" fill="rgb(229,13,5)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (329 samples, 0.20%)</title><rect x="86.3486%" y="565" width="0.1998%" height="15" fill="rgb(252,164,30)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (329 samples, 0.20%)</title><rect x="86.3486%" y="549" width="0.1998%" height="15" fill="rgb(232,68,36)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (329 samples, 0.20%)</title><rect x="86.3486%" y="533" width="0.1998%" height="15" fill="rgb(219,59,54)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="543.50"></text></g><g><title>__rust_dealloc (329 samples, 0.20%)</title><rect x="86.3486%" y="517" width="0.1998%" height="15" fill="rgb(250,92,33)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (329 samples, 0.20%)</title><rect x="86.3486%" y="501" width="0.1998%" height="15" fill="rgb(229,162,54)" fg:x="142192" fg:w="329"/><text x="86.5986%" y="511.50"></text></g><g><title>_rjem_sdallocx (300 samples, 0.18%)</title><rect x="86.3662%" y="485" width="0.1822%" height="15" fill="rgb(244,114,52)" fg:x="142221" fg:w="300"/><text x="86.6162%" y="495.50"></text></g><g><title>free_fastpath (300 samples, 0.18%)</title><rect x="86.3662%" y="469" width="0.1822%" height="15" fill="rgb(212,211,43)" fg:x="142221" fg:w="300"/><text x="86.6162%" y="479.50"></text></g><g><title>sz_size2index_lookup (23 samples, 0.01%)</title><rect x="86.5344%" y="453" width="0.0140%" height="15" fill="rgb(226,147,8)" fg:x="142498" fg:w="23"/><text x="86.7844%" y="463.50"></text></g><g><title>sz_size2index_lookup_impl (23 samples, 0.01%)</title><rect x="86.5344%" y="437" width="0.0140%" height="15" fill="rgb(226,23,13)" fg:x="142498" fg:w="23"/><text x="86.7844%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (19 samples, 0.01%)</title><rect x="86.5563%" y="661" width="0.0115%" height="15" fill="rgb(240,63,4)" fg:x="142534" fg:w="19"/><text x="86.8063%" y="671.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (19 samples, 0.01%)</title><rect x="86.5563%" y="645" width="0.0115%" height="15" fill="rgb(221,1,32)" fg:x="142534" fg:w="19"/><text x="86.8063%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (19 samples, 0.01%)</title><rect x="86.5563%" y="629" width="0.0115%" height="15" fill="rgb(242,117,10)" fg:x="142534" fg:w="19"/><text x="86.8063%" y="639.50"></text></g><g><title>core::slice::index::get_offset_len_mut_noubcheck (19 samples, 0.01%)</title><rect x="86.5563%" y="613" width="0.0115%" height="15" fill="rgb(249,172,44)" fg:x="142534" fg:w="19"/><text x="86.8063%" y="623.50"></text></g><g><title>core::slice::index::get_mut_noubcheck (19 samples, 0.01%)</title><rect x="86.5563%" y="597" width="0.0115%" height="15" fill="rgb(244,46,45)" fg:x="142534" fg:w="19"/><text x="86.8063%" y="607.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (38 samples, 0.02%)</title><rect x="86.5678%" y="661" width="0.0231%" height="15" fill="rgb(206,43,17)" fg:x="142553" fg:w="38"/><text x="86.8178%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (128 samples, 0.08%)</title><rect x="86.5909%" y="661" width="0.0777%" height="15" fill="rgb(239,218,39)" fg:x="142591" fg:w="128"/><text x="86.8409%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (128 samples, 0.08%)</title><rect x="86.5909%" y="645" width="0.0777%" height="15" fill="rgb(208,169,54)" fg:x="142591" fg:w="128"/><text x="86.8409%" y="655.50"></text></g><g><title>[libc.so.6] (127 samples, 0.08%)</title><rect x="86.5915%" y="629" width="0.0771%" height="15" fill="rgb(247,25,42)" fg:x="142592" fg:w="127"/><text x="86.8415%" y="639.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (142 samples, 0.09%)</title><rect x="86.6687%" y="661" width="0.0862%" height="15" fill="rgb(226,23,31)" fg:x="142719" fg:w="142"/><text x="86.9187%" y="671.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (20 samples, 0.01%)</title><rect x="86.7427%" y="645" width="0.0121%" height="15" fill="rgb(247,16,28)" fg:x="142841" fg:w="20"/><text x="86.9927%" y="655.50"></text></g><g><title>fastwebsockets::frame::Frame::write (367 samples, 0.22%)</title><rect x="86.5484%" y="677" width="0.2229%" height="15" fill="rgb(231,147,38)" fg:x="142521" fg:w="367"/><text x="86.7984%" y="687.50"></text></g><g><title>fastwebsockets::frame::Frame::write::reserve_enough (27 samples, 0.02%)</title><rect x="86.7549%" y="661" width="0.0164%" height="15" fill="rgb(253,81,48)" fg:x="142861" fg:w="27"/><text x="87.0049%" y="671.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (60 samples, 0.04%)</title><rect x="86.9674%" y="661" width="0.0364%" height="15" fill="rgb(249,222,43)" fg:x="143211" fg:w="60"/><text x="87.2174%" y="671.50"></text></g><g><title>__send (23 samples, 0.01%)</title><rect x="87.0136%" y="501" width="0.0140%" height="15" fill="rgb(221,3,27)" fg:x="143287" fg:w="23"/><text x="87.2636%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (31 samples, 0.02%)</title><rect x="87.0136%" y="597" width="0.0188%" height="15" fill="rgb(228,180,5)" fg:x="143287" fg:w="31"/><text x="87.2636%" y="607.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (31 samples, 0.02%)</title><rect x="87.0136%" y="581" width="0.0188%" height="15" fill="rgb(227,131,42)" fg:x="143287" fg:w="31"/><text x="87.2636%" y="591.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (31 samples, 0.02%)</title><rect x="87.0136%" y="565" width="0.0188%" height="15" fill="rgb(212,3,39)" fg:x="143287" fg:w="31"/><text x="87.2636%" y="575.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (31 samples, 0.02%)</title><rect x="87.0136%" y="549" width="0.0188%" height="15" fill="rgb(226,45,5)" fg:x="143287" fg:w="31"/><text x="87.2636%" y="559.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (31 samples, 0.02%)</title><rect x="87.0136%" y="533" width="0.0188%" height="15" fill="rgb(215,167,45)" fg:x="143287" fg:w="31"/><text x="87.2636%" y="543.50"></text></g><g><title>std::sys_common::net::TcpStream::write (31 samples, 0.02%)</title><rect x="87.0136%" y="517" width="0.0188%" height="15" fill="rgb(250,218,53)" fg:x="143287" fg:w="31"/><text x="87.2636%" y="527.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (79 samples, 0.05%)</title><rect x="87.0039%" y="661" width="0.0480%" height="15" fill="rgb(207,140,0)" fg:x="143271" fg:w="79"/><text x="87.2539%" y="671.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (76 samples, 0.05%)</title><rect x="87.0057%" y="645" width="0.0462%" height="15" fill="rgb(238,133,51)" fg:x="143274" fg:w="76"/><text x="87.2557%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (66 samples, 0.04%)</title><rect x="87.0118%" y="629" width="0.0401%" height="15" fill="rgb(218,203,53)" fg:x="143284" fg:w="66"/><text x="87.2618%" y="639.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (64 samples, 0.04%)</title><rect x="87.0130%" y="613" width="0.0389%" height="15" fill="rgb(226,184,25)" fg:x="143286" fg:w="64"/><text x="87.2630%" y="623.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (19 samples, 0.01%)</title><rect x="87.0403%" y="597" width="0.0115%" height="15" fill="rgb(231,121,21)" fg:x="143331" fg:w="19"/><text x="87.2903%" y="607.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (123 samples, 0.07%)</title><rect x="87.0707%" y="629" width="0.0747%" height="15" fill="rgb(251,14,34)" fg:x="143381" fg:w="123"/><text x="87.3207%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (27 samples, 0.02%)</title><rect x="87.2941%" y="565" width="0.0164%" height="15" fill="rgb(249,193,11)" fg:x="143749" fg:w="27"/><text x="87.5441%" y="575.50"></text></g><g><title>std::sys::pal::unix::cvt (83 samples, 0.05%)</title><rect x="87.3275%" y="437" width="0.0504%" height="15" fill="rgb(220,172,37)" fg:x="143804" fg:w="83"/><text x="87.5775%" y="447.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (38 samples, 0.02%)</title><rect x="87.3549%" y="421" width="0.0231%" height="15" fill="rgb(231,229,43)" fg:x="143849" fg:w="38"/><text x="87.6049%" y="431.50"></text></g><g><title>[libc.so.6] (2,397 samples, 1.46%)</title><rect x="88.0186%" y="421" width="1.4556%" height="15" fill="rgb(250,161,5)" fg:x="144942" fg:w="2397"/><text x="88.2686%" y="431.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (4,035 samples, 2.45%)</title><rect x="87.3105%" y="565" width="2.4503%" height="15" fill="rgb(218,225,18)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="575.50">to..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (4,035 samples, 2.45%)</title><rect x="87.3105%" y="549" width="2.4503%" height="15" fill="rgb(245,45,42)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="559.50">&lt;&amp;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4,035 samples, 2.45%)</title><rect x="87.3105%" y="533" width="2.4503%" height="15" fill="rgb(211,115,1)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="543.50">mi..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (4,035 samples, 2.45%)</title><rect x="87.3105%" y="517" width="2.4503%" height="15" fill="rgb(248,133,52)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="527.50">mi..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (4,035 samples, 2.45%)</title><rect x="87.3105%" y="501" width="2.4503%" height="15" fill="rgb(238,100,21)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="511.50">&lt;&amp;..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (4,035 samples, 2.45%)</title><rect x="87.3105%" y="485" width="2.4503%" height="15" fill="rgb(247,144,11)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="495.50">&lt;&amp;..</text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (4,035 samples, 2.45%)</title><rect x="87.3105%" y="469" width="2.4503%" height="15" fill="rgb(206,164,16)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="479.50">st..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (4,035 samples, 2.45%)</title><rect x="87.3105%" y="453" width="2.4503%" height="15" fill="rgb(222,34,3)" fg:x="143776" fg:w="4035"/><text x="87.5605%" y="463.50">st..</text></g><g><title>writev (3,924 samples, 2.38%)</title><rect x="87.3779%" y="437" width="2.3829%" height="15" fill="rgb(248,82,4)" fg:x="143887" fg:w="3924"/><text x="87.6279%" y="447.50">wr..</text></g><g><title>[unknown] (472 samples, 0.29%)</title><rect x="89.4742%" y="421" width="0.2866%" height="15" fill="rgb(228,81,46)" fg:x="147339" fg:w="472"/><text x="89.7242%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (38 samples, 0.02%)</title><rect x="89.8003%" y="501" width="0.0231%" height="15" fill="rgb(227,67,47)" fg:x="147876" fg:w="38"/><text x="90.0503%" y="511.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (38 samples, 0.02%)</title><rect x="89.8003%" y="485" width="0.0231%" height="15" fill="rgb(215,93,53)" fg:x="147876" fg:w="38"/><text x="90.0503%" y="495.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (38 samples, 0.02%)</title><rect x="89.8003%" y="469" width="0.0231%" height="15" fill="rgb(248,194,39)" fg:x="147876" fg:w="38"/><text x="90.0503%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (20 samples, 0.01%)</title><rect x="89.8113%" y="453" width="0.0121%" height="15" fill="rgb(215,5,19)" fg:x="147894" fg:w="20"/><text x="90.0613%" y="463.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (25 samples, 0.02%)</title><rect x="89.8477%" y="469" width="0.0152%" height="15" fill="rgb(226,215,51)" fg:x="147954" fg:w="25"/><text x="90.0977%" y="479.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (20 samples, 0.01%)</title><rect x="89.8507%" y="453" width="0.0121%" height="15" fill="rgb(225,56,26)" fg:x="147959" fg:w="20"/><text x="90.1007%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (20 samples, 0.01%)</title><rect x="89.8507%" y="437" width="0.0121%" height="15" fill="rgb(222,75,29)" fg:x="147959" fg:w="20"/><text x="90.1007%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (20 samples, 0.01%)</title><rect x="89.8507%" y="421" width="0.0121%" height="15" fill="rgb(236,139,6)" fg:x="147959" fg:w="20"/><text x="90.1007%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (20 samples, 0.01%)</title><rect x="89.8507%" y="405" width="0.0121%" height="15" fill="rgb(223,137,36)" fg:x="147959" fg:w="20"/><text x="90.1007%" y="415.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (113 samples, 0.07%)</title><rect x="89.8003%" y="549" width="0.0686%" height="15" fill="rgb(226,99,2)" fg:x="147876" fg:w="113"/><text x="90.0503%" y="559.50"></text></g><g><title>tokio::runtime::context::budget (113 samples, 0.07%)</title><rect x="89.8003%" y="533" width="0.0686%" height="15" fill="rgb(206,133,23)" fg:x="147876" fg:w="113"/><text x="90.0503%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (113 samples, 0.07%)</title><rect x="89.8003%" y="517" width="0.0686%" height="15" fill="rgb(243,173,15)" fg:x="147876" fg:w="113"/><text x="90.0503%" y="527.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (75 samples, 0.05%)</title><rect x="89.8234%" y="501" width="0.0455%" height="15" fill="rgb(228,69,28)" fg:x="147914" fg:w="75"/><text x="90.0734%" y="511.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (75 samples, 0.05%)</title><rect x="89.8234%" y="485" width="0.0455%" height="15" fill="rgb(212,51,22)" fg:x="147914" fg:w="75"/><text x="90.0734%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (302 samples, 0.18%)</title><rect x="89.8957%" y="533" width="0.1834%" height="15" fill="rgb(227,113,0)" fg:x="148033" fg:w="302"/><text x="90.1457%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (302 samples, 0.18%)</title><rect x="89.8957%" y="517" width="0.1834%" height="15" fill="rgb(252,84,27)" fg:x="148033" fg:w="302"/><text x="90.1457%" y="527.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (5,001 samples, 3.04%)</title><rect x="87.0518%" y="661" width="3.0369%" height="15" fill="rgb(223,145,39)" fg:x="143350" fg:w="5001"/><text x="87.3018%" y="671.50">&lt;to..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (5,001 samples, 3.04%)</title><rect x="87.0518%" y="645" width="3.0369%" height="15" fill="rgb(239,219,30)" fg:x="143350" fg:w="5001"/><text x="87.3018%" y="655.50">&lt;&amp;m..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (4,847 samples, 2.94%)</title><rect x="87.1454%" y="629" width="2.9434%" height="15" fill="rgb(224,196,39)" fg:x="143504" fg:w="4847"/><text x="87.3954%" y="639.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (4,640 samples, 2.82%)</title><rect x="87.2711%" y="613" width="2.8177%" height="15" fill="rgb(205,35,43)" fg:x="143711" fg:w="4640"/><text x="87.5211%" y="623.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (4,640 samples, 2.82%)</title><rect x="87.2711%" y="597" width="2.8177%" height="15" fill="rgb(228,201,21)" fg:x="143711" fg:w="4640"/><text x="87.5211%" y="607.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (4,640 samples, 2.82%)</title><rect x="87.2711%" y="581" width="2.8177%" height="15" fill="rgb(237,118,16)" fg:x="143711" fg:w="4640"/><text x="87.5211%" y="591.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (540 samples, 0.33%)</title><rect x="89.7609%" y="565" width="0.3279%" height="15" fill="rgb(241,17,19)" fg:x="147811" fg:w="540"/><text x="90.0109%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (362 samples, 0.22%)</title><rect x="89.8690%" y="549" width="0.2198%" height="15" fill="rgb(214,10,25)" fg:x="147989" fg:w="362"/><text x="90.1190%" y="559.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (23 samples, 0.01%)</title><rect x="90.1501%" y="645" width="0.0140%" height="15" fill="rgb(238,37,29)" fg:x="148452" fg:w="23"/><text x="90.4001%" y="655.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (14,972 samples, 9.09%)</title><rect x="81.0842%" y="709" width="9.0920%" height="15" fill="rgb(253,83,25)" fg:x="133523" fg:w="14972"/><text x="81.3342%" y="719.50">fastwebsocket..</text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (13,684 samples, 8.31%)</title><rect x="81.8664%" y="693" width="8.3099%" height="15" fill="rgb(234,192,12)" fg:x="134811" fg:w="13684"/><text x="82.1164%" y="703.50">fastwebsocke..</text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (5,607 samples, 3.40%)</title><rect x="86.7713%" y="677" width="3.4050%" height="15" fill="rgb(241,216,45)" fg:x="142888" fg:w="5607"/><text x="87.0213%" y="687.50">fas..</text></g><g><title>fastwebsockets::frame::Frame::fmt_head (144 samples, 0.09%)</title><rect x="90.0888%" y="661" width="0.0874%" height="15" fill="rgb(242,22,33)" fg:x="148351" fg:w="144"/><text x="90.3388%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (20 samples, 0.01%)</title><rect x="90.1641%" y="645" width="0.0121%" height="15" fill="rgb(231,105,49)" fg:x="148475" fg:w="20"/><text x="90.4141%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.01%)</title><rect x="90.1641%" y="629" width="0.0121%" height="15" fill="rgb(218,204,15)" fg:x="148475" fg:w="20"/><text x="90.4141%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16,763 samples, 10.18%)</title><rect x="80.0652%" y="741" width="10.1796%" height="15" fill="rgb(235,138,41)" fg:x="131845" fg:w="16763"/><text x="80.3152%" y="751.50">&lt;core::pin::Pin..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (16,763 samples, 10.18%)</title><rect x="80.0652%" y="725" width="10.1796%" height="15" fill="rgb(246,0,9)" fg:x="131845" fg:w="16763"/><text x="80.3152%" y="735.50">wisp_mux::fastw..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;wisp_mux::ws::Frame&gt; for fastwebsockets::frame::Frame&gt;::from (113 samples, 0.07%)</title><rect x="90.1762%" y="709" width="0.0686%" height="15" fill="rgb(210,74,4)" fg:x="148495" fg:w="113"/><text x="90.4262%" y="719.50"></text></g><g><title>wisp_mux::fastwebsockets::match_payload_reverse (91 samples, 0.06%)</title><rect x="90.1896%" y="693" width="0.0553%" height="15" fill="rgb(250,60,41)" fg:x="148517" fg:w="91"/><text x="90.4396%" y="703.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (30 samples, 0.02%)</title><rect x="90.3378%" y="549" width="0.0182%" height="15" fill="rgb(220,115,12)" fg:x="148761" fg:w="30"/><text x="90.5878%" y="559.50"></text></g><g><title>isfree (62 samples, 0.04%)</title><rect x="90.3238%" y="613" width="0.0377%" height="15" fill="rgb(237,100,13)" fg:x="148738" fg:w="62"/><text x="90.5738%" y="623.50"></text></g><g><title>thread_dalloc_event (57 samples, 0.03%)</title><rect x="90.3268%" y="597" width="0.0346%" height="15" fill="rgb(213,55,26)" fg:x="148743" fg:w="57"/><text x="90.5768%" y="607.50"></text></g><g><title>te_event_advance (57 samples, 0.03%)</title><rect x="90.3268%" y="581" width="0.0346%" height="15" fill="rgb(216,17,4)" fg:x="148743" fg:w="57"/><text x="90.5768%" y="591.50"></text></g><g><title>_rjem_je_te_event_trigger (50 samples, 0.03%)</title><rect x="90.3311%" y="565" width="0.0304%" height="15" fill="rgb(220,153,47)" fg:x="148750" fg:w="50"/><text x="90.5811%" y="575.50"></text></g><g><title>_rjem_je_sdallocx_default (69 samples, 0.04%)</title><rect x="90.3202%" y="629" width="0.0419%" height="15" fill="rgb(215,131,9)" fg:x="148732" fg:w="69"/><text x="90.5702%" y="639.50"></text></g><g><title>cache_bin_dalloc_easy (274 samples, 0.17%)</title><rect x="90.5193%" y="597" width="0.1664%" height="15" fill="rgb(233,46,42)" fg:x="149060" fg:w="274"/><text x="90.7693%" y="607.50"></text></g><g><title>cache_bin_full (101 samples, 0.06%)</title><rect x="90.6244%" y="581" width="0.0613%" height="15" fill="rgb(226,86,7)" fg:x="149233" fg:w="101"/><text x="90.8744%" y="591.50"></text></g><g><title>sz_index2size (96 samples, 0.06%)</title><rect x="90.6857%" y="597" width="0.0583%" height="15" fill="rgb(239,226,21)" fg:x="149334" fg:w="96"/><text x="90.9357%" y="607.50"></text></g><g><title>sz_index2size_lookup (96 samples, 0.06%)</title><rect x="90.6857%" y="581" width="0.0583%" height="15" fill="rgb(244,137,22)" fg:x="149334" fg:w="96"/><text x="90.9357%" y="591.50"></text></g><g><title>sz_index2size_lookup_impl (96 samples, 0.06%)</title><rect x="90.6857%" y="565" width="0.0583%" height="15" fill="rgb(211,139,35)" fg:x="149334" fg:w="96"/><text x="90.9357%" y="575.50"></text></g><g><title>sz_size2index_lookup (22 samples, 0.01%)</title><rect x="90.7440%" y="597" width="0.0134%" height="15" fill="rgb(214,62,50)" fg:x="149430" fg:w="22"/><text x="90.9940%" y="607.50"></text></g><g><title>sz_size2index_lookup_impl (22 samples, 0.01%)</title><rect x="90.7440%" y="581" width="0.0134%" height="15" fill="rgb(212,113,44)" fg:x="149430" fg:w="22"/><text x="90.9940%" y="591.50"></text></g><g><title>_rjem_sdallocx (652 samples, 0.40%)</title><rect x="90.3621%" y="629" width="0.3959%" height="15" fill="rgb(226,150,43)" fg:x="148801" fg:w="652"/><text x="90.6121%" y="639.50"></text></g><g><title>free_fastpath (651 samples, 0.40%)</title><rect x="90.3627%" y="613" width="0.3953%" height="15" fill="rgb(250,71,37)" fg:x="148802" fg:w="651"/><text x="90.6127%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (792 samples, 0.48%)</title><rect x="90.3183%" y="709" width="0.4810%" height="15" fill="rgb(219,76,19)" fg:x="148729" fg:w="792"/><text x="90.5683%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (789 samples, 0.48%)</title><rect x="90.3202%" y="693" width="0.4791%" height="15" fill="rgb(250,39,11)" fg:x="148732" fg:w="789"/><text x="90.5702%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (789 samples, 0.48%)</title><rect x="90.3202%" y="677" width="0.4791%" height="15" fill="rgb(230,64,31)" fg:x="148732" fg:w="789"/><text x="90.5702%" y="687.50"></text></g><g><title>__rust_dealloc (789 samples, 0.48%)</title><rect x="90.3202%" y="661" width="0.4791%" height="15" fill="rgb(208,222,23)" fg:x="148732" fg:w="789"/><text x="90.5702%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (789 samples, 0.48%)</title><rect x="90.3202%" y="645" width="0.4791%" height="15" fill="rgb(227,125,18)" fg:x="148732" fg:w="789"/><text x="90.5702%" y="655.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (68 samples, 0.04%)</title><rect x="90.7580%" y="629" width="0.0413%" height="15" fill="rgb(234,210,9)" fg:x="149453" fg:w="68"/><text x="91.0080%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (984 samples, 0.60%)</title><rect x="90.2449%" y="741" width="0.5976%" height="15" fill="rgb(217,127,24)" fg:x="148608" fg:w="984"/><text x="90.4949%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (984 samples, 0.60%)</title><rect x="90.2449%" y="725" width="0.5976%" height="15" fill="rgb(239,141,48)" fg:x="148608" fg:w="984"/><text x="90.4949%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (71 samples, 0.04%)</title><rect x="90.7993%" y="709" width="0.0431%" height="15" fill="rgb(227,109,8)" fg:x="149521" fg:w="71"/><text x="91.0493%" y="719.50"></text></g><g><title>_rjem_je_eset_fit (20 samples, 0.01%)</title><rect x="91.0088%" y="325" width="0.0121%" height="15" fill="rgb(235,184,23)" fg:x="149866" fg:w="20"/><text x="91.2588%" y="335.50"></text></g><g><title>eset_first_fit (20 samples, 0.01%)</title><rect x="91.0088%" y="309" width="0.0121%" height="15" fill="rgb(227,226,48)" fg:x="149866" fg:w="20"/><text x="91.2588%" y="319.50"></text></g><g><title>extent_recycle_extract (50 samples, 0.03%)</title><rect x="91.0082%" y="341" width="0.0304%" height="15" fill="rgb(206,150,11)" fg:x="149865" fg:w="50"/><text x="91.2582%" y="351.50"></text></g><g><title>extent_activate_locked (29 samples, 0.02%)</title><rect x="91.0209%" y="325" width="0.0176%" height="15" fill="rgb(254,2,33)" fg:x="149886" fg:w="29"/><text x="91.2709%" y="335.50"></text></g><g><title>_rjem_je_eset_remove (23 samples, 0.01%)</title><rect x="91.0246%" y="309" width="0.0140%" height="15" fill="rgb(243,160,20)" fg:x="149892" fg:w="23"/><text x="91.2746%" y="319.50"></text></g><g><title>arena_slab_alloc (84 samples, 0.05%)</title><rect x="90.9942%" y="453" width="0.0510%" height="15" fill="rgb(218,208,30)" fg:x="149842" fg:w="84"/><text x="91.2442%" y="463.50"></text></g><g><title>_rjem_je_pa_alloc (72 samples, 0.04%)</title><rect x="91.0015%" y="437" width="0.0437%" height="15" fill="rgb(224,120,49)" fg:x="149854" fg:w="72"/><text x="91.2515%" y="447.50"></text></g><g><title>pai_alloc (69 samples, 0.04%)</title><rect x="91.0033%" y="421" width="0.0419%" height="15" fill="rgb(246,12,2)" fg:x="149857" fg:w="69"/><text x="91.2533%" y="431.50"></text></g><g><title>pac_alloc_impl (69 samples, 0.04%)</title><rect x="91.0033%" y="405" width="0.0419%" height="15" fill="rgb(236,117,3)" fg:x="149857" fg:w="69"/><text x="91.2533%" y="415.50"></text></g><g><title>pac_alloc_real (65 samples, 0.04%)</title><rect x="91.0058%" y="389" width="0.0395%" height="15" fill="rgb(216,128,52)" fg:x="149861" fg:w="65"/><text x="91.2558%" y="399.50"></text></g><g><title>_rjem_je_ecache_alloc (65 samples, 0.04%)</title><rect x="91.0058%" y="373" width="0.0395%" height="15" fill="rgb(246,145,19)" fg:x="149861" fg:w="65"/><text x="91.2558%" y="383.50"></text></g><g><title>extent_recycle (64 samples, 0.04%)</title><rect x="91.0064%" y="357" width="0.0389%" height="15" fill="rgb(222,11,46)" fg:x="149862" fg:w="64"/><text x="91.2564%" y="367.50"></text></g><g><title>malloc_mutex_lock (20 samples, 0.01%)</title><rect x="91.0501%" y="453" width="0.0121%" height="15" fill="rgb(245,82,36)" fg:x="149934" fg:w="20"/><text x="91.3001%" y="463.50"></text></g><g><title>malloc_mutex_trylock_final (20 samples, 0.01%)</title><rect x="91.0501%" y="437" width="0.0121%" height="15" fill="rgb(250,73,51)" fg:x="149934" fg:w="20"/><text x="91.3001%" y="447.50"></text></g><g><title>pthread_mutex_trylock (19 samples, 0.01%)</title><rect x="91.0507%" y="421" width="0.0115%" height="15" fill="rgb(221,189,23)" fg:x="149935" fg:w="19"/><text x="91.3007%" y="431.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (130 samples, 0.08%)</title><rect x="90.9869%" y="469" width="0.0789%" height="15" fill="rgb(210,33,7)" fg:x="149830" fg:w="130"/><text x="91.2369%" y="479.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (132 samples, 0.08%)</title><rect x="90.9863%" y="485" width="0.0802%" height="15" fill="rgb(210,107,22)" fg:x="149829" fg:w="132"/><text x="91.2363%" y="495.50"></text></g><g><title>imalloc_no_sample (138 samples, 0.08%)</title><rect x="90.9863%" y="549" width="0.0838%" height="15" fill="rgb(222,116,37)" fg:x="149829" fg:w="138"/><text x="91.2363%" y="559.50"></text></g><g><title>iallocztm (138 samples, 0.08%)</title><rect x="90.9863%" y="533" width="0.0838%" height="15" fill="rgb(254,17,48)" fg:x="149829" fg:w="138"/><text x="91.2363%" y="543.50"></text></g><g><title>arena_malloc (138 samples, 0.08%)</title><rect x="90.9863%" y="517" width="0.0838%" height="15" fill="rgb(224,36,32)" fg:x="149829" fg:w="138"/><text x="91.2363%" y="527.50"></text></g><g><title>tcache_alloc_small (138 samples, 0.08%)</title><rect x="90.9863%" y="501" width="0.0838%" height="15" fill="rgb(232,90,46)" fg:x="149829" fg:w="138"/><text x="91.2363%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (20 samples, 0.01%)</title><rect x="91.0944%" y="469" width="0.0121%" height="15" fill="rgb(241,66,40)" fg:x="150007" fg:w="20"/><text x="91.3444%" y="479.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (25 samples, 0.02%)</title><rect x="91.1072%" y="453" width="0.0152%" height="15" fill="rgb(249,184,29)" fg:x="150028" fg:w="25"/><text x="91.3572%" y="463.50"></text></g><g><title>tcache_bin_flush_bottom (25 samples, 0.02%)</title><rect x="91.1072%" y="437" width="0.0152%" height="15" fill="rgb(231,181,1)" fg:x="150028" fg:w="25"/><text x="91.3572%" y="447.50"></text></g><g><title>tcache_bin_flush_impl (22 samples, 0.01%)</title><rect x="91.1090%" y="421" width="0.0134%" height="15" fill="rgb(224,94,2)" fg:x="150031" fg:w="22"/><text x="91.3590%" y="431.50"></text></g><g><title>tcache_gc_small (27 samples, 0.02%)</title><rect x="91.1072%" y="469" width="0.0164%" height="15" fill="rgb(229,170,15)" fg:x="150028" fg:w="27"/><text x="91.3572%" y="479.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (57 samples, 0.03%)</title><rect x="91.0902%" y="501" width="0.0346%" height="15" fill="rgb(240,127,35)" fg:x="150000" fg:w="57"/><text x="91.3402%" y="511.50"></text></g><g><title>tcache_event (57 samples, 0.03%)</title><rect x="91.0902%" y="485" width="0.0346%" height="15" fill="rgb(248,196,34)" fg:x="150000" fg:w="57"/><text x="91.3402%" y="495.50"></text></g><g><title>_rjem_je_te_event_trigger (96 samples, 0.06%)</title><rect x="91.0744%" y="517" width="0.0583%" height="15" fill="rgb(236,137,7)" fg:x="149974" fg:w="96"/><text x="91.3244%" y="527.50"></text></g><g><title>_rjem_je_malloc_default (245 samples, 0.15%)</title><rect x="90.9845%" y="597" width="0.1488%" height="15" fill="rgb(235,127,16)" fg:x="149826" fg:w="245"/><text x="91.2345%" y="607.50"></text></g><g><title>imalloc (243 samples, 0.15%)</title><rect x="90.9857%" y="581" width="0.1476%" height="15" fill="rgb(250,192,54)" fg:x="149828" fg:w="243"/><text x="91.2357%" y="591.50"></text></g><g><title>imalloc_body (243 samples, 0.15%)</title><rect x="90.9857%" y="565" width="0.1476%" height="15" fill="rgb(218,98,20)" fg:x="149828" fg:w="243"/><text x="91.2357%" y="575.50"></text></g><g><title>thread_alloc_event (104 samples, 0.06%)</title><rect x="91.0701%" y="549" width="0.0632%" height="15" fill="rgb(230,176,47)" fg:x="149967" fg:w="104"/><text x="91.3201%" y="559.50"></text></g><g><title>te_event_advance (104 samples, 0.06%)</title><rect x="91.0701%" y="533" width="0.0632%" height="15" fill="rgb(244,2,33)" fg:x="149967" fg:w="104"/><text x="91.3201%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (86 samples, 0.05%)</title><rect x="91.1533%" y="565" width="0.0522%" height="15" fill="rgb(231,100,17)" fg:x="150104" fg:w="86"/><text x="91.4033%" y="575.50"></text></g><g><title>cache_bin_alloc_impl (86 samples, 0.05%)</title><rect x="91.1533%" y="549" width="0.0522%" height="15" fill="rgb(245,23,12)" fg:x="150104" fg:w="86"/><text x="91.4033%" y="559.50"></text></g><g><title>__rust_alloc (421 samples, 0.26%)</title><rect x="90.9717%" y="629" width="0.2557%" height="15" fill="rgb(249,55,22)" fg:x="149805" fg:w="421"/><text x="91.2217%" y="639.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (421 samples, 0.26%)</title><rect x="90.9717%" y="613" width="0.2557%" height="15" fill="rgb(207,134,9)" fg:x="149805" fg:w="421"/><text x="91.2217%" y="623.50"></text></g><g><title>_rjem_malloc (155 samples, 0.09%)</title><rect x="91.1333%" y="597" width="0.0941%" height="15" fill="rgb(218,134,0)" fg:x="150071" fg:w="155"/><text x="91.3833%" y="607.50"></text></g><g><title>imalloc_fastpath (155 samples, 0.09%)</title><rect x="91.1333%" y="581" width="0.0941%" height="15" fill="rgb(213,212,33)" fg:x="150071" fg:w="155"/><text x="91.3833%" y="591.50"></text></g><g><title>te_malloc_fastpath_ctx (19 samples, 0.01%)</title><rect x="91.2159%" y="565" width="0.0115%" height="15" fill="rgb(252,106,18)" fg:x="150207" fg:w="19"/><text x="91.4659%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19,226 samples, 11.68%)</title><rect x="79.5527%" y="773" width="11.6753%" height="15" fill="rgb(208,126,42)" fg:x="131001" fg:w="19226"/><text x="79.8027%" y="783.50">&lt;core::pin::Pin&lt;P..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (19,226 samples, 11.68%)</title><rect x="79.5527%" y="757" width="11.6753%" height="15" fill="rgb(246,175,29)" fg:x="131001" fg:w="19226"/><text x="79.8027%" y="767.50">&lt;alloc::boxed::Bo..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (635 samples, 0.39%)</title><rect x="90.8424%" y="741" width="0.3856%" height="15" fill="rgb(215,13,50)" fg:x="149592" fg:w="635"/><text x="91.0924%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (558 samples, 0.34%)</title><rect x="90.8892%" y="725" width="0.3389%" height="15" fill="rgb(216,172,15)" fg:x="149669" fg:w="558"/><text x="91.1392%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (558 samples, 0.34%)</title><rect x="90.8892%" y="709" width="0.3389%" height="15" fill="rgb(212,103,13)" fg:x="149669" fg:w="558"/><text x="91.1392%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (426 samples, 0.26%)</title><rect x="90.9693%" y="693" width="0.2587%" height="15" fill="rgb(231,171,36)" fg:x="149801" fg:w="426"/><text x="91.2193%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (422 samples, 0.26%)</title><rect x="90.9717%" y="677" width="0.2563%" height="15" fill="rgb(250,123,20)" fg:x="149805" fg:w="422"/><text x="91.2217%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (422 samples, 0.26%)</title><rect x="90.9717%" y="661" width="0.2563%" height="15" fill="rgb(212,53,50)" fg:x="149805" fg:w="422"/><text x="91.2217%" y="671.50"></text></g><g><title>alloc::alloc::alloc (422 samples, 0.26%)</title><rect x="90.9717%" y="645" width="0.2563%" height="15" fill="rgb(243,54,12)" fg:x="149805" fg:w="422"/><text x="91.2217%" y="655.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (26 samples, 0.02%)</title><rect x="91.3234%" y="581" width="0.0158%" height="15" fill="rgb(234,101,34)" fg:x="150384" fg:w="26"/><text x="91.5734%" y="591.50"></text></g><g><title>isfree (49 samples, 0.03%)</title><rect x="91.3106%" y="645" width="0.0298%" height="15" fill="rgb(254,67,22)" fg:x="150363" fg:w="49"/><text x="91.5606%" y="655.50"></text></g><g><title>thread_dalloc_event (46 samples, 0.03%)</title><rect x="91.3124%" y="629" width="0.0279%" height="15" fill="rgb(250,35,47)" fg:x="150366" fg:w="46"/><text x="91.5624%" y="639.50"></text></g><g><title>te_event_advance (46 samples, 0.03%)</title><rect x="91.3124%" y="613" width="0.0279%" height="15" fill="rgb(226,126,38)" fg:x="150366" fg:w="46"/><text x="91.5624%" y="623.50"></text></g><g><title>_rjem_je_te_event_trigger (44 samples, 0.03%)</title><rect x="91.3136%" y="597" width="0.0267%" height="15" fill="rgb(216,138,53)" fg:x="150368" fg:w="44"/><text x="91.5636%" y="607.50"></text></g><g><title>_rjem_je_sdallocx_default (53 samples, 0.03%)</title><rect x="91.3094%" y="661" width="0.0322%" height="15" fill="rgb(246,199,43)" fg:x="150361" fg:w="53"/><text x="91.5594%" y="671.50"></text></g><g><title>cache_bin_dalloc_easy (166 samples, 0.10%)</title><rect x="91.4187%" y="629" width="0.1008%" height="15" fill="rgb(232,125,11)" fg:x="150541" fg:w="166"/><text x="91.6687%" y="639.50"></text></g><g><title>cache_bin_full (86 samples, 0.05%)</title><rect x="91.4673%" y="613" width="0.0522%" height="15" fill="rgb(218,219,45)" fg:x="150621" fg:w="86"/><text x="91.7173%" y="623.50"></text></g><g><title>sz_index2size (31 samples, 0.02%)</title><rect x="91.5195%" y="629" width="0.0188%" height="15" fill="rgb(216,102,54)" fg:x="150707" fg:w="31"/><text x="91.7695%" y="639.50"></text></g><g><title>sz_index2size_lookup (31 samples, 0.02%)</title><rect x="91.5195%" y="613" width="0.0188%" height="15" fill="rgb(250,228,7)" fg:x="150707" fg:w="31"/><text x="91.7695%" y="623.50"></text></g><g><title>sz_index2size_lookup_impl (31 samples, 0.02%)</title><rect x="91.5195%" y="597" width="0.0188%" height="15" fill="rgb(226,125,25)" fg:x="150707" fg:w="31"/><text x="91.7695%" y="607.50"></text></g><g><title>_rjem_sdallocx (345 samples, 0.21%)</title><rect x="91.3416%" y="661" width="0.2095%" height="15" fill="rgb(224,165,27)" fg:x="150414" fg:w="345"/><text x="91.5916%" y="671.50"></text></g><g><title>free_fastpath (345 samples, 0.21%)</title><rect x="91.3416%" y="645" width="0.2095%" height="15" fill="rgb(233,86,3)" fg:x="150414" fg:w="345"/><text x="91.5916%" y="655.50"></text></g><g><title>sz_size2index_lookup (21 samples, 0.01%)</title><rect x="91.5383%" y="629" width="0.0128%" height="15" fill="rgb(228,116,20)" fg:x="150738" fg:w="21"/><text x="91.7883%" y="639.50"></text></g><g><title>sz_size2index_lookup_impl (21 samples, 0.01%)</title><rect x="91.5383%" y="613" width="0.0128%" height="15" fill="rgb(209,192,17)" fg:x="150738" fg:w="21"/><text x="91.7883%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (456 samples, 0.28%)</title><rect x="91.3094%" y="741" width="0.2769%" height="15" fill="rgb(224,88,34)" fg:x="150361" fg:w="456"/><text x="91.5594%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (456 samples, 0.28%)</title><rect x="91.3094%" y="725" width="0.2769%" height="15" fill="rgb(233,38,6)" fg:x="150361" fg:w="456"/><text x="91.5594%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (456 samples, 0.28%)</title><rect x="91.3094%" y="709" width="0.2769%" height="15" fill="rgb(212,59,30)" fg:x="150361" fg:w="456"/><text x="91.5594%" y="719.50"></text></g><g><title>__rust_dealloc (456 samples, 0.28%)</title><rect x="91.3094%" y="693" width="0.2769%" height="15" fill="rgb(213,80,3)" fg:x="150361" fg:w="456"/><text x="91.5594%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (456 samples, 0.28%)</title><rect x="91.3094%" y="677" width="0.2769%" height="15" fill="rgb(251,178,7)" fg:x="150361" fg:w="456"/><text x="91.5594%" y="687.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (58 samples, 0.04%)</title><rect x="91.5511%" y="661" width="0.0352%" height="15" fill="rgb(213,154,26)" fg:x="150759" fg:w="58"/><text x="91.8011%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (20,757 samples, 12.61%)</title><rect x="79.0128%" y="805" width="12.6051%" height="15" fill="rgb(238,165,49)" fg:x="130112" fg:w="20757"/><text x="79.2628%" y="815.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (20,733 samples, 12.59%)</title><rect x="79.0274%" y="789" width="12.5905%" height="15" fill="rgb(248,91,46)" fg:x="130136" fg:w="20733"/><text x="79.2774%" y="799.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (642 samples, 0.39%)</title><rect x="91.2280%" y="773" width="0.3899%" height="15" fill="rgb(244,21,52)" fg:x="150227" fg:w="642"/><text x="91.4780%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (642 samples, 0.39%)</title><rect x="91.2280%" y="757" width="0.3899%" height="15" fill="rgb(247,122,20)" fg:x="150227" fg:w="642"/><text x="91.4780%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (52 samples, 0.03%)</title><rect x="91.5863%" y="741" width="0.0316%" height="15" fill="rgb(218,27,9)" fg:x="150817" fg:w="52"/><text x="91.8363%" y="751.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::IndexMut&lt;usize&gt;&gt;::index_mut (45 samples, 0.03%)</title><rect x="91.6804%" y="789" width="0.0273%" height="15" fill="rgb(246,7,6)" fg:x="150972" fg:w="45"/><text x="91.9304%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (28 samples, 0.02%)</title><rect x="91.7078%" y="789" width="0.0170%" height="15" fill="rgb(227,135,54)" fg:x="151017" fg:w="28"/><text x="91.9578%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.02%)</title><rect x="91.7078%" y="773" width="0.0170%" height="15" fill="rgb(247,14,11)" fg:x="151017" fg:w="28"/><text x="91.9578%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (24 samples, 0.01%)</title><rect x="91.7102%" y="757" width="0.0146%" height="15" fill="rgb(206,149,34)" fg:x="151021" fg:w="24"/><text x="91.9602%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (24 samples, 0.01%)</title><rect x="91.7102%" y="741" width="0.0146%" height="15" fill="rgb(227,228,4)" fg:x="151021" fg:w="24"/><text x="91.9602%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.01%)</title><rect x="91.7102%" y="725" width="0.0146%" height="15" fill="rgb(238,218,28)" fg:x="151021" fg:w="24"/><text x="91.9602%" y="735.50"></text></g><g><title>core::ptr::read (28 samples, 0.02%)</title><rect x="91.7515%" y="725" width="0.0170%" height="15" fill="rgb(252,86,40)" fg:x="151089" fg:w="28"/><text x="92.0015%" y="735.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (31 samples, 0.02%)</title><rect x="91.7503%" y="773" width="0.0188%" height="15" fill="rgb(251,225,11)" fg:x="151087" fg:w="31"/><text x="92.0003%" y="783.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (31 samples, 0.02%)</title><rect x="91.7503%" y="757" width="0.0188%" height="15" fill="rgb(206,46,49)" fg:x="151087" fg:w="31"/><text x="92.0003%" y="767.50"></text></g><g><title>core::mem::replace (29 samples, 0.02%)</title><rect x="91.7515%" y="741" width="0.0176%" height="15" fill="rgb(245,128,24)" fg:x="151089" fg:w="29"/><text x="92.0015%" y="751.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (95 samples, 0.06%)</title><rect x="91.7248%" y="789" width="0.0577%" height="15" fill="rgb(219,177,34)" fg:x="151045" fg:w="95"/><text x="91.9748%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.01%)</title><rect x="91.7691%" y="773" width="0.0134%" height="15" fill="rgb(218,60,48)" fg:x="151118" fg:w="22"/><text x="92.0191%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (20 samples, 0.01%)</title><rect x="91.7703%" y="757" width="0.0121%" height="15" fill="rgb(221,11,5)" fg:x="151120" fg:w="20"/><text x="92.0203%" y="767.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (915 samples, 0.56%)</title><rect x="91.7825%" y="789" width="0.5557%" height="15" fill="rgb(220,148,13)" fg:x="151140" fg:w="915"/><text x="92.0325%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (915 samples, 0.56%)</title><rect x="91.7825%" y="773" width="0.5557%" height="15" fill="rgb(210,16,3)" fg:x="151140" fg:w="915"/><text x="92.0325%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (915 samples, 0.56%)</title><rect x="91.7825%" y="757" width="0.5557%" height="15" fill="rgb(236,80,2)" fg:x="151140" fg:w="915"/><text x="92.0325%" y="767.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (55 samples, 0.03%)</title><rect x="92.3478%" y="789" width="0.0334%" height="15" fill="rgb(239,129,19)" fg:x="152071" fg:w="55"/><text x="92.5978%" y="799.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (54 samples, 0.03%)</title><rect x="92.3484%" y="773" width="0.0328%" height="15" fill="rgb(220,106,35)" fg:x="152072" fg:w="54"/><text x="92.5984%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (35 samples, 0.02%)</title><rect x="92.3873%" y="757" width="0.0213%" height="15" fill="rgb(252,139,45)" fg:x="152136" fg:w="35"/><text x="92.6373%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.02%)</title><rect x="92.3873%" y="741" width="0.0213%" height="15" fill="rgb(229,8,36)" fg:x="152136" fg:w="35"/><text x="92.6373%" y="751.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,307 samples, 0.79%)</title><rect x="91.6179%" y="805" width="0.7937%" height="15" fill="rgb(230,126,33)" fg:x="150869" fg:w="1307"/><text x="91.8679%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.03%)</title><rect x="92.3812%" y="789" width="0.0304%" height="15" fill="rgb(239,140,21)" fg:x="152126" fg:w="50"/><text x="92.6312%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (40 samples, 0.02%)</title><rect x="92.3873%" y="773" width="0.0243%" height="15" fill="rgb(254,104,9)" fg:x="152136" fg:w="40"/><text x="92.6373%" y="783.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (40 samples, 0.02%)</title><rect x="92.4541%" y="613" width="0.0243%" height="15" fill="rgb(239,52,14)" fg:x="152246" fg:w="40"/><text x="92.7041%" y="623.50"></text></g><g><title>tcache_gc_small (17 samples, 0.01%)</title><rect x="92.4681%" y="597" width="0.0103%" height="15" fill="rgb(208,227,44)" fg:x="152269" fg:w="17"/><text x="92.7181%" y="607.50"></text></g><g><title>_rjem_je_te_event_trigger (60 samples, 0.04%)</title><rect x="92.4444%" y="629" width="0.0364%" height="15" fill="rgb(246,18,19)" fg:x="152230" fg:w="60"/><text x="92.6944%" y="639.50"></text></g><g><title>_rjem_je_sdallocx_default (72 samples, 0.04%)</title><rect x="92.4377%" y="693" width="0.0437%" height="15" fill="rgb(235,228,25)" fg:x="152219" fg:w="72"/><text x="92.6877%" y="703.50"></text></g><g><title>isfree (68 samples, 0.04%)</title><rect x="92.4401%" y="677" width="0.0413%" height="15" fill="rgb(240,156,20)" fg:x="152223" fg:w="68"/><text x="92.6901%" y="687.50"></text></g><g><title>thread_dalloc_event (64 samples, 0.04%)</title><rect x="92.4426%" y="661" width="0.0389%" height="15" fill="rgb(224,8,20)" fg:x="152227" fg:w="64"/><text x="92.6926%" y="671.50"></text></g><g><title>te_event_advance (64 samples, 0.04%)</title><rect x="92.4426%" y="645" width="0.0389%" height="15" fill="rgb(214,12,52)" fg:x="152227" fg:w="64"/><text x="92.6926%" y="655.50"></text></g><g><title>cache_bin_dalloc_easy (122 samples, 0.07%)</title><rect x="92.4996%" y="661" width="0.0741%" height="15" fill="rgb(211,220,47)" fg:x="152321" fg:w="122"/><text x="92.7496%" y="671.50"></text></g><g><title>cache_bin_full (57 samples, 0.03%)</title><rect x="92.5391%" y="645" width="0.0346%" height="15" fill="rgb(250,173,5)" fg:x="152386" fg:w="57"/><text x="92.7891%" y="655.50"></text></g><g><title>sz_index2size (23 samples, 0.01%)</title><rect x="92.5737%" y="661" width="0.0140%" height="15" fill="rgb(250,125,52)" fg:x="152443" fg:w="23"/><text x="92.8237%" y="671.50"></text></g><g><title>sz_index2size_lookup (23 samples, 0.01%)</title><rect x="92.5737%" y="645" width="0.0140%" height="15" fill="rgb(209,133,18)" fg:x="152443" fg:w="23"/><text x="92.8237%" y="655.50"></text></g><g><title>sz_index2size_lookup_impl (23 samples, 0.01%)</title><rect x="92.5737%" y="629" width="0.0140%" height="15" fill="rgb(216,173,22)" fg:x="152443" fg:w="23"/><text x="92.8237%" y="639.50"></text></g><g><title>_rjem_sdallocx (204 samples, 0.12%)</title><rect x="92.4814%" y="693" width="0.1239%" height="15" fill="rgb(205,3,22)" fg:x="152291" fg:w="204"/><text x="92.7314%" y="703.50"></text></g><g><title>free_fastpath (203 samples, 0.12%)</title><rect x="92.4820%" y="677" width="0.1233%" height="15" fill="rgb(248,22,20)" fg:x="152292" fg:w="203"/><text x="92.7320%" y="687.50"></text></g><g><title>sz_size2index_lookup (29 samples, 0.02%)</title><rect x="92.5877%" y="661" width="0.0176%" height="15" fill="rgb(233,6,29)" fg:x="152466" fg:w="29"/><text x="92.8377%" y="671.50"></text></g><g><title>sz_size2index_lookup_impl (29 samples, 0.02%)</title><rect x="92.5877%" y="645" width="0.0176%" height="15" fill="rgb(240,22,54)" fg:x="152466" fg:w="29"/><text x="92.8377%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (331 samples, 0.20%)</title><rect x="92.4347%" y="757" width="0.2010%" height="15" fill="rgb(231,133,32)" fg:x="152214" fg:w="331"/><text x="92.6847%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (331 samples, 0.20%)</title><rect x="92.4347%" y="741" width="0.2010%" height="15" fill="rgb(248,193,4)" fg:x="152214" fg:w="331"/><text x="92.6847%" y="751.50"></text></g><g><title>__rust_dealloc (331 samples, 0.20%)</title><rect x="92.4347%" y="725" width="0.2010%" height="15" fill="rgb(211,178,46)" fg:x="152214" fg:w="331"/><text x="92.6847%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (331 samples, 0.20%)</title><rect x="92.4347%" y="709" width="0.2010%" height="15" fill="rgb(224,5,42)" fg:x="152214" fg:w="331"/><text x="92.6847%" y="719.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (50 samples, 0.03%)</title><rect x="92.6053%" y="693" width="0.0304%" height="15" fill="rgb(239,176,25)" fg:x="152495" fg:w="50"/><text x="92.8553%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (332 samples, 0.20%)</title><rect x="92.4347%" y="773" width="0.2016%" height="15" fill="rgb(245,187,50)" fg:x="152214" fg:w="332"/><text x="92.6847%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (424 samples, 0.26%)</title><rect x="92.4116%" y="805" width="0.2575%" height="15" fill="rgb(248,24,15)" fg:x="152176" fg:w="424"/><text x="92.6616%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (424 samples, 0.26%)</title><rect x="92.4116%" y="789" width="0.2575%" height="15" fill="rgb(205,166,13)" fg:x="152176" fg:w="424"/><text x="92.6616%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (54 samples, 0.03%)</title><rect x="92.6363%" y="773" width="0.0328%" height="15" fill="rgb(208,114,23)" fg:x="152546" fg:w="54"/><text x="92.8863%" y="783.50"></text></g><g><title>&lt;slab::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (496 samples, 0.30%)</title><rect x="92.6697%" y="757" width="0.3012%" height="15" fill="rgb(239,127,18)" fg:x="152601" fg:w="496"/><text x="92.9197%" y="767.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.01%)</title><rect x="92.9587%" y="741" width="0.0121%" height="15" fill="rgb(219,154,28)" fg:x="153077" fg:w="20"/><text x="93.2087%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.01%)</title><rect x="92.9587%" y="725" width="0.0121%" height="15" fill="rgb(225,157,23)" fg:x="153077" fg:w="20"/><text x="93.2087%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.01%)</title><rect x="92.9587%" y="709" width="0.0121%" height="15" fill="rgb(219,8,6)" fg:x="153077" fg:w="20"/><text x="93.2087%" y="719.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (20 samples, 0.01%)</title><rect x="92.9587%" y="693" width="0.0121%" height="15" fill="rgb(212,47,6)" fg:x="153077" fg:w="20"/><text x="93.2087%" y="703.50"></text></g><g><title>std::sync::poison::Flag::done (21 samples, 0.01%)</title><rect x="92.9885%" y="725" width="0.0128%" height="15" fill="rgb(224,190,4)" fg:x="153126" fg:w="21"/><text x="93.2385%" y="735.50"></text></g><g><title>std::thread::panicking (18 samples, 0.01%)</title><rect x="92.9903%" y="709" width="0.0109%" height="15" fill="rgb(239,183,29)" fg:x="153129" fg:w="18"/><text x="93.2403%" y="719.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.01%)</title><rect x="92.9903%" y="693" width="0.0109%" height="15" fill="rgb(213,57,7)" fg:x="153129" fg:w="18"/><text x="93.2403%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.01%)</title><rect x="92.9903%" y="677" width="0.0109%" height="15" fill="rgb(216,148,1)" fg:x="153129" fg:w="18"/><text x="93.2403%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (452 samples, 0.27%)</title><rect x="92.9709%" y="757" width="0.2745%" height="15" fill="rgb(236,182,29)" fg:x="153097" fg:w="452"/><text x="93.2209%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (452 samples, 0.27%)</title><rect x="92.9709%" y="741" width="0.2745%" height="15" fill="rgb(244,120,48)" fg:x="153097" fg:w="452"/><text x="93.2209%" y="751.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (402 samples, 0.24%)</title><rect x="93.0012%" y="725" width="0.2441%" height="15" fill="rgb(206,71,34)" fg:x="153147" fg:w="402"/><text x="93.2512%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (384 samples, 0.23%)</title><rect x="93.0122%" y="709" width="0.2332%" height="15" fill="rgb(242,32,6)" fg:x="153165" fg:w="384"/><text x="93.2622%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (384 samples, 0.23%)</title><rect x="93.0122%" y="693" width="0.2332%" height="15" fill="rgb(241,35,3)" fg:x="153165" fg:w="384"/><text x="93.2622%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (968 samples, 0.59%)</title><rect x="93.2454%" y="757" width="0.5878%" height="15" fill="rgb(222,62,19)" fg:x="153549" fg:w="968"/><text x="93.4954%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_and (968 samples, 0.59%)</title><rect x="93.2454%" y="741" width="0.5878%" height="15" fill="rgb(223,110,41)" fg:x="153549" fg:w="968"/><text x="93.4954%" y="751.50"></text></g><g><title>core::mem::replace (38 samples, 0.02%)</title><rect x="93.8478%" y="741" width="0.0231%" height="15" fill="rgb(208,224,4)" fg:x="154541" fg:w="38"/><text x="94.0978%" y="751.50"></text></g><g><title>core::ptr::read (38 samples, 0.02%)</title><rect x="93.8478%" y="725" width="0.0231%" height="15" fill="rgb(241,137,19)" fg:x="154541" fg:w="38"/><text x="94.0978%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (23 samples, 0.01%)</title><rect x="93.8708%" y="693" width="0.0140%" height="15" fill="rgb(244,24,17)" fg:x="154579" fg:w="23"/><text x="94.1208%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (23 samples, 0.01%)</title><rect x="93.8708%" y="677" width="0.0140%" height="15" fill="rgb(245,178,49)" fg:x="154579" fg:w="23"/><text x="94.1208%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.01%)</title><rect x="93.8721%" y="661" width="0.0128%" height="15" fill="rgb(219,160,38)" fg:x="154581" fg:w="21"/><text x="94.1221%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.01%)</title><rect x="93.8721%" y="645" width="0.0128%" height="15" fill="rgb(228,137,14)" fg:x="154581" fg:w="21"/><text x="94.1221%" y="655.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (20 samples, 0.01%)</title><rect x="93.9103%" y="597" width="0.0121%" height="15" fill="rgb(237,134,11)" fg:x="154644" fg:w="20"/><text x="94.1603%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (19 samples, 0.01%)</title><rect x="93.9109%" y="581" width="0.0115%" height="15" fill="rgb(211,126,44)" fg:x="154645" fg:w="19"/><text x="94.1609%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (85 samples, 0.05%)</title><rect x="93.8854%" y="677" width="0.0516%" height="15" fill="rgb(226,171,33)" fg:x="154603" fg:w="85"/><text x="94.1354%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (84 samples, 0.05%)</title><rect x="93.8860%" y="661" width="0.0510%" height="15" fill="rgb(253,99,13)" fg:x="154604" fg:w="84"/><text x="94.1360%" y="671.50"></text></g><g><title>tokio::runtime::context::with_scheduler (84 samples, 0.05%)</title><rect x="93.8860%" y="645" width="0.0510%" height="15" fill="rgb(244,48,7)" fg:x="154604" fg:w="84"/><text x="94.1360%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (68 samples, 0.04%)</title><rect x="93.8957%" y="629" width="0.0413%" height="15" fill="rgb(244,217,54)" fg:x="154620" fg:w="68"/><text x="94.1457%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (60 samples, 0.04%)</title><rect x="93.9006%" y="613" width="0.0364%" height="15" fill="rgb(224,15,18)" fg:x="154628" fg:w="60"/><text x="94.1506%" y="623.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (129 samples, 0.08%)</title><rect x="93.8848%" y="693" width="0.0783%" height="15" fill="rgb(244,99,12)" fg:x="154602" fg:w="129"/><text x="94.1348%" y="703.50"></text></g><g><title>tokio::runtime::task::raw::schedule (43 samples, 0.03%)</title><rect x="93.9370%" y="677" width="0.0261%" height="15" fill="rgb(233,226,8)" fg:x="154688" fg:w="43"/><text x="94.1870%" y="687.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (32 samples, 0.02%)</title><rect x="93.9437%" y="661" width="0.0194%" height="15" fill="rgb(229,211,3)" fg:x="154699" fg:w="32"/><text x="94.1937%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23 samples, 0.01%)</title><rect x="93.9632%" y="661" width="0.0140%" height="15" fill="rgb(216,140,21)" fg:x="154731" fg:w="23"/><text x="94.2132%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.01%)</title><rect x="93.9632%" y="645" width="0.0140%" height="15" fill="rgb(234,122,30)" fg:x="154731" fg:w="23"/><text x="94.2132%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::load (137 samples, 0.08%)</title><rect x="93.9771%" y="661" width="0.0832%" height="15" fill="rgb(236,25,46)" fg:x="154754" fg:w="137"/><text x="94.2271%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (137 samples, 0.08%)</title><rect x="93.9771%" y="645" width="0.0832%" height="15" fill="rgb(217,52,54)" fg:x="154754" fg:w="137"/><text x="94.2271%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (137 samples, 0.08%)</title><rect x="93.9771%" y="629" width="0.0832%" height="15" fill="rgb(222,29,26)" fg:x="154754" fg:w="137"/><text x="94.2271%" y="639.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (382 samples, 0.23%)</title><rect x="93.8332%" y="757" width="0.2320%" height="15" fill="rgb(216,177,29)" fg:x="154517" fg:w="382"/><text x="94.0832%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (320 samples, 0.19%)</title><rect x="93.8708%" y="741" width="0.1943%" height="15" fill="rgb(247,136,51)" fg:x="154579" fg:w="320"/><text x="94.1208%" y="751.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (320 samples, 0.19%)</title><rect x="93.8708%" y="725" width="0.1943%" height="15" fill="rgb(231,47,47)" fg:x="154579" fg:w="320"/><text x="94.1208%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (320 samples, 0.19%)</title><rect x="93.8708%" y="709" width="0.1943%" height="15" fill="rgb(211,192,36)" fg:x="154579" fg:w="320"/><text x="94.1208%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (168 samples, 0.10%)</title><rect x="93.9632%" y="693" width="0.1020%" height="15" fill="rgb(229,156,32)" fg:x="154731" fg:w="168"/><text x="94.2132%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (168 samples, 0.10%)</title><rect x="93.9632%" y="677" width="0.1020%" height="15" fill="rgb(248,213,20)" fg:x="154731" fg:w="168"/><text x="94.2132%" y="687.50"></text></g><g><title>slab::Slab&lt;T&gt;::iter_mut (23 samples, 0.01%)</title><rect x="94.0652%" y="757" width="0.0140%" height="15" fill="rgb(217,64,7)" fg:x="154899" fg:w="23"/><text x="94.3152%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (23 samples, 0.01%)</title><rect x="94.0652%" y="741" width="0.0140%" height="15" fill="rgb(232,142,8)" fg:x="154899" fg:w="23"/><text x="94.3152%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (23 samples, 0.01%)</title><rect x="94.0652%" y="725" width="0.0140%" height="15" fill="rgb(224,92,44)" fg:x="154899" fg:w="23"/><text x="94.3152%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (23 samples, 0.01%)</title><rect x="94.0652%" y="709" width="0.0140%" height="15" fill="rgb(214,169,17)" fg:x="154899" fg:w="23"/><text x="94.3152%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (23 samples, 0.01%)</title><rect x="94.0652%" y="693" width="0.0140%" height="15" fill="rgb(210,59,37)" fg:x="154899" fg:w="23"/><text x="94.3152%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (23 samples, 0.01%)</title><rect x="94.0652%" y="677" width="0.0140%" height="15" fill="rgb(214,116,48)" fg:x="154899" fg:w="23"/><text x="94.3152%" y="687.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (59 samples, 0.04%)</title><rect x="94.0791%" y="741" width="0.0358%" height="15" fill="rgb(244,191,6)" fg:x="154922" fg:w="59"/><text x="94.3291%" y="751.50"></text></g><g><title>std::sync::poison::Flag::guard (59 samples, 0.04%)</title><rect x="94.0791%" y="725" width="0.0358%" height="15" fill="rgb(241,50,52)" fg:x="154922" fg:w="59"/><text x="94.3291%" y="735.50"></text></g><g><title>std::thread::panicking (38 samples, 0.02%)</title><rect x="94.0919%" y="709" width="0.0231%" height="15" fill="rgb(236,75,39)" fg:x="154943" fg:w="38"/><text x="94.3419%" y="719.50"></text></g><g><title>std::panicking::panicking (38 samples, 0.02%)</title><rect x="94.0919%" y="693" width="0.0231%" height="15" fill="rgb(236,99,0)" fg:x="154943" fg:w="38"/><text x="94.3419%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (38 samples, 0.02%)</title><rect x="94.0919%" y="677" width="0.0231%" height="15" fill="rgb(207,202,15)" fg:x="154943" fg:w="38"/><text x="94.3419%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (22 samples, 0.01%)</title><rect x="94.1150%" y="725" width="0.0134%" height="15" fill="rgb(233,207,14)" fg:x="154981" fg:w="22"/><text x="94.3650%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (22 samples, 0.01%)</title><rect x="94.1150%" y="709" width="0.0134%" height="15" fill="rgb(226,27,51)" fg:x="154981" fg:w="22"/><text x="94.3650%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (497 samples, 0.30%)</title><rect x="94.1283%" y="725" width="0.3018%" height="15" fill="rgb(206,104,42)" fg:x="155003" fg:w="497"/><text x="94.3783%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (497 samples, 0.30%)</title><rect x="94.1283%" y="709" width="0.3018%" height="15" fill="rgb(212,225,4)" fg:x="155003" fg:w="497"/><text x="94.3783%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (2,908 samples, 1.77%)</title><rect x="92.6691%" y="805" width="1.7659%" height="15" fill="rgb(233,96,42)" fg:x="152600" fg:w="2908"/><text x="92.9191%" y="815.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,908 samples, 1.77%)</title><rect x="92.6691%" y="789" width="1.7659%" height="15" fill="rgb(229,21,32)" fg:x="152600" fg:w="2908"/><text x="92.9191%" y="799.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (2,908 samples, 1.77%)</title><rect x="92.6691%" y="773" width="1.7659%" height="15" fill="rgb(226,216,24)" fg:x="152600" fg:w="2908"/><text x="92.9191%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (586 samples, 0.36%)</title><rect x="94.0791%" y="757" width="0.3559%" height="15" fill="rgb(221,163,17)" fg:x="154922" fg:w="586"/><text x="94.3291%" y="767.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (527 samples, 0.32%)</title><rect x="94.1150%" y="741" width="0.3200%" height="15" fill="rgb(216,216,42)" fg:x="154981" fg:w="527"/><text x="94.3650%" y="751.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (36,595 samples, 22.22%)</title><rect x="72.2309%" y="885" width="22.2230%" height="15" fill="rgb(240,118,7)" fg:x="118944" fg:w="36595"/><text x="72.4809%" y="895.50">epoxy_server::handle::wisp::copy_wr..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write::_{{closure}} (31,371 samples, 19.05%)</title><rect x="75.4032%" y="869" width="19.0506%" height="15" fill="rgb(221,67,37)" fg:x="124168" fg:w="31371"/><text x="75.6532%" y="879.50">wisp_mux::stream::MuxStreamWri..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (30,660 samples, 18.62%)</title><rect x="75.8350%" y="853" width="18.6188%" height="15" fill="rgb(241,32,44)" fg:x="124879" fg:w="30660"/><text x="76.0850%" y="863.50">wisp_mux::stream::MuxStreamWr..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (28,139 samples, 17.09%)</title><rect x="77.3659%" y="837" width="17.0879%" height="15" fill="rgb(235,204,43)" fg:x="127400" fg:w="28139"/><text x="77.6159%" y="847.50">wisp_mux::stream::MuxStrea..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (27,253 samples, 16.55%)</title><rect x="77.9040%" y="821" width="16.5499%" height="15" fill="rgb(213,116,10)" fg:x="128286" fg:w="27253"/><text x="78.1540%" y="831.50">wisp_mux::ws::LockedWebSoc..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexLockFuture&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (31 samples, 0.02%)</title><rect x="94.4350%" y="805" width="0.0188%" height="15" fill="rgb(239,15,48)" fg:x="155508" fg:w="31"/><text x="94.6850%" y="815.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.02%)</title><rect x="94.4350%" y="789" width="0.0188%" height="15" fill="rgb(207,123,36)" fg:x="155508" fg:w="31"/><text x="94.6850%" y="799.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (56,210 samples, 34.13%)</title><rect x="60.3418%" y="917" width="34.1345%" height="15" fill="rgb(209,103,30)" fg:x="99366" fg:w="56210"/><text x="60.5918%" y="927.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::futu..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (56,210 samples, 34.13%)</title><rect x="60.3418%" y="901" width="34.1345%" height="15" fill="rgb(238,100,19)" fg:x="99366" fg:w="56210"/><text x="60.5918%" y="911.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}..</text></g><g><title>tokio::macros::support::thread_rng_n (37 samples, 0.02%)</title><rect x="94.4538%" y="885" width="0.0225%" height="15" fill="rgb(244,30,14)" fg:x="155539" fg:w="37"/><text x="94.7038%" y="895.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (37 samples, 0.02%)</title><rect x="94.4538%" y="869" width="0.0225%" height="15" fill="rgb(249,174,6)" fg:x="155539" fg:w="37"/><text x="94.7038%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (37 samples, 0.02%)</title><rect x="94.4538%" y="853" width="0.0225%" height="15" fill="rgb(235,213,41)" fg:x="155539" fg:w="37"/><text x="94.7038%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.02%)</title><rect x="94.4538%" y="837" width="0.0225%" height="15" fill="rgb(213,118,6)" fg:x="155539" fg:w="37"/><text x="94.7038%" y="847.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (29 samples, 0.02%)</title><rect x="94.4587%" y="821" width="0.0176%" height="15" fill="rgb(235,44,51)" fg:x="155547" fg:w="29"/><text x="94.7087%" y="831.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (56,288 samples, 34.18%)</title><rect x="60.2980%" y="949" width="34.1819%" height="15" fill="rgb(217,9,53)" fg:x="99294" fg:w="56288"/><text x="60.5480%" y="959.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (56,259 samples, 34.16%)</title><rect x="60.3157%" y="933" width="34.1643%" height="15" fill="rgb(237,172,34)" fg:x="99323" fg:w="56259"/><text x="60.5657%" y="943.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}..</text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (56,960 samples, 34.59%)</title><rect x="59.9155%" y="981" width="34.5900%" height="15" fill="rgb(206,206,11)" fg:x="98664" fg:w="56960"/><text x="60.1655%" y="991.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::futur..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (56,960 samples, 34.59%)</title><rect x="59.9155%" y="965" width="34.5900%" height="15" fill="rgb(214,149,29)" fg:x="98664" fg:w="56960"/><text x="60.1655%" y="975.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}:..</text></g><g><title>tokio::macros::support::thread_rng_n (42 samples, 0.03%)</title><rect x="94.4799%" y="949" width="0.0255%" height="15" fill="rgb(208,123,3)" fg:x="155582" fg:w="42"/><text x="94.7299%" y="959.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (42 samples, 0.03%)</title><rect x="94.4799%" y="933" width="0.0255%" height="15" fill="rgb(229,126,4)" fg:x="155582" fg:w="42"/><text x="94.7299%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (42 samples, 0.03%)</title><rect x="94.4799%" y="917" width="0.0255%" height="15" fill="rgb(222,92,36)" fg:x="155582" fg:w="42"/><text x="94.7299%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (42 samples, 0.03%)</title><rect x="94.4799%" y="901" width="0.0255%" height="15" fill="rgb(216,39,41)" fg:x="155582" fg:w="42"/><text x="94.7299%" y="911.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (41 samples, 0.02%)</title><rect x="94.4805%" y="885" width="0.0249%" height="15" fill="rgb(253,127,28)" fg:x="155583" fg:w="41"/><text x="94.7305%" y="895.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (36 samples, 0.02%)</title><rect x="94.4836%" y="869" width="0.0219%" height="15" fill="rgb(249,152,51)" fg:x="155588" fg:w="36"/><text x="94.7336%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::copy_read_fast::{{closure}}&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="917" width="0.0109%" height="15" fill="rgb(209,123,42)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::compat::Compat&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="901" width="0.0109%" height="15" fill="rgb(241,118,22)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="885" width="0.0109%" height="15" fill="rgb(208,25,7)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="869" width="0.0109%" height="15" fill="rgb(243,144,39)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="853" width="0.0109%" height="15" fill="rgb(250,50,5)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="837" width="0.0109%" height="15" fill="rgb(207,67,11)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="821" width="0.0109%" height="15" fill="rgb(245,204,40)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamRead&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="805" width="0.0109%" height="15" fill="rgb(238,228,24)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (18 samples, 0.01%)</title><rect x="94.5054%" y="789" width="0.0109%" height="15" fill="rgb(217,116,22)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="773" width="0.0109%" height="15" fill="rgb(234,98,12)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="757" width="0.0109%" height="15" fill="rgb(242,170,50)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="741" width="0.0109%" height="15" fill="rgb(235,7,5)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="725" width="0.0109%" height="15" fill="rgb(241,114,28)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;bytes::bytes::Bytes&gt;&gt; (18 samples, 0.01%)</title><rect x="94.5054%" y="709" width="0.0109%" height="15" fill="rgb(246,112,42)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="719.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="94.5054%" y="693" width="0.0109%" height="15" fill="rgb(248,228,14)" fg:x="155624" fg:w="18"/><text x="94.7554%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}},event_listener::EventListener)&gt; (24 samples, 0.01%)</title><rect x="94.5054%" y="981" width="0.0146%" height="15" fill="rgb(208,133,18)" fg:x="155624" fg:w="24"/><text x="94.7554%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}}&gt; (24 samples, 0.01%)</title><rect x="94.5054%" y="965" width="0.0146%" height="15" fill="rgb(207,35,49)" fg:x="155624" fg:w="24"/><text x="94.7554%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}}::{{closure}}&gt; (24 samples, 0.01%)</title><rect x="94.5054%" y="949" width="0.0146%" height="15" fill="rgb(205,68,36)" fg:x="155624" fg:w="24"/><text x="94.7554%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::copy_read_fast::{{closure}},epoxy_server::handle::wisp::copy_write_fast::{{closure}})&gt; (24 samples, 0.01%)</title><rect x="94.5054%" y="933" width="0.0146%" height="15" fill="rgb(245,62,40)" fg:x="155624" fg:w="24"/><text x="94.7554%" y="943.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (57,136 samples, 34.70%)</title><rect x="59.8377%" y="997" width="34.6969%" height="15" fill="rgb(228,27,24)" fg:x="98536" fg:w="57136"/><text x="60.0877%" y="1007.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}</text></g><g><title>tokio::runtime::task::harness::poll_future (116,292 samples, 70.62%)</title><rect x="23.9282%" y="1141" width="70.6204%" height="15" fill="rgb(253,19,12)" fg:x="39403" fg:w="116292"/><text x="24.1782%" y="1151.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (116,292 samples, 70.62%)</title><rect x="23.9282%" y="1125" width="70.6204%" height="15" fill="rgb(232,28,20)" fg:x="39403" fg:w="116292"/><text x="24.1782%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (116,292 samples, 70.62%)</title><rect x="23.9282%" y="1109" width="70.6204%" height="15" fill="rgb(218,35,51)" fg:x="39403" fg:w="116292"/><text x="24.1782%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (116,292 samples, 70.62%)</title><rect x="23.9282%" y="1093" width="70.6204%" height="15" fill="rgb(212,90,40)" fg:x="39403" fg:w="116292"/><text x="24.1782%" y="1103.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (116,292 samples, 70.62%)</title><rect x="23.9282%" y="1077" width="70.6204%" height="15" fill="rgb(220,172,12)" fg:x="39403" fg:w="116292"/><text x="24.1782%" y="1087.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (116,292 samples, 70.62%)</title><rect x="23.9282%" y="1061" width="70.6204%" height="15" fill="rgb(226,159,20)" fg:x="39403" fg:w="116292"/><text x="24.1782%" y="1071.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (116,292 samples, 70.62%)</title><rect x="23.9282%" y="1045" width="70.6204%" height="15" fill="rgb(234,205,16)" fg:x="39403" fg:w="116292"/><text x="24.1782%" y="1055.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (116,290 samples, 70.62%)</title><rect x="23.9294%" y="1029" width="70.6192%" height="15" fill="rgb(207,9,39)" fg:x="39405" fg:w="116290"/><text x="24.1794%" y="1039.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (116,290 samples, 70.62%)</title><rect x="23.9294%" y="1013" width="70.6192%" height="15" fill="rgb(249,143,15)" fg:x="39405" fg:w="116290"/><text x="24.1794%" y="1023.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (23 samples, 0.01%)</title><rect x="94.5346%" y="997" width="0.0140%" height="15" fill="rgb(253,133,29)" fg:x="155672" fg:w="23"/><text x="94.7846%" y="1007.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (23 samples, 0.01%)</title><rect x="94.5346%" y="981" width="0.0140%" height="15" fill="rgb(221,187,0)" fg:x="155672" fg:w="23"/><text x="94.7846%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.01%)</title><rect x="94.5346%" y="965" width="0.0140%" height="15" fill="rgb(205,204,26)" fg:x="155672" fg:w="23"/><text x="94.7846%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (95 samples, 0.06%)</title><rect x="94.5637%" y="1109" width="0.0577%" height="15" fill="rgb(224,68,54)" fg:x="155720" fg:w="95"/><text x="94.8137%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (95 samples, 0.06%)</title><rect x="94.5637%" y="1093" width="0.0577%" height="15" fill="rgb(209,67,4)" fg:x="155720" fg:w="95"/><text x="94.8137%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (169 samples, 0.10%)</title><rect x="94.5486%" y="1141" width="0.1026%" height="15" fill="rgb(228,229,18)" fg:x="155695" fg:w="169"/><text x="94.7986%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (169 samples, 0.10%)</title><rect x="94.5486%" y="1125" width="0.1026%" height="15" fill="rgb(231,89,13)" fg:x="155695" fg:w="169"/><text x="94.7986%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (48 samples, 0.03%)</title><rect x="94.6220%" y="1109" width="0.0291%" height="15" fill="rgb(210,182,18)" fg:x="155816" fg:w="48"/><text x="94.8720%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (118 samples, 0.07%)</title><rect x="94.6530%" y="1109" width="0.0717%" height="15" fill="rgb(240,105,2)" fg:x="155867" fg:w="118"/><text x="94.9030%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (118 samples, 0.07%)</title><rect x="94.6530%" y="1093" width="0.0717%" height="15" fill="rgb(207,170,50)" fg:x="155867" fg:w="118"/><text x="94.9030%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (147 samples, 0.09%)</title><rect x="94.6512%" y="1141" width="0.0893%" height="15" fill="rgb(232,133,24)" fg:x="155864" fg:w="147"/><text x="94.9012%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (147 samples, 0.09%)</title><rect x="94.6512%" y="1125" width="0.0893%" height="15" fill="rgb(235,166,27)" fg:x="155864" fg:w="147"/><text x="94.9012%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (19 samples, 0.01%)</title><rect x="94.7289%" y="1109" width="0.0115%" height="15" fill="rgb(209,19,13)" fg:x="155992" fg:w="19"/><text x="94.9789%" y="1119.50"></text></g><g><title>tokio::runtime::coop::budget (118,540 samples, 71.99%)</title><rect x="22.7616%" y="1269" width="71.9855%" height="15" fill="rgb(226,79,39)" fg:x="37482" fg:w="118540"/><text x="23.0116%" y="1279.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (118,540 samples, 71.99%)</title><rect x="22.7616%" y="1253" width="71.9855%" height="15" fill="rgb(222,163,10)" fg:x="37482" fg:w="118540"/><text x="23.0116%" y="1263.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (118,489 samples, 71.95%)</title><rect x="22.7926%" y="1237" width="71.9546%" height="15" fill="rgb(214,44,19)" fg:x="37533" fg:w="118489"/><text x="23.0426%" y="1247.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (118,235 samples, 71.80%)</title><rect x="22.9468%" y="1221" width="71.8003%" height="15" fill="rgb(210,217,13)" fg:x="37787" fg:w="118235"/><text x="23.1968%" y="1231.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (118,235 samples, 71.80%)</title><rect x="22.9468%" y="1205" width="71.8003%" height="15" fill="rgb(237,61,54)" fg:x="37787" fg:w="118235"/><text x="23.1968%" y="1215.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (118,160 samples, 71.75%)</title><rect x="22.9924%" y="1189" width="71.7548%" height="15" fill="rgb(226,184,24)" fg:x="37862" fg:w="118160"/><text x="23.2424%" y="1199.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (118,155 samples, 71.75%)</title><rect x="22.9954%" y="1173" width="71.7517%" height="15" fill="rgb(223,226,4)" fg:x="37867" fg:w="118155"/><text x="23.2454%" y="1183.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (116,714 samples, 70.88%)</title><rect x="23.8705%" y="1157" width="70.8767%" height="15" fill="rgb(210,26,41)" fg:x="39308" fg:w="116714"/><text x="24.1205%" y="1167.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>core::sync::atomic::AtomicUsize::load (273 samples, 0.17%)</title><rect x="94.7751%" y="1205" width="0.1658%" height="15" fill="rgb(220,221,6)" fg:x="156068" fg:w="273"/><text x="95.0251%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (273 samples, 0.17%)</title><rect x="94.7751%" y="1189" width="0.1658%" height="15" fill="rgb(225,89,49)" fg:x="156068" fg:w="273"/><text x="95.0251%" y="1199.50"></text></g><g><title>clock_gettime (20 samples, 0.01%)</title><rect x="94.9481%" y="1173" width="0.0121%" height="15" fill="rgb(218,70,45)" fg:x="156353" fg:w="20"/><text x="95.1981%" y="1183.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.01%)</title><rect x="94.9500%" y="1157" width="0.0103%" height="15" fill="rgb(238,166,21)" fg:x="156356" fg:w="17"/><text x="95.2000%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (22 samples, 0.01%)</title><rect x="94.9475%" y="1189" width="0.0134%" height="15" fill="rgb(224,141,44)" fg:x="156352" fg:w="22"/><text x="95.1975%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (34 samples, 0.02%)</title><rect x="94.9409%" y="1205" width="0.0206%" height="15" fill="rgb(230,12,49)" fg:x="156341" fg:w="34"/><text x="95.1909%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::hash (22 samples, 0.01%)</title><rect x="94.9712%" y="1189" width="0.0134%" height="15" fill="rgb(212,174,12)" fg:x="156391" fg:w="22"/><text x="95.2212%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (139 samples, 0.08%)</title><rect x="94.9615%" y="1205" width="0.0844%" height="15" fill="rgb(246,67,9)" fg:x="156375" fg:w="139"/><text x="95.2115%" y="1215.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (101 samples, 0.06%)</title><rect x="94.9846%" y="1189" width="0.0613%" height="15" fill="rgb(239,35,23)" fg:x="156413" fg:w="101"/><text x="95.2346%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (99 samples, 0.06%)</title><rect x="94.9858%" y="1173" width="0.0601%" height="15" fill="rgb(211,167,0)" fg:x="156415" fg:w="99"/><text x="95.2358%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (99 samples, 0.06%)</title><rect x="94.9858%" y="1157" width="0.0601%" height="15" fill="rgb(225,119,45)" fg:x="156415" fg:w="99"/><text x="95.2358%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (487 samples, 0.30%)</title><rect x="94.7605%" y="1237" width="0.2957%" height="15" fill="rgb(210,162,6)" fg:x="156044" fg:w="487"/><text x="95.0105%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (487 samples, 0.30%)</title><rect x="94.7605%" y="1221" width="0.2957%" height="15" fill="rgb(208,118,35)" fg:x="156044" fg:w="487"/><text x="95.0105%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (17 samples, 0.01%)</title><rect x="95.0459%" y="1205" width="0.0103%" height="15" fill="rgb(239,4,53)" fg:x="156514" fg:w="17"/><text x="95.2959%" y="1215.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (17 samples, 0.01%)</title><rect x="95.0459%" y="1189" width="0.0103%" height="15" fill="rgb(213,130,21)" fg:x="156514" fg:w="17"/><text x="95.2959%" y="1199.50"></text></g><g><title>syscall (23 samples, 0.01%)</title><rect x="95.0562%" y="1237" width="0.0140%" height="15" fill="rgb(235,148,0)" fg:x="156531" fg:w="23"/><text x="95.3062%" y="1247.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="95.0854%" y="1109" width="0.0152%" height="15" fill="rgb(244,224,18)" fg:x="156579" fg:w="25"/><text x="95.3354%" y="1119.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (51 samples, 0.03%)</title><rect x="95.0702%" y="1237" width="0.0310%" height="15" fill="rgb(211,214,4)" fg:x="156554" fg:w="51"/><text x="95.3202%" y="1247.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (47 samples, 0.03%)</title><rect x="95.0726%" y="1221" width="0.0285%" height="15" fill="rgb(206,119,25)" fg:x="156558" fg:w="47"/><text x="95.3226%" y="1231.50"></text></g><g><title>mio::waker::Waker::wake (47 samples, 0.03%)</title><rect x="95.0726%" y="1205" width="0.0285%" height="15" fill="rgb(243,93,47)" fg:x="156558" fg:w="47"/><text x="95.3226%" y="1215.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (47 samples, 0.03%)</title><rect x="95.0726%" y="1189" width="0.0285%" height="15" fill="rgb(224,194,6)" fg:x="156558" fg:w="47"/><text x="95.3226%" y="1199.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (47 samples, 0.03%)</title><rect x="95.0726%" y="1173" width="0.0285%" height="15" fill="rgb(243,229,6)" fg:x="156558" fg:w="47"/><text x="95.3226%" y="1183.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (46 samples, 0.03%)</title><rect x="95.0732%" y="1157" width="0.0279%" height="15" fill="rgb(207,23,50)" fg:x="156559" fg:w="46"/><text x="95.3232%" y="1167.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (46 samples, 0.03%)</title><rect x="95.0732%" y="1141" width="0.0279%" height="15" fill="rgb(253,192,32)" fg:x="156559" fg:w="46"/><text x="95.3232%" y="1151.50"></text></g><g><title>write (46 samples, 0.03%)</title><rect x="95.0732%" y="1125" width="0.0279%" height="15" fill="rgb(213,21,6)" fg:x="156559" fg:w="46"/><text x="95.3232%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (19 samples, 0.01%)</title><rect x="95.1291%" y="1205" width="0.0115%" height="15" fill="rgb(243,151,13)" fg:x="156651" fg:w="19"/><text x="95.3791%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_swap (19 samples, 0.01%)</title><rect x="95.1291%" y="1189" width="0.0115%" height="15" fill="rgb(233,165,41)" fg:x="156651" fg:w="19"/><text x="95.3791%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (83 samples, 0.05%)</title><rect x="95.1072%" y="1237" width="0.0504%" height="15" fill="rgb(246,176,45)" fg:x="156615" fg:w="83"/><text x="95.3572%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (83 samples, 0.05%)</title><rect x="95.1072%" y="1221" width="0.0504%" height="15" fill="rgb(217,170,52)" fg:x="156615" fg:w="83"/><text x="95.3572%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (26 samples, 0.02%)</title><rect x="95.1419%" y="1205" width="0.0158%" height="15" fill="rgb(214,203,54)" fg:x="156672" fg:w="26"/><text x="95.3919%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (44 samples, 0.03%)</title><rect x="95.1698%" y="1205" width="0.0267%" height="15" fill="rgb(248,215,49)" fg:x="156718" fg:w="44"/><text x="95.4198%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (44 samples, 0.03%)</title><rect x="95.1698%" y="1189" width="0.0267%" height="15" fill="rgb(208,46,10)" fg:x="156718" fg:w="44"/><text x="95.4198%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (44 samples, 0.03%)</title><rect x="95.1698%" y="1173" width="0.0267%" height="15" fill="rgb(254,5,31)" fg:x="156718" fg:w="44"/><text x="95.4198%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (119,314 samples, 72.46%)</title><rect x="22.7470%" y="1285" width="72.4555%" height="15" fill="rgb(222,104,33)" fg:x="37458" fg:w="119314"/><text x="22.9970%" y="1295.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (735 samples, 0.45%)</title><rect x="94.7562%" y="1269" width="0.4463%" height="15" fill="rgb(248,49,16)" fg:x="156037" fg:w="735"/><text x="95.0062%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (728 samples, 0.44%)</title><rect x="94.7605%" y="1253" width="0.4421%" height="15" fill="rgb(232,198,41)" fg:x="156044" fg:w="728"/><text x="95.0105%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (74 samples, 0.04%)</title><rect x="95.1576%" y="1237" width="0.0449%" height="15" fill="rgb(214,125,3)" fg:x="156698" fg:w="74"/><text x="95.4076%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (73 samples, 0.04%)</title><rect x="95.1583%" y="1221" width="0.0443%" height="15" fill="rgb(229,220,28)" fg:x="156699" fg:w="73"/><text x="95.4083%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (17 samples, 0.01%)</title><rect x="95.2852%" y="1173" width="0.0103%" height="15" fill="rgb(222,64,37)" fg:x="156908" fg:w="17"/><text x="95.5352%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.01%)</title><rect x="95.2852%" y="1157" width="0.0103%" height="15" fill="rgb(249,184,13)" fg:x="156908" fg:w="17"/><text x="95.5352%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (53 samples, 0.03%)</title><rect x="95.2694%" y="1269" width="0.0322%" height="15" fill="rgb(252,176,6)" fg:x="156882" fg:w="53"/><text x="95.5194%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (53 samples, 0.03%)</title><rect x="95.2694%" y="1253" width="0.0322%" height="15" fill="rgb(228,153,7)" fg:x="156882" fg:w="53"/><text x="95.5194%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (53 samples, 0.03%)</title><rect x="95.2694%" y="1237" width="0.0322%" height="15" fill="rgb(242,193,5)" fg:x="156882" fg:w="53"/><text x="95.5194%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (52 samples, 0.03%)</title><rect x="95.2700%" y="1221" width="0.0316%" height="15" fill="rgb(232,140,9)" fg:x="156883" fg:w="52"/><text x="95.5200%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (47 samples, 0.03%)</title><rect x="95.2730%" y="1205" width="0.0285%" height="15" fill="rgb(213,222,16)" fg:x="156888" fg:w="47"/><text x="95.5230%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (47 samples, 0.03%)</title><rect x="95.2730%" y="1189" width="0.0285%" height="15" fill="rgb(222,75,50)" fg:x="156888" fg:w="47"/><text x="95.5230%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (26 samples, 0.02%)</title><rect x="95.3016%" y="1269" width="0.0158%" height="15" fill="rgb(205,180,2)" fg:x="156935" fg:w="26"/><text x="95.5516%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (26 samples, 0.02%)</title><rect x="95.3016%" y="1253" width="0.0158%" height="15" fill="rgb(216,34,7)" fg:x="156935" fg:w="26"/><text x="95.5516%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (26 samples, 0.02%)</title><rect x="95.3016%" y="1237" width="0.0158%" height="15" fill="rgb(253,16,32)" fg:x="156935" fg:w="26"/><text x="95.5516%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="95.3016%" y="1221" width="0.0158%" height="15" fill="rgb(208,97,28)" fg:x="156935" fg:w="26"/><text x="95.5516%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (19 samples, 0.01%)</title><rect x="95.3174%" y="1269" width="0.0115%" height="15" fill="rgb(225,92,11)" fg:x="156961" fg:w="19"/><text x="95.5674%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (17 samples, 0.01%)</title><rect x="95.3186%" y="1253" width="0.0103%" height="15" fill="rgb(243,38,12)" fg:x="156963" fg:w="17"/><text x="95.5686%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (17 samples, 0.01%)</title><rect x="95.3186%" y="1237" width="0.0103%" height="15" fill="rgb(208,139,16)" fg:x="156963" fg:w="17"/><text x="95.5686%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.01%)</title><rect x="95.3186%" y="1221" width="0.0103%" height="15" fill="rgb(227,24,9)" fg:x="156963" fg:w="17"/><text x="95.5686%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="95.3186%" y="1205" width="0.0103%" height="15" fill="rgb(206,62,11)" fg:x="156963" fg:w="17"/><text x="95.5686%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (34 samples, 0.02%)</title><rect x="95.3441%" y="1205" width="0.0206%" height="15" fill="rgb(228,134,27)" fg:x="157005" fg:w="34"/><text x="95.5941%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.02%)</title><rect x="95.3441%" y="1189" width="0.0206%" height="15" fill="rgb(205,55,33)" fg:x="157005" fg:w="34"/><text x="95.5941%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (49 samples, 0.03%)</title><rect x="95.3647%" y="1205" width="0.0298%" height="15" fill="rgb(243,75,43)" fg:x="157039" fg:w="49"/><text x="95.6147%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (49 samples, 0.03%)</title><rect x="95.3647%" y="1189" width="0.0298%" height="15" fill="rgb(223,27,42)" fg:x="157039" fg:w="49"/><text x="95.6147%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (116 samples, 0.07%)</title><rect x="95.3301%" y="1253" width="0.0704%" height="15" fill="rgb(232,189,33)" fg:x="156982" fg:w="116"/><text x="95.5801%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (115 samples, 0.07%)</title><rect x="95.3307%" y="1237" width="0.0698%" height="15" fill="rgb(210,9,39)" fg:x="156983" fg:w="115"/><text x="95.5807%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (115 samples, 0.07%)</title><rect x="95.3307%" y="1221" width="0.0698%" height="15" fill="rgb(242,85,26)" fg:x="156983" fg:w="115"/><text x="95.5807%" y="1231.50"></text></g><g><title>core::ptr::read (17 samples, 0.01%)</title><rect x="95.4006%" y="1221" width="0.0103%" height="15" fill="rgb(248,44,4)" fg:x="157098" fg:w="17"/><text x="95.6506%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (139 samples, 0.08%)</title><rect x="95.3289%" y="1269" width="0.0844%" height="15" fill="rgb(250,96,46)" fg:x="156980" fg:w="139"/><text x="95.5789%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (21 samples, 0.01%)</title><rect x="95.4006%" y="1253" width="0.0128%" height="15" fill="rgb(229,116,26)" fg:x="157098" fg:w="21"/><text x="95.6506%" y="1263.50"></text></g><g><title>core::mem::replace (21 samples, 0.01%)</title><rect x="95.4006%" y="1237" width="0.0128%" height="15" fill="rgb(246,94,34)" fg:x="157098" fg:w="21"/><text x="95.6506%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (173 samples, 0.11%)</title><rect x="95.4133%" y="1269" width="0.1051%" height="15" fill="rgb(251,73,21)" fg:x="157119" fg:w="173"/><text x="95.6633%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (155 samples, 0.09%)</title><rect x="95.4242%" y="1253" width="0.0941%" height="15" fill="rgb(254,121,25)" fg:x="157137" fg:w="155"/><text x="95.6742%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (522 samples, 0.32%)</title><rect x="95.2026%" y="1285" width="0.3170%" height="15" fill="rgb(215,161,49)" fg:x="156772" fg:w="522"/><text x="95.4526%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.01%)</title><rect x="95.7242%" y="1269" width="0.0128%" height="15" fill="rgb(221,43,13)" fg:x="157631" fg:w="21"/><text x="95.9742%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (21 samples, 0.01%)</title><rect x="95.7242%" y="1253" width="0.0128%" height="15" fill="rgb(249,5,37)" fg:x="157631" fg:w="21"/><text x="95.9742%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (21 samples, 0.01%)</title><rect x="95.7242%" y="1237" width="0.0128%" height="15" fill="rgb(226,25,44)" fg:x="157631" fg:w="21"/><text x="95.9742%" y="1247.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (50 samples, 0.03%)</title><rect x="95.7473%" y="1253" width="0.0304%" height="15" fill="rgb(238,189,16)" fg:x="157669" fg:w="50"/><text x="95.9973%" y="1263.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (61 samples, 0.04%)</title><rect x="95.7789%" y="1253" width="0.0370%" height="15" fill="rgb(251,186,8)" fg:x="157721" fg:w="61"/><text x="96.0289%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (61 samples, 0.04%)</title><rect x="95.7789%" y="1237" width="0.0370%" height="15" fill="rgb(254,34,31)" fg:x="157721" fg:w="61"/><text x="96.0289%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (61 samples, 0.04%)</title><rect x="95.7789%" y="1221" width="0.0370%" height="15" fill="rgb(225,215,27)" fg:x="157721" fg:w="61"/><text x="96.0289%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (37 samples, 0.02%)</title><rect x="95.8621%" y="1237" width="0.0225%" height="15" fill="rgb(221,192,48)" fg:x="157858" fg:w="37"/><text x="96.1121%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (37 samples, 0.02%)</title><rect x="95.8621%" y="1221" width="0.0225%" height="15" fill="rgb(219,137,20)" fg:x="157858" fg:w="37"/><text x="96.1121%" y="1231.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (37 samples, 0.02%)</title><rect x="95.8621%" y="1205" width="0.0225%" height="15" fill="rgb(219,84,11)" fg:x="157858" fg:w="37"/><text x="96.1121%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (38 samples, 0.02%)</title><rect x="95.8845%" y="1237" width="0.0231%" height="15" fill="rgb(224,10,23)" fg:x="157895" fg:w="38"/><text x="96.1345%" y="1247.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (38 samples, 0.02%)</title><rect x="95.8845%" y="1221" width="0.0231%" height="15" fill="rgb(248,22,39)" fg:x="157895" fg:w="38"/><text x="96.1345%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (184 samples, 0.11%)</title><rect x="95.9088%" y="1237" width="0.1117%" height="15" fill="rgb(212,154,20)" fg:x="157935" fg:w="184"/><text x="96.1588%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (184 samples, 0.11%)</title><rect x="95.9088%" y="1221" width="0.1117%" height="15" fill="rgb(236,199,50)" fg:x="157935" fg:w="184"/><text x="96.1588%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (32 samples, 0.02%)</title><rect x="96.0206%" y="1237" width="0.0194%" height="15" fill="rgb(211,9,17)" fg:x="158119" fg:w="32"/><text x="96.2706%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.02%)</title><rect x="96.0206%" y="1221" width="0.0194%" height="15" fill="rgb(243,216,36)" fg:x="158119" fg:w="32"/><text x="96.2706%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (424 samples, 0.26%)</title><rect x="96.0400%" y="1237" width="0.2575%" height="15" fill="rgb(250,2,10)" fg:x="158151" fg:w="424"/><text x="96.2900%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (424 samples, 0.26%)</title><rect x="96.0400%" y="1221" width="0.2575%" height="15" fill="rgb(226,50,48)" fg:x="158151" fg:w="424"/><text x="96.2900%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (77 samples, 0.05%)</title><rect x="96.2975%" y="1237" width="0.0468%" height="15" fill="rgb(243,81,16)" fg:x="158575" fg:w="77"/><text x="96.5475%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (77 samples, 0.05%)</title><rect x="96.2975%" y="1221" width="0.0468%" height="15" fill="rgb(250,14,2)" fg:x="158575" fg:w="77"/><text x="96.5475%" y="1231.50"></text></g><g><title>core::ptr::read (77 samples, 0.05%)</title><rect x="96.2975%" y="1205" width="0.0468%" height="15" fill="rgb(233,135,29)" fg:x="158575" fg:w="77"/><text x="96.5475%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (882 samples, 0.54%)</title><rect x="95.8159%" y="1253" width="0.5356%" height="15" fill="rgb(224,64,43)" fg:x="157782" fg:w="882"/><text x="96.0659%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1,004 samples, 0.61%)</title><rect x="95.7424%" y="1269" width="0.6097%" height="15" fill="rgb(238,84,13)" fg:x="157661" fg:w="1004"/><text x="95.9924%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (19 samples, 0.01%)</title><rect x="96.3521%" y="1269" width="0.0115%" height="15" fill="rgb(253,48,26)" fg:x="158665" fg:w="19"/><text x="96.6021%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (59 samples, 0.04%)</title><rect x="96.3698%" y="1237" width="0.0358%" height="15" fill="rgb(205,223,31)" fg:x="158694" fg:w="59"/><text x="96.6198%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (59 samples, 0.04%)</title><rect x="96.3698%" y="1221" width="0.0358%" height="15" fill="rgb(221,41,32)" fg:x="158694" fg:w="59"/><text x="96.6198%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (59 samples, 0.04%)</title><rect x="96.3698%" y="1205" width="0.0358%" height="15" fill="rgb(213,158,31)" fg:x="158694" fg:w="59"/><text x="96.6198%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (74 samples, 0.04%)</title><rect x="96.3637%" y="1269" width="0.0449%" height="15" fill="rgb(245,126,43)" fg:x="158684" fg:w="74"/><text x="96.6137%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (67 samples, 0.04%)</title><rect x="96.3679%" y="1253" width="0.0407%" height="15" fill="rgb(227,7,22)" fg:x="158691" fg:w="67"/><text x="96.6179%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1,476 samples, 0.90%)</title><rect x="95.5196%" y="1285" width="0.8963%" height="15" fill="rgb(252,90,44)" fg:x="157294" fg:w="1476"/><text x="95.7696%" y="1295.50"></text></g><g><title>[libc.so.6] (152,145 samples, 92.39%)</title><rect x="4.0395%" y="1957" width="92.3928%" height="15" fill="rgb(253,91,0)" fg:x="6652" fg:w="152145"/><text x="4.2895%" y="1967.50">[libc.so.6]</text></g><g><title>[libc.so.6] (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1941" width="92.3909%" height="15" fill="rgb(252,175,49)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1951.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1925" width="92.3909%" height="15" fill="rgb(246,150,1)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1935.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1909" width="92.3909%" height="15" fill="rgb(241,192,25)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1919.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1893" width="92.3909%" height="15" fill="rgb(239,187,11)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1903.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1877" width="92.3909%" height="15" fill="rgb(218,202,51)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1887.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1861" width="92.3909%" height="15" fill="rgb(225,176,8)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1871.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1845" width="92.3909%" height="15" fill="rgb(219,122,41)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1855.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1829" width="92.3909%" height="15" fill="rgb(248,140,20)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1839.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1813" width="92.3909%" height="15" fill="rgb(245,41,37)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1823.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1797" width="92.3909%" height="15" fill="rgb(235,82,39)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1807.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1781" width="92.3909%" height="15" fill="rgb(230,108,42)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1791.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1765" width="92.3909%" height="15" fill="rgb(215,150,50)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1775.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (152,142 samples, 92.39%)</title><rect x="4.0414%" y="1749" width="92.3909%" height="15" fill="rgb(233,212,5)" fg:x="6655" fg:w="152142"/><text x="4.2914%" y="1759.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (152,141 samples, 92.39%)</title><rect x="4.0420%" y="1733" width="92.3903%" height="15" fill="rgb(245,80,22)" fg:x="6656" fg:w="152141"/><text x="4.2920%" y="1743.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1717" width="92.3849%" height="15" fill="rgb(238,129,16)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1727.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1701" width="92.3849%" height="15" fill="rgb(240,19,0)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1711.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1685" width="92.3849%" height="15" fill="rgb(232,42,35)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1695.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1669" width="92.3849%" height="15" fill="rgb(223,130,24)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1679.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1653" width="92.3849%" height="15" fill="rgb(237,16,22)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1663.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1637" width="92.3849%" height="15" fill="rgb(248,192,20)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1647.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1621" width="92.3849%" height="15" fill="rgb(233,167,2)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1631.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1605" width="92.3849%" height="15" fill="rgb(252,71,44)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1615.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1589" width="92.3849%" height="15" fill="rgb(238,37,47)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1599.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1573" width="92.3849%" height="15" fill="rgb(214,202,54)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1583.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1557" width="92.3849%" height="15" fill="rgb(254,165,40)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1567.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1541" width="92.3849%" height="15" fill="rgb(246,173,38)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1551.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1525" width="92.3849%" height="15" fill="rgb(215,3,27)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1535.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1509" width="92.3849%" height="15" fill="rgb(239,169,51)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1519.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1493" width="92.3849%" height="15" fill="rgb(212,5,25)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1503.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1477" width="92.3849%" height="15" fill="rgb(243,45,17)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1487.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1461" width="92.3849%" height="15" fill="rgb(242,97,9)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1471.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1445" width="92.3849%" height="15" fill="rgb(228,71,31)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1455.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1429" width="92.3849%" height="15" fill="rgb(252,184,16)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1439.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1413" width="92.3849%" height="15" fill="rgb(236,169,46)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1423.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1397" width="92.3849%" height="15" fill="rgb(207,17,47)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1407.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1381" width="92.3849%" height="15" fill="rgb(206,201,28)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1391.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1365" width="92.3849%" height="15" fill="rgb(224,184,23)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1375.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1349" width="92.3849%" height="15" fill="rgb(208,139,48)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1359.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1333" width="92.3849%" height="15" fill="rgb(208,130,10)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1343.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1317" width="92.3849%" height="15" fill="rgb(211,213,45)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (152,132 samples, 92.38%)</title><rect x="4.0474%" y="1301" width="92.3849%" height="15" fill="rgb(235,100,30)" fg:x="6665" fg:w="152132"/><text x="4.2974%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (27 samples, 0.02%)</title><rect x="96.4159%" y="1285" width="0.0164%" height="15" fill="rgb(206,144,31)" fg:x="158770" fg:w="27"/><text x="96.6659%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (20 samples, 0.01%)</title><rect x="96.7857%" y="1941" width="0.0121%" height="15" fill="rgb(224,200,26)" fg:x="159379" fg:w="20"/><text x="97.0357%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (55 samples, 0.03%)</title><rect x="96.9357%" y="1925" width="0.0334%" height="15" fill="rgb(247,104,53)" fg:x="159626" fg:w="55"/><text x="97.1857%" y="1935.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (363 samples, 0.22%)</title><rect x="96.7979%" y="1941" width="0.2204%" height="15" fill="rgb(220,14,17)" fg:x="159399" fg:w="363"/><text x="97.0479%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (81 samples, 0.05%)</title><rect x="96.9691%" y="1925" width="0.0492%" height="15" fill="rgb(230,140,40)" fg:x="159681" fg:w="81"/><text x="97.2191%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (81 samples, 0.05%)</title><rect x="96.9691%" y="1909" width="0.0492%" height="15" fill="rgb(229,2,41)" fg:x="159681" fg:w="81"/><text x="97.2191%" y="1919.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.03%)</title><rect x="96.9873%" y="1893" width="0.0310%" height="15" fill="rgb(232,89,16)" fg:x="159711" fg:w="51"/><text x="97.2373%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.03%)</title><rect x="96.9873%" y="1877" width="0.0310%" height="15" fill="rgb(247,59,52)" fg:x="159711" fg:w="51"/><text x="97.2373%" y="1887.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.03%)</title><rect x="96.9873%" y="1861" width="0.0310%" height="15" fill="rgb(226,110,21)" fg:x="159711" fg:w="51"/><text x="97.2373%" y="1871.50"></text></g><g><title>__rust_dealloc (51 samples, 0.03%)</title><rect x="96.9873%" y="1845" width="0.0310%" height="15" fill="rgb(224,176,43)" fg:x="159711" fg:w="51"/><text x="97.2373%" y="1855.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (51 samples, 0.03%)</title><rect x="96.9873%" y="1829" width="0.0310%" height="15" fill="rgb(221,73,6)" fg:x="159711" fg:w="51"/><text x="97.2373%" y="1839.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (32 samples, 0.02%)</title><rect x="97.0195%" y="1941" width="0.0194%" height="15" fill="rgb(232,78,19)" fg:x="159764" fg:w="32"/><text x="97.2695%" y="1951.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (32 samples, 0.02%)</title><rect x="97.0195%" y="1925" width="0.0194%" height="15" fill="rgb(233,112,48)" fg:x="159764" fg:w="32"/><text x="97.2695%" y="1935.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="97.0438%" y="1941" width="0.0200%" height="15" fill="rgb(243,131,47)" fg:x="159804" fg:w="33"/><text x="97.2938%" y="1951.50"></text></g><g><title>[libc.so.6] (276 samples, 0.17%)</title><rect x="97.0718%" y="1941" width="0.1676%" height="15" fill="rgb(226,51,1)" fg:x="159850" fg:w="276"/><text x="97.3218%" y="1951.50"></text></g><g><title>_rjem_je_edata_heap_empty (30 samples, 0.02%)</title><rect x="97.2643%" y="1941" width="0.0182%" height="15" fill="rgb(247,58,7)" fg:x="160167" fg:w="30"/><text x="97.5143%" y="1951.50"></text></g><g><title>_rjem_je_malloc_default (18 samples, 0.01%)</title><rect x="97.3207%" y="1941" width="0.0109%" height="15" fill="rgb(209,7,32)" fg:x="160260" fg:w="18"/><text x="97.5707%" y="1951.50"></text></g><g><title>_rjem_sdallocx (83 samples, 0.05%)</title><rect x="97.3535%" y="1941" width="0.0504%" height="15" fill="rgb(209,39,41)" fg:x="160314" fg:w="83"/><text x="97.6035%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (26 samples, 0.02%)</title><rect x="97.4130%" y="1941" width="0.0158%" height="15" fill="rgb(226,182,46)" fg:x="160412" fg:w="26"/><text x="97.6630%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (27 samples, 0.02%)</title><rect x="97.4288%" y="1941" width="0.0164%" height="15" fill="rgb(230,219,10)" fg:x="160438" fg:w="27"/><text x="97.6788%" y="1951.50"></text></g><g><title>clock_gettime (22 samples, 0.01%)</title><rect x="97.4458%" y="1941" width="0.0134%" height="15" fill="rgb(227,175,30)" fg:x="160466" fg:w="22"/><text x="97.6958%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (23 samples, 0.01%)</title><rect x="97.4598%" y="1941" width="0.0140%" height="15" fill="rgb(217,2,50)" fg:x="160489" fg:w="23"/><text x="97.7098%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (33 samples, 0.02%)</title><rect x="97.4738%" y="1941" width="0.0200%" height="15" fill="rgb(229,160,0)" fg:x="160512" fg:w="33"/><text x="97.7238%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (68 samples, 0.04%)</title><rect x="97.4956%" y="1941" width="0.0413%" height="15" fill="rgb(207,78,37)" fg:x="160548" fg:w="68"/><text x="97.7456%" y="1951.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (106 samples, 0.06%)</title><rect x="97.5734%" y="1941" width="0.0644%" height="15" fill="rgb(225,57,0)" fg:x="160676" fg:w="106"/><text x="97.8234%" y="1951.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (33 samples, 0.02%)</title><rect x="97.6177%" y="1925" width="0.0200%" height="15" fill="rgb(232,154,2)" fg:x="160749" fg:w="33"/><text x="97.8677%" y="1935.50"></text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (33 samples, 0.02%)</title><rect x="97.6177%" y="1909" width="0.0200%" height="15" fill="rgb(241,212,25)" fg:x="160749" fg:w="33"/><text x="97.8677%" y="1919.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="97.6183%" y="1893" width="0.0194%" height="15" fill="rgb(226,69,20)" fg:x="160750" fg:w="32"/><text x="97.8683%" y="1903.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (32 samples, 0.02%)</title><rect x="97.6183%" y="1877" width="0.0194%" height="15" fill="rgb(247,184,54)" fg:x="160750" fg:w="32"/><text x="97.8683%" y="1887.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (28 samples, 0.02%)</title><rect x="97.6377%" y="1941" width="0.0170%" height="15" fill="rgb(210,145,0)" fg:x="160782" fg:w="28"/><text x="97.8877%" y="1951.50"></text></g><g><title>fastwebsockets::frame::Frame::unmask (71 samples, 0.04%)</title><rect x="97.6547%" y="1941" width="0.0431%" height="15" fill="rgb(253,82,12)" fg:x="160810" fg:w="71"/><text x="97.9047%" y="1951.50"></text></g><g><title>fastwebsockets::frame::Frame::write (36 samples, 0.02%)</title><rect x="97.6978%" y="1941" width="0.0219%" height="15" fill="rgb(245,42,11)" fg:x="160881" fg:w="36"/><text x="97.9478%" y="1951.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (17 samples, 0.01%)</title><rect x="97.7203%" y="1941" width="0.0103%" height="15" fill="rgb(219,147,32)" fg:x="160918" fg:w="17"/><text x="97.9703%" y="1951.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (48 samples, 0.03%)</title><rect x="97.7306%" y="1941" width="0.0291%" height="15" fill="rgb(246,12,7)" fg:x="160935" fg:w="48"/><text x="97.9806%" y="1951.50"></text></g><g><title>recv (29 samples, 0.02%)</title><rect x="97.7762%" y="1941" width="0.0176%" height="15" fill="rgb(243,50,9)" fg:x="161010" fg:w="29"/><text x="98.0262%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (46 samples, 0.03%)</title><rect x="97.8314%" y="1909" width="0.0279%" height="15" fill="rgb(219,149,6)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1919.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (46 samples, 0.03%)</title><rect x="97.8314%" y="1893" width="0.0279%" height="15" fill="rgb(241,51,42)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1903.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (46 samples, 0.03%)</title><rect x="97.8314%" y="1877" width="0.0279%" height="15" fill="rgb(226,128,27)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1887.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (46 samples, 0.03%)</title><rect x="97.8314%" y="1861" width="0.0279%" height="15" fill="rgb(244,144,4)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1871.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (46 samples, 0.03%)</title><rect x="97.8314%" y="1845" width="0.0279%" height="15" fill="rgb(221,4,13)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1855.50"></text></g><g><title>std::sys_common::net::TcpStream::read (46 samples, 0.03%)</title><rect x="97.8314%" y="1829" width="0.0279%" height="15" fill="rgb(208,170,28)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1839.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (46 samples, 0.03%)</title><rect x="97.8314%" y="1813" width="0.0279%" height="15" fill="rgb(226,131,13)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1823.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (46 samples, 0.03%)</title><rect x="97.8314%" y="1797" width="0.0279%" height="15" fill="rgb(215,72,41)" fg:x="161101" fg:w="46"/><text x="98.0814%" y="1807.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (115 samples, 0.07%)</title><rect x="97.8096%" y="1941" width="0.0698%" height="15" fill="rgb(243,108,20)" fg:x="161065" fg:w="115"/><text x="98.0596%" y="1951.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (79 samples, 0.05%)</title><rect x="97.8314%" y="1925" width="0.0480%" height="15" fill="rgb(230,189,17)" fg:x="161101" fg:w="79"/><text x="98.0814%" y="1935.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (33 samples, 0.02%)</title><rect x="97.8594%" y="1909" width="0.0200%" height="15" fill="rgb(220,50,17)" fg:x="161147" fg:w="33"/><text x="98.1094%" y="1919.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (86 samples, 0.05%)</title><rect x="97.8794%" y="1941" width="0.0522%" height="15" fill="rgb(248,152,48)" fg:x="161180" fg:w="86"/><text x="98.1294%" y="1951.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (49 samples, 0.03%)</title><rect x="97.9316%" y="1941" width="0.0298%" height="15" fill="rgb(244,91,11)" fg:x="161266" fg:w="49"/><text x="98.1816%" y="1951.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (65 samples, 0.04%)</title><rect x="97.9644%" y="1941" width="0.0395%" height="15" fill="rgb(220,157,5)" fg:x="161320" fg:w="65"/><text x="98.2144%" y="1951.50"></text></g><g><title>mio::poll::Poll::poll (35 samples, 0.02%)</title><rect x="97.9827%" y="1925" width="0.0213%" height="15" fill="rgb(253,137,8)" fg:x="161350" fg:w="35"/><text x="98.2327%" y="1935.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (35 samples, 0.02%)</title><rect x="97.9827%" y="1909" width="0.0213%" height="15" fill="rgb(217,137,51)" fg:x="161350" fg:w="35"/><text x="98.2327%" y="1919.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (59 samples, 0.04%)</title><rect x="98.0865%" y="1925" width="0.0358%" height="15" fill="rgb(218,209,53)" fg:x="161521" fg:w="59"/><text x="98.3365%" y="1935.50"></text></g><g><title>tokio::runtime::context::budget (59 samples, 0.04%)</title><rect x="98.0865%" y="1909" width="0.0358%" height="15" fill="rgb(249,137,25)" fg:x="161521" fg:w="59"/><text x="98.3365%" y="1919.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (59 samples, 0.04%)</title><rect x="98.0865%" y="1893" width="0.0358%" height="15" fill="rgb(239,155,26)" fg:x="161521" fg:w="59"/><text x="98.3365%" y="1903.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (59 samples, 0.04%)</title><rect x="98.0865%" y="1877" width="0.0358%" height="15" fill="rgb(227,85,46)" fg:x="161521" fg:w="59"/><text x="98.3365%" y="1887.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (59 samples, 0.04%)</title><rect x="98.0865%" y="1861" width="0.0358%" height="15" fill="rgb(251,107,43)" fg:x="161521" fg:w="59"/><text x="98.3365%" y="1871.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (59 samples, 0.04%)</title><rect x="98.0865%" y="1845" width="0.0358%" height="15" fill="rgb(234,170,33)" fg:x="161521" fg:w="59"/><text x="98.3365%" y="1855.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (202 samples, 0.12%)</title><rect x="98.0039%" y="1941" width="0.1227%" height="15" fill="rgb(206,29,35)" fg:x="161385" fg:w="202"/><text x="98.2539%" y="1951.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (39 samples, 0.02%)</title><rect x="98.1266%" y="1941" width="0.0237%" height="15" fill="rgb(227,138,25)" fg:x="161587" fg:w="39"/><text x="98.3766%" y="1951.50"></text></g><g><title>tokio::runtime::task::raw::poll (40 samples, 0.02%)</title><rect x="98.1721%" y="1941" width="0.0243%" height="15" fill="rgb(249,131,35)" fg:x="161662" fg:w="40"/><text x="98.4221%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.02%)</title><rect x="98.2292%" y="1877" width="0.0182%" height="15" fill="rgb(239,6,40)" fg:x="161756" fg:w="30"/><text x="98.4792%" y="1887.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.02%)</title><rect x="98.2292%" y="1861" width="0.0182%" height="15" fill="rgb(246,136,47)" fg:x="161756" fg:w="30"/><text x="98.4792%" y="1871.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (30 samples, 0.02%)</title><rect x="98.2292%" y="1845" width="0.0182%" height="15" fill="rgb(253,58,26)" fg:x="161756" fg:w="30"/><text x="98.4792%" y="1855.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (30 samples, 0.02%)</title><rect x="98.2292%" y="1829" width="0.0182%" height="15" fill="rgb(237,141,10)" fg:x="161756" fg:w="30"/><text x="98.4792%" y="1839.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (30 samples, 0.02%)</title><rect x="98.2292%" y="1813" width="0.0182%" height="15" fill="rgb(234,156,12)" fg:x="161756" fg:w="30"/><text x="98.4792%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (115 samples, 0.07%)</title><rect x="98.2292%" y="1925" width="0.0698%" height="15" fill="rgb(243,224,36)" fg:x="161756" fg:w="115"/><text x="98.4792%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (115 samples, 0.07%)</title><rect x="98.2292%" y="1909" width="0.0698%" height="15" fill="rgb(205,229,51)" fg:x="161756" fg:w="115"/><text x="98.4792%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (115 samples, 0.07%)</title><rect x="98.2292%" y="1893" width="0.0698%" height="15" fill="rgb(223,189,4)" fg:x="161756" fg:w="115"/><text x="98.4792%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.05%)</title><rect x="98.2474%" y="1877" width="0.0516%" height="15" fill="rgb(249,167,54)" fg:x="161786" fg:w="85"/><text x="98.4974%" y="1887.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (85 samples, 0.05%)</title><rect x="98.2474%" y="1861" width="0.0516%" height="15" fill="rgb(218,34,28)" fg:x="161786" fg:w="85"/><text x="98.4974%" y="1871.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (85 samples, 0.05%)</title><rect x="98.2474%" y="1845" width="0.0516%" height="15" fill="rgb(232,109,42)" fg:x="161786" fg:w="85"/><text x="98.4974%" y="1855.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (85 samples, 0.05%)</title><rect x="98.2474%" y="1829" width="0.0516%" height="15" fill="rgb(248,214,46)" fg:x="161786" fg:w="85"/><text x="98.4974%" y="1839.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (85 samples, 0.05%)</title><rect x="98.2474%" y="1813" width="0.0516%" height="15" fill="rgb(244,216,40)" fg:x="161786" fg:w="85"/><text x="98.4974%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 0.06%)</title><rect x="98.3051%" y="1845" width="0.0607%" height="15" fill="rgb(231,226,31)" fg:x="161881" fg:w="100"/><text x="98.5551%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (100 samples, 0.06%)</title><rect x="98.3051%" y="1829" width="0.0607%" height="15" fill="rgb(238,38,43)" fg:x="161881" fg:w="100"/><text x="98.5551%" y="1839.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (100 samples, 0.06%)</title><rect x="98.3051%" y="1813" width="0.0607%" height="15" fill="rgb(208,88,43)" fg:x="161881" fg:w="100"/><text x="98.5551%" y="1823.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (214 samples, 0.13%)</title><rect x="98.3051%" y="1909" width="0.1300%" height="15" fill="rgb(205,136,37)" fg:x="161881" fg:w="214"/><text x="98.5551%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (214 samples, 0.13%)</title><rect x="98.3051%" y="1893" width="0.1300%" height="15" fill="rgb(237,34,14)" fg:x="161881" fg:w="214"/><text x="98.5551%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (214 samples, 0.13%)</title><rect x="98.3051%" y="1877" width="0.1300%" height="15" fill="rgb(236,193,44)" fg:x="161881" fg:w="214"/><text x="98.5551%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (214 samples, 0.13%)</title><rect x="98.3051%" y="1861" width="0.1300%" height="15" fill="rgb(231,48,10)" fg:x="161881" fg:w="214"/><text x="98.5551%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.07%)</title><rect x="98.3658%" y="1845" width="0.0692%" height="15" fill="rgb(213,141,34)" fg:x="161981" fg:w="114"/><text x="98.6158%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (114 samples, 0.07%)</title><rect x="98.3658%" y="1829" width="0.0692%" height="15" fill="rgb(249,130,34)" fg:x="161981" fg:w="114"/><text x="98.6158%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (114 samples, 0.07%)</title><rect x="98.3658%" y="1813" width="0.0692%" height="15" fill="rgb(219,42,41)" fg:x="161981" fg:w="114"/><text x="98.6158%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (114 samples, 0.07%)</title><rect x="98.3658%" y="1797" width="0.0692%" height="15" fill="rgb(224,100,54)" fg:x="161981" fg:w="114"/><text x="98.6158%" y="1807.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (114 samples, 0.07%)</title><rect x="98.3658%" y="1781" width="0.0692%" height="15" fill="rgb(229,200,27)" fg:x="161981" fg:w="114"/><text x="98.6158%" y="1791.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (227 samples, 0.14%)</title><rect x="98.3051%" y="1925" width="0.1378%" height="15" fill="rgb(217,118,10)" fg:x="161881" fg:w="227"/><text x="98.5551%" y="1935.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (418 samples, 0.25%)</title><rect x="98.2019%" y="1941" width="0.2538%" height="15" fill="rgb(206,22,3)" fg:x="161711" fg:w="418"/><text x="98.4519%" y="1951.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (21 samples, 0.01%)</title><rect x="98.4430%" y="1925" width="0.0128%" height="15" fill="rgb(232,163,46)" fg:x="162108" fg:w="21"/><text x="98.6930%" y="1935.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (200 samples, 0.12%)</title><rect x="98.4557%" y="1941" width="0.1215%" height="15" fill="rgb(206,95,13)" fg:x="162129" fg:w="200"/><text x="98.7057%" y="1951.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (76 samples, 0.05%)</title><rect x="98.5310%" y="1925" width="0.0462%" height="15" fill="rgb(253,154,18)" fg:x="162253" fg:w="76"/><text x="98.7810%" y="1935.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (76 samples, 0.05%)</title><rect x="98.5310%" y="1909" width="0.0462%" height="15" fill="rgb(219,32,23)" fg:x="162253" fg:w="76"/><text x="98.7810%" y="1919.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (242 samples, 0.15%)</title><rect x="98.5772%" y="1941" width="0.1470%" height="15" fill="rgb(230,191,45)" fg:x="162329" fg:w="242"/><text x="98.8272%" y="1951.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (29 samples, 0.02%)</title><rect x="98.7065%" y="1925" width="0.0176%" height="15" fill="rgb(229,64,36)" fg:x="162542" fg:w="29"/><text x="98.9565%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (29 samples, 0.02%)</title><rect x="98.7065%" y="1909" width="0.0176%" height="15" fill="rgb(205,129,25)" fg:x="162542" fg:w="29"/><text x="98.9565%" y="1919.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (22 samples, 0.01%)</title><rect x="98.7241%" y="1941" width="0.0134%" height="15" fill="rgb(254,112,7)" fg:x="162571" fg:w="22"/><text x="98.9741%" y="1951.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (42 samples, 0.03%)</title><rect x="98.7375%" y="1941" width="0.0255%" height="15" fill="rgb(226,53,48)" fg:x="162593" fg:w="42"/><text x="98.9875%" y="1951.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (136 samples, 0.08%)</title><rect x="98.7630%" y="1941" width="0.0826%" height="15" fill="rgb(214,153,38)" fg:x="162635" fg:w="136"/><text x="99.0130%" y="1951.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}} (21 samples, 0.01%)</title><rect x="98.8547%" y="1941" width="0.0128%" height="15" fill="rgb(243,101,7)" fg:x="162786" fg:w="21"/><text x="99.1047%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 0.01%)</title><rect x="98.8972%" y="1877" width="0.0115%" height="15" fill="rgb(240,140,22)" fg:x="162856" fg:w="19"/><text x="99.1472%" y="1887.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (83 samples, 0.05%)</title><rect x="98.8674%" y="1941" width="0.0504%" height="15" fill="rgb(235,114,2)" fg:x="162807" fg:w="83"/><text x="99.1174%" y="1951.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (34 samples, 0.02%)</title><rect x="98.8972%" y="1925" width="0.0206%" height="15" fill="rgb(242,59,12)" fg:x="162856" fg:w="34"/><text x="99.1472%" y="1935.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (34 samples, 0.02%)</title><rect x="98.8972%" y="1909" width="0.0206%" height="15" fill="rgb(252,134,9)" fg:x="162856" fg:w="34"/><text x="99.1472%" y="1919.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (34 samples, 0.02%)</title><rect x="98.8972%" y="1893" width="0.0206%" height="15" fill="rgb(236,4,44)" fg:x="162856" fg:w="34"/><text x="99.1472%" y="1903.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (18 samples, 0.01%)</title><rect x="98.9385%" y="1925" width="0.0109%" height="15" fill="rgb(254,172,41)" fg:x="162924" fg:w="18"/><text x="99.1885%" y="1935.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (18 samples, 0.01%)</title><rect x="98.9385%" y="1909" width="0.0109%" height="15" fill="rgb(244,63,20)" fg:x="162924" fg:w="18"/><text x="99.1885%" y="1919.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (18 samples, 0.01%)</title><rect x="98.9385%" y="1893" width="0.0109%" height="15" fill="rgb(250,73,31)" fg:x="162924" fg:w="18"/><text x="99.1885%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.01%)</title><rect x="98.9385%" y="1877" width="0.0109%" height="15" fill="rgb(241,38,36)" fg:x="162924" fg:w="18"/><text x="99.1885%" y="1887.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (98 samples, 0.06%)</title><rect x="98.9178%" y="1941" width="0.0595%" height="15" fill="rgb(245,211,2)" fg:x="162890" fg:w="98"/><text x="99.1678%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (46 samples, 0.03%)</title><rect x="98.9494%" y="1925" width="0.0279%" height="15" fill="rgb(206,120,28)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (46 samples, 0.03%)</title><rect x="98.9494%" y="1909" width="0.0279%" height="15" fill="rgb(211,59,34)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 0.03%)</title><rect x="98.9494%" y="1893" width="0.0279%" height="15" fill="rgb(233,168,5)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.03%)</title><rect x="98.9494%" y="1877" width="0.0279%" height="15" fill="rgb(234,33,13)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (46 samples, 0.03%)</title><rect x="98.9494%" y="1861" width="0.0279%" height="15" fill="rgb(231,150,26)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (46 samples, 0.03%)</title><rect x="98.9494%" y="1845" width="0.0279%" height="15" fill="rgb(217,191,4)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.03%)</title><rect x="98.9494%" y="1829" width="0.0279%" height="15" fill="rgb(246,198,38)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.03%)</title><rect x="98.9494%" y="1813" width="0.0279%" height="15" fill="rgb(245,64,37)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 0.03%)</title><rect x="98.9494%" y="1797" width="0.0279%" height="15" fill="rgb(250,30,36)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1807.50"></text></g><g><title>__rust_alloc (46 samples, 0.03%)</title><rect x="98.9494%" y="1781" width="0.0279%" height="15" fill="rgb(217,86,53)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1791.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (46 samples, 0.03%)</title><rect x="98.9494%" y="1765" width="0.0279%" height="15" fill="rgb(228,157,16)" fg:x="162942" fg:w="46"/><text x="99.1994%" y="1775.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (47 samples, 0.03%)</title><rect x="99.0205%" y="1925" width="0.0285%" height="15" fill="rgb(217,59,31)" fg:x="163059" fg:w="47"/><text x="99.2705%" y="1935.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (38 samples, 0.02%)</title><rect x="99.1031%" y="1893" width="0.0231%" height="15" fill="rgb(237,138,41)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1903.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (38 samples, 0.02%)</title><rect x="99.1031%" y="1877" width="0.0231%" height="15" fill="rgb(227,91,49)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1887.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (38 samples, 0.02%)</title><rect x="99.1031%" y="1861" width="0.0231%" height="15" fill="rgb(247,21,44)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1871.50"></text></g><g><title>alloc::alloc::exchange_malloc (38 samples, 0.02%)</title><rect x="99.1031%" y="1845" width="0.0231%" height="15" fill="rgb(219,210,51)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.02%)</title><rect x="99.1031%" y="1829" width="0.0231%" height="15" fill="rgb(209,140,6)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.02%)</title><rect x="99.1031%" y="1813" width="0.0231%" height="15" fill="rgb(221,188,24)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.02%)</title><rect x="99.1031%" y="1797" width="0.0231%" height="15" fill="rgb(232,154,20)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1807.50"></text></g><g><title>__rust_alloc (38 samples, 0.02%)</title><rect x="99.1031%" y="1781" width="0.0231%" height="15" fill="rgb(244,137,50)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1791.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (38 samples, 0.02%)</title><rect x="99.1031%" y="1765" width="0.0231%" height="15" fill="rgb(225,185,43)" fg:x="163195" fg:w="38"/><text x="99.3531%" y="1775.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (72 samples, 0.04%)</title><rect x="99.1261%" y="1893" width="0.0437%" height="15" fill="rgb(213,205,38)" fg:x="163233" fg:w="72"/><text x="99.3761%" y="1903.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (376 samples, 0.23%)</title><rect x="98.9774%" y="1941" width="0.2283%" height="15" fill="rgb(236,73,12)" fg:x="162988" fg:w="376"/><text x="99.2274%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (258 samples, 0.16%)</title><rect x="99.0490%" y="1925" width="0.1567%" height="15" fill="rgb(235,219,13)" fg:x="163106" fg:w="258"/><text x="99.2990%" y="1935.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (211 samples, 0.13%)</title><rect x="99.0776%" y="1909" width="0.1281%" height="15" fill="rgb(218,59,36)" fg:x="163153" fg:w="211"/><text x="99.3276%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (59 samples, 0.04%)</title><rect x="99.1699%" y="1893" width="0.0358%" height="15" fill="rgb(205,110,39)" fg:x="163305" fg:w="59"/><text x="99.4199%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (59 samples, 0.04%)</title><rect x="99.1699%" y="1877" width="0.0358%" height="15" fill="rgb(218,206,42)" fg:x="163305" fg:w="59"/><text x="99.4199%" y="1887.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.02%)</title><rect x="99.1808%" y="1861" width="0.0249%" height="15" fill="rgb(248,125,24)" fg:x="163323" fg:w="41"/><text x="99.4308%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.02%)</title><rect x="99.1808%" y="1845" width="0.0249%" height="15" fill="rgb(242,28,27)" fg:x="163323" fg:w="41"/><text x="99.4308%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.02%)</title><rect x="99.1808%" y="1829" width="0.0249%" height="15" fill="rgb(216,228,15)" fg:x="163323" fg:w="41"/><text x="99.4308%" y="1839.50"></text></g><g><title>__rust_dealloc (41 samples, 0.02%)</title><rect x="99.1808%" y="1813" width="0.0249%" height="15" fill="rgb(235,116,46)" fg:x="163323" fg:w="41"/><text x="99.4308%" y="1823.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (41 samples, 0.02%)</title><rect x="99.1808%" y="1797" width="0.0249%" height="15" fill="rgb(224,18,32)" fg:x="163323" fg:w="41"/><text x="99.4308%" y="1807.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (17 samples, 0.01%)</title><rect x="99.2057%" y="1941" width="0.0103%" height="15" fill="rgb(252,5,12)" fg:x="163364" fg:w="17"/><text x="99.4557%" y="1951.50"></text></g><g><title>[unknown] (4,585 samples, 2.78%)</title><rect x="96.4323%" y="1957" width="2.7843%" height="15" fill="rgb(251,36,5)" fg:x="158797" fg:w="4585"/><text x="96.6823%" y="1967.50">[u..</text></g><g><title>__send (37 samples, 0.02%)</title><rect x="99.2178%" y="1957" width="0.0225%" height="15" fill="rgb(217,53,14)" fg:x="163384" fg:w="37"/><text x="99.4678%" y="1967.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (26 samples, 0.02%)</title><rect x="99.2871%" y="1941" width="0.0158%" height="15" fill="rgb(215,86,45)" fg:x="163498" fg:w="26"/><text x="99.5371%" y="1951.50"></text></g><g><title>_rjem_je_thp_mode_names (41 samples, 0.02%)</title><rect x="99.2810%" y="1957" width="0.0249%" height="15" fill="rgb(242,169,11)" fg:x="163488" fg:w="41"/><text x="99.5310%" y="1967.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (38 samples, 0.02%)</title><rect x="99.3223%" y="1957" width="0.0231%" height="15" fill="rgb(211,213,45)" fg:x="163556" fg:w="38"/><text x="99.5723%" y="1967.50"></text></g><g><title>epoll_wait (22 samples, 0.01%)</title><rect x="99.3454%" y="1957" width="0.0134%" height="15" fill="rgb(205,88,11)" fg:x="163594" fg:w="22"/><text x="99.5954%" y="1967.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (58 samples, 0.04%)</title><rect x="99.3654%" y="1829" width="0.0352%" height="15" fill="rgb(252,69,26)" fg:x="163627" fg:w="58"/><text x="99.6154%" y="1839.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (58 samples, 0.04%)</title><rect x="99.3654%" y="1813" width="0.0352%" height="15" fill="rgb(246,123,37)" fg:x="163627" fg:w="58"/><text x="99.6154%" y="1823.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (58 samples, 0.04%)</title><rect x="99.3654%" y="1797" width="0.0352%" height="15" fill="rgb(212,205,5)" fg:x="163627" fg:w="58"/><text x="99.6154%" y="1807.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (58 samples, 0.04%)</title><rect x="99.3654%" y="1781" width="0.0352%" height="15" fill="rgb(253,148,0)" fg:x="163627" fg:w="58"/><text x="99.6154%" y="1791.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (58 samples, 0.04%)</title><rect x="99.3654%" y="1765" width="0.0352%" height="15" fill="rgb(239,22,4)" fg:x="163627" fg:w="58"/><text x="99.6154%" y="1775.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (58 samples, 0.04%)</title><rect x="99.3654%" y="1749" width="0.0352%" height="15" fill="rgb(226,26,53)" fg:x="163627" fg:w="58"/><text x="99.6154%" y="1759.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (58 samples, 0.04%)</title><rect x="99.3654%" y="1733" width="0.0352%" height="15" fill="rgb(225,229,45)" fg:x="163627" fg:w="58"/><text x="99.6154%" y="1743.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (114 samples, 0.07%)</title><rect x="99.3654%" y="1845" width="0.0692%" height="15" fill="rgb(220,60,37)" fg:x="163627" fg:w="114"/><text x="99.6154%" y="1855.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (51 samples, 0.03%)</title><rect x="99.4037%" y="1829" width="0.0310%" height="15" fill="rgb(217,180,35)" fg:x="163690" fg:w="51"/><text x="99.6537%" y="1839.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (51 samples, 0.03%)</title><rect x="99.4037%" y="1813" width="0.0310%" height="15" fill="rgb(229,7,53)" fg:x="163690" fg:w="51"/><text x="99.6537%" y="1823.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (51 samples, 0.03%)</title><rect x="99.4037%" y="1797" width="0.0310%" height="15" fill="rgb(254,137,3)" fg:x="163690" fg:w="51"/><text x="99.6537%" y="1807.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (51 samples, 0.03%)</title><rect x="99.4037%" y="1781" width="0.0310%" height="15" fill="rgb(215,140,41)" fg:x="163690" fg:w="51"/><text x="99.6537%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (51 samples, 0.03%)</title><rect x="99.4037%" y="1765" width="0.0310%" height="15" fill="rgb(250,80,15)" fg:x="163690" fg:w="51"/><text x="99.6537%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (51 samples, 0.03%)</title><rect x="99.4037%" y="1749" width="0.0310%" height="15" fill="rgb(252,191,6)" fg:x="163690" fg:w="51"/><text x="99.6537%" y="1759.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (51 samples, 0.03%)</title><rect x="99.4037%" y="1733" width="0.0310%" height="15" fill="rgb(246,217,18)" fg:x="163690" fg:w="51"/><text x="99.6537%" y="1743.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="99.4346%" y="1829" width="0.0152%" height="15" fill="rgb(223,93,7)" fg:x="163741" fg:w="25"/><text x="99.6846%" y="1839.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (25 samples, 0.02%)</title><rect x="99.4346%" y="1813" width="0.0152%" height="15" fill="rgb(225,55,52)" fg:x="163741" fg:w="25"/><text x="99.6846%" y="1823.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (25 samples, 0.02%)</title><rect x="99.4346%" y="1797" width="0.0152%" height="15" fill="rgb(240,31,24)" fg:x="163741" fg:w="25"/><text x="99.6846%" y="1807.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (201 samples, 0.12%)</title><rect x="99.3587%" y="1957" width="0.1221%" height="15" fill="rgb(205,56,52)" fg:x="163616" fg:w="201"/><text x="99.6087%" y="1967.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (192 samples, 0.12%)</title><rect x="99.3642%" y="1941" width="0.1166%" height="15" fill="rgb(246,146,12)" fg:x="163625" fg:w="192"/><text x="99.6142%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (192 samples, 0.12%)</title><rect x="99.3642%" y="1925" width="0.1166%" height="15" fill="rgb(239,84,36)" fg:x="163625" fg:w="192"/><text x="99.6142%" y="1935.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (190 samples, 0.12%)</title><rect x="99.3654%" y="1909" width="0.1154%" height="15" fill="rgb(207,41,40)" fg:x="163627" fg:w="190"/><text x="99.6154%" y="1919.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (190 samples, 0.12%)</title><rect x="99.3654%" y="1893" width="0.1154%" height="15" fill="rgb(241,179,25)" fg:x="163627" fg:w="190"/><text x="99.6154%" y="1903.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (190 samples, 0.12%)</title><rect x="99.3654%" y="1877" width="0.1154%" height="15" fill="rgb(210,0,34)" fg:x="163627" fg:w="190"/><text x="99.6154%" y="1887.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (190 samples, 0.12%)</title><rect x="99.3654%" y="1861" width="0.1154%" height="15" fill="rgb(225,217,29)" fg:x="163627" fg:w="190"/><text x="99.6154%" y="1871.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (76 samples, 0.05%)</title><rect x="99.4346%" y="1845" width="0.0462%" height="15" fill="rgb(216,191,38)" fg:x="163741" fg:w="76"/><text x="99.6846%" y="1855.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write::_{{closure}} (51 samples, 0.03%)</title><rect x="99.4498%" y="1829" width="0.0310%" height="15" fill="rgb(232,140,52)" fg:x="163766" fg:w="51"/><text x="99.6998%" y="1839.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (18 samples, 0.01%)</title><rect x="99.4893%" y="1957" width="0.0109%" height="15" fill="rgb(223,158,51)" fg:x="163831" fg:w="18"/><text x="99.7393%" y="1967.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (22 samples, 0.01%)</title><rect x="99.5039%" y="1957" width="0.0134%" height="15" fill="rgb(235,29,51)" fg:x="163855" fg:w="22"/><text x="99.7539%" y="1967.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (17 samples, 0.01%)</title><rect x="99.5172%" y="1957" width="0.0103%" height="15" fill="rgb(215,181,18)" fg:x="163877" fg:w="17"/><text x="99.7672%" y="1967.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (25 samples, 0.02%)</title><rect x="99.5324%" y="1957" width="0.0152%" height="15" fill="rgb(227,125,34)" fg:x="163902" fg:w="25"/><text x="99.7824%" y="1967.50"></text></g><g><title>recv (27 samples, 0.02%)</title><rect x="99.5701%" y="1957" width="0.0164%" height="15" fill="rgb(230,197,49)" fg:x="163964" fg:w="27"/><text x="99.8201%" y="1967.50"></text></g><g><title>std::time::Instant::now (29 samples, 0.02%)</title><rect x="99.5962%" y="1957" width="0.0176%" height="15" fill="rgb(239,141,16)" fg:x="164007" fg:w="29"/><text x="99.8462%" y="1967.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (29 samples, 0.02%)</title><rect x="99.5962%" y="1941" width="0.0176%" height="15" fill="rgb(225,105,43)" fg:x="164007" fg:w="29"/><text x="99.8462%" y="1951.50"></text></g><g><title>tokio::runtime::task::raw::poll (73 samples, 0.04%)</title><rect x="99.6265%" y="1957" width="0.0443%" height="15" fill="rgb(214,131,14)" fg:x="164057" fg:w="73"/><text x="99.8765%" y="1967.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (18 samples, 0.01%)</title><rect x="99.6733%" y="1957" width="0.0109%" height="15" fill="rgb(229,177,11)" fg:x="164134" fg:w="18"/><text x="99.9233%" y="1967.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (81 samples, 0.05%)</title><rect x="99.6848%" y="1957" width="0.0492%" height="15" fill="rgb(231,180,14)" fg:x="164153" fg:w="81"/><text x="99.9348%" y="1967.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (80 samples, 0.05%)</title><rect x="99.6854%" y="1941" width="0.0486%" height="15" fill="rgb(232,88,2)" fg:x="164154" fg:w="80"/><text x="99.9354%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (80 samples, 0.05%)</title><rect x="99.6854%" y="1925" width="0.0486%" height="15" fill="rgb(205,220,8)" fg:x="164154" fg:w="80"/><text x="99.9354%" y="1935.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (33 samples, 0.02%)</title><rect x="99.7340%" y="1957" width="0.0200%" height="15" fill="rgb(225,23,53)" fg:x="164234" fg:w="33"/><text x="99.9840%" y="1967.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::handle_packet::_{{closure}} (35 samples, 0.02%)</title><rect x="99.7577%" y="1957" width="0.0213%" height="15" fill="rgb(213,62,29)" fg:x="164273" fg:w="35"/><text x="100.0077%" y="1967.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (136 samples, 0.08%)</title><rect x="99.8117%" y="1925" width="0.0826%" height="15" fill="rgb(227,75,7)" fg:x="164362" fg:w="136"/><text x="100.0617%" y="1935.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (136 samples, 0.08%)</title><rect x="99.8117%" y="1909" width="0.0826%" height="15" fill="rgb(207,105,14)" fg:x="164362" fg:w="136"/><text x="100.0617%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (136 samples, 0.08%)</title><rect x="99.8117%" y="1893" width="0.0826%" height="15" fill="rgb(245,62,29)" fg:x="164362" fg:w="136"/><text x="100.0617%" y="1903.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}} (223 samples, 0.14%)</title><rect x="99.7790%" y="1957" width="0.1354%" height="15" fill="rgb(236,202,4)" fg:x="164308" fg:w="223"/><text x="100.0290%" y="1967.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (200 samples, 0.12%)</title><rect x="99.7929%" y="1941" width="0.1215%" height="15" fill="rgb(250,67,1)" fg:x="164331" fg:w="200"/><text x="100.0429%" y="1951.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::process_wisp_message::_{{closure}} (33 samples, 0.02%)</title><rect x="99.8943%" y="1925" width="0.0200%" height="15" fill="rgb(253,115,44)" fg:x="164498" fg:w="33"/><text x="100.1443%" y="1935.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (33 samples, 0.02%)</title><rect x="99.8943%" y="1909" width="0.0200%" height="15" fill="rgb(251,139,18)" fg:x="164498" fg:w="33"/><text x="100.1443%" y="1919.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (23 samples, 0.01%)</title><rect x="99.9484%" y="1893" width="0.0140%" height="15" fill="rgb(218,22,32)" fg:x="164587" fg:w="23"/><text x="100.1984%" y="1903.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (91 samples, 0.06%)</title><rect x="99.9144%" y="1957" width="0.0553%" height="15" fill="rgb(243,53,5)" fg:x="164531" fg:w="91"/><text x="100.1644%" y="1967.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (35 samples, 0.02%)</title><rect x="99.9484%" y="1941" width="0.0213%" height="15" fill="rgb(227,56,16)" fg:x="164587" fg:w="35"/><text x="100.1984%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="99.9484%" y="1925" width="0.0213%" height="15" fill="rgb(245,53,0)" fg:x="164587" fg:w="35"/><text x="100.1984%" y="1935.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="99.9484%" y="1909" width="0.0213%" height="15" fill="rgb(216,170,35)" fg:x="164587" fg:w="35"/><text x="100.1984%" y="1919.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (18 samples, 0.01%)</title><rect x="99.9696%" y="1957" width="0.0109%" height="15" fill="rgb(211,200,8)" fg:x="164622" fg:w="18"/><text x="100.2196%" y="1967.50"></text></g><g><title>all (164,672 samples, 100%)</title><rect x="0.0000%" y="1989" width="100.0000%" height="15" fill="rgb(228,204,44)" fg:x="0" fg:w="164672"/><text x="0.2500%" y="1999.50"></text></g><g><title>tokio-runtime-w (164,650 samples, 99.99%)</title><rect x="0.0134%" y="1973" width="99.9866%" height="15" fill="rgb(214,121,17)" fg:x="22" fg:w="164650"/><text x="0.2634%" y="1983.50">tokio-runtime-w</text></g><g><title>writev (26 samples, 0.02%)</title><rect x="99.9842%" y="1957" width="0.0158%" height="15" fill="rgb(233,64,38)" fg:x="164646" fg:w="26"/><text x="100.2342%" y="1967.50"></text></g></svg></svg>