<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2102" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2085.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2085.00"> </text><svg id="frames" x="10" width="1180" total_samples="47347"><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.01%)</title><rect x="0.0021%" y="2021" width="0.0106%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="5"/><text x="0.2521%" y="2031.50"></text></g><g><title>[libc.so.6] (79 samples, 0.17%)</title><rect x="0.0127%" y="2021" width="0.1669%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="79"/><text x="0.2627%" y="2031.50"></text></g><g><title>[libc.so.6] (20 samples, 0.04%)</title><rect x="0.1373%" y="2005" width="0.0422%" height="15" fill="rgb(221,193,54)" fg:x="65" fg:w="20"/><text x="0.3873%" y="2015.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (6 samples, 0.01%)</title><rect x="0.1669%" y="1989" width="0.0127%" height="15" fill="rgb(248,212,6)" fg:x="79" fg:w="6"/><text x="0.4169%" y="1999.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (6 samples, 0.01%)</title><rect x="0.1669%" y="1973" width="0.0127%" height="15" fill="rgb(208,68,35)" fg:x="79" fg:w="6"/><text x="0.4169%" y="1983.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (6 samples, 0.01%)</title><rect x="0.1669%" y="1957" width="0.0127%" height="15" fill="rgb(232,128,0)" fg:x="79" fg:w="6"/><text x="0.4169%" y="1967.50"></text></g><g><title>epoxy-server (93 samples, 0.20%)</title><rect x="0.0000%" y="2037" width="0.1964%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="93"/><text x="0.2500%" y="2047.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="0.1964%" y="2021" width="0.0127%" height="15" fill="rgb(228,23,34)" fg:x="93" fg:w="6"/><text x="0.4464%" y="2031.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.03%)</title><rect x="0.2091%" y="2021" width="0.0253%" height="15" fill="rgb(218,30,26)" fg:x="99" fg:w="12"/><text x="0.4591%" y="2031.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (7 samples, 0.01%)</title><rect x="0.2344%" y="2021" width="0.0148%" height="15" fill="rgb(220,122,19)" fg:x="111" fg:w="7"/><text x="0.4844%" y="2031.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="0.2556%" y="2005" width="0.0106%" height="15" fill="rgb(250,228,42)" fg:x="121" fg:w="5"/><text x="0.5056%" y="2015.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (18 samples, 0.04%)</title><rect x="0.2682%" y="2005" width="0.0380%" height="15" fill="rgb(240,193,28)" fg:x="127" fg:w="18"/><text x="0.5182%" y="2015.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (39 samples, 0.08%)</title><rect x="0.3062%" y="2005" width="0.0824%" height="15" fill="rgb(216,20,37)" fg:x="145" fg:w="39"/><text x="0.5562%" y="2015.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (9 samples, 0.02%)</title><rect x="0.3696%" y="1989" width="0.0190%" height="15" fill="rgb(206,188,39)" fg:x="175" fg:w="9"/><text x="0.6196%" y="1999.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (28 samples, 0.06%)</title><rect x="0.3886%" y="2005" width="0.0591%" height="15" fill="rgb(217,207,13)" fg:x="184" fg:w="28"/><text x="0.6386%" y="2015.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (9 samples, 0.02%)</title><rect x="0.4478%" y="2005" width="0.0190%" height="15" fill="rgb(231,73,38)" fg:x="212" fg:w="9"/><text x="0.6978%" y="2015.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="0.4668%" y="2005" width="0.0296%" height="15" fill="rgb(225,20,46)" fg:x="221" fg:w="14"/><text x="0.7168%" y="2015.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (84 samples, 0.18%)</title><rect x="0.4963%" y="2005" width="0.1774%" height="15" fill="rgb(210,31,41)" fg:x="235" fg:w="84"/><text x="0.7463%" y="2015.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="0.6737%" y="2005" width="0.0169%" height="15" fill="rgb(221,200,47)" fg:x="319" fg:w="8"/><text x="0.9237%" y="2015.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (7 samples, 0.01%)</title><rect x="0.6759%" y="1989" width="0.0148%" height="15" fill="rgb(226,26,5)" fg:x="320" fg:w="7"/><text x="0.9259%" y="1999.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (7 samples, 0.01%)</title><rect x="0.6759%" y="1973" width="0.0148%" height="15" fill="rgb(249,33,26)" fg:x="320" fg:w="7"/><text x="0.9259%" y="1983.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (29 samples, 0.06%)</title><rect x="0.6906%" y="2005" width="0.0612%" height="15" fill="rgb(235,183,28)" fg:x="327" fg:w="29"/><text x="0.9406%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (9 samples, 0.02%)</title><rect x="0.7329%" y="1989" width="0.0190%" height="15" fill="rgb(221,5,38)" fg:x="347" fg:w="9"/><text x="0.9829%" y="1999.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (5 samples, 0.01%)</title><rect x="0.7413%" y="1973" width="0.0106%" height="15" fill="rgb(247,18,42)" fg:x="351" fg:w="5"/><text x="0.9913%" y="1983.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (14 samples, 0.03%)</title><rect x="0.7519%" y="2005" width="0.0296%" height="15" fill="rgb(241,131,45)" fg:x="356" fg:w="14"/><text x="1.0019%" y="2015.50"></text></g><g><title>[libc.so.6] (29 samples, 0.06%)</title><rect x="0.7836%" y="2005" width="0.0612%" height="15" fill="rgb(249,31,29)" fg:x="371" fg:w="29"/><text x="1.0336%" y="2015.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h4eb7268d3777a612E (7 samples, 0.01%)</title><rect x="0.8448%" y="2005" width="0.0148%" height="15" fill="rgb(225,111,53)" fg:x="400" fg:w="7"/><text x="1.0948%" y="2015.50"></text></g><g><title>_ZN4core3ptr1130drop_in_place$LT$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17hee23a8ecea88e3c9E (10 samples, 0.02%)</title><rect x="0.8681%" y="2005" width="0.0211%" height="15" fill="rgb(238,160,17)" fg:x="411" fg:w="10"/><text x="1.1181%" y="2015.50"></text></g><g><title>_ZN4core3ptr1139drop_in_place$LT$wisp_mux..stream..MuxStreamWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_payload_internal..$u7b$$u7b$closure$u7d$$u7d$$GT$17h77875a1a59d78a7eE (11 samples, 0.02%)</title><rect x="0.8892%" y="2005" width="0.0232%" height="15" fill="rgb(214,148,48)" fg:x="421" fg:w="11"/><text x="1.1392%" y="2015.50"></text></g><g><title>_ZN4core3ptr1141drop_in_place$LT$$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$u20$as$u20$wisp_mux..ws..WebSocketWrite$GT$..wisp_write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17hc5896ef9fe9e10c8E (40 samples, 0.08%)</title><rect x="0.9124%" y="2005" width="0.0845%" height="15" fill="rgb(232,36,49)" fg:x="432" fg:w="40"/><text x="1.1624%" y="2015.50"></text></g><g><title>_ZN4core3ptr1952drop_in_place$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2d161bfd68533904E (12 samples, 0.03%)</title><rect x="0.9969%" y="2005" width="0.0253%" height="15" fill="rgb(209,103,24)" fg:x="472" fg:w="12"/><text x="1.2469%" y="2015.50"></text></g><g><title>_ZN4core3ptr2242drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..process_wisp_message..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5428a0f193db5b34E (6 samples, 0.01%)</title><rect x="1.0286%" y="2005" width="0.0127%" height="15" fill="rgb(229,88,8)" fg:x="487" fg:w="6"/><text x="1.2786%" y="2015.50"></text></g><g><title>_ZN4core3ptr4591drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hfb65917b7f5c0ce3E (14 samples, 0.03%)</title><rect x="1.0455%" y="2005" width="0.0296%" height="15" fill="rgb(213,181,19)" fg:x="495" fg:w="14"/><text x="1.2955%" y="2015.50"></text></g><g><title>__floattidf (34 samples, 0.07%)</title><rect x="1.0750%" y="2005" width="0.0718%" height="15" fill="rgb(254,191,54)" fg:x="509" fg:w="34"/><text x="1.3250%" y="2015.50"></text></g><g><title>__vdso_clock_gettime (8 samples, 0.02%)</title><rect x="1.1532%" y="2005" width="0.0169%" height="15" fill="rgb(241,83,37)" fg:x="546" fg:w="8"/><text x="1.4032%" y="2015.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (8 samples, 0.02%)</title><rect x="1.1701%" y="2005" width="0.0169%" height="15" fill="rgb(233,36,39)" fg:x="554" fg:w="8"/><text x="1.4201%" y="2015.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (6 samples, 0.01%)</title><rect x="1.1912%" y="2005" width="0.0127%" height="15" fill="rgb(226,3,54)" fg:x="564" fg:w="6"/><text x="1.4412%" y="2015.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (9 samples, 0.02%)</title><rect x="1.2039%" y="2005" width="0.0190%" height="15" fill="rgb(245,192,40)" fg:x="570" fg:w="9"/><text x="1.4539%" y="2015.50"></text></g><g><title>_rjem_je_arena_malloc_hard (10 samples, 0.02%)</title><rect x="1.2229%" y="2005" width="0.0211%" height="15" fill="rgb(238,167,29)" fg:x="579" fg:w="10"/><text x="1.4729%" y="2015.50"></text></g><g><title>_rjem_je_base_ehooks_get (5 samples, 0.01%)</title><rect x="1.2482%" y="2005" width="0.0106%" height="15" fill="rgb(232,182,51)" fg:x="591" fg:w="5"/><text x="1.4982%" y="2015.50"></text></g><g><title>_rjem_je_ecache_alloc (9 samples, 0.02%)</title><rect x="1.2630%" y="2005" width="0.0190%" height="15" fill="rgb(231,60,39)" fg:x="598" fg:w="9"/><text x="1.5130%" y="2015.50"></text></g><g><title>_rjem_je_edata_avail_remove (18 samples, 0.04%)</title><rect x="1.2905%" y="2005" width="0.0380%" height="15" fill="rgb(208,69,12)" fg:x="611" fg:w="18"/><text x="1.5405%" y="2015.50"></text></g><g><title>_rjem_je_edata_heap_first (5 samples, 0.01%)</title><rect x="1.3412%" y="2005" width="0.0106%" height="15" fill="rgb(235,93,37)" fg:x="635" fg:w="5"/><text x="1.5912%" y="2015.50"></text></g><g><title>_rjem_je_edata_heap_insert (5 samples, 0.01%)</title><rect x="1.3517%" y="2005" width="0.0106%" height="15" fill="rgb(213,116,39)" fg:x="640" fg:w="5"/><text x="1.6017%" y="2015.50"></text></g><g><title>_rjem_je_edata_heap_remove (11 samples, 0.02%)</title><rect x="1.3623%" y="2005" width="0.0232%" height="15" fill="rgb(222,207,29)" fg:x="645" fg:w="11"/><text x="1.6123%" y="2015.50"></text></g><g><title>_rjem_je_emap_merge_prepare (6 samples, 0.01%)</title><rect x="1.3919%" y="2005" width="0.0127%" height="15" fill="rgb(206,96,30)" fg:x="659" fg:w="6"/><text x="1.6419%" y="2015.50"></text></g><g><title>_rjem_je_emap_remap (8 samples, 0.02%)</title><rect x="1.4109%" y="2005" width="0.0169%" height="15" fill="rgb(218,138,4)" fg:x="668" fg:w="8"/><text x="1.6609%" y="2015.50"></text></g><g><title>_rjem_je_emap_split_prepare (6 samples, 0.01%)</title><rect x="1.4278%" y="2005" width="0.0127%" height="15" fill="rgb(250,191,14)" fg:x="676" fg:w="6"/><text x="1.6778%" y="2015.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (18 samples, 0.04%)</title><rect x="1.4404%" y="2005" width="0.0380%" height="15" fill="rgb(239,60,40)" fg:x="682" fg:w="18"/><text x="1.6904%" y="2015.50"></text></g><g><title>_rjem_je_emap_update_edata_state (13 samples, 0.03%)</title><rect x="1.4784%" y="2005" width="0.0275%" height="15" fill="rgb(206,27,48)" fg:x="700" fg:w="13"/><text x="1.7284%" y="2015.50"></text></g><g><title>_rjem_je_eset_fit (6 samples, 0.01%)</title><rect x="1.5059%" y="2005" width="0.0127%" height="15" fill="rgb(225,35,8)" fg:x="713" fg:w="6"/><text x="1.7559%" y="2015.50"></text></g><g><title>_rjem_je_eset_insert (9 samples, 0.02%)</title><rect x="1.5186%" y="2005" width="0.0190%" height="15" fill="rgb(250,213,24)" fg:x="719" fg:w="9"/><text x="1.7686%" y="2015.50"></text></g><g><title>_rjem_je_eset_remove (17 samples, 0.04%)</title><rect x="1.5376%" y="2005" width="0.0359%" height="15" fill="rgb(247,123,22)" fg:x="728" fg:w="17"/><text x="1.7876%" y="2015.50"></text></g><g><title>_rjem_je_extent_commit_zero (10 samples, 0.02%)</title><rect x="1.5735%" y="2005" width="0.0211%" height="15" fill="rgb(231,138,38)" fg:x="745" fg:w="10"/><text x="1.8235%" y="2015.50"></text></g><g><title>_rjem_je_extent_record (16 samples, 0.03%)</title><rect x="1.5967%" y="2005" width="0.0338%" height="15" fill="rgb(231,145,46)" fg:x="756" fg:w="16"/><text x="1.8467%" y="2015.50"></text></g><g><title>_rjem_je_large_palloc (7 samples, 0.01%)</title><rect x="1.6305%" y="2005" width="0.0148%" height="15" fill="rgb(251,118,11)" fg:x="772" fg:w="7"/><text x="1.8805%" y="2015.50"></text></g><g><title>_rjem_je_malloc_default (17 samples, 0.04%)</title><rect x="1.6453%" y="2005" width="0.0359%" height="15" fill="rgb(217,147,25)" fg:x="779" fg:w="17"/><text x="1.8953%" y="2015.50"></text></g><g><title>_rjem_je_pa_alloc (20 samples, 0.04%)</title><rect x="1.6918%" y="2005" width="0.0422%" height="15" fill="rgb(247,81,37)" fg:x="801" fg:w="20"/><text x="1.9418%" y="2015.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.01%)</title><rect x="1.7636%" y="2005" width="0.0106%" height="15" fill="rgb(209,12,38)" fg:x="835" fg:w="5"/><text x="2.0136%" y="2015.50"></text></g><g><title>_rjem_je_te_event_trigger (7 samples, 0.01%)</title><rect x="1.7974%" y="2005" width="0.0148%" height="15" fill="rgb(227,1,9)" fg:x="851" fg:w="7"/><text x="2.0474%" y="2015.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (29 samples, 0.06%)</title><rect x="1.8206%" y="2005" width="0.0612%" height="15" fill="rgb(248,47,43)" fg:x="862" fg:w="29"/><text x="2.0706%" y="2015.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (24 samples, 0.05%)</title><rect x="1.8312%" y="1989" width="0.0507%" height="15" fill="rgb(221,10,30)" fg:x="867" fg:w="24"/><text x="2.0812%" y="1999.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (24 samples, 0.05%)</title><rect x="1.8312%" y="1973" width="0.0507%" height="15" fill="rgb(210,229,1)" fg:x="867" fg:w="24"/><text x="2.0812%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (8 samples, 0.02%)</title><rect x="1.8819%" y="2005" width="0.0169%" height="15" fill="rgb(222,148,37)" fg:x="891" fg:w="8"/><text x="2.1319%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.01%)</title><rect x="1.9368%" y="1989" width="0.0148%" height="15" fill="rgb(234,67,33)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="1.9368%" y="1973" width="0.0148%" height="15" fill="rgb(247,98,35)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="1.9368%" y="1957" width="0.0148%" height="15" fill="rgb(247,138,52)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="1.9368%" y="1941" width="0.0148%" height="15" fill="rgb(213,79,30)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.01%)</title><rect x="1.9368%" y="1925" width="0.0148%" height="15" fill="rgb(246,177,23)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.01%)</title><rect x="1.9368%" y="1909" width="0.0148%" height="15" fill="rgb(230,62,27)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="1.9368%" y="1893" width="0.0148%" height="15" fill="rgb(216,154,8)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.01%)</title><rect x="1.9368%" y="1877" width="0.0148%" height="15" fill="rgb(244,35,45)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1887.50"></text></g><g><title>__rust_alloc (7 samples, 0.01%)</title><rect x="1.9368%" y="1861" width="0.0148%" height="15" fill="rgb(251,115,12)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.01%)</title><rect x="1.9368%" y="1845" width="0.0148%" height="15" fill="rgb(240,54,50)" fg:x="917" fg:w="7"/><text x="2.1868%" y="1855.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (26 samples, 0.05%)</title><rect x="1.8987%" y="2005" width="0.0549%" height="15" fill="rgb(233,84,52)" fg:x="899" fg:w="26"/><text x="2.1487%" y="2015.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (14 samples, 0.03%)</title><rect x="1.9600%" y="1989" width="0.0296%" height="15" fill="rgb(207,117,47)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1999.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (14 samples, 0.03%)</title><rect x="1.9600%" y="1973" width="0.0296%" height="15" fill="rgb(249,43,39)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.03%)</title><rect x="1.9600%" y="1957" width="0.0296%" height="15" fill="rgb(209,38,44)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1967.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.03%)</title><rect x="1.9600%" y="1941" width="0.0296%" height="15" fill="rgb(236,212,23)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.03%)</title><rect x="1.9600%" y="1925" width="0.0296%" height="15" fill="rgb(242,79,21)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.03%)</title><rect x="1.9600%" y="1909" width="0.0296%" height="15" fill="rgb(211,96,35)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.03%)</title><rect x="1.9600%" y="1893" width="0.0296%" height="15" fill="rgb(253,215,40)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1903.50"></text></g><g><title>__rust_alloc (14 samples, 0.03%)</title><rect x="1.9600%" y="1877" width="0.0296%" height="15" fill="rgb(211,81,21)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1887.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.03%)</title><rect x="1.9600%" y="1861" width="0.0296%" height="15" fill="rgb(208,190,38)" fg:x="928" fg:w="14"/><text x="2.2100%" y="1871.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (42 samples, 0.09%)</title><rect x="1.9537%" y="2005" width="0.0887%" height="15" fill="rgb(235,213,38)" fg:x="925" fg:w="42"/><text x="2.2037%" y="2015.50"></text></g><g><title>core::fmt::Arguments::new_v1 (25 samples, 0.05%)</title><rect x="1.9896%" y="1989" width="0.0528%" height="15" fill="rgb(237,122,38)" fg:x="942" fg:w="25"/><text x="2.2396%" y="1999.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (58 samples, 0.12%)</title><rect x="2.0424%" y="2005" width="0.1225%" height="15" fill="rgb(244,218,35)" fg:x="967" fg:w="58"/><text x="2.2924%" y="2015.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (58 samples, 0.12%)</title><rect x="2.0424%" y="1989" width="0.1225%" height="15" fill="rgb(240,68,47)" fg:x="967" fg:w="58"/><text x="2.2924%" y="1999.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (58 samples, 0.12%)</title><rect x="2.0424%" y="1973" width="0.1225%" height="15" fill="rgb(210,16,53)" fg:x="967" fg:w="58"/><text x="2.2924%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (56 samples, 0.12%)</title><rect x="2.1775%" y="2005" width="0.1183%" height="15" fill="rgb(235,124,12)" fg:x="1031" fg:w="56"/><text x="2.4275%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (16 samples, 0.03%)</title><rect x="2.2958%" y="2005" width="0.0338%" height="15" fill="rgb(224,169,11)" fg:x="1087" fg:w="16"/><text x="2.5458%" y="2015.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="2.3169%" y="1989" width="0.0127%" height="15" fill="rgb(250,166,2)" fg:x="1097" fg:w="6"/><text x="2.5669%" y="1999.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (6 samples, 0.01%)</title><rect x="2.3169%" y="1973" width="0.0127%" height="15" fill="rgb(242,216,29)" fg:x="1097" fg:w="6"/><text x="2.5669%" y="1983.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (6 samples, 0.01%)</title><rect x="2.3169%" y="1957" width="0.0127%" height="15" fill="rgb(230,116,27)" fg:x="1097" fg:w="6"/><text x="2.5669%" y="1967.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (6 samples, 0.01%)</title><rect x="2.3169%" y="1941" width="0.0127%" height="15" fill="rgb(228,99,48)" fg:x="1097" fg:w="6"/><text x="2.5669%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;epoxy_server::util_chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="2.3296%" y="2005" width="0.0190%" height="15" fill="rgb(253,11,6)" fg:x="1103" fg:w="9"/><text x="2.5796%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_frame::{{closure}}&gt; (5 samples, 0.01%)</title><rect x="2.3486%" y="2005" width="0.0106%" height="15" fill="rgb(247,143,39)" fg:x="1112" fg:w="5"/><text x="2.5986%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (72 samples, 0.15%)</title><rect x="2.3592%" y="2005" width="0.1521%" height="15" fill="rgb(236,97,10)" fg:x="1117" fg:w="72"/><text x="2.6092%" y="2015.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (14 samples, 0.03%)</title><rect x="2.5112%" y="2005" width="0.0296%" height="15" fill="rgb(233,208,19)" fg:x="1189" fg:w="14"/><text x="2.7612%" y="2015.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (5 samples, 0.01%)</title><rect x="2.5429%" y="2005" width="0.0106%" height="15" fill="rgb(216,164,2)" fg:x="1204" fg:w="5"/><text x="2.7929%" y="2015.50"></text></g><g><title>extent_merge_impl (5 samples, 0.01%)</title><rect x="2.5598%" y="2005" width="0.0106%" height="15" fill="rgb(220,129,5)" fg:x="1212" fg:w="5"/><text x="2.8098%" y="2015.50"></text></g><g><title>extent_recycle (37 samples, 0.08%)</title><rect x="2.5704%" y="2005" width="0.0781%" height="15" fill="rgb(242,17,10)" fg:x="1217" fg:w="37"/><text x="2.8204%" y="2015.50"></text></g><g><title>extent_split_impl (8 samples, 0.02%)</title><rect x="2.6485%" y="2005" width="0.0169%" height="15" fill="rgb(242,107,0)" fg:x="1254" fg:w="8"/><text x="2.8985%" y="2015.50"></text></g><g><title>extent_try_coalesce_impl (14 samples, 0.03%)</title><rect x="2.6654%" y="2005" width="0.0296%" height="15" fill="rgb(251,28,31)" fg:x="1262" fg:w="14"/><text x="2.9154%" y="2015.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (28 samples, 0.06%)</title><rect x="2.6950%" y="2005" width="0.0591%" height="15" fill="rgb(233,223,10)" fg:x="1276" fg:w="28"/><text x="2.9450%" y="2015.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (9 samples, 0.02%)</title><rect x="2.7351%" y="1989" width="0.0190%" height="15" fill="rgb(215,21,27)" fg:x="1295" fg:w="9"/><text x="2.9851%" y="1999.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (79 samples, 0.17%)</title><rect x="2.7541%" y="2005" width="0.1669%" height="15" fill="rgb(232,23,21)" fg:x="1304" fg:w="79"/><text x="3.0041%" y="2015.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (22 samples, 0.05%)</title><rect x="2.8745%" y="1989" width="0.0465%" height="15" fill="rgb(244,5,23)" fg:x="1361" fg:w="22"/><text x="3.1245%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (20 samples, 0.04%)</title><rect x="2.8787%" y="1973" width="0.0422%" height="15" fill="rgb(226,81,46)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (20 samples, 0.04%)</title><rect x="2.8787%" y="1957" width="0.0422%" height="15" fill="rgb(247,70,30)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (20 samples, 0.04%)</title><rect x="2.8787%" y="1941" width="0.0422%" height="15" fill="rgb(212,68,19)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1951.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="2.8787%" y="1925" width="0.0422%" height="15" fill="rgb(240,187,13)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.04%)</title><rect x="2.8787%" y="1909" width="0.0422%" height="15" fill="rgb(223,113,26)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.04%)</title><rect x="2.8787%" y="1893" width="0.0422%" height="15" fill="rgb(206,192,2)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="2.8787%" y="1877" width="0.0422%" height="15" fill="rgb(241,108,4)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (20 samples, 0.04%)</title><rect x="2.8787%" y="1861" width="0.0422%" height="15" fill="rgb(247,173,49)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.04%)</title><rect x="2.8787%" y="1845" width="0.0422%" height="15" fill="rgb(224,114,35)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.04%)</title><rect x="2.8787%" y="1829" width="0.0422%" height="15" fill="rgb(245,159,27)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1839.50"></text></g><g><title>__rust_dealloc (20 samples, 0.04%)</title><rect x="2.8787%" y="1813" width="0.0422%" height="15" fill="rgb(245,172,44)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1823.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.04%)</title><rect x="2.8787%" y="1797" width="0.0422%" height="15" fill="rgb(236,23,11)" fg:x="1363" fg:w="20"/><text x="3.1287%" y="1807.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (20 samples, 0.04%)</title><rect x="2.9421%" y="1989" width="0.0422%" height="15" fill="rgb(205,117,38)" fg:x="1393" fg:w="20"/><text x="3.1921%" y="1999.50"></text></g><g><title>fastwebsockets::frame::Frame::write (33 samples, 0.07%)</title><rect x="2.9252%" y="2005" width="0.0697%" height="15" fill="rgb(237,72,25)" fg:x="1385" fg:w="33"/><text x="3.1752%" y="2015.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.01%)</title><rect x="2.9843%" y="1989" width="0.0106%" height="15" fill="rgb(244,70,9)" fg:x="1413" fg:w="5"/><text x="3.2343%" y="1999.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="2.9843%" y="1973" width="0.0106%" height="15" fill="rgb(217,125,39)" fg:x="1413" fg:w="5"/><text x="3.2343%" y="1983.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (7 samples, 0.01%)</title><rect x="2.9991%" y="2005" width="0.0148%" height="15" fill="rgb(235,36,10)" fg:x="1420" fg:w="7"/><text x="3.2491%" y="2015.50"></text></g><g><title>pac_alloc_impl (108 samples, 0.23%)</title><rect x="3.0203%" y="2005" width="0.2281%" height="15" fill="rgb(251,123,47)" fg:x="1430" fg:w="108"/><text x="3.2703%" y="2015.50"></text></g><g><title>pac_alloc_real (7 samples, 0.01%)</title><rect x="3.2484%" y="2005" width="0.0148%" height="15" fill="rgb(221,13,13)" fg:x="1538" fg:w="7"/><text x="3.4984%" y="2015.50"></text></g><g><title>pow (5 samples, 0.01%)</title><rect x="3.2716%" y="2005" width="0.0106%" height="15" fill="rgb(238,131,9)" fg:x="1549" fg:w="5"/><text x="3.5216%" y="2015.50"></text></g><g><title>pthread_mutex_trylock (39 samples, 0.08%)</title><rect x="3.2822%" y="2005" width="0.0824%" height="15" fill="rgb(211,50,8)" fg:x="1554" fg:w="39"/><text x="3.5322%" y="2015.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="3.3687%" y="2005" width="0.0106%" height="15" fill="rgb(245,182,24)" fg:x="1595" fg:w="5"/><text x="3.6187%" y="2015.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.01%)</title><rect x="3.3835%" y="2005" width="0.0106%" height="15" fill="rgb(242,14,37)" fg:x="1602" fg:w="5"/><text x="3.6335%" y="2015.50"></text></g><g><title>syscall (28 samples, 0.06%)</title><rect x="3.3941%" y="2005" width="0.0591%" height="15" fill="rgb(246,228,12)" fg:x="1607" fg:w="28"/><text x="3.6441%" y="2015.50"></text></g><g><title>tcache_gc_small (11 samples, 0.02%)</title><rect x="3.4553%" y="2005" width="0.0232%" height="15" fill="rgb(213,55,15)" fg:x="1636" fg:w="11"/><text x="3.7053%" y="2015.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (49 samples, 0.10%)</title><rect x="3.4786%" y="2005" width="0.1035%" height="15" fill="rgb(209,9,3)" fg:x="1647" fg:w="49"/><text x="3.7286%" y="2015.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (7 samples, 0.01%)</title><rect x="3.5673%" y="1989" width="0.0148%" height="15" fill="rgb(230,59,30)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1999.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (7 samples, 0.01%)</title><rect x="3.5673%" y="1973" width="0.0148%" height="15" fill="rgb(209,121,21)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1983.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (7 samples, 0.01%)</title><rect x="3.5673%" y="1957" width="0.0148%" height="15" fill="rgb(220,109,13)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1967.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (7 samples, 0.01%)</title><rect x="3.5673%" y="1941" width="0.0148%" height="15" fill="rgb(232,18,1)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (7 samples, 0.01%)</title><rect x="3.5673%" y="1925" width="0.0148%" height="15" fill="rgb(215,41,42)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1935.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (7 samples, 0.01%)</title><rect x="3.5673%" y="1909" width="0.0148%" height="15" fill="rgb(224,123,36)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1919.50"></text></g><g><title>std::sys_common::net::TcpStream::read (7 samples, 0.01%)</title><rect x="3.5673%" y="1893" width="0.0148%" height="15" fill="rgb(240,125,3)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1903.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (7 samples, 0.01%)</title><rect x="3.5673%" y="1877" width="0.0148%" height="15" fill="rgb(205,98,50)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1887.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (7 samples, 0.01%)</title><rect x="3.5673%" y="1861" width="0.0148%" height="15" fill="rgb(205,185,37)" fg:x="1689" fg:w="7"/><text x="3.8173%" y="1871.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (33 samples, 0.07%)</title><rect x="3.5821%" y="2005" width="0.0697%" height="15" fill="rgb(238,207,15)" fg:x="1696" fg:w="33"/><text x="3.8321%" y="2015.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (10 samples, 0.02%)</title><rect x="3.6306%" y="1989" width="0.0211%" height="15" fill="rgb(213,199,42)" fg:x="1719" fg:w="10"/><text x="3.8806%" y="1999.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (10 samples, 0.02%)</title><rect x="3.6306%" y="1973" width="0.0211%" height="15" fill="rgb(235,201,11)" fg:x="1719" fg:w="10"/><text x="3.8806%" y="1983.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (10 samples, 0.02%)</title><rect x="3.6306%" y="1957" width="0.0211%" height="15" fill="rgb(207,46,11)" fg:x="1719" fg:w="10"/><text x="3.8806%" y="1967.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (10 samples, 0.02%)</title><rect x="3.6306%" y="1941" width="0.0211%" height="15" fill="rgb(241,35,35)" fg:x="1719" fg:w="10"/><text x="3.8806%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (10 samples, 0.02%)</title><rect x="3.6306%" y="1925" width="0.0211%" height="15" fill="rgb(243,32,47)" fg:x="1719" fg:w="10"/><text x="3.8806%" y="1935.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (10 samples, 0.02%)</title><rect x="3.6306%" y="1909" width="0.0211%" height="15" fill="rgb(247,202,23)" fg:x="1719" fg:w="10"/><text x="3.8806%" y="1919.50"></text></g><g><title>std::sys_common::net::TcpStream::write (10 samples, 0.02%)</title><rect x="3.6306%" y="1893" width="0.0211%" height="15" fill="rgb(219,102,11)" fg:x="1719" fg:w="10"/><text x="3.8806%" y="1903.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (52 samples, 0.11%)</title><rect x="3.6518%" y="2005" width="0.1098%" height="15" fill="rgb(243,110,44)" fg:x="1729" fg:w="52"/><text x="3.9018%" y="2015.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (18 samples, 0.04%)</title><rect x="3.7236%" y="1989" width="0.0380%" height="15" fill="rgb(222,74,54)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1999.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (18 samples, 0.04%)</title><rect x="3.7236%" y="1973" width="0.0380%" height="15" fill="rgb(216,99,12)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1983.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (18 samples, 0.04%)</title><rect x="3.7236%" y="1957" width="0.0380%" height="15" fill="rgb(226,22,26)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1967.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (18 samples, 0.04%)</title><rect x="3.7236%" y="1941" width="0.0380%" height="15" fill="rgb(217,163,10)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (18 samples, 0.04%)</title><rect x="3.7236%" y="1925" width="0.0380%" height="15" fill="rgb(213,25,53)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1935.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (18 samples, 0.04%)</title><rect x="3.7236%" y="1909" width="0.0380%" height="15" fill="rgb(252,105,26)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1919.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (18 samples, 0.04%)</title><rect x="3.7236%" y="1893" width="0.0380%" height="15" fill="rgb(220,39,43)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1903.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (18 samples, 0.04%)</title><rect x="3.7236%" y="1877" width="0.0380%" height="15" fill="rgb(229,68,48)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1887.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (18 samples, 0.04%)</title><rect x="3.7236%" y="1861" width="0.0380%" height="15" fill="rgb(252,8,32)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1871.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (18 samples, 0.04%)</title><rect x="3.7236%" y="1845" width="0.0380%" height="15" fill="rgb(223,20,43)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1855.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (18 samples, 0.04%)</title><rect x="3.7236%" y="1829" width="0.0380%" height="15" fill="rgb(229,81,49)" fg:x="1763" fg:w="18"/><text x="3.9736%" y="1839.50"></text></g><g><title>tokio::runtime::driver::Driver::park (7 samples, 0.01%)</title><rect x="3.7658%" y="2005" width="0.0148%" height="15" fill="rgb(236,28,36)" fg:x="1783" fg:w="7"/><text x="4.0158%" y="2015.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (7 samples, 0.01%)</title><rect x="3.7848%" y="2005" width="0.0148%" height="15" fill="rgb(249,185,26)" fg:x="1792" fg:w="7"/><text x="4.0348%" y="2015.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (45 samples, 0.10%)</title><rect x="3.8081%" y="2005" width="0.0950%" height="15" fill="rgb(249,174,33)" fg:x="1803" fg:w="45"/><text x="4.0581%" y="2015.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (7 samples, 0.01%)</title><rect x="3.8883%" y="1989" width="0.0148%" height="15" fill="rgb(233,201,37)" fg:x="1841" fg:w="7"/><text x="4.1383%" y="1999.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="3.8883%" y="1973" width="0.0148%" height="15" fill="rgb(221,78,26)" fg:x="1841" fg:w="7"/><text x="4.1383%" y="1983.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (5 samples, 0.01%)</title><rect x="3.9031%" y="2005" width="0.0106%" height="15" fill="rgb(250,127,30)" fg:x="1848" fg:w="5"/><text x="4.1531%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (5 samples, 0.01%)</title><rect x="3.9221%" y="2005" width="0.0106%" height="15" fill="rgb(230,49,44)" fg:x="1857" fg:w="5"/><text x="4.1721%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (6 samples, 0.01%)</title><rect x="3.9411%" y="2005" width="0.0127%" height="15" fill="rgb(229,67,23)" fg:x="1866" fg:w="6"/><text x="4.1911%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (18 samples, 0.04%)</title><rect x="3.9538%" y="2005" width="0.0380%" height="15" fill="rgb(249,83,47)" fg:x="1872" fg:w="18"/><text x="4.2038%" y="2015.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.03%)</title><rect x="3.9643%" y="1989" width="0.0275%" height="15" fill="rgb(215,43,3)" fg:x="1877" fg:w="13"/><text x="4.2143%" y="1999.50"></text></g><g><title>core::mem::replace (13 samples, 0.03%)</title><rect x="3.9643%" y="1973" width="0.0275%" height="15" fill="rgb(238,154,13)" fg:x="1877" fg:w="13"/><text x="4.2143%" y="1983.50"></text></g><g><title>core::ptr::read (13 samples, 0.03%)</title><rect x="3.9643%" y="1957" width="0.0275%" height="15" fill="rgb(219,56,2)" fg:x="1877" fg:w="13"/><text x="4.2143%" y="1967.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (22 samples, 0.05%)</title><rect x="3.9918%" y="2005" width="0.0465%" height="15" fill="rgb(233,0,4)" fg:x="1890" fg:w="22"/><text x="4.2418%" y="2015.50"></text></g><g><title>tokio::runtime::coop::budget (15 samples, 0.03%)</title><rect x="4.0066%" y="1989" width="0.0317%" height="15" fill="rgb(235,30,7)" fg:x="1897" fg:w="15"/><text x="4.2566%" y="1999.50"></text></g><g><title>tokio::runtime::coop::with_budget (15 samples, 0.03%)</title><rect x="4.0066%" y="1973" width="0.0317%" height="15" fill="rgb(250,79,13)" fg:x="1897" fg:w="15"/><text x="4.2566%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (15 samples, 0.03%)</title><rect x="4.0066%" y="1957" width="0.0317%" height="15" fill="rgb(211,146,34)" fg:x="1897" fg:w="15"/><text x="4.2566%" y="1967.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (15 samples, 0.03%)</title><rect x="4.0066%" y="1941" width="0.0317%" height="15" fill="rgb(228,22,38)" fg:x="1897" fg:w="15"/><text x="4.2566%" y="1951.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (15 samples, 0.03%)</title><rect x="4.0066%" y="1925" width="0.0317%" height="15" fill="rgb(235,168,5)" fg:x="1897" fg:w="15"/><text x="4.2566%" y="1935.50"></text></g><g><title>tokio::runtime::signal::Driver::process (5 samples, 0.01%)</title><rect x="4.0446%" y="2005" width="0.0106%" height="15" fill="rgb(221,155,16)" fg:x="1915" fg:w="5"/><text x="4.2946%" y="2015.50"></text></g><g><title>tokio::runtime::task::raw::poll (9 samples, 0.02%)</title><rect x="4.0552%" y="2005" width="0.0190%" height="15" fill="rgb(215,215,53)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="2015.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9 samples, 0.02%)</title><rect x="4.0552%" y="1989" width="0.0190%" height="15" fill="rgb(223,4,10)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1999.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (9 samples, 0.02%)</title><rect x="4.0552%" y="1973" width="0.0190%" height="15" fill="rgb(234,103,6)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (9 samples, 0.02%)</title><rect x="4.0552%" y="1957" width="0.0190%" height="15" fill="rgb(227,97,0)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.02%)</title><rect x="4.0552%" y="1941" width="0.0190%" height="15" fill="rgb(234,150,53)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1951.50"></text></g><g><title>std::panicking::try (9 samples, 0.02%)</title><rect x="4.0552%" y="1925" width="0.0190%" height="15" fill="rgb(228,201,54)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.02%)</title><rect x="4.0552%" y="1909" width="0.0190%" height="15" fill="rgb(222,22,37)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1919.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.02%)</title><rect x="4.0552%" y="1893" width="0.0190%" height="15" fill="rgb(237,53,32)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1903.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (9 samples, 0.02%)</title><rect x="4.0552%" y="1877" width="0.0190%" height="15" fill="rgb(233,25,53)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1887.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (9 samples, 0.02%)</title><rect x="4.0552%" y="1861" width="0.0190%" height="15" fill="rgb(210,40,34)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1871.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9 samples, 0.02%)</title><rect x="4.0552%" y="1845" width="0.0190%" height="15" fill="rgb(241,220,44)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1855.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (9 samples, 0.02%)</title><rect x="4.0552%" y="1829" width="0.0190%" height="15" fill="rgb(235,28,35)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1839.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="4.0552%" y="1813" width="0.0190%" height="15" fill="rgb(210,56,17)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (9 samples, 0.02%)</title><rect x="4.0552%" y="1797" width="0.0190%" height="15" fill="rgb(224,130,29)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (9 samples, 0.02%)</title><rect x="4.0552%" y="1781" width="0.0190%" height="15" fill="rgb(235,212,8)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1791.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (9 samples, 0.02%)</title><rect x="4.0552%" y="1765" width="0.0190%" height="15" fill="rgb(223,33,50)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (9 samples, 0.02%)</title><rect x="4.0552%" y="1749" width="0.0190%" height="15" fill="rgb(219,149,13)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1759.50"></text></g><g><title>tokio::runtime::context::set_scheduler (9 samples, 0.02%)</title><rect x="4.0552%" y="1733" width="0.0190%" height="15" fill="rgb(250,156,29)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1743.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="4.0552%" y="1717" width="0.0190%" height="15" fill="rgb(216,193,19)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="4.0552%" y="1701" width="0.0190%" height="15" fill="rgb(216,135,14)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1711.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (9 samples, 0.02%)</title><rect x="4.0552%" y="1685" width="0.0190%" height="15" fill="rgb(241,47,5)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1695.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (9 samples, 0.02%)</title><rect x="4.0552%" y="1669" width="0.0190%" height="15" fill="rgb(233,42,35)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1679.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (9 samples, 0.02%)</title><rect x="4.0552%" y="1653" width="0.0190%" height="15" fill="rgb(231,13,6)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (9 samples, 0.02%)</title><rect x="4.0552%" y="1637" width="0.0190%" height="15" fill="rgb(207,181,40)" fg:x="1920" fg:w="9"/><text x="4.3052%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (8 samples, 0.02%)</title><rect x="4.0573%" y="1621" width="0.0169%" height="15" fill="rgb(254,173,49)" fg:x="1921" fg:w="8"/><text x="4.3073%" y="1631.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (17 samples, 0.04%)</title><rect x="4.0826%" y="1973" width="0.0359%" height="15" fill="rgb(221,1,38)" fg:x="1933" fg:w="17"/><text x="4.3326%" y="1983.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (45 samples, 0.10%)</title><rect x="4.0805%" y="2005" width="0.0950%" height="15" fill="rgb(206,124,46)" fg:x="1932" fg:w="45"/><text x="4.3305%" y="2015.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (44 samples, 0.09%)</title><rect x="4.0826%" y="1989" width="0.0929%" height="15" fill="rgb(249,21,11)" fg:x="1933" fg:w="44"/><text x="4.3326%" y="1999.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (27 samples, 0.06%)</title><rect x="4.1185%" y="1973" width="0.0570%" height="15" fill="rgb(222,201,40)" fg:x="1950" fg:w="27"/><text x="4.3685%" y="1983.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (27 samples, 0.06%)</title><rect x="4.1185%" y="1957" width="0.0570%" height="15" fill="rgb(235,61,29)" fg:x="1950" fg:w="27"/><text x="4.3685%" y="1967.50"></text></g><g><title>tokio::runtime::task::state::State::load (27 samples, 0.06%)</title><rect x="4.1185%" y="1941" width="0.0570%" height="15" fill="rgb(219,207,3)" fg:x="1950" fg:w="27"/><text x="4.3685%" y="1951.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (27 samples, 0.06%)</title><rect x="4.1185%" y="1925" width="0.0570%" height="15" fill="rgb(222,56,46)" fg:x="1950" fg:w="27"/><text x="4.3685%" y="1935.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.06%)</title><rect x="4.1185%" y="1909" width="0.0570%" height="15" fill="rgb(239,76,54)" fg:x="1950" fg:w="27"/><text x="4.3685%" y="1919.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (23 samples, 0.05%)</title><rect x="4.1798%" y="2005" width="0.0486%" height="15" fill="rgb(231,124,27)" fg:x="1979" fg:w="23"/><text x="4.4298%" y="2015.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (57 samples, 0.12%)</title><rect x="4.2284%" y="2005" width="0.1204%" height="15" fill="rgb(249,195,6)" fg:x="2002" fg:w="57"/><text x="4.4784%" y="2015.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (24 samples, 0.05%)</title><rect x="4.2981%" y="1989" width="0.0507%" height="15" fill="rgb(237,174,47)" fg:x="2035" fg:w="24"/><text x="4.5481%" y="1999.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (24 samples, 0.05%)</title><rect x="4.2981%" y="1973" width="0.0507%" height="15" fill="rgb(206,201,31)" fg:x="2035" fg:w="24"/><text x="4.5481%" y="1983.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (25 samples, 0.05%)</title><rect x="4.3530%" y="2005" width="0.0528%" height="15" fill="rgb(231,57,52)" fg:x="2061" fg:w="25"/><text x="4.6030%" y="2015.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (39 samples, 0.08%)</title><rect x="4.4058%" y="2005" width="0.0824%" height="15" fill="rgb(248,177,22)" fg:x="2086" fg:w="39"/><text x="4.6558%" y="2015.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}}::_{{closure}} (19 samples, 0.04%)</title><rect x="4.4903%" y="2005" width="0.0401%" height="15" fill="rgb(215,211,37)" fg:x="2126" fg:w="19"/><text x="4.7403%" y="2015.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload::_{{closure}} (11 samples, 0.02%)</title><rect x="4.5304%" y="2005" width="0.0232%" height="15" fill="rgb(241,128,51)" fg:x="2145" fg:w="11"/><text x="4.7804%" y="2015.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_split::_{{closure}} (13 samples, 0.03%)</title><rect x="4.5621%" y="2005" width="0.0275%" height="15" fill="rgb(227,165,31)" fg:x="2160" fg:w="13"/><text x="4.8121%" y="2015.50"></text></g><g><title>[anon] (2,053 samples, 4.34%)</title><rect x="0.2556%" y="2021" width="4.3361%" height="15" fill="rgb(228,167,24)" fg:x="121" fg:w="2053"/><text x="0.5056%" y="2031.50">[anon]</text></g><g><title>[epoxy-server] (5 samples, 0.01%)</title><rect x="4.5916%" y="2021" width="0.0106%" height="15" fill="rgb(228,143,12)" fg:x="2174" fg:w="5"/><text x="4.8416%" y="2031.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (9 samples, 0.02%)</title><rect x="4.6064%" y="1685" width="0.0190%" height="15" fill="rgb(249,149,8)" fg:x="2181" fg:w="9"/><text x="4.8564%" y="1695.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.01%)</title><rect x="4.6128%" y="1669" width="0.0127%" height="15" fill="rgb(243,35,44)" fg:x="2184" fg:w="6"/><text x="4.8628%" y="1679.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.01%)</title><rect x="4.6128%" y="1653" width="0.0127%" height="15" fill="rgb(246,89,9)" fg:x="2184" fg:w="6"/><text x="4.8628%" y="1663.50"></text></g><g><title>syscall (6 samples, 0.01%)</title><rect x="4.6128%" y="1637" width="0.0127%" height="15" fill="rgb(233,213,13)" fg:x="2184" fg:w="6"/><text x="4.8628%" y="1647.50"></text></g><g><title>parking_lot_core::parking_lot::park (11 samples, 0.02%)</title><rect x="4.6064%" y="1717" width="0.0232%" height="15" fill="rgb(233,141,41)" fg:x="2181" fg:w="11"/><text x="4.8564%" y="1727.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (11 samples, 0.02%)</title><rect x="4.6064%" y="1701" width="0.0232%" height="15" fill="rgb(239,167,4)" fg:x="2181" fg:w="11"/><text x="4.8564%" y="1711.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="4.6043%" y="1781" width="0.0275%" height="15" fill="rgb(209,217,16)" fg:x="2180" fg:w="13"/><text x="4.8543%" y="1791.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (13 samples, 0.03%)</title><rect x="4.6043%" y="1765" width="0.0275%" height="15" fill="rgb(219,88,35)" fg:x="2180" fg:w="13"/><text x="4.8543%" y="1775.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (13 samples, 0.03%)</title><rect x="4.6043%" y="1749" width="0.0275%" height="15" fill="rgb(220,193,23)" fg:x="2180" fg:w="13"/><text x="4.8543%" y="1759.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (13 samples, 0.03%)</title><rect x="4.6043%" y="1733" width="0.0275%" height="15" fill="rgb(230,90,52)" fg:x="2180" fg:w="13"/><text x="4.8543%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (22 samples, 0.05%)</title><rect x="4.6487%" y="1349" width="0.0465%" height="15" fill="rgb(252,106,19)" fg:x="2201" fg:w="22"/><text x="4.8987%" y="1359.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.01%)</title><rect x="4.7585%" y="1333" width="0.0106%" height="15" fill="rgb(206,74,20)" fg:x="2253" fg:w="5"/><text x="5.0085%" y="1343.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.01%)</title><rect x="4.7585%" y="1317" width="0.0106%" height="15" fill="rgb(230,138,44)" fg:x="2253" fg:w="5"/><text x="5.0085%" y="1327.50"></text></g><g><title>std::time::Instant::checked_duration_since (5 samples, 0.01%)</title><rect x="4.7585%" y="1301" width="0.0106%" height="15" fill="rgb(235,182,43)" fg:x="2253" fg:w="5"/><text x="5.0085%" y="1311.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (5 samples, 0.01%)</title><rect x="4.7585%" y="1285" width="0.0106%" height="15" fill="rgb(242,16,51)" fg:x="2253" fg:w="5"/><text x="5.0085%" y="1295.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (15 samples, 0.03%)</title><rect x="4.7690%" y="1301" width="0.0317%" height="15" fill="rgb(248,9,4)" fg:x="2258" fg:w="15"/><text x="5.0190%" y="1311.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_shl (7 samples, 0.01%)</title><rect x="4.7859%" y="1285" width="0.0148%" height="15" fill="rgb(210,31,22)" fg:x="2266" fg:w="7"/><text x="5.0359%" y="1295.50"></text></g><g><title>core::num::&lt;impl u128&gt;::unchecked_shl (7 samples, 0.01%)</title><rect x="4.7859%" y="1269" width="0.0148%" height="15" fill="rgb(239,54,39)" fg:x="2266" fg:w="7"/><text x="5.0359%" y="1279.50"></text></g><g><title>__floattidf (19 samples, 0.04%)</title><rect x="4.7690%" y="1333" width="0.0401%" height="15" fill="rgb(230,99,41)" fg:x="2258" fg:w="19"/><text x="5.0190%" y="1343.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (19 samples, 0.04%)</title><rect x="4.7690%" y="1317" width="0.0401%" height="15" fill="rgb(253,106,12)" fg:x="2258" fg:w="19"/><text x="5.0190%" y="1327.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (195 samples, 0.41%)</title><rect x="4.8134%" y="1333" width="0.4119%" height="15" fill="rgb(213,46,41)" fg:x="2279" fg:w="195"/><text x="5.0634%" y="1343.50"></text></g><g><title>pow (194 samples, 0.41%)</title><rect x="4.8155%" y="1317" width="0.4097%" height="15" fill="rgb(215,133,35)" fg:x="2280" fg:w="194"/><text x="5.0655%" y="1327.50"></text></g><g><title>[libm.so.6] (127 samples, 0.27%)</title><rect x="4.9570%" y="1301" width="0.2682%" height="15" fill="rgb(213,28,5)" fg:x="2347" fg:w="127"/><text x="5.2070%" y="1311.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (97 samples, 0.20%)</title><rect x="5.2253%" y="1333" width="0.2049%" height="15" fill="rgb(215,77,49)" fg:x="2474" fg:w="97"/><text x="5.4753%" y="1343.50"></text></g><g><title>clock_gettime (92 samples, 0.19%)</title><rect x="5.2358%" y="1317" width="0.1943%" height="15" fill="rgb(248,100,22)" fg:x="2479" fg:w="92"/><text x="5.4858%" y="1327.50"></text></g><g><title>__vdso_clock_gettime (48 samples, 0.10%)</title><rect x="5.3287%" y="1301" width="0.1014%" height="15" fill="rgb(208,67,9)" fg:x="2523" fg:w="48"/><text x="5.5787%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (348 samples, 0.73%)</title><rect x="4.6972%" y="1349" width="0.7350%" height="15" fill="rgb(219,133,21)" fg:x="2224" fg:w="348"/><text x="4.9472%" y="1359.50"></text></g><g><title>clock_gettime (85 samples, 0.18%)</title><rect x="5.4386%" y="1317" width="0.1795%" height="15" fill="rgb(246,46,29)" fg:x="2575" fg:w="85"/><text x="5.6886%" y="1327.50"></text></g><g><title>__vdso_clock_gettime (51 samples, 0.11%)</title><rect x="5.5104%" y="1301" width="0.1077%" height="15" fill="rgb(246,185,52)" fg:x="2609" fg:w="51"/><text x="5.7604%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (89 samples, 0.19%)</title><rect x="5.4322%" y="1349" width="0.1880%" height="15" fill="rgb(252,136,11)" fg:x="2572" fg:w="89"/><text x="5.6822%" y="1359.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (89 samples, 0.19%)</title><rect x="5.4322%" y="1333" width="0.1880%" height="15" fill="rgb(219,138,53)" fg:x="2572" fg:w="89"/><text x="5.6822%" y="1343.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (7 samples, 0.01%)</title><rect x="5.6413%" y="1317" width="0.0148%" height="15" fill="rgb(211,51,23)" fg:x="2671" fg:w="7"/><text x="5.8913%" y="1327.50"></text></g><g><title>pow (7 samples, 0.01%)</title><rect x="5.6413%" y="1301" width="0.0148%" height="15" fill="rgb(247,221,28)" fg:x="2671" fg:w="7"/><text x="5.8913%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (11 samples, 0.02%)</title><rect x="5.6350%" y="1333" width="0.0232%" height="15" fill="rgb(251,222,45)" fg:x="2668" fg:w="11"/><text x="5.8850%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (6 samples, 0.01%)</title><rect x="5.6624%" y="1285" width="0.0127%" height="15" fill="rgb(217,162,53)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (6 samples, 0.01%)</title><rect x="5.6624%" y="1269" width="0.0127%" height="15" fill="rgb(229,93,14)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (6 samples, 0.01%)</title><rect x="5.6624%" y="1253" width="0.0127%" height="15" fill="rgb(209,67,49)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="5.6624%" y="1237" width="0.0127%" height="15" fill="rgb(213,87,29)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (6 samples, 0.01%)</title><rect x="5.6624%" y="1221" width="0.0127%" height="15" fill="rgb(205,151,52)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.01%)</title><rect x="5.6624%" y="1205" width="0.0127%" height="15" fill="rgb(253,215,39)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1215.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (6 samples, 0.01%)</title><rect x="5.6624%" y="1189" width="0.0127%" height="15" fill="rgb(221,220,41)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1199.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (6 samples, 0.01%)</title><rect x="5.6624%" y="1173" width="0.0127%" height="15" fill="rgb(218,133,21)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.01%)</title><rect x="5.6624%" y="1157" width="0.0127%" height="15" fill="rgb(221,193,43)" fg:x="2681" fg:w="6"/><text x="5.9124%" y="1167.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (6 samples, 0.01%)</title><rect x="5.6751%" y="1285" width="0.0127%" height="15" fill="rgb(240,128,52)" fg:x="2687" fg:w="6"/><text x="5.9251%" y="1295.50"></text></g><g><title>core::mem::drop (6 samples, 0.01%)</title><rect x="5.6899%" y="1125" width="0.0127%" height="15" fill="rgb(253,114,12)" fg:x="2694" fg:w="6"/><text x="5.9399%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.03%)</title><rect x="5.6878%" y="1205" width="0.0253%" height="15" fill="rgb(215,223,47)" fg:x="2693" fg:w="12"/><text x="5.9378%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.03%)</title><rect x="5.6878%" y="1189" width="0.0253%" height="15" fill="rgb(248,225,23)" fg:x="2693" fg:w="12"/><text x="5.9378%" y="1199.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (12 samples, 0.03%)</title><rect x="5.6878%" y="1173" width="0.0253%" height="15" fill="rgb(250,108,0)" fg:x="2693" fg:w="12"/><text x="5.9378%" y="1183.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (12 samples, 0.03%)</title><rect x="5.6878%" y="1157" width="0.0253%" height="15" fill="rgb(228,208,7)" fg:x="2693" fg:w="12"/><text x="5.9378%" y="1167.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (12 samples, 0.03%)</title><rect x="5.6878%" y="1141" width="0.0253%" height="15" fill="rgb(244,45,10)" fg:x="2693" fg:w="12"/><text x="5.9378%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (6 samples, 0.01%)</title><rect x="5.7131%" y="1077" width="0.0127%" height="15" fill="rgb(207,125,25)" fg:x="2705" fg:w="6"/><text x="5.9631%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (6 samples, 0.01%)</title><rect x="5.7131%" y="1061" width="0.0127%" height="15" fill="rgb(210,195,18)" fg:x="2705" fg:w="6"/><text x="5.9631%" y="1071.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="5.7131%" y="1045" width="0.0127%" height="15" fill="rgb(249,80,12)" fg:x="2705" fg:w="6"/><text x="5.9631%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.01%)</title><rect x="5.7131%" y="1029" width="0.0127%" height="15" fill="rgb(221,65,9)" fg:x="2705" fg:w="6"/><text x="5.9631%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.01%)</title><rect x="5.7131%" y="1013" width="0.0127%" height="15" fill="rgb(235,49,36)" fg:x="2705" fg:w="6"/><text x="5.9631%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="5.7131%" y="997" width="0.0127%" height="15" fill="rgb(225,32,20)" fg:x="2705" fg:w="6"/><text x="5.9631%" y="1007.50"></text></g><g><title>core::mem::drop (8 samples, 0.02%)</title><rect x="5.7131%" y="1093" width="0.0169%" height="15" fill="rgb(215,141,46)" fg:x="2705" fg:w="8"/><text x="5.9631%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (5 samples, 0.01%)</title><rect x="5.7300%" y="1093" width="0.0106%" height="15" fill="rgb(250,160,47)" fg:x="2713" fg:w="5"/><text x="5.9800%" y="1103.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (5 samples, 0.01%)</title><rect x="5.7300%" y="1077" width="0.0106%" height="15" fill="rgb(216,222,40)" fg:x="2713" fg:w="5"/><text x="5.9800%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (5 samples, 0.01%)</title><rect x="5.7300%" y="1061" width="0.0106%" height="15" fill="rgb(234,217,39)" fg:x="2713" fg:w="5"/><text x="5.9800%" y="1071.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (30 samples, 0.06%)</title><rect x="5.6878%" y="1285" width="0.0634%" height="15" fill="rgb(207,178,40)" fg:x="2693" fg:w="30"/><text x="5.9378%" y="1295.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (30 samples, 0.06%)</title><rect x="5.6878%" y="1269" width="0.0634%" height="15" fill="rgb(221,136,13)" fg:x="2693" fg:w="30"/><text x="5.9378%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (30 samples, 0.06%)</title><rect x="5.6878%" y="1253" width="0.0634%" height="15" fill="rgb(249,199,10)" fg:x="2693" fg:w="30"/><text x="5.9378%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (30 samples, 0.06%)</title><rect x="5.6878%" y="1237" width="0.0634%" height="15" fill="rgb(249,222,13)" fg:x="2693" fg:w="30"/><text x="5.9378%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (30 samples, 0.06%)</title><rect x="5.6878%" y="1221" width="0.0634%" height="15" fill="rgb(244,185,38)" fg:x="2693" fg:w="30"/><text x="5.9378%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="5.7131%" y="1205" width="0.0380%" height="15" fill="rgb(236,202,9)" fg:x="2705" fg:w="18"/><text x="5.9631%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (18 samples, 0.04%)</title><rect x="5.7131%" y="1189" width="0.0380%" height="15" fill="rgb(250,229,37)" fg:x="2705" fg:w="18"/><text x="5.9631%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.04%)</title><rect x="5.7131%" y="1173" width="0.0380%" height="15" fill="rgb(206,174,23)" fg:x="2705" fg:w="18"/><text x="5.9631%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (18 samples, 0.04%)</title><rect x="5.7131%" y="1157" width="0.0380%" height="15" fill="rgb(211,33,43)" fg:x="2705" fg:w="18"/><text x="5.9631%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.04%)</title><rect x="5.7131%" y="1141" width="0.0380%" height="15" fill="rgb(245,58,50)" fg:x="2705" fg:w="18"/><text x="5.9631%" y="1151.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (18 samples, 0.04%)</title><rect x="5.7131%" y="1125" width="0.0380%" height="15" fill="rgb(244,68,36)" fg:x="2705" fg:w="18"/><text x="5.9631%" y="1135.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (18 samples, 0.04%)</title><rect x="5.7131%" y="1109" width="0.0380%" height="15" fill="rgb(232,229,15)" fg:x="2705" fg:w="18"/><text x="5.9631%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (63 samples, 0.13%)</title><rect x="5.6202%" y="1349" width="0.1331%" height="15" fill="rgb(254,30,23)" fg:x="2661" fg:w="63"/><text x="5.8702%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (44 samples, 0.09%)</title><rect x="5.6603%" y="1333" width="0.0929%" height="15" fill="rgb(235,160,14)" fg:x="2680" fg:w="44"/><text x="5.9103%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (44 samples, 0.09%)</title><rect x="5.6603%" y="1317" width="0.0929%" height="15" fill="rgb(212,155,44)" fg:x="2680" fg:w="44"/><text x="5.9103%" y="1327.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (43 samples, 0.09%)</title><rect x="5.6624%" y="1301" width="0.0908%" height="15" fill="rgb(226,2,50)" fg:x="2681" fg:w="43"/><text x="5.9124%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.03%)</title><rect x="5.9476%" y="1333" width="0.0275%" height="15" fill="rgb(234,177,6)" fg:x="2816" fg:w="13"/><text x="6.1976%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (13 samples, 0.03%)</title><rect x="5.9476%" y="1317" width="0.0275%" height="15" fill="rgb(217,24,9)" fg:x="2816" fg:w="13"/><text x="6.1976%" y="1327.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (13 samples, 0.03%)</title><rect x="5.9476%" y="1301" width="0.0275%" height="15" fill="rgb(220,13,46)" fg:x="2816" fg:w="13"/><text x="6.1976%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.01%)</title><rect x="6.0616%" y="1317" width="0.0127%" height="15" fill="rgb(239,221,27)" fg:x="2870" fg:w="6"/><text x="6.3116%" y="1327.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="6.0616%" y="1301" width="0.0127%" height="15" fill="rgb(222,198,25)" fg:x="2870" fg:w="6"/><text x="6.3116%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (17 samples, 0.04%)</title><rect x="6.0828%" y="1317" width="0.0359%" height="15" fill="rgb(211,99,13)" fg:x="2880" fg:w="17"/><text x="6.3328%" y="1327.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.01%)</title><rect x="6.1271%" y="1301" width="0.0127%" height="15" fill="rgb(232,111,31)" fg:x="2901" fg:w="6"/><text x="6.3771%" y="1311.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.01%)</title><rect x="6.1271%" y="1285" width="0.0127%" height="15" fill="rgb(245,82,37)" fg:x="2901" fg:w="6"/><text x="6.3771%" y="1295.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.01%)</title><rect x="6.1271%" y="1269" width="0.0127%" height="15" fill="rgb(227,149,46)" fg:x="2901" fg:w="6"/><text x="6.3771%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (11 samples, 0.02%)</title><rect x="6.1187%" y="1317" width="0.0232%" height="15" fill="rgb(218,36,50)" fg:x="2897" fg:w="11"/><text x="6.3687%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (34 samples, 0.07%)</title><rect x="6.1503%" y="1285" width="0.0718%" height="15" fill="rgb(226,80,48)" fg:x="2912" fg:w="34"/><text x="6.4003%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.07%)</title><rect x="6.1503%" y="1269" width="0.0718%" height="15" fill="rgb(238,224,15)" fg:x="2912" fg:w="34"/><text x="6.4003%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (38 samples, 0.08%)</title><rect x="6.2243%" y="1269" width="0.0803%" height="15" fill="rgb(241,136,10)" fg:x="2947" fg:w="38"/><text x="6.4743%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.08%)</title><rect x="6.2243%" y="1253" width="0.0803%" height="15" fill="rgb(208,32,45)" fg:x="2947" fg:w="38"/><text x="6.4743%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (38 samples, 0.08%)</title><rect x="6.3087%" y="1221" width="0.0803%" height="15" fill="rgb(207,135,9)" fg:x="2987" fg:w="38"/><text x="6.5587%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (38 samples, 0.08%)</title><rect x="6.3087%" y="1205" width="0.0803%" height="15" fill="rgb(206,86,44)" fg:x="2987" fg:w="38"/><text x="6.5587%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (38 samples, 0.08%)</title><rect x="6.3087%" y="1189" width="0.0803%" height="15" fill="rgb(245,177,15)" fg:x="2987" fg:w="38"/><text x="6.5587%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (80 samples, 0.17%)</title><rect x="6.4270%" y="1157" width="0.1690%" height="15" fill="rgb(206,64,50)" fg:x="3043" fg:w="80"/><text x="6.6770%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.17%)</title><rect x="6.4270%" y="1141" width="0.1690%" height="15" fill="rgb(234,36,40)" fg:x="3043" fg:w="80"/><text x="6.6770%" y="1151.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (159 samples, 0.34%)</title><rect x="6.4080%" y="1173" width="0.3358%" height="15" fill="rgb(213,64,8)" fg:x="3034" fg:w="159"/><text x="6.6580%" y="1183.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (70 samples, 0.15%)</title><rect x="6.5960%" y="1157" width="0.1478%" height="15" fill="rgb(210,75,36)" fg:x="3123" fg:w="70"/><text x="6.8460%" y="1167.50"></text></g><g><title>syscall (70 samples, 0.15%)</title><rect x="6.5960%" y="1141" width="0.1478%" height="15" fill="rgb(229,88,21)" fg:x="3123" fg:w="70"/><text x="6.8460%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (16 samples, 0.03%)</title><rect x="6.7438%" y="1173" width="0.0338%" height="15" fill="rgb(252,204,47)" fg:x="3193" fg:w="16"/><text x="6.9938%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.03%)</title><rect x="6.7438%" y="1157" width="0.0338%" height="15" fill="rgb(208,77,27)" fg:x="3193" fg:w="16"/><text x="6.9938%" y="1167.50"></text></g><g><title>core::mem::replace (16 samples, 0.03%)</title><rect x="6.7438%" y="1141" width="0.0338%" height="15" fill="rgb(221,76,26)" fg:x="3193" fg:w="16"/><text x="6.9938%" y="1151.50"></text></g><g><title>core::ptr::write (16 samples, 0.03%)</title><rect x="6.7438%" y="1125" width="0.0338%" height="15" fill="rgb(225,139,18)" fg:x="3193" fg:w="16"/><text x="6.9938%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::hash (6 samples, 0.01%)</title><rect x="6.7924%" y="1157" width="0.0127%" height="15" fill="rgb(230,137,11)" fg:x="3216" fg:w="6"/><text x="7.0424%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (28 samples, 0.06%)</title><rect x="6.7818%" y="1173" width="0.0591%" height="15" fill="rgb(212,28,1)" fg:x="3211" fg:w="28"/><text x="7.0318%" y="1183.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (17 samples, 0.04%)</title><rect x="6.8051%" y="1157" width="0.0359%" height="15" fill="rgb(248,164,17)" fg:x="3222" fg:w="17"/><text x="7.0551%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.04%)</title><rect x="6.8051%" y="1141" width="0.0359%" height="15" fill="rgb(222,171,42)" fg:x="3222" fg:w="17"/><text x="7.0551%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.04%)</title><rect x="6.8051%" y="1125" width="0.0359%" height="15" fill="rgb(243,84,45)" fg:x="3222" fg:w="17"/><text x="7.0551%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (221 samples, 0.47%)</title><rect x="6.4059%" y="1189" width="0.4668%" height="15" fill="rgb(252,49,23)" fg:x="3033" fg:w="221"/><text x="6.6559%" y="1199.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (15 samples, 0.03%)</title><rect x="6.8410%" y="1173" width="0.0317%" height="15" fill="rgb(215,19,7)" fg:x="3239" fg:w="15"/><text x="7.0910%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.03%)</title><rect x="6.8410%" y="1157" width="0.0317%" height="15" fill="rgb(238,81,41)" fg:x="3239" fg:w="15"/><text x="7.0910%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.03%)</title><rect x="6.8410%" y="1141" width="0.0317%" height="15" fill="rgb(210,199,37)" fg:x="3239" fg:w="15"/><text x="7.0910%" y="1151.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (274 samples, 0.58%)</title><rect x="6.3045%" y="1269" width="0.5787%" height="15" fill="rgb(244,192,49)" fg:x="2985" fg:w="274"/><text x="6.5545%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (274 samples, 0.58%)</title><rect x="6.3045%" y="1253" width="0.5787%" height="15" fill="rgb(226,211,11)" fg:x="2985" fg:w="274"/><text x="6.5545%" y="1263.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (274 samples, 0.58%)</title><rect x="6.3045%" y="1237" width="0.5787%" height="15" fill="rgb(236,162,54)" fg:x="2985" fg:w="274"/><text x="6.5545%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::park (233 samples, 0.49%)</title><rect x="6.3911%" y="1221" width="0.4921%" height="15" fill="rgb(220,229,9)" fg:x="3026" fg:w="233"/><text x="6.6411%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (233 samples, 0.49%)</title><rect x="6.3911%" y="1205" width="0.4921%" height="15" fill="rgb(250,87,22)" fg:x="3026" fg:w="233"/><text x="6.6411%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="6.8727%" y="1189" width="0.0106%" height="15" fill="rgb(239,43,17)" fg:x="3254" fg:w="5"/><text x="7.1227%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="6.8727%" y="1173" width="0.0106%" height="15" fill="rgb(231,177,25)" fg:x="3254" fg:w="5"/><text x="7.1227%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (5 samples, 0.01%)</title><rect x="6.8727%" y="1157" width="0.0106%" height="15" fill="rgb(219,179,1)" fg:x="3254" fg:w="5"/><text x="7.1227%" y="1167.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (5 samples, 0.01%)</title><rect x="6.8727%" y="1141" width="0.0106%" height="15" fill="rgb(238,219,53)" fg:x="3254" fg:w="5"/><text x="7.1227%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (320 samples, 0.68%)</title><rect x="6.2221%" y="1285" width="0.6759%" height="15" fill="rgb(232,167,36)" fg:x="2946" fg:w="320"/><text x="6.4721%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.01%)</title><rect x="6.8832%" y="1269" width="0.0148%" height="15" fill="rgb(244,19,51)" fg:x="3259" fg:w="7"/><text x="7.1332%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.04%)</title><rect x="6.9888%" y="1269" width="0.0359%" height="15" fill="rgb(224,6,22)" fg:x="3309" fg:w="17"/><text x="7.2388%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.04%)</title><rect x="6.9888%" y="1253" width="0.0359%" height="15" fill="rgb(224,145,5)" fg:x="3309" fg:w="17"/><text x="7.2388%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (72 samples, 0.15%)</title><rect x="7.0247%" y="1269" width="0.1521%" height="15" fill="rgb(234,130,49)" fg:x="3326" fg:w="72"/><text x="7.2747%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_swap (72 samples, 0.15%)</title><rect x="7.0247%" y="1253" width="0.1521%" height="15" fill="rgb(254,6,2)" fg:x="3326" fg:w="72"/><text x="7.2747%" y="1263.50"></text></g><g><title>tokio::runtime::driver::Driver::park (5 samples, 0.01%)</title><rect x="7.1768%" y="1269" width="0.0106%" height="15" fill="rgb(208,96,46)" fg:x="3398" fg:w="5"/><text x="7.4268%" y="1279.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (5 samples, 0.01%)</title><rect x="7.1768%" y="1253" width="0.0106%" height="15" fill="rgb(239,3,39)" fg:x="3398" fg:w="5"/><text x="7.4268%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.04%)</title><rect x="7.2549%" y="1205" width="0.0444%" height="15" fill="rgb(233,210,1)" fg:x="3435" fg:w="21"/><text x="7.5049%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.04%)</title><rect x="7.2549%" y="1189" width="0.0444%" height="15" fill="rgb(244,137,37)" fg:x="3435" fg:w="21"/><text x="7.5049%" y="1199.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (19 samples, 0.04%)</title><rect x="7.2592%" y="1173" width="0.0401%" height="15" fill="rgb(240,136,2)" fg:x="3437" fg:w="19"/><text x="7.5092%" y="1183.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (18 samples, 0.04%)</title><rect x="7.2613%" y="1157" width="0.0380%" height="15" fill="rgb(239,18,37)" fg:x="3438" fg:w="18"/><text x="7.5113%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (18 samples, 0.04%)</title><rect x="7.2613%" y="1141" width="0.0380%" height="15" fill="rgb(218,185,22)" fg:x="3438" fg:w="18"/><text x="7.5113%" y="1151.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (18 samples, 0.04%)</title><rect x="7.2613%" y="1125" width="0.0380%" height="15" fill="rgb(225,218,4)" fg:x="3438" fg:w="18"/><text x="7.5113%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (6 samples, 0.01%)</title><rect x="7.2866%" y="1109" width="0.0127%" height="15" fill="rgb(230,182,32)" fg:x="3450" fg:w="6"/><text x="7.5366%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (6 samples, 0.01%)</title><rect x="7.2866%" y="1093" width="0.0127%" height="15" fill="rgb(242,56,43)" fg:x="3450" fg:w="6"/><text x="7.5366%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="7.3479%" y="1157" width="0.0106%" height="15" fill="rgb(233,99,24)" fg:x="3479" fg:w="5"/><text x="7.5979%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="7.3352%" y="1173" width="0.0296%" height="15" fill="rgb(234,209,42)" fg:x="3473" fg:w="14"/><text x="7.5852%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::get_mut (6 samples, 0.01%)</title><rect x="7.3648%" y="1141" width="0.0127%" height="15" fill="rgb(227,7,12)" fg:x="3487" fg:w="6"/><text x="7.6148%" y="1151.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::get_mut (6 samples, 0.01%)</title><rect x="7.3648%" y="1125" width="0.0127%" height="15" fill="rgb(245,203,43)" fg:x="3487" fg:w="6"/><text x="7.6148%" y="1135.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="7.3648%" y="1109" width="0.0127%" height="15" fill="rgb(238,205,33)" fg:x="3487" fg:w="6"/><text x="7.6148%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.10%)</title><rect x="8.0427%" y="1109" width="0.0993%" height="15" fill="rgb(231,56,7)" fg:x="3808" fg:w="47"/><text x="8.2927%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.10%)</title><rect x="8.0427%" y="1093" width="0.0993%" height="15" fill="rgb(244,186,29)" fg:x="3808" fg:w="47"/><text x="8.2927%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (19 samples, 0.04%)</title><rect x="8.1019%" y="1077" width="0.0401%" height="15" fill="rgb(234,111,31)" fg:x="3836" fg:w="19"/><text x="8.3519%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (5 samples, 0.01%)</title><rect x="8.4081%" y="1077" width="0.0106%" height="15" fill="rgb(241,149,10)" fg:x="3981" fg:w="5"/><text x="8.6581%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (146 samples, 0.31%)</title><rect x="8.1505%" y="1093" width="0.3084%" height="15" fill="rgb(249,206,44)" fg:x="3859" fg:w="146"/><text x="8.4005%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (19 samples, 0.04%)</title><rect x="8.4187%" y="1077" width="0.0401%" height="15" fill="rgb(251,153,30)" fg:x="3986" fg:w="19"/><text x="8.6687%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (19 samples, 0.04%)</title><rect x="8.4187%" y="1061" width="0.0401%" height="15" fill="rgb(239,152,38)" fg:x="3986" fg:w="19"/><text x="8.6687%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (156 samples, 0.33%)</title><rect x="8.1420%" y="1109" width="0.3295%" height="15" fill="rgb(249,139,47)" fg:x="3855" fg:w="156"/><text x="8.3920%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (12 samples, 0.03%)</title><rect x="8.4715%" y="1093" width="0.0253%" height="15" fill="rgb(244,64,35)" fg:x="4011" fg:w="12"/><text x="8.7215%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (12 samples, 0.03%)</title><rect x="8.4715%" y="1077" width="0.0253%" height="15" fill="rgb(216,46,15)" fg:x="4011" fg:w="12"/><text x="8.7215%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (610 samples, 1.29%)</title><rect x="7.2507%" y="1253" width="1.2884%" height="15" fill="rgb(250,74,19)" fg:x="3433" fg:w="610"/><text x="7.5007%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (610 samples, 1.29%)</title><rect x="7.2507%" y="1237" width="1.2884%" height="15" fill="rgb(249,42,33)" fg:x="3433" fg:w="610"/><text x="7.5007%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (610 samples, 1.29%)</title><rect x="7.2507%" y="1221" width="1.2884%" height="15" fill="rgb(242,149,17)" fg:x="3433" fg:w="610"/><text x="7.5007%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (587 samples, 1.24%)</title><rect x="7.2993%" y="1205" width="1.2398%" height="15" fill="rgb(244,29,21)" fg:x="3456" fg:w="587"/><text x="7.5493%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (587 samples, 1.24%)</title><rect x="7.2993%" y="1189" width="1.2398%" height="15" fill="rgb(220,130,37)" fg:x="3456" fg:w="587"/><text x="7.5493%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (556 samples, 1.17%)</title><rect x="7.3648%" y="1173" width="1.1743%" height="15" fill="rgb(211,67,2)" fg:x="3487" fg:w="556"/><text x="7.6148%" y="1183.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (556 samples, 1.17%)</title><rect x="7.3648%" y="1157" width="1.1743%" height="15" fill="rgb(235,68,52)" fg:x="3487" fg:w="556"/><text x="7.6148%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (550 samples, 1.16%)</title><rect x="7.3774%" y="1141" width="1.1616%" height="15" fill="rgb(246,142,3)" fg:x="3493" fg:w="550"/><text x="7.6274%" y="1151.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (543 samples, 1.15%)</title><rect x="7.3922%" y="1125" width="1.1469%" height="15" fill="rgb(241,25,7)" fg:x="3500" fg:w="543"/><text x="7.6422%" y="1135.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (32 samples, 0.07%)</title><rect x="8.4715%" y="1109" width="0.0676%" height="15" fill="rgb(242,119,39)" fg:x="4011" fg:w="32"/><text x="8.7215%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (20 samples, 0.04%)</title><rect x="8.4968%" y="1093" width="0.0422%" height="15" fill="rgb(241,98,45)" fg:x="4023" fg:w="20"/><text x="8.7468%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockWriteGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (18 samples, 0.04%)</title><rect x="8.5454%" y="1253" width="0.0380%" height="15" fill="rgb(254,28,30)" fg:x="4046" fg:w="18"/><text x="8.7954%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (18 samples, 0.04%)</title><rect x="8.5454%" y="1237" width="0.0380%" height="15" fill="rgb(241,142,54)" fg:x="4046" fg:w="18"/><text x="8.7954%" y="1247.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%)</title><rect x="8.5454%" y="1221" width="0.0380%" height="15" fill="rgb(222,85,15)" fg:x="4046" fg:w="18"/><text x="8.7954%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (18 samples, 0.04%)</title><rect x="8.5454%" y="1205" width="0.0380%" height="15" fill="rgb(210,85,47)" fg:x="4046" fg:w="18"/><text x="8.7954%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.04%)</title><rect x="8.5454%" y="1189" width="0.0380%" height="15" fill="rgb(224,206,25)" fg:x="4046" fg:w="18"/><text x="8.7954%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.04%)</title><rect x="8.5454%" y="1173" width="0.0380%" height="15" fill="rgb(243,201,19)" fg:x="4046" fg:w="18"/><text x="8.7954%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::write (31 samples, 0.07%)</title><rect x="8.5834%" y="1253" width="0.0655%" height="15" fill="rgb(236,59,4)" fg:x="4064" fg:w="31"/><text x="8.8334%" y="1263.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (31 samples, 0.07%)</title><rect x="8.5834%" y="1237" width="0.0655%" height="15" fill="rgb(254,179,45)" fg:x="4064" fg:w="31"/><text x="8.8334%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (31 samples, 0.07%)</title><rect x="8.5834%" y="1221" width="0.0655%" height="15" fill="rgb(226,14,10)" fg:x="4064" fg:w="31"/><text x="8.8334%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.07%)</title><rect x="8.5834%" y="1205" width="0.0655%" height="15" fill="rgb(244,27,41)" fg:x="4064" fg:w="31"/><text x="8.8334%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.07%)</title><rect x="8.5834%" y="1189" width="0.0655%" height="15" fill="rgb(235,35,32)" fg:x="4064" fg:w="31"/><text x="8.8334%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (20 samples, 0.04%)</title><rect x="8.6637%" y="1221" width="0.0422%" height="15" fill="rgb(218,68,31)" fg:x="4102" fg:w="20"/><text x="8.9137%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (20 samples, 0.04%)</title><rect x="8.6637%" y="1205" width="0.0422%" height="15" fill="rgb(207,120,37)" fg:x="4102" fg:w="20"/><text x="8.9137%" y="1215.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="8.6637%" y="1189" width="0.0422%" height="15" fill="rgb(227,98,0)" fg:x="4102" fg:w="20"/><text x="8.9137%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (20 samples, 0.04%)</title><rect x="8.6637%" y="1173" width="0.0422%" height="15" fill="rgb(207,7,3)" fg:x="4102" fg:w="20"/><text x="8.9137%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (18 samples, 0.04%)</title><rect x="8.6679%" y="1157" width="0.0380%" height="15" fill="rgb(206,98,19)" fg:x="4104" fg:w="18"/><text x="8.9179%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.04%)</title><rect x="8.6679%" y="1141" width="0.0380%" height="15" fill="rgb(217,5,26)" fg:x="4104" fg:w="18"/><text x="8.9179%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="8.7059%" y="1221" width="0.0401%" height="15" fill="rgb(235,190,38)" fg:x="4122" fg:w="19"/><text x="8.9559%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="8.7059%" y="1205" width="0.0401%" height="15" fill="rgb(247,86,24)" fg:x="4122" fg:w="19"/><text x="8.9559%" y="1215.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="8.7059%" y="1189" width="0.0401%" height="15" fill="rgb(205,101,16)" fg:x="4122" fg:w="19"/><text x="8.9559%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (19 samples, 0.04%)</title><rect x="8.7059%" y="1173" width="0.0401%" height="15" fill="rgb(246,168,33)" fg:x="4122" fg:w="19"/><text x="8.9559%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (19 samples, 0.04%)</title><rect x="8.7059%" y="1157" width="0.0401%" height="15" fill="rgb(231,114,1)" fg:x="4122" fg:w="19"/><text x="8.9559%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.04%)</title><rect x="8.7059%" y="1141" width="0.0401%" height="15" fill="rgb(207,184,53)" fg:x="4122" fg:w="19"/><text x="8.9559%" y="1151.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (21 samples, 0.04%)</title><rect x="8.7461%" y="1221" width="0.0444%" height="15" fill="rgb(224,95,51)" fg:x="4141" fg:w="21"/><text x="8.9961%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (21 samples, 0.04%)</title><rect x="8.7461%" y="1205" width="0.0444%" height="15" fill="rgb(212,188,45)" fg:x="4141" fg:w="21"/><text x="8.9961%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (21 samples, 0.04%)</title><rect x="8.7461%" y="1189" width="0.0444%" height="15" fill="rgb(223,154,38)" fg:x="4141" fg:w="21"/><text x="8.9961%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (19 samples, 0.04%)</title><rect x="8.7503%" y="1173" width="0.0401%" height="15" fill="rgb(251,22,52)" fg:x="4143" fg:w="19"/><text x="9.0003%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.04%)</title><rect x="8.7503%" y="1157" width="0.0401%" height="15" fill="rgb(229,209,22)" fg:x="4143" fg:w="19"/><text x="9.0003%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (24 samples, 0.05%)</title><rect x="8.8010%" y="1173" width="0.0507%" height="15" fill="rgb(234,138,34)" fg:x="4167" fg:w="24"/><text x="9.0510%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.05%)</title><rect x="8.8010%" y="1157" width="0.0507%" height="15" fill="rgb(212,95,11)" fg:x="4167" fg:w="24"/><text x="9.0510%" y="1167.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (125 samples, 0.26%)</title><rect x="8.6489%" y="1253" width="0.2640%" height="15" fill="rgb(240,179,47)" fg:x="4095" fg:w="125"/><text x="8.8989%" y="1263.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (125 samples, 0.26%)</title><rect x="8.6489%" y="1237" width="0.2640%" height="15" fill="rgb(240,163,11)" fg:x="4095" fg:w="125"/><text x="8.8989%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (58 samples, 0.12%)</title><rect x="8.7904%" y="1221" width="0.1225%" height="15" fill="rgb(236,37,12)" fg:x="4162" fg:w="58"/><text x="9.0404%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (58 samples, 0.12%)</title><rect x="8.7904%" y="1205" width="0.1225%" height="15" fill="rgb(232,164,16)" fg:x="4162" fg:w="58"/><text x="9.0404%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (58 samples, 0.12%)</title><rect x="8.7904%" y="1189" width="0.1225%" height="15" fill="rgb(244,205,15)" fg:x="4162" fg:w="58"/><text x="9.0404%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (29 samples, 0.06%)</title><rect x="8.8517%" y="1173" width="0.0612%" height="15" fill="rgb(223,117,47)" fg:x="4191" fg:w="29"/><text x="9.1017%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.06%)</title><rect x="8.8517%" y="1157" width="0.0612%" height="15" fill="rgb(244,107,35)" fg:x="4191" fg:w="29"/><text x="9.1017%" y="1167.50"></text></g><g><title>tokio::runtime::driver::Handle::time (11 samples, 0.02%)</title><rect x="8.9129%" y="1253" width="0.0232%" height="15" fill="rgb(205,140,8)" fg:x="4220" fg:w="11"/><text x="9.1629%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.02%)</title><rect x="8.9129%" y="1237" width="0.0232%" height="15" fill="rgb(228,84,46)" fg:x="4220" fg:w="11"/><text x="9.1629%" y="1247.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.10%)</title><rect x="8.9636%" y="1237" width="0.0972%" height="15" fill="rgb(254,188,9)" fg:x="4244" fg:w="46"/><text x="9.2136%" y="1247.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (46 samples, 0.10%)</title><rect x="8.9636%" y="1221" width="0.0972%" height="15" fill="rgb(206,112,54)" fg:x="4244" fg:w="46"/><text x="9.2136%" y="1231.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (46 samples, 0.10%)</title><rect x="8.9636%" y="1205" width="0.0972%" height="15" fill="rgb(216,84,49)" fg:x="4244" fg:w="46"/><text x="9.2136%" y="1215.50"></text></g><g><title>mio::event::event::Event::token (5 samples, 0.01%)</title><rect x="9.0608%" y="1237" width="0.0106%" height="15" fill="rgb(214,194,35)" fg:x="4290" fg:w="5"/><text x="9.3108%" y="1247.50"></text></g><g><title>mio::sys::unix::selector::event::token (5 samples, 0.01%)</title><rect x="9.0608%" y="1221" width="0.0106%" height="15" fill="rgb(249,28,3)" fg:x="4290" fg:w="5"/><text x="9.3108%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.02%)</title><rect x="9.3290%" y="1205" width="0.0190%" height="15" fill="rgb(222,56,52)" fg:x="4417" fg:w="9"/><text x="9.5790%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (8 samples, 0.02%)</title><rect x="9.3311%" y="1189" width="0.0169%" height="15" fill="rgb(245,217,50)" fg:x="4418" fg:w="8"/><text x="9.5811%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (15 samples, 0.03%)</title><rect x="9.3480%" y="1205" width="0.0317%" height="15" fill="rgb(213,201,24)" fg:x="4426" fg:w="15"/><text x="9.5980%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (15 samples, 0.03%)</title><rect x="9.3480%" y="1189" width="0.0317%" height="15" fill="rgb(248,116,28)" fg:x="4426" fg:w="15"/><text x="9.5980%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (15 samples, 0.03%)</title><rect x="9.3480%" y="1173" width="0.0317%" height="15" fill="rgb(219,72,43)" fg:x="4426" fg:w="15"/><text x="9.5980%" y="1183.50"></text></g><g><title>[libc.so.6] (115 samples, 0.24%)</title><rect x="9.6543%" y="1189" width="0.2429%" height="15" fill="rgb(209,138,14)" fg:x="4571" fg:w="115"/><text x="9.9043%" y="1199.50"></text></g><g><title>mio::poll::Poll::poll (418 samples, 0.88%)</title><rect x="9.0713%" y="1237" width="0.8828%" height="15" fill="rgb(222,18,33)" fg:x="4295" fg:w="418"/><text x="9.3213%" y="1247.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (416 samples, 0.88%)</title><rect x="9.0755%" y="1221" width="0.8786%" height="15" fill="rgb(213,199,7)" fg:x="4297" fg:w="416"/><text x="9.3255%" y="1231.50"></text></g><g><title>epoll_wait (272 samples, 0.57%)</title><rect x="9.3797%" y="1205" width="0.5745%" height="15" fill="rgb(250,110,10)" fg:x="4441" fg:w="272"/><text x="9.6297%" y="1215.50"></text></g><g><title>[unknown] (27 samples, 0.06%)</title><rect x="9.8971%" y="1189" width="0.0570%" height="15" fill="rgb(248,123,6)" fg:x="4686" fg:w="27"/><text x="10.1471%" y="1199.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (9 samples, 0.02%)</title><rect x="9.9542%" y="1237" width="0.0190%" height="15" fill="rgb(206,91,31)" fg:x="4713" fg:w="9"/><text x="10.2042%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (169 samples, 0.36%)</title><rect x="9.9795%" y="1221" width="0.3569%" height="15" fill="rgb(211,154,13)" fg:x="4725" fg:w="169"/><text x="10.2295%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (169 samples, 0.36%)</title><rect x="9.9795%" y="1205" width="0.3569%" height="15" fill="rgb(225,148,7)" fg:x="4725" fg:w="169"/><text x="10.2295%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (135 samples, 0.29%)</title><rect x="10.3365%" y="1221" width="0.2851%" height="15" fill="rgb(220,160,43)" fg:x="4894" fg:w="135"/><text x="10.5865%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (135 samples, 0.29%)</title><rect x="10.3365%" y="1205" width="0.2851%" height="15" fill="rgb(213,52,39)" fg:x="4894" fg:w="135"/><text x="10.5865%" y="1215.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (312 samples, 0.66%)</title><rect x="9.9774%" y="1237" width="0.6590%" height="15" fill="rgb(243,137,7)" fg:x="4724" fg:w="312"/><text x="10.2274%" y="1247.50"></text></g><g><title>core::mem::drop (112 samples, 0.24%)</title><rect x="10.6512%" y="1221" width="0.2366%" height="15" fill="rgb(230,79,13)" fg:x="5043" fg:w="112"/><text x="10.9012%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (112 samples, 0.24%)</title><rect x="10.6512%" y="1205" width="0.2366%" height="15" fill="rgb(247,105,23)" fg:x="5043" fg:w="112"/><text x="10.9012%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (112 samples, 0.24%)</title><rect x="10.6512%" y="1189" width="0.2366%" height="15" fill="rgb(223,179,41)" fg:x="5043" fg:w="112"/><text x="10.9012%" y="1199.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.24%)</title><rect x="10.6512%" y="1173" width="0.2366%" height="15" fill="rgb(218,9,34)" fg:x="5043" fg:w="112"/><text x="10.9012%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (112 samples, 0.24%)</title><rect x="10.6512%" y="1157" width="0.2366%" height="15" fill="rgb(222,106,8)" fg:x="5043" fg:w="112"/><text x="10.9012%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (111 samples, 0.23%)</title><rect x="10.6533%" y="1141" width="0.2344%" height="15" fill="rgb(211,220,0)" fg:x="5044" fg:w="111"/><text x="10.9033%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (111 samples, 0.23%)</title><rect x="10.6533%" y="1125" width="0.2344%" height="15" fill="rgb(229,52,16)" fg:x="5044" fg:w="111"/><text x="10.9033%" y="1135.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (41 samples, 0.09%)</title><rect x="10.8983%" y="1221" width="0.0866%" height="15" fill="rgb(212,155,18)" fg:x="5160" fg:w="41"/><text x="11.1483%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (41 samples, 0.09%)</title><rect x="10.8983%" y="1205" width="0.0866%" height="15" fill="rgb(242,21,14)" fg:x="5160" fg:w="41"/><text x="11.1483%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (41 samples, 0.09%)</title><rect x="10.8983%" y="1189" width="0.0866%" height="15" fill="rgb(222,19,48)" fg:x="5160" fg:w="41"/><text x="11.1483%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (41 samples, 0.09%)</title><rect x="10.8983%" y="1173" width="0.0866%" height="15" fill="rgb(232,45,27)" fg:x="5160" fg:w="41"/><text x="11.1483%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.09%)</title><rect x="10.8983%" y="1157" width="0.0866%" height="15" fill="rgb(249,103,42)" fg:x="5160" fg:w="41"/><text x="11.1483%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.03%)</title><rect x="11.0165%" y="1093" width="0.0317%" height="15" fill="rgb(246,81,33)" fg:x="5216" fg:w="15"/><text x="11.2665%" y="1103.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (14 samples, 0.03%)</title><rect x="11.0186%" y="1077" width="0.0296%" height="15" fill="rgb(252,33,42)" fg:x="5217" fg:w="14"/><text x="11.2686%" y="1087.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.01%)</title><rect x="11.0546%" y="1077" width="0.0127%" height="15" fill="rgb(209,212,41)" fg:x="5234" fg:w="6"/><text x="11.3046%" y="1087.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.01%)</title><rect x="11.0546%" y="1061" width="0.0127%" height="15" fill="rgb(207,154,6)" fg:x="5234" fg:w="6"/><text x="11.3046%" y="1071.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.01%)</title><rect x="11.0546%" y="1045" width="0.0127%" height="15" fill="rgb(223,64,47)" fg:x="5234" fg:w="6"/><text x="11.3046%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (35 samples, 0.07%)</title><rect x="11.0165%" y="1141" width="0.0739%" height="15" fill="rgb(211,161,38)" fg:x="5216" fg:w="35"/><text x="11.2665%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (35 samples, 0.07%)</title><rect x="11.0165%" y="1125" width="0.0739%" height="15" fill="rgb(219,138,40)" fg:x="5216" fg:w="35"/><text x="11.2665%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler (35 samples, 0.07%)</title><rect x="11.0165%" y="1109" width="0.0739%" height="15" fill="rgb(241,228,46)" fg:x="5216" fg:w="35"/><text x="11.2665%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (20 samples, 0.04%)</title><rect x="11.0482%" y="1093" width="0.0422%" height="15" fill="rgb(223,209,38)" fg:x="5231" fg:w="20"/><text x="11.2982%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (10 samples, 0.02%)</title><rect x="11.0693%" y="1077" width="0.0211%" height="15" fill="rgb(236,164,45)" fg:x="5241" fg:w="10"/><text x="11.3193%" y="1087.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (62 samples, 0.13%)</title><rect x="11.0144%" y="1157" width="0.1309%" height="15" fill="rgb(231,15,5)" fg:x="5215" fg:w="62"/><text x="11.2644%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::schedule (26 samples, 0.05%)</title><rect x="11.0905%" y="1141" width="0.0549%" height="15" fill="rgb(252,35,15)" fg:x="5251" fg:w="26"/><text x="11.3405%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.01%)</title><rect x="11.1454%" y="1125" width="0.0106%" height="15" fill="rgb(248,181,18)" fg:x="5277" fg:w="5"/><text x="11.3954%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="11.1454%" y="1109" width="0.0106%" height="15" fill="rgb(233,39,42)" fg:x="5277" fg:w="5"/><text x="11.3954%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::load (14 samples, 0.03%)</title><rect x="11.1559%" y="1125" width="0.0296%" height="15" fill="rgb(238,110,33)" fg:x="5282" fg:w="14"/><text x="11.4059%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.03%)</title><rect x="11.1559%" y="1109" width="0.0296%" height="15" fill="rgb(233,195,10)" fg:x="5282" fg:w="14"/><text x="11.4059%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.03%)</title><rect x="11.1559%" y="1093" width="0.0296%" height="15" fill="rgb(254,105,3)" fg:x="5282" fg:w="14"/><text x="11.4059%" y="1103.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1,067 samples, 2.25%)</title><rect x="8.9362%" y="1253" width="2.2536%" height="15" fill="rgb(221,225,9)" fg:x="4231" fg:w="1067"/><text x="9.1862%" y="1263.50">t..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (262 samples, 0.55%)</title><rect x="10.6364%" y="1237" width="0.5534%" height="15" fill="rgb(224,227,45)" fg:x="5036" fg:w="262"/><text x="10.8864%" y="1247.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (92 samples, 0.19%)</title><rect x="10.9954%" y="1221" width="0.1943%" height="15" fill="rgb(229,198,43)" fg:x="5206" fg:w="92"/><text x="11.2454%" y="1231.50"></text></g><g><title>core::task::wake::Waker::wake (89 samples, 0.19%)</title><rect x="11.0018%" y="1205" width="0.1880%" height="15" fill="rgb(206,209,35)" fg:x="5209" fg:w="89"/><text x="11.2518%" y="1215.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (88 samples, 0.19%)</title><rect x="11.0039%" y="1189" width="0.1859%" height="15" fill="rgb(245,195,53)" fg:x="5210" fg:w="88"/><text x="11.2539%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (88 samples, 0.19%)</title><rect x="11.0039%" y="1173" width="0.1859%" height="15" fill="rgb(240,92,26)" fg:x="5210" fg:w="88"/><text x="11.2539%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (21 samples, 0.04%)</title><rect x="11.1454%" y="1157" width="0.0444%" height="15" fill="rgb(207,40,23)" fg:x="5277" fg:w="21"/><text x="11.3954%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (21 samples, 0.04%)</title><rect x="11.1454%" y="1141" width="0.0444%" height="15" fill="rgb(223,111,35)" fg:x="5277" fg:w="21"/><text x="11.3954%" y="1151.50"></text></g><g><title>tokio::runtime::signal::Driver::process (6 samples, 0.01%)</title><rect x="11.1897%" y="1253" width="0.0127%" height="15" fill="rgb(229,147,28)" fg:x="5298" fg:w="6"/><text x="11.4397%" y="1263.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (14 samples, 0.03%)</title><rect x="11.2172%" y="1237" width="0.0296%" height="15" fill="rgb(211,29,28)" fg:x="5311" fg:w="14"/><text x="11.4672%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.03%)</title><rect x="11.2172%" y="1221" width="0.0296%" height="15" fill="rgb(228,72,33)" fg:x="5311" fg:w="14"/><text x="11.4672%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.03%)</title><rect x="11.2172%" y="1205" width="0.0296%" height="15" fill="rgb(205,214,31)" fg:x="5311" fg:w="14"/><text x="11.4672%" y="1215.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (10 samples, 0.02%)</title><rect x="11.2256%" y="1189" width="0.0211%" height="15" fill="rgb(224,111,15)" fg:x="5315" fg:w="10"/><text x="11.4756%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (179 samples, 0.38%)</title><rect x="11.4094%" y="1077" width="0.3781%" height="15" fill="rgb(253,21,26)" fg:x="5402" fg:w="179"/><text x="11.6594%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (179 samples, 0.38%)</title><rect x="11.4094%" y="1061" width="0.3781%" height="15" fill="rgb(245,139,43)" fg:x="5402" fg:w="179"/><text x="11.6594%" y="1071.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.38%)</title><rect x="11.4094%" y="1045" width="0.3781%" height="15" fill="rgb(252,170,7)" fg:x="5402" fg:w="179"/><text x="11.6594%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (179 samples, 0.38%)</title><rect x="11.4094%" y="1029" width="0.3781%" height="15" fill="rgb(231,118,14)" fg:x="5402" fg:w="179"/><text x="11.6594%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (175 samples, 0.37%)</title><rect x="11.4178%" y="1013" width="0.3696%" height="15" fill="rgb(238,83,0)" fg:x="5406" fg:w="175"/><text x="11.6678%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (175 samples, 0.37%)</title><rect x="11.4178%" y="997" width="0.3696%" height="15" fill="rgb(221,39,39)" fg:x="5406" fg:w="175"/><text x="11.6678%" y="1007.50"></text></g><g><title>core::mem::drop (355 samples, 0.75%)</title><rect x="11.4094%" y="1093" width="0.7498%" height="15" fill="rgb(222,119,46)" fg:x="5402" fg:w="355"/><text x="11.6594%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (176 samples, 0.37%)</title><rect x="11.7874%" y="1077" width="0.3717%" height="15" fill="rgb(222,165,49)" fg:x="5581" fg:w="176"/><text x="12.0374%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (176 samples, 0.37%)</title><rect x="11.7874%" y="1061" width="0.3717%" height="15" fill="rgb(219,113,52)" fg:x="5581" fg:w="176"/><text x="12.0374%" y="1071.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (176 samples, 0.37%)</title><rect x="11.7874%" y="1045" width="0.3717%" height="15" fill="rgb(214,7,15)" fg:x="5581" fg:w="176"/><text x="12.0374%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (176 samples, 0.37%)</title><rect x="11.7874%" y="1029" width="0.3717%" height="15" fill="rgb(235,32,4)" fg:x="5581" fg:w="176"/><text x="12.0374%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (173 samples, 0.37%)</title><rect x="11.7938%" y="1013" width="0.3654%" height="15" fill="rgb(238,90,54)" fg:x="5584" fg:w="173"/><text x="12.0438%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (173 samples, 0.37%)</title><rect x="11.7938%" y="997" width="0.3654%" height="15" fill="rgb(213,208,19)" fg:x="5584" fg:w="173"/><text x="12.0438%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (198 samples, 0.42%)</title><rect x="12.1845%" y="1029" width="0.4182%" height="15" fill="rgb(233,156,4)" fg:x="5769" fg:w="198"/><text x="12.4345%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (198 samples, 0.42%)</title><rect x="12.1845%" y="1013" width="0.4182%" height="15" fill="rgb(207,194,5)" fg:x="5769" fg:w="198"/><text x="12.4345%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (217 samples, 0.46%)</title><rect x="12.1592%" y="1093" width="0.4583%" height="15" fill="rgb(206,111,30)" fg:x="5757" fg:w="217"/><text x="12.4092%" y="1103.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (217 samples, 0.46%)</title><rect x="12.1592%" y="1077" width="0.4583%" height="15" fill="rgb(243,70,54)" fg:x="5757" fg:w="217"/><text x="12.4092%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (217 samples, 0.46%)</title><rect x="12.1592%" y="1061" width="0.4583%" height="15" fill="rgb(242,28,8)" fg:x="5757" fg:w="217"/><text x="12.4092%" y="1071.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (212 samples, 0.45%)</title><rect x="12.1697%" y="1045" width="0.4478%" height="15" fill="rgb(219,106,18)" fg:x="5762" fg:w="212"/><text x="12.4197%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="12.6027%" y="1029" width="0.0148%" height="15" fill="rgb(244,222,10)" fg:x="5967" fg:w="7"/><text x="12.8527%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="12.6027%" y="1013" width="0.0148%" height="15" fill="rgb(236,179,52)" fg:x="5967" fg:w="7"/><text x="12.8527%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (7 samples, 0.01%)</title><rect x="12.6534%" y="1077" width="0.0148%" height="15" fill="rgb(213,23,39)" fg:x="5991" fg:w="7"/><text x="12.9034%" y="1087.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.01%)</title><rect x="12.6534%" y="1061" width="0.0148%" height="15" fill="rgb(238,48,10)" fg:x="5991" fg:w="7"/><text x="12.9034%" y="1071.50"></text></g><g><title>core::slice::index::get_noubcheck (7 samples, 0.01%)</title><rect x="12.6534%" y="1045" width="0.0148%" height="15" fill="rgb(251,196,23)" fg:x="5991" fg:w="7"/><text x="12.9034%" y="1055.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (227 samples, 0.48%)</title><rect x="12.6175%" y="1093" width="0.4794%" height="15" fill="rgb(250,152,24)" fg:x="5974" fg:w="227"/><text x="12.8675%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (203 samples, 0.43%)</title><rect x="12.6682%" y="1077" width="0.4287%" height="15" fill="rgb(209,150,17)" fg:x="5998" fg:w="203"/><text x="12.9182%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (203 samples, 0.43%)</title><rect x="12.6682%" y="1061" width="0.4287%" height="15" fill="rgb(234,202,34)" fg:x="5998" fg:w="203"/><text x="12.9182%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (203 samples, 0.43%)</title><rect x="12.6682%" y="1045" width="0.4287%" height="15" fill="rgb(253,148,53)" fg:x="5998" fg:w="203"/><text x="12.9182%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (200 samples, 0.42%)</title><rect x="12.6745%" y="1029" width="0.4224%" height="15" fill="rgb(218,129,16)" fg:x="6001" fg:w="200"/><text x="12.9245%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (200 samples, 0.42%)</title><rect x="12.6745%" y="1013" width="0.4224%" height="15" fill="rgb(216,85,19)" fg:x="6001" fg:w="200"/><text x="12.9245%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.07%)</title><rect x="13.3356%" y="1061" width="0.0676%" height="15" fill="rgb(235,228,7)" fg:x="6314" fg:w="32"/><text x="13.5856%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.07%)</title><rect x="13.3356%" y="1045" width="0.0676%" height="15" fill="rgb(245,175,0)" fg:x="6314" fg:w="32"/><text x="13.5856%" y="1055.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.03%)</title><rect x="13.3694%" y="1029" width="0.0338%" height="15" fill="rgb(208,168,36)" fg:x="6330" fg:w="16"/><text x="13.6194%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (46 samples, 0.10%)</title><rect x="13.4032%" y="1061" width="0.0972%" height="15" fill="rgb(246,171,24)" fg:x="6346" fg:w="46"/><text x="13.6532%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (46 samples, 0.10%)</title><rect x="13.4032%" y="1045" width="0.0972%" height="15" fill="rgb(215,142,24)" fg:x="6346" fg:w="46"/><text x="13.6532%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (196 samples, 0.41%)</title><rect x="13.0990%" y="1077" width="0.4140%" height="15" fill="rgb(250,187,7)" fg:x="6202" fg:w="196"/><text x="13.3490%" y="1087.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (6 samples, 0.01%)</title><rect x="13.5003%" y="1061" width="0.0127%" height="15" fill="rgb(228,66,33)" fg:x="6392" fg:w="6"/><text x="13.7503%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (6 samples, 0.01%)</title><rect x="13.5003%" y="1045" width="0.0127%" height="15" fill="rgb(234,215,21)" fg:x="6392" fg:w="6"/><text x="13.7503%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (9 samples, 0.02%)</title><rect x="13.5130%" y="1077" width="0.0190%" height="15" fill="rgb(222,191,20)" fg:x="6398" fg:w="9"/><text x="13.7630%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (212 samples, 0.45%)</title><rect x="13.0990%" y="1093" width="0.4478%" height="15" fill="rgb(245,79,54)" fg:x="6202" fg:w="212"/><text x="13.3490%" y="1103.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (7 samples, 0.01%)</title><rect x="13.5320%" y="1077" width="0.0148%" height="15" fill="rgb(240,10,37)" fg:x="6407" fg:w="7"/><text x="13.7820%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.02%)</title><rect x="13.5468%" y="1077" width="0.0232%" height="15" fill="rgb(214,192,32)" fg:x="6414" fg:w="11"/><text x="13.7968%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.06%)</title><rect x="13.7031%" y="1061" width="0.0591%" height="15" fill="rgb(209,36,54)" fg:x="6488" fg:w="28"/><text x="13.9531%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.06%)</title><rect x="13.7031%" y="1045" width="0.0591%" height="15" fill="rgb(220,10,11)" fg:x="6488" fg:w="28"/><text x="13.9531%" y="1055.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.03%)</title><rect x="13.7284%" y="1029" width="0.0338%" height="15" fill="rgb(221,106,17)" fg:x="6500" fg:w="16"/><text x="13.9784%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (41 samples, 0.09%)</title><rect x="13.7622%" y="1061" width="0.0866%" height="15" fill="rgb(251,142,44)" fg:x="6516" fg:w="41"/><text x="14.0122%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (41 samples, 0.09%)</title><rect x="13.7622%" y="1045" width="0.0866%" height="15" fill="rgb(238,13,15)" fg:x="6516" fg:w="41"/><text x="14.0122%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (5 samples, 0.01%)</title><rect x="13.8488%" y="1045" width="0.0106%" height="15" fill="rgb(208,107,27)" fg:x="6557" fg:w="5"/><text x="14.0988%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.01%)</title><rect x="13.8488%" y="1029" width="0.0106%" height="15" fill="rgb(205,136,37)" fg:x="6557" fg:w="5"/><text x="14.0988%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (149 samples, 0.31%)</title><rect x="13.5468%" y="1093" width="0.3147%" height="15" fill="rgb(250,205,27)" fg:x="6414" fg:w="149"/><text x="13.7968%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (138 samples, 0.29%)</title><rect x="13.5700%" y="1077" width="0.2915%" height="15" fill="rgb(210,80,43)" fg:x="6425" fg:w="138"/><text x="13.8200%" y="1087.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (6 samples, 0.01%)</title><rect x="13.8488%" y="1061" width="0.0127%" height="15" fill="rgb(247,160,36)" fg:x="6557" fg:w="6"/><text x="14.0988%" y="1071.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (1,240 samples, 2.62%)</title><rect x="11.2594%" y="1141" width="2.6190%" height="15" fill="rgb(234,13,49)" fg:x="5331" fg:w="1240"/><text x="11.5094%" y="1151.50">co..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1,230 samples, 2.60%)</title><rect x="11.2805%" y="1125" width="2.5978%" height="15" fill="rgb(234,122,0)" fg:x="5341" fg:w="1230"/><text x="11.5305%" y="1135.50">to..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,210 samples, 2.56%)</title><rect x="11.3228%" y="1109" width="2.5556%" height="15" fill="rgb(207,146,38)" fg:x="5361" fg:w="1210"/><text x="11.5728%" y="1119.50">to..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (8 samples, 0.02%)</title><rect x="13.8615%" y="1093" width="0.0169%" height="15" fill="rgb(207,177,25)" fg:x="6563" fg:w="8"/><text x="14.1115%" y="1103.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (5 samples, 0.01%)</title><rect x="13.8889%" y="1109" width="0.0106%" height="15" fill="rgb(211,178,42)" fg:x="6576" fg:w="5"/><text x="14.1389%" y="1119.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (5 samples, 0.01%)</title><rect x="13.8889%" y="1093" width="0.0106%" height="15" fill="rgb(230,69,54)" fg:x="6576" fg:w="5"/><text x="14.1389%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,251 samples, 2.64%)</title><rect x="11.2594%" y="1173" width="2.6422%" height="15" fill="rgb(214,135,41)" fg:x="5331" fg:w="1251"/><text x="11.5094%" y="1183.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,251 samples, 2.64%)</title><rect x="11.2594%" y="1157" width="2.6422%" height="15" fill="rgb(237,67,25)" fg:x="5331" fg:w="1251"/><text x="11.5094%" y="1167.50">co..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.02%)</title><rect x="13.8784%" y="1141" width="0.0232%" height="15" fill="rgb(222,189,50)" fg:x="6571" fg:w="11"/><text x="14.1284%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.02%)</title><rect x="13.8784%" y="1125" width="0.0232%" height="15" fill="rgb(245,148,34)" fg:x="6571" fg:w="11"/><text x="14.1284%" y="1135.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.02%)</title><rect x="13.9249%" y="1125" width="0.0232%" height="15" fill="rgb(222,29,6)" fg:x="6593" fg:w="11"/><text x="14.1749%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.02%)</title><rect x="13.9249%" y="1109" width="0.0232%" height="15" fill="rgb(221,189,43)" fg:x="6593" fg:w="11"/><text x="14.1749%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (210 samples, 0.44%)</title><rect x="14.1297%" y="1045" width="0.4435%" height="15" fill="rgb(207,36,27)" fg:x="6690" fg:w="210"/><text x="14.3797%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (210 samples, 0.44%)</title><rect x="14.1297%" y="1029" width="0.4435%" height="15" fill="rgb(217,90,24)" fg:x="6690" fg:w="210"/><text x="14.3797%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (210 samples, 0.44%)</title><rect x="14.1297%" y="1013" width="0.4435%" height="15" fill="rgb(224,66,35)" fg:x="6690" fg:w="210"/><text x="14.3797%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (210 samples, 0.44%)</title><rect x="14.1297%" y="997" width="0.4435%" height="15" fill="rgb(221,13,50)" fg:x="6690" fg:w="210"/><text x="14.3797%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (206 samples, 0.44%)</title><rect x="14.1382%" y="981" width="0.4351%" height="15" fill="rgb(236,68,49)" fg:x="6694" fg:w="206"/><text x="14.3882%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (206 samples, 0.44%)</title><rect x="14.1382%" y="965" width="0.4351%" height="15" fill="rgb(229,146,28)" fg:x="6694" fg:w="206"/><text x="14.3882%" y="975.50"></text></g><g><title>core::mem::drop (419 samples, 0.88%)</title><rect x="14.1297%" y="1061" width="0.8850%" height="15" fill="rgb(225,31,38)" fg:x="6690" fg:w="419"/><text x="14.3797%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (209 samples, 0.44%)</title><rect x="14.5733%" y="1045" width="0.4414%" height="15" fill="rgb(250,208,3)" fg:x="6900" fg:w="209"/><text x="14.8233%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (209 samples, 0.44%)</title><rect x="14.5733%" y="1029" width="0.4414%" height="15" fill="rgb(246,54,23)" fg:x="6900" fg:w="209"/><text x="14.8233%" y="1039.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (209 samples, 0.44%)</title><rect x="14.5733%" y="1013" width="0.4414%" height="15" fill="rgb(243,76,11)" fg:x="6900" fg:w="209"/><text x="14.8233%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (209 samples, 0.44%)</title><rect x="14.5733%" y="997" width="0.4414%" height="15" fill="rgb(245,21,50)" fg:x="6900" fg:w="209"/><text x="14.8233%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (197 samples, 0.42%)</title><rect x="14.5986%" y="981" width="0.4161%" height="15" fill="rgb(228,9,43)" fg:x="6912" fg:w="197"/><text x="14.8486%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (197 samples, 0.42%)</title><rect x="14.5986%" y="965" width="0.4161%" height="15" fill="rgb(208,100,47)" fg:x="6912" fg:w="197"/><text x="14.8486%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (206 samples, 0.44%)</title><rect x="15.0442%" y="997" width="0.4351%" height="15" fill="rgb(232,26,8)" fg:x="7123" fg:w="206"/><text x="15.2942%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (206 samples, 0.44%)</title><rect x="15.0442%" y="981" width="0.4351%" height="15" fill="rgb(216,166,38)" fg:x="7123" fg:w="206"/><text x="15.2942%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (228 samples, 0.48%)</title><rect x="15.0147%" y="1061" width="0.4816%" height="15" fill="rgb(251,202,51)" fg:x="7109" fg:w="228"/><text x="15.2647%" y="1071.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (228 samples, 0.48%)</title><rect x="15.0147%" y="1045" width="0.4816%" height="15" fill="rgb(254,216,34)" fg:x="7109" fg:w="228"/><text x="15.2647%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (228 samples, 0.48%)</title><rect x="15.0147%" y="1029" width="0.4816%" height="15" fill="rgb(251,32,27)" fg:x="7109" fg:w="228"/><text x="15.2647%" y="1039.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (224 samples, 0.47%)</title><rect x="15.0231%" y="1013" width="0.4731%" height="15" fill="rgb(208,127,28)" fg:x="7113" fg:w="224"/><text x="15.2731%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="15.4793%" y="997" width="0.0169%" height="15" fill="rgb(224,137,22)" fg:x="7329" fg:w="8"/><text x="15.7293%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="15.4793%" y="981" width="0.0169%" height="15" fill="rgb(254,70,32)" fg:x="7329" fg:w="8"/><text x="15.7293%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.03%)</title><rect x="15.5216%" y="1045" width="0.0275%" height="15" fill="rgb(229,75,37)" fg:x="7349" fg:w="13"/><text x="15.7716%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.03%)</title><rect x="15.5216%" y="1029" width="0.0275%" height="15" fill="rgb(252,64,23)" fg:x="7349" fg:w="13"/><text x="15.7716%" y="1039.50"></text></g><g><title>core::slice::index::get_noubcheck (13 samples, 0.03%)</title><rect x="15.5216%" y="1013" width="0.0275%" height="15" fill="rgb(232,162,48)" fg:x="7349" fg:w="13"/><text x="15.7716%" y="1023.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (268 samples, 0.57%)</title><rect x="15.4962%" y="1061" width="0.5660%" height="15" fill="rgb(246,160,12)" fg:x="7337" fg:w="268"/><text x="15.7462%" y="1071.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (243 samples, 0.51%)</title><rect x="15.5490%" y="1045" width="0.5132%" height="15" fill="rgb(247,166,0)" fg:x="7362" fg:w="243"/><text x="15.7990%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (243 samples, 0.51%)</title><rect x="15.5490%" y="1029" width="0.5132%" height="15" fill="rgb(249,219,21)" fg:x="7362" fg:w="243"/><text x="15.7990%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (243 samples, 0.51%)</title><rect x="15.5490%" y="1013" width="0.5132%" height="15" fill="rgb(205,209,3)" fg:x="7362" fg:w="243"/><text x="15.7990%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (241 samples, 0.51%)</title><rect x="15.5533%" y="997" width="0.5090%" height="15" fill="rgb(243,44,1)" fg:x="7364" fg:w="241"/><text x="15.8033%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (241 samples, 0.51%)</title><rect x="15.5533%" y="981" width="0.5090%" height="15" fill="rgb(206,159,16)" fg:x="7364" fg:w="241"/><text x="15.8033%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::elapsed (5 samples, 0.01%)</title><rect x="16.0623%" y="1061" width="0.0106%" height="15" fill="rgb(244,77,30)" fg:x="7605" fg:w="5"/><text x="16.3123%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.07%)</title><rect x="16.3622%" y="1029" width="0.0655%" height="15" fill="rgb(218,69,12)" fg:x="7747" fg:w="31"/><text x="16.6122%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.07%)</title><rect x="16.3622%" y="1013" width="0.0655%" height="15" fill="rgb(212,87,7)" fg:x="7747" fg:w="31"/><text x="16.6122%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.03%)</title><rect x="16.3939%" y="997" width="0.0338%" height="15" fill="rgb(245,114,25)" fg:x="7762" fg:w="16"/><text x="16.6439%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (48 samples, 0.10%)</title><rect x="16.4403%" y="1013" width="0.1014%" height="15" fill="rgb(210,61,42)" fg:x="7784" fg:w="48"/><text x="16.6903%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (8 samples, 0.02%)</title><rect x="16.5417%" y="1013" width="0.0169%" height="15" fill="rgb(211,52,33)" fg:x="7832" fg:w="8"/><text x="16.7917%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (6 samples, 0.01%)</title><rect x="16.5459%" y="997" width="0.0127%" height="15" fill="rgb(234,58,33)" fg:x="7834" fg:w="6"/><text x="16.7959%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (6 samples, 0.01%)</title><rect x="16.5459%" y="981" width="0.0127%" height="15" fill="rgb(220,115,36)" fg:x="7834" fg:w="6"/><text x="16.7959%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (68 samples, 0.14%)</title><rect x="16.4277%" y="1029" width="0.1436%" height="15" fill="rgb(243,153,54)" fg:x="7778" fg:w="68"/><text x="16.6777%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (6 samples, 0.01%)</title><rect x="16.5586%" y="1013" width="0.0127%" height="15" fill="rgb(251,47,18)" fg:x="7840" fg:w="6"/><text x="16.8086%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (6 samples, 0.01%)</title><rect x="16.5586%" y="997" width="0.0127%" height="15" fill="rgb(242,102,42)" fg:x="7840" fg:w="6"/><text x="16.8086%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (239 samples, 0.50%)</title><rect x="16.0770%" y="1045" width="0.5048%" height="15" fill="rgb(234,31,38)" fg:x="7612" fg:w="239"/><text x="16.3270%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (5 samples, 0.01%)</title><rect x="16.5713%" y="1029" width="0.0106%" height="15" fill="rgb(221,117,51)" fg:x="7846" fg:w="5"/><text x="16.8213%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.01%)</title><rect x="16.5713%" y="1013" width="0.0106%" height="15" fill="rgb(212,20,18)" fg:x="7846" fg:w="5"/><text x="16.8213%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (17 samples, 0.04%)</title><rect x="16.5818%" y="1045" width="0.0359%" height="15" fill="rgb(245,133,36)" fg:x="7851" fg:w="17"/><text x="16.8318%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (271 samples, 0.57%)</title><rect x="16.0728%" y="1061" width="0.5724%" height="15" fill="rgb(212,6,19)" fg:x="7610" fg:w="271"/><text x="16.3228%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (13 samples, 0.03%)</title><rect x="16.6177%" y="1045" width="0.0275%" height="15" fill="rgb(218,1,36)" fg:x="7868" fg:w="13"/><text x="16.8677%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.03%)</title><rect x="16.6198%" y="1029" width="0.0253%" height="15" fill="rgb(246,84,54)" fg:x="7869" fg:w="12"/><text x="16.8698%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.04%)</title><rect x="16.6452%" y="1045" width="0.0380%" height="15" fill="rgb(242,110,6)" fg:x="7881" fg:w="18"/><text x="16.8952%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.07%)</title><rect x="16.8184%" y="1029" width="0.0718%" height="15" fill="rgb(214,47,5)" fg:x="7963" fg:w="34"/><text x="17.0684%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.07%)</title><rect x="16.8184%" y="1013" width="0.0718%" height="15" fill="rgb(218,159,25)" fg:x="7963" fg:w="34"/><text x="17.0684%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (20 samples, 0.04%)</title><rect x="16.8480%" y="997" width="0.0422%" height="15" fill="rgb(215,211,28)" fg:x="7977" fg:w="20"/><text x="17.0980%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (59 samples, 0.12%)</title><rect x="16.8944%" y="1013" width="0.1246%" height="15" fill="rgb(238,59,32)" fg:x="7999" fg:w="59"/><text x="17.1444%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (5 samples, 0.01%)</title><rect x="17.0085%" y="997" width="0.0106%" height="15" fill="rgb(226,82,3)" fg:x="8053" fg:w="5"/><text x="17.2585%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (5 samples, 0.01%)</title><rect x="17.0085%" y="981" width="0.0106%" height="15" fill="rgb(240,164,32)" fg:x="8053" fg:w="5"/><text x="17.2585%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (68 samples, 0.14%)</title><rect x="16.8902%" y="1029" width="0.1436%" height="15" fill="rgb(232,46,7)" fg:x="7997" fg:w="68"/><text x="17.1402%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (195 samples, 0.41%)</title><rect x="16.6452%" y="1061" width="0.4119%" height="15" fill="rgb(229,129,53)" fg:x="7881" fg:w="195"/><text x="16.8952%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (177 samples, 0.37%)</title><rect x="16.6832%" y="1045" width="0.3738%" height="15" fill="rgb(234,188,29)" fg:x="7899" fg:w="177"/><text x="16.9332%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (11 samples, 0.02%)</title><rect x="17.0338%" y="1029" width="0.0232%" height="15" fill="rgb(246,141,4)" fg:x="8065" fg:w="11"/><text x="17.2838%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.01%)</title><rect x="17.0423%" y="1013" width="0.0148%" height="15" fill="rgb(229,23,39)" fg:x="8069" fg:w="7"/><text x="17.2923%" y="1023.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (6 samples, 0.01%)</title><rect x="17.0570%" y="1061" width="0.0127%" height="15" fill="rgb(206,12,3)" fg:x="8076" fg:w="6"/><text x="17.3070%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (2,762 samples, 5.83%)</title><rect x="11.2510%" y="1221" width="5.8335%" height="15" fill="rgb(252,226,20)" fg:x="5327" fg:w="2762"/><text x="11.5010%" y="1231.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2,762 samples, 5.83%)</title><rect x="11.2510%" y="1205" width="5.8335%" height="15" fill="rgb(216,123,35)" fg:x="5327" fg:w="2762"/><text x="11.5010%" y="1215.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2,762 samples, 5.83%)</title><rect x="11.2510%" y="1189" width="5.8335%" height="15" fill="rgb(212,68,40)" fg:x="5327" fg:w="2762"/><text x="11.5010%" y="1199.50">core::i..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,507 samples, 3.18%)</title><rect x="13.9016%" y="1173" width="3.1829%" height="15" fill="rgb(254,125,32)" fg:x="6582" fg:w="1507"/><text x="14.1516%" y="1183.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,507 samples, 3.18%)</title><rect x="13.9016%" y="1157" width="3.1829%" height="15" fill="rgb(253,97,22)" fg:x="6582" fg:w="1507"/><text x="14.1516%" y="1167.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,507 samples, 3.18%)</title><rect x="13.9016%" y="1141" width="3.1829%" height="15" fill="rgb(241,101,14)" fg:x="6582" fg:w="1507"/><text x="14.1516%" y="1151.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1,485 samples, 3.14%)</title><rect x="13.9481%" y="1125" width="3.1364%" height="15" fill="rgb(238,103,29)" fg:x="6604" fg:w="1485"/><text x="14.1981%" y="1135.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,485 samples, 3.14%)</title><rect x="13.9481%" y="1109" width="3.1364%" height="15" fill="rgb(233,195,47)" fg:x="6604" fg:w="1485"/><text x="14.1981%" y="1119.50">cor..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1,482 samples, 3.13%)</title><rect x="13.9544%" y="1093" width="3.1301%" height="15" fill="rgb(246,218,30)" fg:x="6607" fg:w="1482"/><text x="14.2044%" y="1103.50">tok..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,462 samples, 3.09%)</title><rect x="13.9967%" y="1077" width="3.0878%" height="15" fill="rgb(219,145,47)" fg:x="6627" fg:w="1462"/><text x="14.2467%" y="1087.50">tok..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (7 samples, 0.01%)</title><rect x="17.0697%" y="1061" width="0.0148%" height="15" fill="rgb(243,12,26)" fg:x="8082" fg:w="7"/><text x="17.3197%" y="1071.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (2,770 samples, 5.85%)</title><rect x="11.2468%" y="1237" width="5.8504%" height="15" fill="rgb(214,87,16)" fg:x="5325" fg:w="2770"/><text x="11.4968%" y="1247.50">tokio::..</text></g><g><title>tokio::runtime::time::Inner::get_shard_size (5 samples, 0.01%)</title><rect x="17.0866%" y="1221" width="0.0106%" height="15" fill="rgb(208,99,42)" fg:x="8090" fg:w="5"/><text x="17.3366%" y="1231.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.01%)</title><rect x="17.0972%" y="1205" width="0.0148%" height="15" fill="rgb(253,99,2)" fg:x="8095" fg:w="7"/><text x="17.3472%" y="1215.50"></text></g><g><title>core::time::Duration::as_millis (6 samples, 0.01%)</title><rect x="17.1120%" y="1205" width="0.0127%" height="15" fill="rgb(220,168,23)" fg:x="8102" fg:w="6"/><text x="17.3620%" y="1215.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (23 samples, 0.05%)</title><rect x="17.0972%" y="1221" width="0.0486%" height="15" fill="rgb(242,38,24)" fg:x="8095" fg:w="23"/><text x="17.3472%" y="1231.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (10 samples, 0.02%)</title><rect x="17.1246%" y="1205" width="0.0211%" height="15" fill="rgb(225,182,9)" fg:x="8108" fg:w="10"/><text x="17.3746%" y="1215.50"></text></g><g><title>std::time::Instant::duration_since (10 samples, 0.02%)</title><rect x="17.1246%" y="1189" width="0.0211%" height="15" fill="rgb(243,178,37)" fg:x="8108" fg:w="10"/><text x="17.3746%" y="1199.50"></text></g><g><title>std::time::Instant::checked_duration_since (10 samples, 0.02%)</title><rect x="17.1246%" y="1173" width="0.0211%" height="15" fill="rgb(232,139,19)" fg:x="8108" fg:w="10"/><text x="17.3746%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (10 samples, 0.02%)</title><rect x="17.1246%" y="1157" width="0.0211%" height="15" fill="rgb(225,201,24)" fg:x="8108" fg:w="10"/><text x="17.3746%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (6 samples, 0.01%)</title><rect x="17.1331%" y="1141" width="0.0127%" height="15" fill="rgb(221,47,46)" fg:x="8112" fg:w="6"/><text x="17.3831%" y="1151.50"></text></g><g><title>clock_gettime (201 samples, 0.42%)</title><rect x="17.1584%" y="1173" width="0.4245%" height="15" fill="rgb(249,23,13)" fg:x="8124" fg:w="201"/><text x="17.4084%" y="1183.50"></text></g><g><title>__vdso_clock_gettime (120 samples, 0.25%)</title><rect x="17.3295%" y="1157" width="0.2534%" height="15" fill="rgb(219,9,5)" fg:x="8205" fg:w="120"/><text x="17.5795%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (208 samples, 0.44%)</title><rect x="17.1458%" y="1189" width="0.4393%" height="15" fill="rgb(254,171,16)" fg:x="8118" fg:w="208"/><text x="17.3958%" y="1199.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (3,024 samples, 6.39%)</title><rect x="11.2024%" y="1253" width="6.3869%" height="15" fill="rgb(230,171,20)" fg:x="5304" fg:w="3024"/><text x="11.4524%" y="1263.50">tokio::r..</text></g><g><title>tokio::runtime::time::source::TimeSource::now (233 samples, 0.49%)</title><rect x="17.0972%" y="1237" width="0.4921%" height="15" fill="rgb(210,71,41)" fg:x="8095" fg:w="233"/><text x="17.3472%" y="1247.50"></text></g><g><title>tokio::time::clock::Clock::now (210 samples, 0.44%)</title><rect x="17.1458%" y="1221" width="0.4435%" height="15" fill="rgb(206,173,20)" fg:x="8118" fg:w="210"/><text x="17.3958%" y="1231.50"></text></g><g><title>tokio::time::clock::now (210 samples, 0.44%)</title><rect x="17.1458%" y="1205" width="0.4435%" height="15" fill="rgb(233,88,34)" fg:x="8118" fg:w="210"/><text x="17.3958%" y="1215.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (6 samples, 0.01%)</title><rect x="17.5956%" y="1253" width="0.0127%" height="15" fill="rgb(223,209,46)" fg:x="8331" fg:w="6"/><text x="17.8456%" y="1263.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (6 samples, 0.01%)</title><rect x="17.5956%" y="1237" width="0.0127%" height="15" fill="rgb(250,43,18)" fg:x="8331" fg:w="6"/><text x="17.8456%" y="1247.50"></text></g><g><title>tokio::runtime::time::handle::Handle::is_shutdown (5 samples, 0.01%)</title><rect x="17.6083%" y="1253" width="0.0106%" height="15" fill="rgb(208,13,10)" fg:x="8337" fg:w="5"/><text x="17.8583%" y="1263.50"></text></g><g><title>tokio::runtime::time::Inner::is_shutdown (5 samples, 0.01%)</title><rect x="17.6083%" y="1237" width="0.0106%" height="15" fill="rgb(212,200,36)" fg:x="8337" fg:w="5"/><text x="17.8583%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (5 samples, 0.01%)</title><rect x="17.6083%" y="1221" width="0.0106%" height="15" fill="rgb(225,90,30)" fg:x="8337" fg:w="5"/><text x="17.8583%" y="1231.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (11 samples, 0.02%)</title><rect x="17.6273%" y="1237" width="0.0232%" height="15" fill="rgb(236,182,39)" fg:x="8346" fg:w="11"/><text x="17.8773%" y="1247.50"></text></g><g><title>clock_gettime (91 samples, 0.19%)</title><rect x="17.6674%" y="1189" width="0.1922%" height="15" fill="rgb(212,144,35)" fg:x="8365" fg:w="91"/><text x="17.9174%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (88 samples, 0.19%)</title><rect x="17.6738%" y="1173" width="0.1859%" height="15" fill="rgb(228,63,44)" fg:x="8368" fg:w="88"/><text x="17.9238%" y="1183.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (111 samples, 0.23%)</title><rect x="17.6273%" y="1253" width="0.2344%" height="15" fill="rgb(228,109,6)" fg:x="8346" fg:w="111"/><text x="17.8773%" y="1263.50"></text></g><g><title>tokio::time::clock::Clock::now (100 samples, 0.21%)</title><rect x="17.6505%" y="1237" width="0.2112%" height="15" fill="rgb(238,117,24)" fg:x="8357" fg:w="100"/><text x="17.9005%" y="1247.50"></text></g><g><title>tokio::time::clock::now (100 samples, 0.21%)</title><rect x="17.6505%" y="1221" width="0.2112%" height="15" fill="rgb(242,26,26)" fg:x="8357" fg:w="100"/><text x="17.9005%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (98 samples, 0.21%)</title><rect x="17.6548%" y="1205" width="0.2070%" height="15" fill="rgb(221,92,48)" fg:x="8359" fg:w="98"/><text x="17.9048%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (5,200 samples, 10.98%)</title><rect x="6.8980%" y="1285" width="10.9827%" height="15" fill="rgb(209,209,32)" fg:x="3266" fg:w="5200"/><text x="7.1480%" y="1295.50">tokio::runtime::..</text></g><g><title>tokio::runtime::time::Driver::park_internal (5,063 samples, 10.69%)</title><rect x="7.1874%" y="1269" width="10.6934%" height="15" fill="rgb(221,70,22)" fg:x="3403" fg:w="5063"/><text x="7.4374%" y="1279.50">tokio::runtime::..</text></g><g><title>tokio::runtime::time::source::TimeSource::tick_to_duration (9 samples, 0.02%)</title><rect x="17.8617%" y="1253" width="0.0190%" height="15" fill="rgb(248,145,5)" fg:x="8457" fg:w="9"/><text x="18.1117%" y="1263.50"></text></g><g><title>core::time::Duration::from_millis (9 samples, 0.02%)</title><rect x="17.8617%" y="1237" width="0.0190%" height="15" fill="rgb(226,116,26)" fg:x="8457" fg:w="9"/><text x="18.1117%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (5,612 samples, 11.85%)</title><rect x="6.1419%" y="1317" width="11.8529%" height="15" fill="rgb(244,5,17)" fg:x="2908" fg:w="5612"/><text x="6.3919%" y="1327.50">tokio::runtime::sc..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (5,612 samples, 11.85%)</title><rect x="6.1419%" y="1301" width="11.8529%" height="15" fill="rgb(252,159,33)" fg:x="2908" fg:w="5612"/><text x="6.3919%" y="1311.50">tokio::runtime::sc..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (54 samples, 0.11%)</title><rect x="17.8808%" y="1285" width="0.1141%" height="15" fill="rgb(206,71,0)" fg:x="8466" fg:w="54"/><text x="18.1308%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (54 samples, 0.11%)</title><rect x="17.8808%" y="1269" width="0.1141%" height="15" fill="rgb(233,118,54)" fg:x="8466" fg:w="54"/><text x="18.1308%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (54 samples, 0.11%)</title><rect x="17.8808%" y="1253" width="0.1141%" height="15" fill="rgb(234,83,48)" fg:x="8466" fg:w="54"/><text x="18.1308%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (5,714 samples, 12.07%)</title><rect x="5.9750%" y="1333" width="12.0683%" height="15" fill="rgb(228,3,54)" fg:x="2829" fg:w="5714"/><text x="6.2250%" y="1343.50">tokio::runtime::sc..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (23 samples, 0.05%)</title><rect x="17.9948%" y="1317" width="0.0486%" height="15" fill="rgb(226,155,13)" fg:x="8520" fg:w="23"/><text x="18.2448%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (16 samples, 0.03%)</title><rect x="18.0096%" y="1301" width="0.0338%" height="15" fill="rgb(241,28,37)" fg:x="8527" fg:w="16"/><text x="18.2596%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (15 samples, 0.03%)</title><rect x="18.0117%" y="1285" width="0.0317%" height="15" fill="rgb(233,93,10)" fg:x="8528" fg:w="15"/><text x="18.2617%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (14 samples, 0.03%)</title><rect x="18.0138%" y="1269" width="0.0296%" height="15" fill="rgb(225,113,19)" fg:x="8529" fg:w="14"/><text x="18.2638%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.03%)</title><rect x="18.0138%" y="1253" width="0.0296%" height="15" fill="rgb(241,2,18)" fg:x="8529" fg:w="14"/><text x="18.2638%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (29 samples, 0.06%)</title><rect x="18.1955%" y="1317" width="0.0612%" height="15" fill="rgb(228,207,21)" fg:x="8615" fg:w="29"/><text x="18.4455%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (29 samples, 0.06%)</title><rect x="18.1955%" y="1301" width="0.0612%" height="15" fill="rgb(213,211,35)" fg:x="8615" fg:w="29"/><text x="18.4455%" y="1311.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.06%)</title><rect x="18.1955%" y="1285" width="0.0612%" height="15" fill="rgb(209,83,10)" fg:x="8615" fg:w="29"/><text x="18.4455%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (29 samples, 0.06%)</title><rect x="18.1955%" y="1269" width="0.0612%" height="15" fill="rgb(209,164,1)" fg:x="8615" fg:w="29"/><text x="18.4455%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (29 samples, 0.06%)</title><rect x="18.1955%" y="1253" width="0.0612%" height="15" fill="rgb(213,184,43)" fg:x="8615" fg:w="29"/><text x="18.4455%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.06%)</title><rect x="18.1955%" y="1237" width="0.0612%" height="15" fill="rgb(231,61,34)" fg:x="8615" fg:w="29"/><text x="18.4455%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (27 samples, 0.06%)</title><rect x="18.2567%" y="1269" width="0.0570%" height="15" fill="rgb(235,75,3)" fg:x="8644" fg:w="27"/><text x="18.5067%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.06%)</title><rect x="18.2567%" y="1253" width="0.0570%" height="15" fill="rgb(220,106,47)" fg:x="8644" fg:w="27"/><text x="18.5067%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (28 samples, 0.06%)</title><rect x="18.2567%" y="1317" width="0.0591%" height="15" fill="rgb(210,196,33)" fg:x="8644" fg:w="28"/><text x="18.5067%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (28 samples, 0.06%)</title><rect x="18.2567%" y="1301" width="0.0591%" height="15" fill="rgb(229,154,42)" fg:x="8644" fg:w="28"/><text x="18.5067%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (28 samples, 0.06%)</title><rect x="18.2567%" y="1285" width="0.0591%" height="15" fill="rgb(228,114,26)" fg:x="8644" fg:w="28"/><text x="18.5067%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (132 samples, 0.28%)</title><rect x="18.0434%" y="1333" width="0.2788%" height="15" fill="rgb(208,144,1)" fg:x="8543" fg:w="132"/><text x="18.2934%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (23 samples, 0.05%)</title><rect x="18.3306%" y="1301" width="0.0486%" height="15" fill="rgb(239,112,37)" fg:x="8679" fg:w="23"/><text x="18.5806%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (23 samples, 0.05%)</title><rect x="18.3306%" y="1285" width="0.0486%" height="15" fill="rgb(210,96,50)" fg:x="8679" fg:w="23"/><text x="18.5806%" y="1295.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.05%)</title><rect x="18.3306%" y="1269" width="0.0486%" height="15" fill="rgb(222,178,2)" fg:x="8679" fg:w="23"/><text x="18.5806%" y="1279.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (23 samples, 0.05%)</title><rect x="18.3306%" y="1253" width="0.0486%" height="15" fill="rgb(226,74,18)" fg:x="8679" fg:w="23"/><text x="18.5806%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (23 samples, 0.05%)</title><rect x="18.3306%" y="1237" width="0.0486%" height="15" fill="rgb(225,67,54)" fg:x="8679" fg:w="23"/><text x="18.5806%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.05%)</title><rect x="18.3306%" y="1221" width="0.0486%" height="15" fill="rgb(251,92,32)" fg:x="8679" fg:w="23"/><text x="18.5806%" y="1231.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (29 samples, 0.06%)</title><rect x="18.3898%" y="1253" width="0.0612%" height="15" fill="rgb(228,149,22)" fg:x="8707" fg:w="29"/><text x="18.6398%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (29 samples, 0.06%)</title><rect x="18.3898%" y="1237" width="0.0612%" height="15" fill="rgb(243,54,13)" fg:x="8707" fg:w="29"/><text x="18.6398%" y="1247.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (44 samples, 0.09%)</title><rect x="18.3792%" y="1301" width="0.0929%" height="15" fill="rgb(243,180,28)" fg:x="8702" fg:w="44"/><text x="18.6292%" y="1311.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (44 samples, 0.09%)</title><rect x="18.3792%" y="1285" width="0.0929%" height="15" fill="rgb(208,167,24)" fg:x="8702" fg:w="44"/><text x="18.6292%" y="1295.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (44 samples, 0.09%)</title><rect x="18.3792%" y="1269" width="0.0929%" height="15" fill="rgb(245,73,45)" fg:x="8702" fg:w="44"/><text x="18.6292%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="18.4510%" y="1253" width="0.0211%" height="15" fill="rgb(237,203,48)" fg:x="8736" fg:w="10"/><text x="18.7010%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (89 samples, 0.19%)</title><rect x="18.3285%" y="1317" width="0.1880%" height="15" fill="rgb(211,197,16)" fg:x="8678" fg:w="89"/><text x="18.5785%" y="1327.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (21 samples, 0.04%)</title><rect x="18.4721%" y="1301" width="0.0444%" height="15" fill="rgb(243,99,51)" fg:x="8746" fg:w="21"/><text x="18.7221%" y="1311.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (21 samples, 0.04%)</title><rect x="18.4721%" y="1285" width="0.0444%" height="15" fill="rgb(215,123,29)" fg:x="8746" fg:w="21"/><text x="18.7221%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (21 samples, 0.04%)</title><rect x="18.4721%" y="1269" width="0.0444%" height="15" fill="rgb(239,186,37)" fg:x="8746" fg:w="21"/><text x="18.7221%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (21 samples, 0.04%)</title><rect x="18.4721%" y="1253" width="0.0444%" height="15" fill="rgb(252,136,39)" fg:x="8746" fg:w="21"/><text x="18.7221%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.04%)</title><rect x="18.4721%" y="1237" width="0.0444%" height="15" fill="rgb(223,213,32)" fg:x="8746" fg:w="21"/><text x="18.7221%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (6 samples, 0.01%)</title><rect x="18.5587%" y="1301" width="0.0127%" height="15" fill="rgb(233,115,5)" fg:x="8787" fg:w="6"/><text x="18.8087%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (6 samples, 0.01%)</title><rect x="18.5587%" y="1285" width="0.0127%" height="15" fill="rgb(207,226,44)" fg:x="8787" fg:w="6"/><text x="18.8087%" y="1295.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="18.5587%" y="1269" width="0.0127%" height="15" fill="rgb(208,126,0)" fg:x="8787" fg:w="6"/><text x="18.8087%" y="1279.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.01%)</title><rect x="18.5587%" y="1253" width="0.0127%" height="15" fill="rgb(244,66,21)" fg:x="8787" fg:w="6"/><text x="18.8087%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.01%)</title><rect x="18.5587%" y="1237" width="0.0127%" height="15" fill="rgb(222,97,12)" fg:x="8787" fg:w="6"/><text x="18.8087%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="18.5587%" y="1221" width="0.0127%" height="15" fill="rgb(219,213,19)" fg:x="8787" fg:w="6"/><text x="18.8087%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.01%)</title><rect x="18.5714%" y="1301" width="0.0148%" height="15" fill="rgb(252,169,30)" fg:x="8793" fg:w="7"/><text x="18.8214%" y="1311.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.01%)</title><rect x="18.5714%" y="1285" width="0.0148%" height="15" fill="rgb(206,32,51)" fg:x="8793" fg:w="7"/><text x="18.8214%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.01%)</title><rect x="18.5714%" y="1269" width="0.0148%" height="15" fill="rgb(250,172,42)" fg:x="8793" fg:w="7"/><text x="18.8214%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.01%)</title><rect x="18.5714%" y="1253" width="0.0148%" height="15" fill="rgb(209,34,43)" fg:x="8793" fg:w="7"/><text x="18.8214%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.01%)</title><rect x="18.5714%" y="1237" width="0.0148%" height="15" fill="rgb(223,11,35)" fg:x="8793" fg:w="7"/><text x="18.8214%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (40 samples, 0.08%)</title><rect x="18.5165%" y="1317" width="0.0845%" height="15" fill="rgb(251,219,26)" fg:x="8767" fg:w="40"/><text x="18.7665%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::unpark_one (7 samples, 0.01%)</title><rect x="18.5862%" y="1301" width="0.0148%" height="15" fill="rgb(231,119,3)" fg:x="8800" fg:w="7"/><text x="18.8362%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.01%)</title><rect x="18.5862%" y="1285" width="0.0148%" height="15" fill="rgb(216,97,11)" fg:x="8800" fg:w="7"/><text x="18.8362%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.01%)</title><rect x="18.5862%" y="1269" width="0.0148%" height="15" fill="rgb(223,59,9)" fg:x="8800" fg:w="7"/><text x="18.8362%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (134 samples, 0.28%)</title><rect x="18.3222%" y="1333" width="0.2830%" height="15" fill="rgb(233,93,31)" fg:x="8675" fg:w="134"/><text x="18.5722%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (39 samples, 0.08%)</title><rect x="18.6158%" y="1301" width="0.0824%" height="15" fill="rgb(239,81,33)" fg:x="8814" fg:w="39"/><text x="18.8658%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (39 samples, 0.08%)</title><rect x="18.6158%" y="1285" width="0.0824%" height="15" fill="rgb(213,120,34)" fg:x="8814" fg:w="39"/><text x="18.8658%" y="1295.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.08%)</title><rect x="18.6158%" y="1269" width="0.0824%" height="15" fill="rgb(243,49,53)" fg:x="8814" fg:w="39"/><text x="18.8658%" y="1279.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (39 samples, 0.08%)</title><rect x="18.6158%" y="1253" width="0.0824%" height="15" fill="rgb(247,216,33)" fg:x="8814" fg:w="39"/><text x="18.8658%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (39 samples, 0.08%)</title><rect x="18.6158%" y="1237" width="0.0824%" height="15" fill="rgb(226,26,14)" fg:x="8814" fg:w="39"/><text x="18.8658%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (39 samples, 0.08%)</title><rect x="18.6158%" y="1221" width="0.0824%" height="15" fill="rgb(215,49,53)" fg:x="8814" fg:w="39"/><text x="18.8658%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (10 samples, 0.02%)</title><rect x="18.6981%" y="1253" width="0.0211%" height="15" fill="rgb(245,162,40)" fg:x="8853" fg:w="10"/><text x="18.9481%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.02%)</title><rect x="18.6981%" y="1237" width="0.0211%" height="15" fill="rgb(229,68,17)" fg:x="8853" fg:w="10"/><text x="18.9481%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.02%)</title><rect x="18.6981%" y="1301" width="0.0232%" height="15" fill="rgb(213,182,10)" fg:x="8853" fg:w="11"/><text x="18.9481%" y="1311.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.02%)</title><rect x="18.6981%" y="1285" width="0.0232%" height="15" fill="rgb(245,125,30)" fg:x="8853" fg:w="11"/><text x="18.9481%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.02%)</title><rect x="18.6981%" y="1269" width="0.0232%" height="15" fill="rgb(232,202,2)" fg:x="8853" fg:w="11"/><text x="18.9481%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (57 samples, 0.12%)</title><rect x="18.6115%" y="1317" width="0.1204%" height="15" fill="rgb(237,140,51)" fg:x="8812" fg:w="57"/><text x="18.8615%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (5 samples, 0.01%)</title><rect x="18.7214%" y="1301" width="0.0106%" height="15" fill="rgb(236,157,25)" fg:x="8864" fg:w="5"/><text x="18.9714%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="18.7214%" y="1285" width="0.0106%" height="15" fill="rgb(219,209,0)" fg:x="8864" fg:w="5"/><text x="18.9714%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="18.7214%" y="1269" width="0.0106%" height="15" fill="rgb(240,116,54)" fg:x="8864" fg:w="5"/><text x="18.9714%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (17 samples, 0.04%)</title><rect x="18.7319%" y="1317" width="0.0359%" height="15" fill="rgb(216,10,36)" fg:x="8869" fg:w="17"/><text x="18.9819%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (5 samples, 0.01%)</title><rect x="18.7573%" y="1301" width="0.0106%" height="15" fill="rgb(222,72,44)" fg:x="8881" fg:w="5"/><text x="19.0073%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (6,164 samples, 13.02%)</title><rect x="5.7533%" y="1349" width="13.0188%" height="15" fill="rgb(232,159,9)" fg:x="2724" fg:w="6164"/><text x="6.0033%" y="1359.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (79 samples, 0.17%)</title><rect x="18.6052%" y="1333" width="0.1669%" height="15" fill="rgb(210,39,32)" fg:x="8809" fg:w="79"/><text x="18.8552%" y="1343.50"></text></g><g><title>tokio::runtime::context::budget (8 samples, 0.02%)</title><rect x="18.7805%" y="1301" width="0.0169%" height="15" fill="rgb(216,194,45)" fg:x="8892" fg:w="8"/><text x="19.0305%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.02%)</title><rect x="18.7805%" y="1285" width="0.0169%" height="15" fill="rgb(218,18,35)" fg:x="8892" fg:w="8"/><text x="19.0305%" y="1295.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (7 samples, 0.01%)</title><rect x="18.7826%" y="1269" width="0.0148%" height="15" fill="rgb(207,83,51)" fg:x="8893" fg:w="7"/><text x="19.0326%" y="1279.50"></text></g><g><title>tokio::runtime::coop::with_budget::_{{closure}} (7 samples, 0.01%)</title><rect x="18.7826%" y="1253" width="0.0148%" height="15" fill="rgb(225,63,43)" fg:x="8893" fg:w="7"/><text x="19.0326%" y="1263.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="18.7826%" y="1237" width="0.0148%" height="15" fill="rgb(207,57,36)" fg:x="8893" fg:w="7"/><text x="19.0326%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (17 samples, 0.04%)</title><rect x="18.8079%" y="1285" width="0.0359%" height="15" fill="rgb(216,99,33)" fg:x="8905" fg:w="17"/><text x="19.0579%" y="1295.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (17 samples, 0.04%)</title><rect x="18.8079%" y="1269" width="0.0359%" height="15" fill="rgb(225,42,16)" fg:x="8905" fg:w="17"/><text x="19.0579%" y="1279.50"></text></g><g><title>core::cell::BorrowRefMut::new (17 samples, 0.04%)</title><rect x="18.8079%" y="1253" width="0.0359%" height="15" fill="rgb(220,201,45)" fg:x="8905" fg:w="17"/><text x="19.0579%" y="1263.50"></text></g><g><title>core::ptr::read (12 samples, 0.03%)</title><rect x="18.8439%" y="1253" width="0.0253%" height="15" fill="rgb(225,33,4)" fg:x="8922" fg:w="12"/><text x="19.0939%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.03%)</title><rect x="18.8439%" y="1285" width="0.0275%" height="15" fill="rgb(224,33,50)" fg:x="8922" fg:w="13"/><text x="19.0939%" y="1295.50"></text></g><g><title>core::mem::replace (13 samples, 0.03%)</title><rect x="18.8439%" y="1269" width="0.0275%" height="15" fill="rgb(246,198,51)" fg:x="8922" fg:w="13"/><text x="19.0939%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (17 samples, 0.04%)</title><rect x="18.8776%" y="1285" width="0.0359%" height="15" fill="rgb(205,22,4)" fg:x="8938" fg:w="17"/><text x="19.1276%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.03%)</title><rect x="18.9558%" y="1157" width="0.0296%" height="15" fill="rgb(206,3,8)" fg:x="8975" fg:w="14"/><text x="19.2058%" y="1167.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (13 samples, 0.03%)</title><rect x="18.9579%" y="1141" width="0.0275%" height="15" fill="rgb(251,23,15)" fg:x="8976" fg:w="13"/><text x="19.2079%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="18.9896%" y="1141" width="0.0148%" height="15" fill="rgb(252,88,28)" fg:x="8991" fg:w="7"/><text x="19.2396%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7 samples, 0.01%)</title><rect x="18.9896%" y="1125" width="0.0148%" height="15" fill="rgb(212,127,14)" fg:x="8991" fg:w="7"/><text x="19.2396%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.01%)</title><rect x="18.9896%" y="1109" width="0.0148%" height="15" fill="rgb(247,145,37)" fg:x="8991" fg:w="7"/><text x="19.2396%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.08%)</title><rect x="19.0149%" y="1093" width="0.0760%" height="15" fill="rgb(209,117,53)" fg:x="9003" fg:w="36"/><text x="19.2649%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.08%)</title><rect x="19.0149%" y="1077" width="0.0760%" height="15" fill="rgb(212,90,42)" fg:x="9003" fg:w="36"/><text x="19.2649%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (42 samples, 0.09%)</title><rect x="19.0910%" y="1093" width="0.0887%" height="15" fill="rgb(218,164,37)" fg:x="9039" fg:w="42"/><text x="19.3410%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (39 samples, 0.08%)</title><rect x="19.0973%" y="1077" width="0.0824%" height="15" fill="rgb(246,65,34)" fg:x="9042" fg:w="39"/><text x="19.3473%" y="1087.50"></text></g><g><title>clock_gettime (38 samples, 0.08%)</title><rect x="19.0994%" y="1061" width="0.0803%" height="15" fill="rgb(231,100,33)" fg:x="9043" fg:w="38"/><text x="19.3494%" y="1071.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.04%)</title><rect x="19.1395%" y="1045" width="0.0401%" height="15" fill="rgb(228,126,14)" fg:x="9062" fg:w="19"/><text x="19.3895%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (18 samples, 0.04%)</title><rect x="19.1797%" y="1093" width="0.0380%" height="15" fill="rgb(215,173,21)" fg:x="9081" fg:w="18"/><text x="19.4297%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (13 samples, 0.03%)</title><rect x="19.1902%" y="1077" width="0.0275%" height="15" fill="rgb(210,6,40)" fg:x="9086" fg:w="13"/><text x="19.4402%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.03%)</title><rect x="19.1902%" y="1061" width="0.0275%" height="15" fill="rgb(212,48,18)" fg:x="9086" fg:w="13"/><text x="19.4402%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.03%)</title><rect x="19.1902%" y="1045" width="0.0275%" height="15" fill="rgb(230,214,11)" fg:x="9086" fg:w="13"/><text x="19.4402%" y="1055.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (105 samples, 0.22%)</title><rect x="19.0065%" y="1125" width="0.2218%" height="15" fill="rgb(254,105,39)" fg:x="8999" fg:w="105"/><text x="19.2565%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (105 samples, 0.22%)</title><rect x="19.0065%" y="1109" width="0.2218%" height="15" fill="rgb(245,158,5)" fg:x="8999" fg:w="105"/><text x="19.2565%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (5 samples, 0.01%)</title><rect x="19.2177%" y="1093" width="0.0106%" height="15" fill="rgb(249,208,11)" fg:x="9099" fg:w="5"/><text x="19.4677%" y="1103.50"></text></g><g><title>syscall (12 samples, 0.03%)</title><rect x="19.2283%" y="1125" width="0.0253%" height="15" fill="rgb(210,39,28)" fg:x="9104" fg:w="12"/><text x="19.4783%" y="1135.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (23 samples, 0.05%)</title><rect x="19.2536%" y="1125" width="0.0486%" height="15" fill="rgb(211,56,53)" fg:x="9116" fg:w="23"/><text x="19.5036%" y="1135.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (19 samples, 0.04%)</title><rect x="19.2620%" y="1109" width="0.0401%" height="15" fill="rgb(226,201,30)" fg:x="9120" fg:w="19"/><text x="19.5120%" y="1119.50"></text></g><g><title>mio::waker::Waker::wake (19 samples, 0.04%)</title><rect x="19.2620%" y="1093" width="0.0401%" height="15" fill="rgb(239,101,34)" fg:x="9120" fg:w="19"/><text x="19.5120%" y="1103.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (19 samples, 0.04%)</title><rect x="19.2620%" y="1077" width="0.0401%" height="15" fill="rgb(226,209,5)" fg:x="9120" fg:w="19"/><text x="19.5120%" y="1087.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (19 samples, 0.04%)</title><rect x="19.2620%" y="1061" width="0.0401%" height="15" fill="rgb(250,105,47)" fg:x="9120" fg:w="19"/><text x="19.5120%" y="1071.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (19 samples, 0.04%)</title><rect x="19.2620%" y="1045" width="0.0401%" height="15" fill="rgb(230,72,3)" fg:x="9120" fg:w="19"/><text x="19.5120%" y="1055.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (19 samples, 0.04%)</title><rect x="19.2620%" y="1029" width="0.0401%" height="15" fill="rgb(232,218,39)" fg:x="9120" fg:w="19"/><text x="19.5120%" y="1039.50"></text></g><g><title>write (19 samples, 0.04%)</title><rect x="19.2620%" y="1013" width="0.0401%" height="15" fill="rgb(248,166,6)" fg:x="9120" fg:w="19"/><text x="19.5120%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (14 samples, 0.03%)</title><rect x="19.3212%" y="1093" width="0.0296%" height="15" fill="rgb(247,89,20)" fg:x="9148" fg:w="14"/><text x="19.5712%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.03%)</title><rect x="19.3212%" y="1077" width="0.0296%" height="15" fill="rgb(248,130,54)" fg:x="9148" fg:w="14"/><text x="19.5712%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (26 samples, 0.05%)</title><rect x="19.3022%" y="1125" width="0.0549%" height="15" fill="rgb(234,196,4)" fg:x="9139" fg:w="26"/><text x="19.5522%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (26 samples, 0.05%)</title><rect x="19.3022%" y="1109" width="0.0549%" height="15" fill="rgb(250,143,31)" fg:x="9139" fg:w="26"/><text x="19.5522%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (16 samples, 0.03%)</title><rect x="19.3634%" y="1109" width="0.0338%" height="15" fill="rgb(211,110,34)" fg:x="9168" fg:w="16"/><text x="19.6134%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.03%)</title><rect x="19.3634%" y="1093" width="0.0338%" height="15" fill="rgb(215,124,48)" fg:x="9168" fg:w="16"/><text x="19.6134%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (24 samples, 0.05%)</title><rect x="19.3571%" y="1125" width="0.0507%" height="15" fill="rgb(216,46,13)" fg:x="9165" fg:w="24"/><text x="19.6071%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.03%)</title><rect x="19.4247%" y="1093" width="0.0275%" height="15" fill="rgb(205,184,25)" fg:x="9197" fg:w="13"/><text x="19.6747%" y="1103.50"></text></g><g><title>core::ptr::read (12 samples, 0.03%)</title><rect x="19.4268%" y="1077" width="0.0253%" height="15" fill="rgb(228,1,10)" fg:x="9198" fg:w="12"/><text x="19.6768%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (31 samples, 0.07%)</title><rect x="19.4648%" y="1093" width="0.0655%" height="15" fill="rgb(213,116,27)" fg:x="9216" fg:w="31"/><text x="19.7148%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.07%)</title><rect x="19.4648%" y="1077" width="0.0655%" height="15" fill="rgb(241,95,50)" fg:x="9216" fg:w="31"/><text x="19.7148%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.07%)</title><rect x="19.4648%" y="1061" width="0.0655%" height="15" fill="rgb(238,48,32)" fg:x="9216" fg:w="31"/><text x="19.7148%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (275 samples, 0.58%)</title><rect x="18.9537%" y="1221" width="0.5808%" height="15" fill="rgb(235,113,49)" fg:x="8974" fg:w="275"/><text x="19.2037%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (274 samples, 0.58%)</title><rect x="18.9558%" y="1205" width="0.5787%" height="15" fill="rgb(205,127,43)" fg:x="8975" fg:w="274"/><text x="19.2058%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (274 samples, 0.58%)</title><rect x="18.9558%" y="1189" width="0.5787%" height="15" fill="rgb(250,162,2)" fg:x="8975" fg:w="274"/><text x="19.2058%" y="1199.50"></text></g><g><title>tokio::runtime::context::with_scheduler (274 samples, 0.58%)</title><rect x="18.9558%" y="1173" width="0.5787%" height="15" fill="rgb(220,13,41)" fg:x="8975" fg:w="274"/><text x="19.2058%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (260 samples, 0.55%)</title><rect x="18.9854%" y="1157" width="0.5491%" height="15" fill="rgb(249,221,25)" fg:x="8989" fg:w="260"/><text x="19.2354%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (251 samples, 0.53%)</title><rect x="19.0044%" y="1141" width="0.5301%" height="15" fill="rgb(215,208,19)" fg:x="8998" fg:w="251"/><text x="19.2544%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (60 samples, 0.13%)</title><rect x="19.4078%" y="1125" width="0.1267%" height="15" fill="rgb(236,175,2)" fg:x="9189" fg:w="60"/><text x="19.6578%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (52 samples, 0.11%)</title><rect x="19.4247%" y="1109" width="0.1098%" height="15" fill="rgb(241,52,2)" fg:x="9197" fg:w="52"/><text x="19.6747%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (71 samples, 0.15%)</title><rect x="20.5398%" y="933" width="0.1500%" height="15" fill="rgb(248,140,14)" fg:x="9725" fg:w="71"/><text x="20.7898%" y="943.50"></text></g><g><title>_ZN4core3ptr1154drop_in_place$LT$alloc..sync..Arc$LT$flume..Hook$LT$wisp_mux..mux..inner..WsEvent$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$flume..async..AsyncSignal$GT$$GT$$GT$17hb73ef361a28f4ea2E (19 samples, 0.04%)</title><rect x="21.1608%" y="789" width="0.0401%" height="15" fill="rgb(253,22,42)" fg:x="10019" fg:w="19"/><text x="21.4108%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="21.1608%" y="773" width="0.0401%" height="15" fill="rgb(234,61,47)" fg:x="10019" fg:w="19"/><text x="21.4108%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.04%)</title><rect x="21.1650%" y="757" width="0.0359%" height="15" fill="rgb(208,226,15)" fg:x="10021" fg:w="17"/><text x="21.4150%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.04%)</title><rect x="21.1650%" y="741" width="0.0359%" height="15" fill="rgb(217,221,4)" fg:x="10021" fg:w="17"/><text x="21.4150%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (37 samples, 0.08%)</title><rect x="21.2009%" y="789" width="0.0781%" height="15" fill="rgb(212,174,34)" fg:x="10038" fg:w="37"/><text x="21.4509%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.08%)</title><rect x="21.2009%" y="773" width="0.0781%" height="15" fill="rgb(253,83,4)" fg:x="10038" fg:w="37"/><text x="21.4509%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.08%)</title><rect x="21.2009%" y="757" width="0.0781%" height="15" fill="rgb(250,195,49)" fg:x="10038" fg:w="37"/><text x="21.4509%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.08%)</title><rect x="21.2009%" y="741" width="0.0781%" height="15" fill="rgb(241,192,25)" fg:x="10038" fg:w="37"/><text x="21.4509%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.08%)</title><rect x="21.2009%" y="725" width="0.0781%" height="15" fill="rgb(208,124,10)" fg:x="10038" fg:w="37"/><text x="21.4509%" y="735.50"></text></g><g><title>core::mem::drop (38 samples, 0.08%)</title><rect x="21.3023%" y="757" width="0.0803%" height="15" fill="rgb(222,33,0)" fg:x="10086" fg:w="38"/><text x="21.5523%" y="767.50"></text></g><g><title>_ZN4core3ptr1138drop_in_place$LT$std..sync..mutex..MutexGuard$LT$flume..Chan$LT$wisp_mux..mux..inner..WsEvent$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$$GT$$GT$17h421fabfe1bb125d8E (38 samples, 0.08%)</title><rect x="21.3023%" y="741" width="0.0803%" height="15" fill="rgb(234,209,28)" fg:x="10086" fg:w="38"/><text x="21.5523%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.08%)</title><rect x="21.3023%" y="725" width="0.0803%" height="15" fill="rgb(224,11,23)" fg:x="10086" fg:w="38"/><text x="21.5523%" y="735.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (36 samples, 0.08%)</title><rect x="21.3065%" y="709" width="0.0760%" height="15" fill="rgb(232,99,1)" fg:x="10088" fg:w="36"/><text x="21.5565%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (32 samples, 0.07%)</title><rect x="21.3150%" y="693" width="0.0676%" height="15" fill="rgb(237,95,45)" fg:x="10092" fg:w="32"/><text x="21.5650%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.07%)</title><rect x="21.3150%" y="677" width="0.0676%" height="15" fill="rgb(208,109,11)" fg:x="10092" fg:w="32"/><text x="21.5650%" y="687.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (9 samples, 0.02%)</title><rect x="21.3826%" y="757" width="0.0190%" height="15" fill="rgb(216,190,48)" fg:x="10124" fg:w="9"/><text x="21.6326%" y="767.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (126 samples, 0.27%)</title><rect x="21.2833%" y="789" width="0.2661%" height="15" fill="rgb(251,171,36)" fg:x="10077" fg:w="126"/><text x="21.5333%" y="799.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (126 samples, 0.27%)</title><rect x="21.2833%" y="773" width="0.2661%" height="15" fill="rgb(230,62,22)" fg:x="10077" fg:w="126"/><text x="21.5333%" y="783.50"></text></g><g><title>flume::wait_lock (70 samples, 0.15%)</title><rect x="21.4016%" y="757" width="0.1478%" height="15" fill="rgb(225,114,35)" fg:x="10133" fg:w="70"/><text x="21.6516%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (69 samples, 0.15%)</title><rect x="21.4037%" y="741" width="0.1457%" height="15" fill="rgb(215,118,42)" fg:x="10134" fg:w="69"/><text x="21.6537%" y="751.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (67 samples, 0.14%)</title><rect x="21.4079%" y="725" width="0.1415%" height="15" fill="rgb(243,119,21)" fg:x="10136" fg:w="67"/><text x="21.6579%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (67 samples, 0.14%)</title><rect x="21.4079%" y="709" width="0.1415%" height="15" fill="rgb(252,177,53)" fg:x="10136" fg:w="67"/><text x="21.6579%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (67 samples, 0.14%)</title><rect x="21.4079%" y="693" width="0.1415%" height="15" fill="rgb(237,209,29)" fg:x="10136" fg:w="67"/><text x="21.6579%" y="703.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.48%)</title><rect x="21.1418%" y="821" width="0.4837%" height="15" fill="rgb(212,65,23)" fg:x="10010" fg:w="229"/><text x="21.3918%" y="831.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (229 samples, 0.48%)</title><rect x="21.1418%" y="805" width="0.4837%" height="15" fill="rgb(230,222,46)" fg:x="10010" fg:w="229"/><text x="21.3918%" y="815.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (36 samples, 0.08%)</title><rect x="21.5494%" y="789" width="0.0760%" height="15" fill="rgb(215,135,32)" fg:x="10203" fg:w="36"/><text x="21.7994%" y="799.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (29 samples, 0.06%)</title><rect x="21.5642%" y="773" width="0.0612%" height="15" fill="rgb(246,101,22)" fg:x="10210" fg:w="29"/><text x="21.8142%" y="783.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (29 samples, 0.06%)</title><rect x="21.5642%" y="757" width="0.0612%" height="15" fill="rgb(206,107,13)" fg:x="10210" fg:w="29"/><text x="21.8142%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (29 samples, 0.06%)</title><rect x="21.5642%" y="741" width="0.0612%" height="15" fill="rgb(250,100,44)" fg:x="10210" fg:w="29"/><text x="21.8142%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.06%)</title><rect x="21.5642%" y="725" width="0.0612%" height="15" fill="rgb(231,147,38)" fg:x="10210" fg:w="29"/><text x="21.8142%" y="735.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (230 samples, 0.49%)</title><rect x="21.1418%" y="837" width="0.4858%" height="15" fill="rgb(229,8,40)" fg:x="10010" fg:w="230"/><text x="21.3918%" y="847.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (54 samples, 0.11%)</title><rect x="21.6973%" y="757" width="0.1141%" height="15" fill="rgb(221,135,30)" fg:x="10273" fg:w="54"/><text x="21.9473%" y="767.50"></text></g><g><title>_ZN4core3ptr4591drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hfb65917b7f5c0ce3E (10 samples, 0.02%)</title><rect x="21.7902%" y="741" width="0.0211%" height="15" fill="rgb(249,193,18)" fg:x="10317" fg:w="10"/><text x="22.0402%" y="751.50"></text></g><g><title>_ZN4core3ptr4648drop_in_place$LT$pin_project_lite..__private..UnsafeOverwriteGuard$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$GT$17he127259270213088E (6 samples, 0.01%)</title><rect x="21.9317%" y="725" width="0.0127%" height="15" fill="rgb(209,133,39)" fg:x="10384" fg:w="6"/><text x="22.1817%" y="735.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeOverwriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="21.9317%" y="709" width="0.0127%" height="15" fill="rgb(232,100,14)" fg:x="10384" fg:w="6"/><text x="22.1817%" y="719.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="21.9317%" y="693" width="0.0127%" height="15" fill="rgb(224,185,1)" fg:x="10384" fg:w="6"/><text x="22.1817%" y="703.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (60 samples, 0.13%)</title><rect x="21.8198%" y="757" width="0.1267%" height="15" fill="rgb(223,139,8)" fg:x="10331" fg:w="60"/><text x="22.0698%" y="767.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project_replace (7 samples, 0.01%)</title><rect x="21.9317%" y="741" width="0.0148%" height="15" fill="rgb(232,213,38)" fg:x="10384" fg:w="7"/><text x="22.1817%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27 samples, 0.06%)</title><rect x="22.1218%" y="741" width="0.0570%" height="15" fill="rgb(207,94,22)" fg:x="10474" fg:w="27"/><text x="22.3718%" y="751.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (27 samples, 0.06%)</title><rect x="22.1218%" y="725" width="0.0570%" height="15" fill="rgb(219,183,54)" fg:x="10474" fg:w="27"/><text x="22.3718%" y="735.50"></text></g><g><title>core::result::Result&lt;core::option::Option&lt;T&gt;,E&gt;::transpose (24 samples, 0.05%)</title><rect x="22.1788%" y="741" width="0.0507%" height="15" fill="rgb(216,185,54)" fg:x="10501" fg:w="24"/><text x="22.4288%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.03%)</title><rect x="23.1926%" y="693" width="0.0275%" height="15" fill="rgb(254,217,39)" fg:x="10981" fg:w="13"/><text x="23.4426%" y="703.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;fastwebsockets::frame::OpCode&gt; for wisp_mux::ws::OpCode&gt;::from (13 samples, 0.03%)</title><rect x="23.1926%" y="677" width="0.0275%" height="15" fill="rgb(240,178,23)" fg:x="10981" fg:w="13"/><text x="23.4426%" y="687.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (25 samples, 0.05%)</title><rect x="23.2222%" y="693" width="0.0528%" height="15" fill="rgb(218,11,47)" fg:x="10995" fg:w="25"/><text x="23.4722%" y="703.50"></text></g><g><title>core::cmp::PartialEq::ne (33 samples, 0.07%)</title><rect x="23.2792%" y="693" width="0.0697%" height="15" fill="rgb(218,51,51)" fg:x="11022" fg:w="33"/><text x="23.5292%" y="703.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (33 samples, 0.07%)</title><rect x="23.2792%" y="677" width="0.0697%" height="15" fill="rgb(238,126,27)" fg:x="11022" fg:w="33"/><text x="23.5292%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (6 samples, 0.01%)</title><rect x="25.2688%" y="613" width="0.0127%" height="15" fill="rgb(249,202,22)" fg:x="11964" fg:w="6"/><text x="25.5188%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (18 samples, 0.04%)</title><rect x="25.2476%" y="629" width="0.0380%" height="15" fill="rgb(254,195,49)" fg:x="11954" fg:w="18"/><text x="25.4976%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (26 samples, 0.05%)</title><rect x="25.2371%" y="645" width="0.0549%" height="15" fill="rgb(208,123,14)" fg:x="11949" fg:w="26"/><text x="25.4871%" y="655.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (62 samples, 0.13%)</title><rect x="25.2962%" y="629" width="0.1309%" height="15" fill="rgb(224,200,8)" fg:x="11977" fg:w="62"/><text x="25.5462%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (44 samples, 0.09%)</title><rect x="25.3342%" y="613" width="0.0929%" height="15" fill="rgb(217,61,36)" fg:x="11995" fg:w="44"/><text x="25.5842%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (36 samples, 0.08%)</title><rect x="25.3511%" y="597" width="0.0760%" height="15" fill="rgb(206,35,45)" fg:x="12003" fg:w="36"/><text x="25.6011%" y="607.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (5 samples, 0.01%)</title><rect x="25.4272%" y="629" width="0.0106%" height="15" fill="rgb(217,65,33)" fg:x="12039" fg:w="5"/><text x="25.6772%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (5 samples, 0.01%)</title><rect x="25.4272%" y="613" width="0.0106%" height="15" fill="rgb(222,158,48)" fg:x="12039" fg:w="5"/><text x="25.6772%" y="623.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (18 samples, 0.04%)</title><rect x="25.5476%" y="597" width="0.0380%" height="15" fill="rgb(254,2,54)" fg:x="12096" fg:w="18"/><text x="25.7976%" y="607.50"></text></g><g><title>[libc.so.6] (212 samples, 0.45%)</title><rect x="26.1284%" y="421" width="0.4478%" height="15" fill="rgb(250,143,38)" fg:x="12371" fg:w="212"/><text x="26.3784%" y="431.50"></text></g><g><title>recv (472 samples, 1.00%)</title><rect x="25.6616%" y="437" width="0.9969%" height="15" fill="rgb(248,25,0)" fg:x="12150" fg:w="472"/><text x="25.9116%" y="447.50"></text></g><g><title>[unknown] (39 samples, 0.08%)</title><rect x="26.5761%" y="421" width="0.0824%" height="15" fill="rgb(206,152,27)" fg:x="12583" fg:w="39"/><text x="26.8261%" y="431.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (85 samples, 0.18%)</title><rect x="26.6627%" y="421" width="0.1795%" height="15" fill="rgb(240,77,30)" fg:x="12624" fg:w="85"/><text x="26.9127%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (560 samples, 1.18%)</title><rect x="25.6616%" y="565" width="1.1828%" height="15" fill="rgb(231,5,3)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="575.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (560 samples, 1.18%)</title><rect x="25.6616%" y="549" width="1.1828%" height="15" fill="rgb(207,226,32)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="559.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (560 samples, 1.18%)</title><rect x="25.6616%" y="533" width="1.1828%" height="15" fill="rgb(222,207,47)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (560 samples, 1.18%)</title><rect x="25.6616%" y="517" width="1.1828%" height="15" fill="rgb(229,115,45)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="527.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (560 samples, 1.18%)</title><rect x="25.6616%" y="501" width="1.1828%" height="15" fill="rgb(224,191,6)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="511.50"></text></g><g><title>std::sys_common::net::TcpStream::read (560 samples, 1.18%)</title><rect x="25.6616%" y="485" width="1.1828%" height="15" fill="rgb(230,227,24)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="495.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (560 samples, 1.18%)</title><rect x="25.6616%" y="469" width="1.1828%" height="15" fill="rgb(228,80,19)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="479.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (560 samples, 1.18%)</title><rect x="25.6616%" y="453" width="1.1828%" height="15" fill="rgb(247,229,0)" fg:x="12150" fg:w="560"/><text x="25.9116%" y="463.50"></text></g><g><title>std::sys::pal::unix::cvt (88 samples, 0.19%)</title><rect x="26.6585%" y="437" width="0.1859%" height="15" fill="rgb(237,194,15)" fg:x="12622" fg:w="88"/><text x="26.9085%" y="447.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (6 samples, 0.01%)</title><rect x="26.8507%" y="565" width="0.0127%" height="15" fill="rgb(219,203,20)" fg:x="12713" fg:w="6"/><text x="27.1007%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (5 samples, 0.01%)</title><rect x="26.8528%" y="549" width="0.0106%" height="15" fill="rgb(234,128,8)" fg:x="12714" fg:w="5"/><text x="27.1028%" y="559.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (24 samples, 0.05%)</title><rect x="26.8634%" y="565" width="0.0507%" height="15" fill="rgb(248,202,8)" fg:x="12719" fg:w="24"/><text x="27.1134%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (9 samples, 0.02%)</title><rect x="26.9141%" y="565" width="0.0190%" height="15" fill="rgb(206,104,37)" fg:x="12743" fg:w="9"/><text x="27.1641%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (24 samples, 0.05%)</title><rect x="26.9373%" y="517" width="0.0507%" height="15" fill="rgb(223,8,27)" fg:x="12754" fg:w="24"/><text x="27.1873%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.05%)</title><rect x="26.9373%" y="501" width="0.0507%" height="15" fill="rgb(216,217,28)" fg:x="12754" fg:w="24"/><text x="27.1873%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.03%)</title><rect x="26.9880%" y="517" width="0.0338%" height="15" fill="rgb(249,199,1)" fg:x="12778" fg:w="16"/><text x="27.2380%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.03%)</title><rect x="26.9880%" y="501" width="0.0338%" height="15" fill="rgb(240,85,17)" fg:x="12778" fg:w="16"/><text x="27.2380%" y="511.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (45 samples, 0.10%)</title><rect x="26.9331%" y="565" width="0.0950%" height="15" fill="rgb(206,108,45)" fg:x="12752" fg:w="45"/><text x="27.1831%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (45 samples, 0.10%)</title><rect x="26.9331%" y="549" width="0.0950%" height="15" fill="rgb(245,210,41)" fg:x="12752" fg:w="45"/><text x="27.1831%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (43 samples, 0.09%)</title><rect x="26.9373%" y="533" width="0.0908%" height="15" fill="rgb(206,13,37)" fg:x="12754" fg:w="43"/><text x="27.1873%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="27.0556%" y="485" width="0.0127%" height="15" fill="rgb(250,61,18)" fg:x="12810" fg:w="6"/><text x="27.3056%" y="495.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (6 samples, 0.01%)</title><rect x="27.0556%" y="469" width="0.0127%" height="15" fill="rgb(235,172,48)" fg:x="12810" fg:w="6"/><text x="27.3056%" y="479.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="27.0556%" y="453" width="0.0127%" height="15" fill="rgb(249,201,17)" fg:x="12810" fg:w="6"/><text x="27.3056%" y="463.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (11 samples, 0.02%)</title><rect x="27.0513%" y="533" width="0.0232%" height="15" fill="rgb(219,208,6)" fg:x="12808" fg:w="11"/><text x="27.3013%" y="543.50"></text></g><g><title>tokio::runtime::context::budget (11 samples, 0.02%)</title><rect x="27.0513%" y="517" width="0.0232%" height="15" fill="rgb(248,31,23)" fg:x="12808" fg:w="11"/><text x="27.3013%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.02%)</title><rect x="27.0513%" y="501" width="0.0232%" height="15" fill="rgb(245,15,42)" fg:x="12808" fg:w="11"/><text x="27.3013%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (28 samples, 0.06%)</title><rect x="27.0872%" y="517" width="0.0591%" height="15" fill="rgb(222,217,39)" fg:x="12825" fg:w="28"/><text x="27.3372%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (27 samples, 0.06%)</title><rect x="27.0894%" y="501" width="0.0570%" height="15" fill="rgb(210,219,27)" fg:x="12826" fg:w="27"/><text x="27.3394%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (13 samples, 0.03%)</title><rect x="27.1189%" y="485" width="0.0275%" height="15" fill="rgb(252,166,36)" fg:x="12840" fg:w="13"/><text x="27.3689%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.03%)</title><rect x="27.1189%" y="469" width="0.0275%" height="15" fill="rgb(245,132,34)" fg:x="12840" fg:w="13"/><text x="27.3689%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.03%)</title><rect x="27.1189%" y="453" width="0.0275%" height="15" fill="rgb(236,54,3)" fg:x="12840" fg:w="13"/><text x="27.3689%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (7 samples, 0.01%)</title><rect x="27.1464%" y="517" width="0.0148%" height="15" fill="rgb(241,173,43)" fg:x="12853" fg:w="7"/><text x="27.3964%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (7 samples, 0.01%)</title><rect x="27.1464%" y="501" width="0.0148%" height="15" fill="rgb(215,190,9)" fg:x="12853" fg:w="7"/><text x="27.3964%" y="511.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="27.1464%" y="485" width="0.0148%" height="15" fill="rgb(242,101,16)" fg:x="12853" fg:w="7"/><text x="27.3964%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (7 samples, 0.01%)</title><rect x="27.1464%" y="469" width="0.0148%" height="15" fill="rgb(223,190,21)" fg:x="12853" fg:w="7"/><text x="27.3964%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (7 samples, 0.01%)</title><rect x="27.1464%" y="453" width="0.0148%" height="15" fill="rgb(215,228,25)" fg:x="12853" fg:w="7"/><text x="27.3964%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="27.1464%" y="437" width="0.0148%" height="15" fill="rgb(225,36,22)" fg:x="12853" fg:w="7"/><text x="27.3964%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (107 samples, 0.23%)</title><rect x="27.1612%" y="517" width="0.2260%" height="15" fill="rgb(251,106,46)" fg:x="12860" fg:w="107"/><text x="27.4112%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (107 samples, 0.23%)</title><rect x="27.1612%" y="501" width="0.2260%" height="15" fill="rgb(208,90,1)" fg:x="12860" fg:w="107"/><text x="27.4112%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.02%)</title><rect x="27.3872%" y="517" width="0.0232%" height="15" fill="rgb(243,10,4)" fg:x="12967" fg:w="11"/><text x="27.6372%" y="527.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.02%)</title><rect x="27.3872%" y="501" width="0.0232%" height="15" fill="rgb(212,137,27)" fg:x="12967" fg:w="11"/><text x="27.6372%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.02%)</title><rect x="27.3872%" y="485" width="0.0232%" height="15" fill="rgb(231,220,49)" fg:x="12967" fg:w="11"/><text x="27.6372%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (10 samples, 0.02%)</title><rect x="27.3893%" y="469" width="0.0211%" height="15" fill="rgb(237,96,20)" fg:x="12968" fg:w="10"/><text x="27.6393%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.02%)</title><rect x="27.3893%" y="453" width="0.0211%" height="15" fill="rgb(239,229,30)" fg:x="12968" fg:w="10"/><text x="27.6393%" y="463.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (935 samples, 1.97%)</title><rect x="25.4377%" y="629" width="1.9748%" height="15" fill="rgb(219,65,33)" fg:x="12044" fg:w="935"/><text x="25.6877%" y="639.50">&lt;..</text></g><g><title>&lt;epoxy_server::util_chain::Chain&lt;T,U&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (935 samples, 1.97%)</title><rect x="25.4377%" y="613" width="1.9748%" height="15" fill="rgb(243,134,7)" fg:x="12044" fg:w="935"/><text x="25.6877%" y="623.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (865 samples, 1.83%)</title><rect x="25.5856%" y="597" width="1.8269%" height="15" fill="rgb(216,177,54)" fg:x="12114" fg:w="865"/><text x="25.8356%" y="607.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (842 samples, 1.78%)</title><rect x="25.6341%" y="581" width="1.7784%" height="15" fill="rgb(211,160,20)" fg:x="12137" fg:w="842"/><text x="25.8841%" y="591.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (182 samples, 0.38%)</title><rect x="27.0281%" y="565" width="0.3844%" height="15" fill="rgb(239,85,39)" fg:x="12797" fg:w="182"/><text x="27.2781%" y="575.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (178 samples, 0.38%)</title><rect x="27.0366%" y="549" width="0.3759%" height="15" fill="rgb(232,125,22)" fg:x="12801" fg:w="178"/><text x="27.2866%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (160 samples, 0.34%)</title><rect x="27.0746%" y="533" width="0.3379%" height="15" fill="rgb(244,57,34)" fg:x="12819" fg:w="160"/><text x="27.3246%" y="543.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.02%)</title><rect x="27.4125%" y="629" width="0.0169%" height="15" fill="rgb(214,203,32)" fg:x="12979" fg:w="8"/><text x="27.6625%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (5 samples, 0.01%)</title><rect x="27.4336%" y="629" width="0.0106%" height="15" fill="rgb(207,58,43)" fg:x="12989" fg:w="5"/><text x="27.6836%" y="639.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (14 samples, 0.03%)</title><rect x="27.4442%" y="629" width="0.0296%" height="15" fill="rgb(215,193,15)" fg:x="12994" fg:w="14"/><text x="27.6942%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.02%)</title><rect x="27.4569%" y="613" width="0.0169%" height="15" fill="rgb(232,15,44)" fg:x="13000" fg:w="8"/><text x="27.7069%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="27.4569%" y="597" width="0.0169%" height="15" fill="rgb(212,3,48)" fg:x="13000" fg:w="8"/><text x="27.7069%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="27.4569%" y="581" width="0.0169%" height="15" fill="rgb(218,128,7)" fg:x="13000" fg:w="8"/><text x="27.7069%" y="591.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (1,035 samples, 2.19%)</title><rect x="25.2941%" y="645" width="2.1860%" height="15" fill="rgb(226,216,39)" fg:x="11976" fg:w="1035"/><text x="25.5441%" y="655.50">&lt;..</text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (17 samples, 0.04%)</title><rect x="27.4801%" y="645" width="0.0359%" height="15" fill="rgb(243,47,51)" fg:x="13011" fg:w="17"/><text x="27.7301%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (11 samples, 0.02%)</title><rect x="27.4928%" y="629" width="0.0232%" height="15" fill="rgb(241,183,40)" fg:x="13017" fg:w="11"/><text x="27.7428%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (11 samples, 0.02%)</title><rect x="27.4928%" y="613" width="0.0232%" height="15" fill="rgb(231,217,32)" fg:x="13017" fg:w="11"/><text x="27.7428%" y="623.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32 (17 samples, 0.04%)</title><rect x="27.5160%" y="645" width="0.0359%" height="15" fill="rgb(229,61,38)" fg:x="13028" fg:w="17"/><text x="27.7660%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (9 samples, 0.02%)</title><rect x="27.5329%" y="629" width="0.0190%" height="15" fill="rgb(225,210,5)" fg:x="13036" fg:w="9"/><text x="27.7829%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (9 samples, 0.02%)</title><rect x="27.5329%" y="613" width="0.0190%" height="15" fill="rgb(231,79,45)" fg:x="13036" fg:w="9"/><text x="27.7829%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.01%)</title><rect x="27.5392%" y="597" width="0.0127%" height="15" fill="rgb(224,100,7)" fg:x="13039" fg:w="6"/><text x="27.7892%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::capacity (5 samples, 0.01%)</title><rect x="27.5604%" y="629" width="0.0106%" height="15" fill="rgb(241,198,18)" fg:x="13049" fg:w="5"/><text x="27.8104%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,589 samples, 9.69%)</title><rect x="27.6448%" y="565" width="9.6923%" height="15" fill="rgb(252,97,53)" fg:x="13089" fg:w="4589"/><text x="27.8948%" y="575.50">core::intrinsi..</text></g><g><title>[libc.so.6] (4,589 samples, 9.69%)</title><rect x="27.6448%" y="549" width="9.6923%" height="15" fill="rgb(220,88,7)" fg:x="13089" fg:w="4589"/><text x="27.8948%" y="559.50">[libc.so.6]</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4,603 samples, 9.72%)</title><rect x="27.6195%" y="613" width="9.7218%" height="15" fill="rgb(213,176,14)" fg:x="13077" fg:w="4603"/><text x="27.8695%" y="623.50">alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4,603 samples, 9.72%)</title><rect x="27.6195%" y="597" width="9.7218%" height="15" fill="rgb(246,73,7)" fg:x="13077" fg:w="4603"/><text x="27.8695%" y="607.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4,603 samples, 9.72%)</title><rect x="27.6195%" y="581" width="9.7218%" height="15" fill="rgb(245,64,36)" fg:x="13077" fg:w="4603"/><text x="27.8695%" y="591.50">alloc::vec::Ve..</text></g><g><title>sz_index2size (65 samples, 0.14%)</title><rect x="37.4174%" y="389" width="0.1373%" height="15" fill="rgb(245,80,10)" fg:x="17716" fg:w="65"/><text x="37.6674%" y="399.50"></text></g><g><title>sz_index2size_lookup (65 samples, 0.14%)</title><rect x="37.4174%" y="373" width="0.1373%" height="15" fill="rgb(232,107,50)" fg:x="17716" fg:w="65"/><text x="37.6674%" y="383.50"></text></g><g><title>sz_index2size_lookup_impl (65 samples, 0.14%)</title><rect x="37.4174%" y="357" width="0.1373%" height="15" fill="rgb(253,3,0)" fg:x="17716" fg:w="65"/><text x="37.6674%" y="367.50"></text></g><g><title>aligned_usize_get (94 samples, 0.20%)</title><rect x="37.4110%" y="405" width="0.1985%" height="15" fill="rgb(212,99,53)" fg:x="17713" fg:w="94"/><text x="37.6610%" y="415.50"></text></g><g><title>sz_size2index (26 samples, 0.05%)</title><rect x="37.5546%" y="389" width="0.0549%" height="15" fill="rgb(249,111,54)" fg:x="17781" fg:w="26"/><text x="37.8046%" y="399.50"></text></g><g><title>sz_size2index_compute (21 samples, 0.04%)</title><rect x="37.5652%" y="373" width="0.0444%" height="15" fill="rgb(249,55,30)" fg:x="17786" fg:w="21"/><text x="37.8152%" y="383.50"></text></g><g><title>arena_choose_maybe_huge (35 samples, 0.07%)</title><rect x="37.7236%" y="341" width="0.0739%" height="15" fill="rgb(237,47,42)" fg:x="17861" fg:w="35"/><text x="37.9736%" y="351.50"></text></g><g><title>arena_choose (11 samples, 0.02%)</title><rect x="37.7743%" y="325" width="0.0232%" height="15" fill="rgb(211,20,18)" fg:x="17885" fg:w="11"/><text x="38.0243%" y="335.50"></text></g><g><title>arena_choose_impl (11 samples, 0.02%)</title><rect x="37.7743%" y="309" width="0.0232%" height="15" fill="rgb(231,203,46)" fg:x="17885" fg:w="11"/><text x="38.0243%" y="319.50"></text></g><g><title>_rjem_je_arena_malloc_hard (69 samples, 0.15%)</title><rect x="37.6560%" y="357" width="0.1457%" height="15" fill="rgb(237,142,3)" fg:x="17829" fg:w="69"/><text x="37.9060%" y="367.50"></text></g><g><title>_rjem_je_large_malloc (13 samples, 0.03%)</title><rect x="37.8018%" y="357" width="0.0275%" height="15" fill="rgb(241,107,1)" fg:x="17898" fg:w="13"/><text x="38.0518%" y="367.50"></text></g><g><title>_rjem_je_arena_get_ehooks (48 samples, 0.10%)</title><rect x="37.9623%" y="325" width="0.1014%" height="15" fill="rgb(229,83,13)" fg:x="17974" fg:w="48"/><text x="38.2123%" y="335.50"></text></g><g><title>_rjem_je_base_ehooks_get (6 samples, 0.01%)</title><rect x="38.0510%" y="309" width="0.0127%" height="15" fill="rgb(241,91,40)" fg:x="18016" fg:w="6"/><text x="38.3010%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (5 samples, 0.01%)</title><rect x="38.1798%" y="277" width="0.0106%" height="15" fill="rgb(225,3,45)" fg:x="18077" fg:w="5"/><text x="38.4298%" y="287.50"></text></g><g><title>rtree_write (11 samples, 0.02%)</title><rect x="38.1756%" y="293" width="0.0232%" height="15" fill="rgb(244,223,14)" fg:x="18075" fg:w="11"/><text x="38.4256%" y="303.50"></text></g><g><title>_rjem_je_emap_remap (36 samples, 0.08%)</title><rect x="38.1249%" y="309" width="0.0760%" height="15" fill="rgb(224,124,37)" fg:x="18051" fg:w="36"/><text x="38.3749%" y="319.50"></text></g><g><title>edata_slab_set (5 samples, 0.01%)</title><rect x="38.2009%" y="309" width="0.0106%" height="15" fill="rgb(251,171,30)" fg:x="18087" fg:w="5"/><text x="38.4509%" y="319.50"></text></g><g><title>pa_nactive_add (43 samples, 0.09%)</title><rect x="38.2178%" y="309" width="0.0908%" height="15" fill="rgb(236,46,54)" fg:x="18095" fg:w="43"/><text x="38.4678%" y="319.50"></text></g><g><title>atomic_fetch_add_zu (43 samples, 0.09%)</title><rect x="38.2178%" y="293" width="0.0908%" height="15" fill="rgb(245,213,5)" fg:x="18095" fg:w="43"/><text x="38.4678%" y="303.50"></text></g><g><title>pa_shard_uses_hpa (59 samples, 0.12%)</title><rect x="38.3087%" y="309" width="0.1246%" height="15" fill="rgb(230,144,27)" fg:x="18138" fg:w="59"/><text x="38.5587%" y="319.50"></text></g><g><title>atomic_load_b (59 samples, 0.12%)</title><rect x="38.3087%" y="293" width="0.1246%" height="15" fill="rgb(220,86,6)" fg:x="18138" fg:w="59"/><text x="38.5587%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_first (191 samples, 0.40%)</title><rect x="39.0415%" y="181" width="0.4034%" height="15" fill="rgb(240,20,13)" fg:x="18485" fg:w="191"/><text x="39.2915%" y="191.50"></text></g><g><title>ph_first (174 samples, 0.37%)</title><rect x="39.0774%" y="165" width="0.3675%" height="15" fill="rgb(217,89,34)" fg:x="18502" fg:w="174"/><text x="39.3274%" y="175.50"></text></g><g><title>ph_merge_aux (106 samples, 0.22%)</title><rect x="39.2211%" y="149" width="0.2239%" height="15" fill="rgb(229,13,5)" fg:x="18570" fg:w="106"/><text x="39.4711%" y="159.50"></text></g><g><title>phn_next_get (95 samples, 0.20%)</title><rect x="39.2443%" y="133" width="0.2006%" height="15" fill="rgb(244,67,35)" fg:x="18581" fg:w="95"/><text x="39.4943%" y="143.50"></text></g><g><title>sz_pind2sz (21 samples, 0.04%)</title><rect x="39.4893%" y="149" width="0.0444%" height="15" fill="rgb(221,40,2)" fg:x="18697" fg:w="21"/><text x="39.7393%" y="159.50"></text></g><g><title>sz_pind2sz_lookup (21 samples, 0.04%)</title><rect x="39.4893%" y="133" width="0.0444%" height="15" fill="rgb(237,157,21)" fg:x="18697" fg:w="21"/><text x="39.7393%" y="143.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (62 samples, 0.13%)</title><rect x="39.4449%" y="181" width="0.1309%" height="15" fill="rgb(222,94,11)" fg:x="18676" fg:w="62"/><text x="39.6949%" y="191.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (55 samples, 0.12%)</title><rect x="39.4597%" y="165" width="0.1162%" height="15" fill="rgb(249,113,6)" fg:x="18683" fg:w="55"/><text x="39.7097%" y="175.50"></text></g><g><title>sz_psz2ind (20 samples, 0.04%)</title><rect x="39.5337%" y="149" width="0.0422%" height="15" fill="rgb(238,137,36)" fg:x="18718" fg:w="20"/><text x="39.7837%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (35 samples, 0.07%)</title><rect x="39.5759%" y="181" width="0.0739%" height="15" fill="rgb(210,102,26)" fg:x="18738" fg:w="35"/><text x="39.8259%" y="191.50"></text></g><g><title>fb_ffs (59 samples, 0.12%)</title><rect x="39.6498%" y="181" width="0.1246%" height="15" fill="rgb(218,30,30)" fg:x="18773" fg:w="59"/><text x="39.8998%" y="191.50"></text></g><g><title>fb_find_impl (59 samples, 0.12%)</title><rect x="39.6498%" y="165" width="0.1246%" height="15" fill="rgb(214,67,26)" fg:x="18773" fg:w="59"/><text x="39.8998%" y="175.50"></text></g><g><title>ffs_lu (15 samples, 0.03%)</title><rect x="39.7428%" y="149" width="0.0317%" height="15" fill="rgb(251,9,53)" fg:x="18817" fg:w="15"/><text x="39.9928%" y="159.50"></text></g><g><title>_rjem_je_eset_fit (499 samples, 1.05%)</title><rect x="38.7691%" y="213" width="1.0539%" height="15" fill="rgb(228,204,25)" fg:x="18356" fg:w="499"/><text x="39.0191%" y="223.50"></text></g><g><title>eset_first_fit (475 samples, 1.00%)</title><rect x="38.8198%" y="197" width="1.0032%" height="15" fill="rgb(207,153,8)" fg:x="18380" fg:w="475"/><text x="39.0698%" y="207.50"></text></g><g><title>sz_psz2ind (20 samples, 0.04%)</title><rect x="39.7808%" y="181" width="0.0422%" height="15" fill="rgb(242,9,16)" fg:x="18835" fg:w="20"/><text x="40.0308%" y="191.50"></text></g><g><title>rtree_cache_direct_map (5 samples, 0.01%)</title><rect x="39.9328%" y="165" width="0.0106%" height="15" fill="rgb(217,211,10)" fg:x="18907" fg:w="5"/><text x="40.1828%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (28 samples, 0.06%)</title><rect x="39.8864%" y="181" width="0.0591%" height="15" fill="rgb(219,228,52)" fg:x="18885" fg:w="28"/><text x="40.1364%" y="191.50"></text></g><g><title>_rjem_je_emap_update_edata_state (108 samples, 0.23%)</title><rect x="39.8484%" y="197" width="0.2281%" height="15" fill="rgb(231,92,29)" fg:x="18867" fg:w="108"/><text x="40.0984%" y="207.50"></text></g><g><title>rtree_leaf_elm_state_update (62 samples, 0.13%)</title><rect x="39.9455%" y="181" width="0.1309%" height="15" fill="rgb(232,8,23)" fg:x="18913" fg:w="62"/><text x="40.1955%" y="191.50"></text></g><g><title>rtree_leaf_elm_bits_read (59 samples, 0.12%)</title><rect x="39.9518%" y="165" width="0.1246%" height="15" fill="rgb(216,211,34)" fg:x="18916" fg:w="59"/><text x="40.2018%" y="175.50"></text></g><g><title>atomic_load_p (59 samples, 0.12%)</title><rect x="39.9518%" y="149" width="0.1246%" height="15" fill="rgb(236,151,0)" fg:x="18916" fg:w="59"/><text x="40.2018%" y="159.50"></text></g><g><title>_rjem_je_edata_heap_first (5 samples, 0.01%)</title><rect x="40.1145%" y="181" width="0.0106%" height="15" fill="rgb(209,168,3)" fg:x="18993" fg:w="5"/><text x="40.3645%" y="191.50"></text></g><g><title>ph_merge_children (12 samples, 0.03%)</title><rect x="40.1694%" y="149" width="0.0253%" height="15" fill="rgb(208,129,28)" fg:x="19019" fg:w="12"/><text x="40.4194%" y="159.50"></text></g><g><title>phn_merge_siblings (12 samples, 0.03%)</title><rect x="40.1694%" y="133" width="0.0253%" height="15" fill="rgb(229,78,22)" fg:x="19019" fg:w="12"/><text x="40.4194%" y="143.50"></text></g><g><title>phn_next_get (10 samples, 0.02%)</title><rect x="40.1736%" y="117" width="0.0211%" height="15" fill="rgb(228,187,13)" fg:x="19021" fg:w="10"/><text x="40.4236%" y="127.50"></text></g><g><title>_rjem_je_edata_heap_remove (35 samples, 0.07%)</title><rect x="40.1250%" y="181" width="0.0739%" height="15" fill="rgb(240,119,24)" fg:x="18998" fg:w="35"/><text x="40.3750%" y="191.50"></text></g><g><title>ph_remove (22 samples, 0.05%)</title><rect x="40.1525%" y="165" width="0.0465%" height="15" fill="rgb(209,194,42)" fg:x="19011" fg:w="22"/><text x="40.4025%" y="175.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (17 samples, 0.04%)</title><rect x="40.1990%" y="181" width="0.0359%" height="15" fill="rgb(247,200,46)" fg:x="19033" fg:w="17"/><text x="40.4490%" y="191.50"></text></g><g><title>sz_psz2ind (9 samples, 0.02%)</title><rect x="40.2159%" y="165" width="0.0190%" height="15" fill="rgb(218,76,16)" fg:x="19041" fg:w="9"/><text x="40.4659%" y="175.50"></text></g><g><title>edata_list_inactive_remove (33 samples, 0.07%)</title><rect x="40.2475%" y="181" width="0.0697%" height="15" fill="rgb(225,21,48)" fg:x="19056" fg:w="33"/><text x="40.4975%" y="191.50"></text></g><g><title>atomic_load_zu (79 samples, 0.17%)</title><rect x="40.3278%" y="165" width="0.1669%" height="15" fill="rgb(239,223,50)" fg:x="19094" fg:w="79"/><text x="40.5778%" y="175.50"></text></g><g><title>eset_stats_sub (84 samples, 0.18%)</title><rect x="40.3215%" y="181" width="0.1774%" height="15" fill="rgb(244,45,21)" fg:x="19091" fg:w="84"/><text x="40.5715%" y="191.50"></text></g><g><title>extent_recycle_extract (862 samples, 1.82%)</title><rect x="38.7078%" y="229" width="1.8206%" height="15" fill="rgb(232,33,43)" fg:x="18327" fg:w="862"/><text x="38.9578%" y="239.50">e..</text></g><g><title>extent_activate_locked (334 samples, 0.71%)</title><rect x="39.8230%" y="213" width="0.7054%" height="15" fill="rgb(209,8,3)" fg:x="18855" fg:w="334"/><text x="40.0730%" y="223.50"></text></g><g><title>_rjem_je_eset_remove (214 samples, 0.45%)</title><rect x="40.0765%" y="197" width="0.4520%" height="15" fill="rgb(214,25,53)" fg:x="18975" fg:w="214"/><text x="40.3265%" y="207.50"></text></g><g><title>sz_psz2ind (13 samples, 0.03%)</title><rect x="40.5010%" y="181" width="0.0275%" height="15" fill="rgb(254,186,54)" fg:x="19176" fg:w="13"/><text x="40.7510%" y="191.50"></text></g><g><title>edata_state_set (6 samples, 0.01%)</title><rect x="40.6045%" y="165" width="0.0127%" height="15" fill="rgb(208,174,49)" fg:x="19225" fg:w="6"/><text x="40.8545%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (9 samples, 0.02%)</title><rect x="40.6171%" y="165" width="0.0190%" height="15" fill="rgb(233,191,51)" fg:x="19231" fg:w="9"/><text x="40.8671%" y="175.50"></text></g><g><title>rtree_leaf_elm_state_update (199 samples, 0.42%)</title><rect x="40.6362%" y="165" width="0.4203%" height="15" fill="rgb(222,134,10)" fg:x="19240" fg:w="199"/><text x="40.8862%" y="175.50"></text></g><g><title>rtree_leaf_elm_bits_read (191 samples, 0.40%)</title><rect x="40.6531%" y="149" width="0.4034%" height="15" fill="rgb(230,226,20)" fg:x="19248" fg:w="191"/><text x="40.9031%" y="159.50"></text></g><g><title>atomic_load_p (191 samples, 0.40%)</title><rect x="40.6531%" y="133" width="0.4034%" height="15" fill="rgb(251,111,25)" fg:x="19248" fg:w="191"/><text x="40.9031%" y="143.50"></text></g><g><title>_rjem_je_emap_update_edata_state (224 samples, 0.47%)</title><rect x="40.5855%" y="181" width="0.4731%" height="15" fill="rgb(224,40,46)" fg:x="19216" fg:w="224"/><text x="40.8355%" y="191.50"></text></g><g><title>_rjem_je_edata_heap_empty (27 samples, 0.06%)</title><rect x="41.1071%" y="165" width="0.0570%" height="15" fill="rgb(236,108,47)" fg:x="19463" fg:w="27"/><text x="41.3571%" y="175.50"></text></g><g><title>edata_heap_ph_cmp (15 samples, 0.03%)</title><rect x="41.2106%" y="133" width="0.0317%" height="15" fill="rgb(234,93,0)" fg:x="19512" fg:w="15"/><text x="41.4606%" y="143.50"></text></g><g><title>edata_snad_comp (15 samples, 0.03%)</title><rect x="41.2106%" y="117" width="0.0317%" height="15" fill="rgb(224,213,32)" fg:x="19512" fg:w="15"/><text x="41.4606%" y="127.50"></text></g><g><title>edata_cmp_summary_get (14 samples, 0.03%)</title><rect x="41.2127%" y="101" width="0.0296%" height="15" fill="rgb(251,11,48)" fg:x="19513" fg:w="14"/><text x="41.4627%" y="111.50"></text></g><g><title>edata_sn_get (13 samples, 0.03%)</title><rect x="41.2149%" y="85" width="0.0275%" height="15" fill="rgb(236,173,5)" fg:x="19514" fg:w="13"/><text x="41.4649%" y="95.50"></text></g><g><title>_rjem_je_edata_heap_insert (44 samples, 0.09%)</title><rect x="41.1642%" y="165" width="0.0929%" height="15" fill="rgb(230,95,12)" fg:x="19490" fg:w="44"/><text x="41.4142%" y="175.50"></text></g><g><title>ph_insert (36 samples, 0.08%)</title><rect x="41.1811%" y="149" width="0.0760%" height="15" fill="rgb(232,209,1)" fg:x="19498" fg:w="36"/><text x="41.4311%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (18 samples, 0.04%)</title><rect x="41.2571%" y="165" width="0.0380%" height="15" fill="rgb(232,6,1)" fg:x="19534" fg:w="18"/><text x="41.5071%" y="175.50"></text></g><g><title>sz_psz2ind (9 samples, 0.02%)</title><rect x="41.2761%" y="149" width="0.0190%" height="15" fill="rgb(210,224,50)" fg:x="19543" fg:w="9"/><text x="41.5261%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (5 samples, 0.01%)</title><rect x="41.2951%" y="165" width="0.0106%" height="15" fill="rgb(228,127,35)" fg:x="19552" fg:w="5"/><text x="41.5451%" y="175.50"></text></g><g><title>edata_list_inactive_append (14 samples, 0.03%)</title><rect x="41.3078%" y="165" width="0.0296%" height="15" fill="rgb(245,102,45)" fg:x="19558" fg:w="14"/><text x="41.5578%" y="175.50"></text></g><g><title>atomic_load_zu (7 samples, 0.01%)</title><rect x="41.3395%" y="149" width="0.0148%" height="15" fill="rgb(214,1,49)" fg:x="19573" fg:w="7"/><text x="41.5895%" y="159.50"></text></g><g><title>eset_stats_add (11 samples, 0.02%)</title><rect x="41.3395%" y="165" width="0.0232%" height="15" fill="rgb(226,163,40)" fg:x="19573" fg:w="11"/><text x="41.5895%" y="175.50"></text></g><g><title>extent_deactivate_locked (419 samples, 0.88%)</title><rect x="40.5284%" y="213" width="0.8850%" height="15" fill="rgb(239,212,28)" fg:x="19189" fg:w="419"/><text x="40.7784%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (419 samples, 0.88%)</title><rect x="40.5284%" y="197" width="0.8850%" height="15" fill="rgb(220,20,13)" fg:x="19189" fg:w="419"/><text x="40.7784%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (168 samples, 0.35%)</title><rect x="41.0586%" y="181" width="0.3548%" height="15" fill="rgb(210,164,35)" fg:x="19440" fg:w="168"/><text x="41.3086%" y="191.50"></text></g><g><title>sz_psz2ind (21 samples, 0.04%)</title><rect x="41.3690%" y="165" width="0.0444%" height="15" fill="rgb(248,109,41)" fg:x="19587" fg:w="21"/><text x="41.6190%" y="175.50"></text></g><g><title>edata_avail_ph_cmp (15 samples, 0.03%)</title><rect x="41.6795%" y="85" width="0.0317%" height="15" fill="rgb(238,23,50)" fg:x="19734" fg:w="15"/><text x="41.9295%" y="95.50"></text></g><g><title>edata_esnead_comp (15 samples, 0.03%)</title><rect x="41.6795%" y="69" width="0.0317%" height="15" fill="rgb(211,48,49)" fg:x="19734" fg:w="15"/><text x="41.9295%" y="79.50"></text></g><g><title>edata_esn_comp (15 samples, 0.03%)</title><rect x="41.6795%" y="53" width="0.0317%" height="15" fill="rgb(223,36,21)" fg:x="19734" fg:w="15"/><text x="41.9295%" y="63.50"></text></g><g><title>edata_esn_get (15 samples, 0.03%)</title><rect x="41.6795%" y="37" width="0.0317%" height="15" fill="rgb(207,123,46)" fg:x="19734" fg:w="15"/><text x="41.9295%" y="47.50"></text></g><g><title>phn_merge (17 samples, 0.04%)</title><rect x="41.6774%" y="101" width="0.0359%" height="15" fill="rgb(240,218,32)" fg:x="19733" fg:w="17"/><text x="41.9274%" y="111.50"></text></g><g><title>phn_next_get (29 samples, 0.06%)</title><rect x="41.7133%" y="101" width="0.0612%" height="15" fill="rgb(252,5,43)" fg:x="19750" fg:w="29"/><text x="41.9633%" y="111.50"></text></g><g><title>phn_merge_siblings (49 samples, 0.10%)</title><rect x="41.6732%" y="117" width="0.1035%" height="15" fill="rgb(252,84,19)" fg:x="19731" fg:w="49"/><text x="41.9232%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_first (91 samples, 0.19%)</title><rect x="41.6204%" y="165" width="0.1922%" height="15" fill="rgb(243,152,39)" fg:x="19706" fg:w="91"/><text x="41.8704%" y="175.50"></text></g><g><title>ph_first (82 samples, 0.17%)</title><rect x="41.6394%" y="149" width="0.1732%" height="15" fill="rgb(234,160,15)" fg:x="19715" fg:w="82"/><text x="41.8894%" y="159.50"></text></g><g><title>ph_merge_aux (72 samples, 0.15%)</title><rect x="41.6605%" y="133" width="0.1521%" height="15" fill="rgb(237,34,20)" fg:x="19725" fg:w="72"/><text x="41.9105%" y="143.50"></text></g><g><title>phn_next_get (17 samples, 0.04%)</title><rect x="41.7767%" y="117" width="0.0359%" height="15" fill="rgb(229,97,13)" fg:x="19780" fg:w="17"/><text x="42.0267%" y="127.50"></text></g><g><title>edata_avail_ph_cmp (21 samples, 0.04%)</title><rect x="41.8823%" y="85" width="0.0444%" height="15" fill="rgb(234,71,50)" fg:x="19830" fg:w="21"/><text x="42.1323%" y="95.50"></text></g><g><title>edata_esnead_comp (21 samples, 0.04%)</title><rect x="41.8823%" y="69" width="0.0444%" height="15" fill="rgb(253,155,4)" fg:x="19830" fg:w="21"/><text x="42.1323%" y="79.50"></text></g><g><title>edata_esn_comp (16 samples, 0.03%)</title><rect x="41.8928%" y="53" width="0.0338%" height="15" fill="rgb(222,185,37)" fg:x="19835" fg:w="16"/><text x="42.1428%" y="63.50"></text></g><g><title>edata_esn_get (12 samples, 0.03%)</title><rect x="41.9013%" y="37" width="0.0253%" height="15" fill="rgb(251,177,13)" fg:x="19839" fg:w="12"/><text x="42.1513%" y="47.50"></text></g><g><title>phn_lchild_get (9 samples, 0.02%)</title><rect x="41.9266%" y="69" width="0.0190%" height="15" fill="rgb(250,179,40)" fg:x="19851" fg:w="9"/><text x="42.1766%" y="79.50"></text></g><g><title>phn_lchild_set (6 samples, 0.01%)</title><rect x="41.9456%" y="69" width="0.0127%" height="15" fill="rgb(242,44,2)" fg:x="19860" fg:w="6"/><text x="42.1956%" y="79.50"></text></g><g><title>phn_merge (51 samples, 0.11%)</title><rect x="41.8823%" y="101" width="0.1077%" height="15" fill="rgb(216,177,13)" fg:x="19830" fg:w="51"/><text x="42.1323%" y="111.50"></text></g><g><title>phn_merge_ordered (30 samples, 0.06%)</title><rect x="41.9266%" y="85" width="0.0634%" height="15" fill="rgb(216,106,43)" fg:x="19851" fg:w="30"/><text x="42.1766%" y="95.50"></text></g><g><title>phn_prev_set (15 samples, 0.03%)</title><rect x="41.9583%" y="69" width="0.0317%" height="15" fill="rgb(216,183,2)" fg:x="19866" fg:w="15"/><text x="42.2083%" y="79.50"></text></g><g><title>phn_next_get (188 samples, 0.40%)</title><rect x="41.9900%" y="101" width="0.3971%" height="15" fill="rgb(249,75,3)" fg:x="19881" fg:w="188"/><text x="42.2400%" y="111.50"></text></g><g><title>phn_next_set (15 samples, 0.03%)</title><rect x="42.3871%" y="101" width="0.0317%" height="15" fill="rgb(219,67,39)" fg:x="20069" fg:w="15"/><text x="42.6371%" y="111.50"></text></g><g><title>ph_merge_children (274 samples, 0.58%)</title><rect x="41.8633%" y="133" width="0.5787%" height="15" fill="rgb(253,228,2)" fg:x="19821" fg:w="274"/><text x="42.1133%" y="143.50"></text></g><g><title>phn_merge_siblings (274 samples, 0.58%)</title><rect x="41.8633%" y="117" width="0.5787%" height="15" fill="rgb(235,138,27)" fg:x="19821" fg:w="274"/><text x="42.1133%" y="127.50"></text></g><g><title>phn_prev_set (11 samples, 0.02%)</title><rect x="42.4187%" y="101" width="0.0232%" height="15" fill="rgb(236,97,51)" fg:x="20084" fg:w="11"/><text x="42.6687%" y="111.50"></text></g><g><title>_rjem_je_edata_avail_remove (302 samples, 0.64%)</title><rect x="41.8126%" y="165" width="0.6378%" height="15" fill="rgb(240,80,30)" fg:x="19797" fg:w="302"/><text x="42.0626%" y="175.50"></text></g><g><title>ph_remove (293 samples, 0.62%)</title><rect x="41.8316%" y="149" width="0.6188%" height="15" fill="rgb(230,178,19)" fg:x="19806" fg:w="293"/><text x="42.0816%" y="159.50"></text></g><g><title>atomic_load_sub_store_zu (5 samples, 0.01%)</title><rect x="42.4504%" y="165" width="0.0106%" height="15" fill="rgb(210,190,27)" fg:x="20099" fg:w="5"/><text x="42.7004%" y="175.50"></text></g><g><title>malloc_mutex_lock (79 samples, 0.17%)</title><rect x="42.4610%" y="165" width="0.1669%" height="15" fill="rgb(222,107,31)" fg:x="20104" fg:w="79"/><text x="42.7110%" y="175.50"></text></g><g><title>malloc_mutex_trylock_final (79 samples, 0.17%)</title><rect x="42.4610%" y="149" width="0.1669%" height="15" fill="rgb(216,127,34)" fg:x="20104" fg:w="79"/><text x="42.7110%" y="159.50"></text></g><g><title>pthread_mutex_trylock (79 samples, 0.17%)</title><rect x="42.4610%" y="133" width="0.1669%" height="15" fill="rgb(234,116,52)" fg:x="20104" fg:w="79"/><text x="42.7110%" y="143.50"></text></g><g><title>[libc.so.6] (94 samples, 0.20%)</title><rect x="42.6278%" y="149" width="0.1985%" height="15" fill="rgb(222,124,15)" fg:x="20183" fg:w="94"/><text x="42.8778%" y="159.50"></text></g><g><title>pthread_mutex_unlock (84 samples, 0.18%)</title><rect x="42.8285%" y="149" width="0.1774%" height="15" fill="rgb(231,179,28)" fg:x="20278" fg:w="84"/><text x="43.0785%" y="159.50"></text></g><g><title>_rjem_je_edata_cache_get (693 samples, 1.46%)</title><rect x="41.6014%" y="181" width="1.4637%" height="15" fill="rgb(226,93,45)" fg:x="19697" fg:w="693"/><text x="41.8514%" y="191.50"></text></g><g><title>malloc_mutex_unlock (207 samples, 0.44%)</title><rect x="42.6278%" y="165" width="0.4372%" height="15" fill="rgb(215,8,51)" fg:x="20183" fg:w="207"/><text x="42.8778%" y="175.50"></text></g><g><title>pthread_mutex_unlock@plt (28 samples, 0.06%)</title><rect x="43.0059%" y="149" width="0.0591%" height="15" fill="rgb(223,106,5)" fg:x="20362" fg:w="28"/><text x="43.2559%" y="159.50"></text></g><g><title>rtree_contents_encode (12 samples, 0.03%)</title><rect x="43.0925%" y="133" width="0.0253%" height="15" fill="rgb(250,191,5)" fg:x="20403" fg:w="12"/><text x="43.3425%" y="143.50"></text></g><g><title>rtree_leaf_elm_bits_encode (12 samples, 0.03%)</title><rect x="43.0925%" y="117" width="0.0253%" height="15" fill="rgb(242,132,44)" fg:x="20403" fg:w="12"/><text x="43.3425%" y="127.50"></text></g><g><title>_rjem_je_emap_split_commit (26 samples, 0.05%)</title><rect x="43.0650%" y="181" width="0.0549%" height="15" fill="rgb(251,152,29)" fg:x="20390" fg:w="26"/><text x="43.3150%" y="191.50"></text></g><g><title>emap_rtree_write_acquired (20 samples, 0.04%)</title><rect x="43.0777%" y="165" width="0.0422%" height="15" fill="rgb(218,179,5)" fg:x="20396" fg:w="20"/><text x="43.3277%" y="175.50"></text></g><g><title>rtree_leaf_elm_write (13 samples, 0.03%)</title><rect x="43.0925%" y="149" width="0.0275%" height="15" fill="rgb(227,67,19)" fg:x="20403" fg:w="13"/><text x="43.3425%" y="159.50"></text></g><g><title>_rjem_je_emap_split_prepare (48 samples, 0.10%)</title><rect x="43.1199%" y="181" width="0.1014%" height="15" fill="rgb(233,119,31)" fg:x="20416" fg:w="48"/><text x="43.3699%" y="191.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (33 samples, 0.07%)</title><rect x="43.1516%" y="165" width="0.0697%" height="15" fill="rgb(241,120,22)" fg:x="20431" fg:w="33"/><text x="43.4016%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (25 samples, 0.05%)</title><rect x="43.1685%" y="149" width="0.0528%" height="15" fill="rgb(224,102,30)" fg:x="20439" fg:w="25"/><text x="43.4185%" y="159.50"></text></g><g><title>edata_init (5 samples, 0.01%)</title><rect x="43.2277%" y="181" width="0.0106%" height="15" fill="rgb(210,164,37)" fg:x="20467" fg:w="5"/><text x="43.4777%" y="191.50"></text></g><g><title>edata_size_set (6 samples, 0.01%)</title><rect x="43.2382%" y="181" width="0.0127%" height="15" fill="rgb(226,191,16)" fg:x="20472" fg:w="6"/><text x="43.4882%" y="191.50"></text></g><g><title>ehooks_split (23 samples, 0.05%)</title><rect x="43.2509%" y="181" width="0.0486%" height="15" fill="rgb(214,40,45)" fg:x="20478" fg:w="23"/><text x="43.5009%" y="191.50"></text></g><g><title>_rjem_je_ehooks_default_split_impl (7 samples, 0.01%)</title><rect x="43.2847%" y="165" width="0.0148%" height="15" fill="rgb(244,29,26)" fg:x="20494" fg:w="7"/><text x="43.5347%" y="175.50"></text></g><g><title>extent_recycle_split (1,319 samples, 2.79%)</title><rect x="40.5284%" y="229" width="2.7858%" height="15" fill="rgb(216,16,5)" fg:x="19189" fg:w="1319"/><text x="40.7784%" y="239.50">ex..</text></g><g><title>extent_split_interior (900 samples, 1.90%)</title><rect x="41.4134%" y="213" width="1.9009%" height="15" fill="rgb(249,76,35)" fg:x="19608" fg:w="900"/><text x="41.6634%" y="223.50">e..</text></g><g><title>extent_split_impl (878 samples, 1.85%)</title><rect x="41.4599%" y="197" width="1.8544%" height="15" fill="rgb(207,11,44)" fg:x="19630" fg:w="878"/><text x="41.7099%" y="207.50">e..</text></g><g><title>ehooks_split_will_fail (7 samples, 0.01%)</title><rect x="43.2995%" y="181" width="0.0148%" height="15" fill="rgb(228,190,49)" fg:x="20501" fg:w="7"/><text x="43.5495%" y="191.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (7 samples, 0.01%)</title><rect x="43.2995%" y="165" width="0.0148%" height="15" fill="rgb(214,173,12)" fg:x="20501" fg:w="7"/><text x="43.5495%" y="175.50"></text></g><g><title>atomic_load_p (7 samples, 0.01%)</title><rect x="43.2995%" y="149" width="0.0148%" height="15" fill="rgb(218,26,35)" fg:x="20501" fg:w="7"/><text x="43.5495%" y="159.50"></text></g><g><title>malloc_mutex_trylock_final (9 samples, 0.02%)</title><rect x="43.3185%" y="197" width="0.0190%" height="15" fill="rgb(220,200,19)" fg:x="20510" fg:w="9"/><text x="43.5685%" y="207.50"></text></g><g><title>pthread_mutex_trylock (9 samples, 0.02%)</title><rect x="43.3185%" y="181" width="0.0190%" height="15" fill="rgb(239,95,49)" fg:x="20510" fg:w="9"/><text x="43.5685%" y="191.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (15 samples, 0.03%)</title><rect x="43.3143%" y="213" width="0.0317%" height="15" fill="rgb(235,85,53)" fg:x="20508" fg:w="15"/><text x="43.5643%" y="223.50"></text></g><g><title>pthread_mutex_trylock (227 samples, 0.48%)</title><rect x="43.3480%" y="197" width="0.4794%" height="15" fill="rgb(233,133,31)" fg:x="20524" fg:w="227"/><text x="43.5980%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (290 samples, 0.61%)</title><rect x="43.3459%" y="213" width="0.6125%" height="15" fill="rgb(218,25,20)" fg:x="20523" fg:w="290"/><text x="43.5959%" y="223.50"></text></g><g><title>pthread_mutex_trylock@plt (62 samples, 0.13%)</title><rect x="43.8275%" y="197" width="0.1309%" height="15" fill="rgb(252,210,38)" fg:x="20751" fg:w="62"/><text x="44.0775%" y="207.50"></text></g><g><title>malloc_mutex_lock (311 samples, 0.66%)</title><rect x="43.3143%" y="229" width="0.6569%" height="15" fill="rgb(242,134,21)" fg:x="20508" fg:w="311"/><text x="43.5643%" y="239.50"></text></g><g><title>mutex_owner_stats_update (6 samples, 0.01%)</title><rect x="43.9584%" y="213" width="0.0127%" height="15" fill="rgb(213,28,48)" fg:x="20813" fg:w="6"/><text x="44.2084%" y="223.50"></text></g><g><title>[libc.so.6] (84 samples, 0.18%)</title><rect x="43.9711%" y="213" width="0.1774%" height="15" fill="rgb(250,196,2)" fg:x="20819" fg:w="84"/><text x="44.2211%" y="223.50"></text></g><g><title>pthread_mutex_unlock (8 samples, 0.02%)</title><rect x="44.1506%" y="213" width="0.0169%" height="15" fill="rgb(227,5,17)" fg:x="20904" fg:w="8"/><text x="44.4006%" y="223.50"></text></g><g><title>_rjem_je_ecache_alloc (2,648 samples, 5.59%)</title><rect x="38.5790%" y="261" width="5.5928%" height="15" fill="rgb(221,226,24)" fg:x="18266" fg:w="2648"/><text x="38.8290%" y="271.50">_rjem_j..</text></g><g><title>extent_recycle (2,621 samples, 5.54%)</title><rect x="38.6360%" y="245" width="5.5357%" height="15" fill="rgb(211,5,48)" fg:x="18293" fg:w="2621"/><text x="38.8860%" y="255.50">extent_..</text></g><g><title>malloc_mutex_unlock (95 samples, 0.20%)</title><rect x="43.9711%" y="229" width="0.2006%" height="15" fill="rgb(219,150,6)" fg:x="20819" fg:w="95"/><text x="44.2211%" y="239.50"></text></g><g><title>extent_recycle_extract (8 samples, 0.02%)</title><rect x="44.1760%" y="213" width="0.0169%" height="15" fill="rgb(251,46,16)" fg:x="20916" fg:w="8"/><text x="44.4260%" y="223.50"></text></g><g><title>extent_activate_locked (5 samples, 0.01%)</title><rect x="44.1823%" y="197" width="0.0106%" height="15" fill="rgb(220,204,40)" fg:x="20919" fg:w="5"/><text x="44.4323%" y="207.50"></text></g><g><title>_rjem_je_emap_update_edata_state (15 samples, 0.03%)</title><rect x="44.1950%" y="165" width="0.0317%" height="15" fill="rgb(211,85,2)" fg:x="20925" fg:w="15"/><text x="44.4450%" y="175.50"></text></g><g><title>rtree_leaf_elm_state_update (15 samples, 0.03%)</title><rect x="44.1950%" y="149" width="0.0317%" height="15" fill="rgb(229,17,7)" fg:x="20925" fg:w="15"/><text x="44.4450%" y="159.50"></text></g><g><title>rtree_leaf_elm_bits_read (15 samples, 0.03%)</title><rect x="44.1950%" y="133" width="0.0317%" height="15" fill="rgb(239,72,28)" fg:x="20925" fg:w="15"/><text x="44.4450%" y="143.50"></text></g><g><title>atomic_load_p (15 samples, 0.03%)</title><rect x="44.1950%" y="117" width="0.0317%" height="15" fill="rgb(230,47,54)" fg:x="20925" fg:w="15"/><text x="44.4450%" y="127.50"></text></g><g><title>extent_deactivate_locked (18 samples, 0.04%)</title><rect x="44.1929%" y="197" width="0.0380%" height="15" fill="rgb(214,50,8)" fg:x="20924" fg:w="18"/><text x="44.4429%" y="207.50"></text></g><g><title>extent_deactivate_locked_impl (18 samples, 0.04%)</title><rect x="44.1929%" y="181" width="0.0380%" height="15" fill="rgb(216,198,43)" fg:x="20924" fg:w="18"/><text x="44.4429%" y="191.50"></text></g><g><title>phn_next_get (9 samples, 0.02%)</title><rect x="44.2457%" y="85" width="0.0190%" height="15" fill="rgb(234,20,35)" fg:x="20949" fg:w="9"/><text x="44.4957%" y="95.50"></text></g><g><title>_rjem_je_edata_avail_remove (12 samples, 0.03%)</title><rect x="44.2415%" y="149" width="0.0253%" height="15" fill="rgb(254,45,19)" fg:x="20947" fg:w="12"/><text x="44.4915%" y="159.50"></text></g><g><title>ph_remove (12 samples, 0.03%)</title><rect x="44.2415%" y="133" width="0.0253%" height="15" fill="rgb(219,14,44)" fg:x="20947" fg:w="12"/><text x="44.4915%" y="143.50"></text></g><g><title>ph_merge_children (12 samples, 0.03%)</title><rect x="44.2415%" y="117" width="0.0253%" height="15" fill="rgb(217,220,26)" fg:x="20947" fg:w="12"/><text x="44.4915%" y="127.50"></text></g><g><title>phn_merge_siblings (12 samples, 0.03%)</title><rect x="44.2415%" y="101" width="0.0253%" height="15" fill="rgb(213,158,28)" fg:x="20947" fg:w="12"/><text x="44.4915%" y="111.50"></text></g><g><title>_rjem_je_edata_cache_get (20 samples, 0.04%)</title><rect x="44.2372%" y="165" width="0.0422%" height="15" fill="rgb(252,51,52)" fg:x="20945" fg:w="20"/><text x="44.4872%" y="175.50"></text></g><g><title>extent_recycle_split (46 samples, 0.10%)</title><rect x="44.1929%" y="213" width="0.0972%" height="15" fill="rgb(246,89,16)" fg:x="20924" fg:w="46"/><text x="44.4429%" y="223.50"></text></g><g><title>extent_split_interior (28 samples, 0.06%)</title><rect x="44.2309%" y="197" width="0.0591%" height="15" fill="rgb(216,158,49)" fg:x="20942" fg:w="28"/><text x="44.4809%" y="207.50"></text></g><g><title>extent_split_impl (28 samples, 0.06%)</title><rect x="44.2309%" y="181" width="0.0591%" height="15" fill="rgb(236,107,19)" fg:x="20942" fg:w="28"/><text x="44.4809%" y="191.50"></text></g><g><title>extent_recycle (55 samples, 0.12%)</title><rect x="44.1760%" y="229" width="0.1162%" height="15" fill="rgb(228,185,30)" fg:x="20916" fg:w="55"/><text x="44.4260%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (62 samples, 0.13%)</title><rect x="44.1718%" y="261" width="0.1309%" height="15" fill="rgb(246,134,8)" fg:x="20914" fg:w="62"/><text x="44.4218%" y="271.50"></text></g><g><title>extent_alloc_retained (61 samples, 0.13%)</title><rect x="44.1739%" y="245" width="0.1288%" height="15" fill="rgb(214,143,50)" fg:x="20915" fg:w="61"/><text x="44.4239%" y="255.50"></text></g><g><title>pac_alloc_real (2,739 samples, 5.78%)</title><rect x="38.5262%" y="277" width="5.7849%" height="15" fill="rgb(228,75,8)" fg:x="18241" fg:w="2739"/><text x="38.7762%" y="287.50">pac_all..</text></g><g><title>pac_alloc_impl (2,817 samples, 5.95%)</title><rect x="38.4459%" y="293" width="5.9497%" height="15" fill="rgb(207,175,4)" fg:x="18203" fg:w="2817"/><text x="38.6959%" y="303.50">pac_allo..</text></g><g><title>pac_ehooks_get (40 samples, 0.08%)</title><rect x="44.3111%" y="277" width="0.0845%" height="15" fill="rgb(205,108,24)" fg:x="20980" fg:w="40"/><text x="44.5611%" y="287.50"></text></g><g><title>_rjem_je_pa_alloc (2,999 samples, 6.33%)</title><rect x="38.0658%" y="325" width="6.3341%" height="15" fill="rgb(244,120,49)" fg:x="18023" fg:w="2999"/><text x="38.3158%" y="335.50">_rjem_je..</text></g><g><title>pai_alloc (2,825 samples, 5.97%)</title><rect x="38.4333%" y="309" width="5.9666%" height="15" fill="rgb(223,47,38)" fg:x="18197" fg:w="2825"/><text x="38.6833%" y="319.50">pai_alloc</text></g><g><title>arena_cache_oblivious_randomize (7 samples, 0.01%)</title><rect x="44.3999%" y="325" width="0.0148%" height="15" fill="rgb(229,179,11)" fg:x="21022" fg:w="7"/><text x="44.6499%" y="335.50"></text></g><g><title>locked_inc_u64 (65 samples, 0.14%)</title><rect x="44.4294%" y="309" width="0.1373%" height="15" fill="rgb(231,122,1)" fg:x="21036" fg:w="65"/><text x="44.6794%" y="319.50"></text></g><g><title>atomic_fetch_add_u64 (65 samples, 0.14%)</title><rect x="44.4294%" y="293" width="0.1373%" height="15" fill="rgb(245,119,9)" fg:x="21036" fg:w="65"/><text x="44.6794%" y="303.50"></text></g><g><title>arena_large_malloc_stats_update (81 samples, 0.17%)</title><rect x="44.4146%" y="325" width="0.1711%" height="15" fill="rgb(241,163,25)" fg:x="21029" fg:w="81"/><text x="44.6646%" y="335.50"></text></g><g><title>sz_size2index (9 samples, 0.02%)</title><rect x="44.5667%" y="309" width="0.0190%" height="15" fill="rgb(217,214,3)" fg:x="21101" fg:w="9"/><text x="44.8167%" y="319.50"></text></g><g><title>sz_size2index_compute (9 samples, 0.02%)</title><rect x="44.5667%" y="293" width="0.0190%" height="15" fill="rgb(240,86,28)" fg:x="21101" fg:w="9"/><text x="44.8167%" y="303.50"></text></g><g><title>san_large_extent_decide_guard (30 samples, 0.06%)</title><rect x="44.5878%" y="325" width="0.0634%" height="15" fill="rgb(215,47,9)" fg:x="21111" fg:w="30"/><text x="44.8378%" y="335.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (3,227 samples, 6.82%)</title><rect x="37.9074%" y="341" width="6.8156%" height="15" fill="rgb(252,25,45)" fg:x="17948" fg:w="3227"/><text x="38.1574%" y="351.50">_rjem_je_..</text></g><g><title>sz_size2index (34 samples, 0.07%)</title><rect x="44.6512%" y="325" width="0.0718%" height="15" fill="rgb(251,164,9)" fg:x="21141" fg:w="34"/><text x="44.9012%" y="335.50"></text></g><g><title>sz_size2index_compute (34 samples, 0.07%)</title><rect x="44.6512%" y="309" width="0.0718%" height="15" fill="rgb(233,194,0)" fg:x="21141" fg:w="34"/><text x="44.9012%" y="319.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (7 samples, 0.01%)</title><rect x="44.7251%" y="261" width="0.0148%" height="15" fill="rgb(249,111,24)" fg:x="21176" fg:w="7"/><text x="44.9751%" y="271.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (7 samples, 0.01%)</title><rect x="44.7251%" y="245" width="0.0148%" height="15" fill="rgb(250,223,3)" fg:x="21176" fg:w="7"/><text x="44.9751%" y="255.50"></text></g><g><title>_rjem_je_arena_decay (8 samples, 0.02%)</title><rect x="44.7251%" y="309" width="0.0169%" height="15" fill="rgb(236,178,37)" fg:x="21176" fg:w="8"/><text x="44.9751%" y="319.50"></text></g><g><title>arena_decay_dirty (8 samples, 0.02%)</title><rect x="44.7251%" y="293" width="0.0169%" height="15" fill="rgb(241,158,50)" fg:x="21176" fg:w="8"/><text x="44.9751%" y="303.50"></text></g><g><title>arena_decay_impl (8 samples, 0.02%)</title><rect x="44.7251%" y="277" width="0.0169%" height="15" fill="rgb(213,121,41)" fg:x="21176" fg:w="8"/><text x="44.9751%" y="287.50"></text></g><g><title>arena_decay_tick (10 samples, 0.02%)</title><rect x="44.7251%" y="341" width="0.0211%" height="15" fill="rgb(240,92,3)" fg:x="21176" fg:w="10"/><text x="44.9751%" y="351.50"></text></g><g><title>arena_decay_ticks (10 samples, 0.02%)</title><rect x="44.7251%" y="325" width="0.0211%" height="15" fill="rgb(205,123,3)" fg:x="21176" fg:w="10"/><text x="44.9751%" y="335.50"></text></g><g><title>_rjem_je_large_palloc (3,323 samples, 7.02%)</title><rect x="37.8292%" y="357" width="7.0184%" height="15" fill="rgb(205,97,47)" fg:x="17911" fg:w="3323"/><text x="38.0792%" y="367.50">_rjem_je_..</text></g><g><title>sz_sa2u (48 samples, 0.10%)</title><rect x="44.7462%" y="341" width="0.1014%" height="15" fill="rgb(247,152,14)" fg:x="21186" fg:w="48"/><text x="44.9962%" y="351.50"></text></g><g><title>sz_s2u (15 samples, 0.03%)</title><rect x="44.8159%" y="325" width="0.0317%" height="15" fill="rgb(248,195,53)" fg:x="21219" fg:w="15"/><text x="45.0659%" y="335.50"></text></g><g><title>sz_s2u_compute (15 samples, 0.03%)</title><rect x="44.8159%" y="309" width="0.0317%" height="15" fill="rgb(226,201,16)" fg:x="21219" fg:w="15"/><text x="45.0659%" y="319.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="44.8582%" y="277" width="0.0106%" height="15" fill="rgb(205,98,0)" fg:x="21239" fg:w="5"/><text x="45.1082%" y="287.50"></text></g><g><title>_rjem_je_bitmap_init (7 samples, 0.01%)</title><rect x="44.8582%" y="293" width="0.0148%" height="15" fill="rgb(214,191,48)" fg:x="21239" fg:w="7"/><text x="45.1082%" y="303.50"></text></g><g><title>extent_recycle_extract (12 samples, 0.03%)</title><rect x="44.8793%" y="197" width="0.0253%" height="15" fill="rgb(237,112,39)" fg:x="21249" fg:w="12"/><text x="45.1293%" y="207.50"></text></g><g><title>extent_activate_locked (8 samples, 0.02%)</title><rect x="44.8877%" y="181" width="0.0169%" height="15" fill="rgb(247,203,27)" fg:x="21253" fg:w="8"/><text x="45.1377%" y="191.50"></text></g><g><title>_rjem_je_eset_remove (8 samples, 0.02%)</title><rect x="44.8877%" y="165" width="0.0169%" height="15" fill="rgb(235,124,28)" fg:x="21253" fg:w="8"/><text x="45.1377%" y="175.50"></text></g><g><title>eset_stats_sub (6 samples, 0.01%)</title><rect x="44.8920%" y="149" width="0.0127%" height="15" fill="rgb(208,207,46)" fg:x="21255" fg:w="6"/><text x="45.1420%" y="159.50"></text></g><g><title>atomic_load_zu (6 samples, 0.01%)</title><rect x="44.8920%" y="133" width="0.0127%" height="15" fill="rgb(234,176,4)" fg:x="21255" fg:w="6"/><text x="45.1420%" y="143.50"></text></g><g><title>pac_alloc_real (14 samples, 0.03%)</title><rect x="44.8793%" y="245" width="0.0296%" height="15" fill="rgb(230,133,28)" fg:x="21249" fg:w="14"/><text x="45.1293%" y="255.50"></text></g><g><title>_rjem_je_ecache_alloc (14 samples, 0.03%)</title><rect x="44.8793%" y="229" width="0.0296%" height="15" fill="rgb(211,137,40)" fg:x="21249" fg:w="14"/><text x="45.1293%" y="239.50"></text></g><g><title>extent_recycle (14 samples, 0.03%)</title><rect x="44.8793%" y="213" width="0.0296%" height="15" fill="rgb(254,35,13)" fg:x="21249" fg:w="14"/><text x="45.1293%" y="223.50"></text></g><g><title>arena_slab_alloc (26 samples, 0.05%)</title><rect x="44.8561%" y="309" width="0.0549%" height="15" fill="rgb(225,49,51)" fg:x="21238" fg:w="26"/><text x="45.1061%" y="319.50"></text></g><g><title>_rjem_je_pa_alloc (18 samples, 0.04%)</title><rect x="44.8730%" y="293" width="0.0380%" height="15" fill="rgb(251,10,15)" fg:x="21246" fg:w="18"/><text x="45.1230%" y="303.50"></text></g><g><title>pai_alloc (15 samples, 0.03%)</title><rect x="44.8793%" y="277" width="0.0317%" height="15" fill="rgb(228,207,15)" fg:x="21249" fg:w="15"/><text x="45.1293%" y="287.50"></text></g><g><title>pac_alloc_impl (15 samples, 0.03%)</title><rect x="44.8793%" y="261" width="0.0317%" height="15" fill="rgb(241,99,19)" fg:x="21249" fg:w="15"/><text x="45.1293%" y="271.50"></text></g><g><title>malloc_mutex_lock (7 samples, 0.01%)</title><rect x="44.9152%" y="309" width="0.0148%" height="15" fill="rgb(207,104,49)" fg:x="21266" fg:w="7"/><text x="45.1652%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (7 samples, 0.01%)</title><rect x="44.9152%" y="293" width="0.0148%" height="15" fill="rgb(234,99,18)" fg:x="21266" fg:w="7"/><text x="45.1652%" y="303.50"></text></g><g><title>pthread_mutex_trylock (6 samples, 0.01%)</title><rect x="44.9173%" y="277" width="0.0127%" height="15" fill="rgb(213,191,49)" fg:x="21267" fg:w="6"/><text x="45.1673%" y="287.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (41 samples, 0.09%)</title><rect x="44.8476%" y="341" width="0.0866%" height="15" fill="rgb(210,226,19)" fg:x="21234" fg:w="41"/><text x="45.0976%" y="351.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (39 samples, 0.08%)</title><rect x="44.8518%" y="325" width="0.0824%" height="15" fill="rgb(229,97,18)" fg:x="21236" fg:w="39"/><text x="45.1018%" y="335.50"></text></g><g><title>cache_bin_alloc (24 samples, 0.05%)</title><rect x="44.9342%" y="341" width="0.0507%" height="15" fill="rgb(211,167,15)" fg:x="21275" fg:w="24"/><text x="45.1842%" y="351.50"></text></g><g><title>cache_bin_alloc_impl (24 samples, 0.05%)</title><rect x="44.9342%" y="325" width="0.0507%" height="15" fill="rgb(210,169,34)" fg:x="21275" fg:w="24"/><text x="45.1842%" y="335.50"></text></g><g><title>iallocztm (3,493 samples, 7.38%)</title><rect x="37.6096%" y="389" width="7.3774%" height="15" fill="rgb(241,121,31)" fg:x="17807" fg:w="3493"/><text x="37.8596%" y="399.50">iallocztm</text></g><g><title>arena_malloc (3,493 samples, 7.38%)</title><rect x="37.6096%" y="373" width="7.3774%" height="15" fill="rgb(232,40,11)" fg:x="17807" fg:w="3493"/><text x="37.8596%" y="383.50">arena_mall..</text></g><g><title>tcache_alloc_small (66 samples, 0.14%)</title><rect x="44.8476%" y="357" width="0.1394%" height="15" fill="rgb(205,86,26)" fg:x="21234" fg:w="66"/><text x="45.0976%" y="367.50"></text></g><g><title>imalloc_no_sample (3,494 samples, 7.38%)</title><rect x="37.6096%" y="405" width="7.3796%" height="15" fill="rgb(231,126,28)" fg:x="17807" fg:w="3494"/><text x="37.8596%" y="415.50">imalloc_no..</text></g><g><title>peak_update (10 samples, 0.02%)</title><rect x="45.0166%" y="341" width="0.0211%" height="15" fill="rgb(219,221,18)" fg:x="21314" fg:w="10"/><text x="45.2666%" y="351.50"></text></g><g><title>_rjem_je_peak_event_update (16 samples, 0.03%)</title><rect x="45.0166%" y="357" width="0.0338%" height="15" fill="rgb(211,40,0)" fg:x="21314" fg:w="16"/><text x="45.2666%" y="367.50"></text></g><g><title>tsd_thread_allocated_get (6 samples, 0.01%)</title><rect x="45.0377%" y="341" width="0.0127%" height="15" fill="rgb(239,85,43)" fg:x="21324" fg:w="6"/><text x="45.2877%" y="351.50"></text></g><g><title>_rjem_je_peak_alloc_event_handler (21 samples, 0.04%)</title><rect x="45.0166%" y="373" width="0.0444%" height="15" fill="rgb(231,55,21)" fg:x="21314" fg:w="21"/><text x="45.2666%" y="383.50"></text></g><g><title>peak_event_activity_callback (5 samples, 0.01%)</title><rect x="45.0504%" y="357" width="0.0106%" height="15" fill="rgb(225,184,43)" fg:x="21330" fg:w="5"/><text x="45.3004%" y="367.50"></text></g><g><title>cache_bin_ncached_get_local (25 samples, 0.05%)</title><rect x="45.3968%" y="309" width="0.0528%" height="15" fill="rgb(251,158,41)" fg:x="21494" fg:w="25"/><text x="45.6468%" y="319.50"></text></g><g><title>cache_bin_ncached_get_internal (25 samples, 0.05%)</title><rect x="45.3968%" y="293" width="0.0528%" height="15" fill="rgb(234,159,37)" fg:x="21494" fg:w="25"/><text x="45.6468%" y="303.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (71 samples, 0.15%)</title><rect x="45.3482%" y="325" width="0.1500%" height="15" fill="rgb(216,204,22)" fg:x="21471" fg:w="71"/><text x="45.5982%" y="335.50"></text></g><g><title>cache_bin_nstashed_get_local (23 samples, 0.05%)</title><rect x="45.4496%" y="309" width="0.0486%" height="15" fill="rgb(214,17,3)" fg:x="21519" fg:w="23"/><text x="45.6996%" y="319.50"></text></g><g><title>cache_bin_nstashed_get_internal (23 samples, 0.05%)</title><rect x="45.4496%" y="293" width="0.0486%" height="15" fill="rgb(212,111,17)" fg:x="21519" fg:w="23"/><text x="45.6996%" y="303.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (23 samples, 0.05%)</title><rect x="45.4496%" y="277" width="0.0486%" height="15" fill="rgb(221,157,24)" fg:x="21519" fg:w="23"/><text x="45.6996%" y="287.50"></text></g><g><title>cache_bin_finish_flush (5 samples, 0.01%)</title><rect x="45.5150%" y="277" width="0.0106%" height="15" fill="rgb(252,16,13)" fg:x="21550" fg:w="5"/><text x="45.7650%" y="287.50"></text></g><g><title>_rjem_je_arena_bin_choose (5 samples, 0.01%)</title><rect x="45.5467%" y="261" width="0.0106%" height="15" fill="rgb(221,62,2)" fg:x="21565" fg:w="5"/><text x="45.7967%" y="271.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (7 samples, 0.01%)</title><rect x="45.5573%" y="261" width="0.0148%" height="15" fill="rgb(247,87,22)" fg:x="21570" fg:w="7"/><text x="45.8073%" y="271.50"></text></g><g><title>pac_dalloc_impl (5 samples, 0.01%)</title><rect x="45.5615%" y="245" width="0.0106%" height="15" fill="rgb(215,73,9)" fg:x="21572" fg:w="5"/><text x="45.8115%" y="255.50"></text></g><g><title>arena_dalloc_bin_locked_step (5 samples, 0.01%)</title><rect x="45.5742%" y="261" width="0.0106%" height="15" fill="rgb(207,175,33)" fg:x="21578" fg:w="5"/><text x="45.8242%" y="271.50"></text></g><g><title>edata_arena_ind_get (7 samples, 0.01%)</title><rect x="45.5974%" y="261" width="0.0148%" height="15" fill="rgb(243,129,54)" fg:x="21589" fg:w="7"/><text x="45.8474%" y="271.50"></text></g><g><title>malloc_mutex_lock (14 samples, 0.03%)</title><rect x="45.6122%" y="261" width="0.0296%" height="15" fill="rgb(227,119,45)" fg:x="21596" fg:w="14"/><text x="45.8622%" y="271.50"></text></g><g><title>malloc_mutex_trylock_final (14 samples, 0.03%)</title><rect x="45.6122%" y="245" width="0.0296%" height="15" fill="rgb(205,109,36)" fg:x="21596" fg:w="14"/><text x="45.8622%" y="255.50"></text></g><g><title>pthread_mutex_trylock (14 samples, 0.03%)</title><rect x="45.6122%" y="229" width="0.0296%" height="15" fill="rgb(205,6,39)" fg:x="21596" fg:w="14"/><text x="45.8622%" y="239.50"></text></g><g><title>rtree_leaf_elm_lookup (5 samples, 0.01%)</title><rect x="45.6819%" y="229" width="0.0106%" height="15" fill="rgb(221,32,16)" fg:x="21629" fg:w="5"/><text x="45.9319%" y="239.50"></text></g><g><title>rtree_leaf_elm_read (9 samples, 0.02%)</title><rect x="45.6924%" y="229" width="0.0190%" height="15" fill="rgb(228,144,50)" fg:x="21634" fg:w="9"/><text x="45.9424%" y="239.50"></text></g><g><title>rtree_leaf_elm_bits_read (9 samples, 0.02%)</title><rect x="45.6924%" y="213" width="0.0190%" height="15" fill="rgb(229,201,53)" fg:x="21634" fg:w="9"/><text x="45.9424%" y="223.50"></text></g><g><title>atomic_load_p (9 samples, 0.02%)</title><rect x="45.6924%" y="197" width="0.0190%" height="15" fill="rgb(249,153,27)" fg:x="21634" fg:w="9"/><text x="45.9424%" y="207.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (35 samples, 0.07%)</title><rect x="45.6481%" y="261" width="0.0739%" height="15" fill="rgb(227,106,25)" fg:x="21613" fg:w="35"/><text x="45.8981%" y="271.50"></text></g><g><title>emap_edata_lookup_batch (33 samples, 0.07%)</title><rect x="45.6523%" y="245" width="0.0697%" height="15" fill="rgb(230,65,29)" fg:x="21615" fg:w="33"/><text x="45.9023%" y="255.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (101 samples, 0.21%)</title><rect x="45.5108%" y="309" width="0.2133%" height="15" fill="rgb(221,57,46)" fg:x="21548" fg:w="101"/><text x="45.7608%" y="319.50"></text></g><g><title>tcache_bin_flush_bottom (100 samples, 0.21%)</title><rect x="45.5129%" y="293" width="0.2112%" height="15" fill="rgb(229,161,17)" fg:x="21549" fg:w="100"/><text x="45.7629%" y="303.50"></text></g><g><title>tcache_bin_flush_impl (94 samples, 0.20%)</title><rect x="45.5256%" y="277" width="0.1985%" height="15" fill="rgb(222,213,11)" fg:x="21555" fg:w="94"/><text x="45.7756%" y="287.50"></text></g><g><title>tcache_gc_small (105 samples, 0.22%)</title><rect x="45.5045%" y="325" width="0.2218%" height="15" fill="rgb(235,35,13)" fg:x="21545" fg:w="105"/><text x="45.7545%" y="335.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (224 samples, 0.47%)</title><rect x="45.2700%" y="357" width="0.4731%" height="15" fill="rgb(233,158,34)" fg:x="21434" fg:w="224"/><text x="45.5200%" y="367.50"></text></g><g><title>tcache_event (218 samples, 0.46%)</title><rect x="45.2827%" y="341" width="0.4604%" height="15" fill="rgb(215,151,48)" fg:x="21440" fg:w="218"/><text x="45.5327%" y="351.50"></text></g><g><title>tcache_get (8 samples, 0.02%)</title><rect x="45.7262%" y="325" width="0.0169%" height="15" fill="rgb(229,84,14)" fg:x="21650" fg:w="8"/><text x="45.9762%" y="335.50"></text></g><g><title>tcache_available (8 samples, 0.02%)</title><rect x="45.7262%" y="309" width="0.0169%" height="15" fill="rgb(229,68,14)" fg:x="21650" fg:w="8"/><text x="45.9762%" y="319.50"></text></g><g><title>_rjem_je_tcache_gc_new_event_wait (9 samples, 0.02%)</title><rect x="45.7431%" y="357" width="0.0190%" height="15" fill="rgb(243,106,26)" fg:x="21658" fg:w="9"/><text x="45.9931%" y="367.50"></text></g><g><title>tcache_gc_event_wait_get (8 samples, 0.02%)</title><rect x="45.7685%" y="357" width="0.0169%" height="15" fill="rgb(206,45,38)" fg:x="21670" fg:w="8"/><text x="46.0185%" y="367.50"></text></g><g><title>tsd_tcache_gc_event_wait_get (8 samples, 0.02%)</title><rect x="45.7685%" y="341" width="0.0169%" height="15" fill="rgb(226,6,15)" fg:x="21670" fg:w="8"/><text x="46.0185%" y="351.50"></text></g><g><title>tcache_gc_event_wait_set (7 samples, 0.01%)</title><rect x="45.7854%" y="357" width="0.0148%" height="15" fill="rgb(232,22,54)" fg:x="21678" fg:w="7"/><text x="46.0354%" y="367.50"></text></g><g><title>atomic_fence (33 samples, 0.07%)</title><rect x="45.8192%" y="293" width="0.0697%" height="15" fill="rgb(229,222,32)" fg:x="21694" fg:w="33"/><text x="46.0692%" y="303.50"></text></g><g><title>te_adjust_thresholds_helper (51 samples, 0.11%)</title><rect x="45.8023%" y="357" width="0.1077%" height="15" fill="rgb(228,62,29)" fg:x="21686" fg:w="51"/><text x="46.0523%" y="367.50"></text></g><g><title>te_ctx_next_event_set (49 samples, 0.10%)</title><rect x="45.8065%" y="341" width="0.1035%" height="15" fill="rgb(251,103,34)" fg:x="21688" fg:w="49"/><text x="46.0565%" y="351.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (44 samples, 0.09%)</title><rect x="45.8171%" y="325" width="0.0929%" height="15" fill="rgb(233,12,30)" fg:x="21693" fg:w="44"/><text x="46.0671%" y="335.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (44 samples, 0.09%)</title><rect x="45.8171%" y="309" width="0.0929%" height="15" fill="rgb(238,52,0)" fg:x="21693" fg:w="44"/><text x="46.0671%" y="319.50"></text></g><g><title>te_ctx_next_event_fast_update (10 samples, 0.02%)</title><rect x="45.8889%" y="293" width="0.0211%" height="15" fill="rgb(223,98,5)" fg:x="21727" fg:w="10"/><text x="46.1389%" y="303.50"></text></g><g><title>te_ctx_next_event_get (7 samples, 0.01%)</title><rect x="45.8952%" y="277" width="0.0148%" height="15" fill="rgb(228,75,37)" fg:x="21730" fg:w="7"/><text x="46.1452%" y="287.50"></text></g><g><title>_rjem_je_te_event_trigger (404 samples, 0.85%)</title><rect x="45.0609%" y="373" width="0.8533%" height="15" fill="rgb(205,115,49)" fg:x="21335" fg:w="404"/><text x="45.3109%" y="383.50"></text></g><g><title>imalloc_body (4,040 samples, 8.53%)</title><rect x="37.4068%" y="421" width="8.5327%" height="15" fill="rgb(250,154,43)" fg:x="17711" fg:w="4040"/><text x="37.6568%" y="431.50">imalloc_body</text></g><g><title>thread_alloc_event (450 samples, 0.95%)</title><rect x="44.9891%" y="405" width="0.9504%" height="15" fill="rgb(226,43,29)" fg:x="21301" fg:w="450"/><text x="45.2391%" y="415.50"></text></g><g><title>te_event_advance (450 samples, 0.95%)</title><rect x="44.9891%" y="389" width="0.9504%" height="15" fill="rgb(249,228,39)" fg:x="21301" fg:w="450"/><text x="45.2391%" y="399.50"></text></g><g><title>te_ctx_get (11 samples, 0.02%)</title><rect x="45.9163%" y="373" width="0.0232%" height="15" fill="rgb(216,79,43)" fg:x="21740" fg:w="11"/><text x="46.1663%" y="383.50"></text></g><g><title>_rjem_je_malloc_default (4,078 samples, 8.61%)</title><rect x="37.3582%" y="453" width="8.6130%" height="15" fill="rgb(228,95,12)" fg:x="17688" fg:w="4078"/><text x="37.6082%" y="463.50">_rjem_je_mal..</text></g><g><title>imalloc (4,055 samples, 8.56%)</title><rect x="37.4068%" y="437" width="8.5644%" height="15" fill="rgb(249,221,15)" fg:x="17711" fg:w="4055"/><text x="37.6568%" y="447.50">imalloc</text></g><g><title>tsd_fetch (15 samples, 0.03%)</title><rect x="45.9396%" y="421" width="0.0317%" height="15" fill="rgb(233,34,13)" fg:x="21751" fg:w="15"/><text x="46.1896%" y="431.50"></text></g><g><title>tsd_fetch_impl (15 samples, 0.03%)</title><rect x="45.9396%" y="405" width="0.0317%" height="15" fill="rgb(214,103,39)" fg:x="21751" fg:w="15"/><text x="46.1896%" y="415.50"></text></g><g><title>__rust_alloc (4,108 samples, 8.68%)</title><rect x="37.3582%" y="485" width="8.6764%" height="15" fill="rgb(251,126,39)" fg:x="17688" fg:w="4108"/><text x="37.6082%" y="495.50">__rust_alloc</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4,108 samples, 8.68%)</title><rect x="37.3582%" y="469" width="8.6764%" height="15" fill="rgb(214,216,36)" fg:x="17688" fg:w="4108"/><text x="37.6082%" y="479.50">&lt;tikv_jemall..</text></g><g><title>_rjem_malloc (30 samples, 0.06%)</title><rect x="45.9712%" y="453" width="0.0634%" height="15" fill="rgb(220,221,8)" fg:x="21766" fg:w="30"/><text x="46.2212%" y="463.50"></text></g><g><title>imalloc_fastpath (30 samples, 0.06%)</title><rect x="45.9712%" y="437" width="0.0634%" height="15" fill="rgb(240,216,3)" fg:x="21766" fg:w="30"/><text x="46.2212%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,110 samples, 8.68%)</title><rect x="37.3582%" y="533" width="8.6806%" height="15" fill="rgb(232,218,17)" fg:x="17688" fg:w="4110"/><text x="37.6082%" y="543.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,110 samples, 8.68%)</title><rect x="37.3582%" y="517" width="8.6806%" height="15" fill="rgb(229,163,45)" fg:x="17688" fg:w="4110"/><text x="37.6082%" y="527.50">alloc::alloc..</text></g><g><title>alloc::alloc::alloc (4,110 samples, 8.68%)</title><rect x="37.3582%" y="501" width="8.6806%" height="15" fill="rgb(231,110,42)" fg:x="17688" fg:w="4110"/><text x="37.6082%" y="511.50">alloc::alloc..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,116 samples, 8.69%)</title><rect x="37.3498%" y="613" width="8.6933%" height="15" fill="rgb(208,170,48)" fg:x="17684" fg:w="4116"/><text x="37.5998%" y="623.50">alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,116 samples, 8.69%)</title><rect x="37.3498%" y="597" width="8.6933%" height="15" fill="rgb(239,116,25)" fg:x="17684" fg:w="4116"/><text x="37.5998%" y="607.50">alloc::vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,116 samples, 8.69%)</title><rect x="37.3498%" y="581" width="8.6933%" height="15" fill="rgb(219,200,50)" fg:x="17684" fg:w="4116"/><text x="37.5998%" y="591.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,116 samples, 8.69%)</title><rect x="37.3498%" y="565" width="8.6933%" height="15" fill="rgb(245,200,0)" fg:x="17684" fg:w="4116"/><text x="37.5998%" y="575.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,116 samples, 8.69%)</title><rect x="37.3498%" y="549" width="8.6933%" height="15" fill="rgb(245,119,33)" fg:x="17684" fg:w="4116"/><text x="37.5998%" y="559.50">alloc::raw_v..</text></g><g><title>bytes::bytes_mut::Shared::is_unique (34 samples, 0.07%)</title><rect x="46.0536%" y="613" width="0.0718%" height="15" fill="rgb(231,125,12)" fg:x="21805" fg:w="34"/><text x="46.3036%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (30 samples, 0.06%)</title><rect x="46.0621%" y="597" width="0.0634%" height="15" fill="rgb(216,96,41)" fg:x="21809" fg:w="30"/><text x="46.3121%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.06%)</title><rect x="46.0621%" y="581" width="0.0634%" height="15" fill="rgb(248,43,45)" fg:x="21809" fg:w="30"/><text x="46.3121%" y="591.50"></text></g><g><title>bytes::bytes_mut::original_capacity_from_repr (6 samples, 0.01%)</title><rect x="46.1254%" y="613" width="0.0127%" height="15" fill="rgb(217,222,7)" fg:x="21839" fg:w="6"/><text x="46.3754%" y="623.50"></text></g><g><title>bytes::bytes_mut::release_shared (451 samples, 0.95%)</title><rect x="46.1381%" y="613" width="0.9525%" height="15" fill="rgb(233,28,6)" fg:x="21845" fg:w="451"/><text x="46.3881%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (449 samples, 0.95%)</title><rect x="46.1423%" y="597" width="0.9483%" height="15" fill="rgb(231,218,15)" fg:x="21847" fg:w="449"/><text x="46.3923%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (449 samples, 0.95%)</title><rect x="46.1423%" y="581" width="0.9483%" height="15" fill="rgb(226,171,48)" fg:x="21847" fg:w="449"/><text x="46.3923%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (197 samples, 0.42%)</title><rect x="47.0991%" y="613" width="0.4161%" height="15" fill="rgb(235,201,9)" fg:x="22300" fg:w="197"/><text x="47.3491%" y="623.50"></text></g><g><title>[libc.so.6] (197 samples, 0.42%)</title><rect x="47.0991%" y="597" width="0.4161%" height="15" fill="rgb(217,80,15)" fg:x="22300" fg:w="197"/><text x="47.3491%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (9,455 samples, 19.97%)</title><rect x="27.5519%" y="645" width="19.9696%" height="15" fill="rgb(219,152,8)" fg:x="13045" fg:w="9455"/><text x="27.8019%" y="655.50">bytes::bytes_mut::BytesMut::res..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (9,446 samples, 19.95%)</title><rect x="27.5709%" y="629" width="19.9506%" height="15" fill="rgb(243,107,38)" fg:x="13054" fg:w="9446"/><text x="27.8209%" y="639.50">bytes::bytes_mut::BytesMut::res..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (12 samples, 0.03%)</title><rect x="47.5363%" y="629" width="0.0253%" height="15" fill="rgb(231,17,5)" fg:x="22507" fg:w="12"/><text x="47.7863%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (5 samples, 0.01%)</title><rect x="47.5616%" y="613" width="0.0106%" height="15" fill="rgb(209,25,54)" fg:x="22519" fg:w="5"/><text x="47.8116%" y="623.50"></text></g><g><title>_rjem_je_arena_bin_choose (6 samples, 0.01%)</title><rect x="47.6989%" y="341" width="0.0127%" height="15" fill="rgb(219,0,2)" fg:x="22584" fg:w="6"/><text x="47.9489%" y="351.50"></text></g><g><title>arena_get_bin (6 samples, 0.01%)</title><rect x="47.6989%" y="325" width="0.0127%" height="15" fill="rgb(246,9,5)" fg:x="22584" fg:w="6"/><text x="47.9489%" y="335.50"></text></g><g><title>cfs_lu (8 samples, 0.02%)</title><rect x="47.7538%" y="325" width="0.0169%" height="15" fill="rgb(226,159,4)" fg:x="22610" fg:w="8"/><text x="48.0038%" y="335.50"></text></g><g><title>ffs_lu (5 samples, 0.01%)</title><rect x="47.7602%" y="309" width="0.0106%" height="15" fill="rgb(219,175,34)" fg:x="22613" fg:w="5"/><text x="48.0102%" y="319.50"></text></g><g><title>arena_slab_reg_alloc_batch (27 samples, 0.06%)</title><rect x="47.7179%" y="341" width="0.0570%" height="15" fill="rgb(236,10,46)" fg:x="22593" fg:w="27"/><text x="47.9679%" y="351.50"></text></g><g><title>edata_nfree_get (10 samples, 0.02%)</title><rect x="47.7749%" y="341" width="0.0211%" height="15" fill="rgb(240,211,16)" fg:x="22620" fg:w="10"/><text x="48.0249%" y="351.50"></text></g><g><title>pthread_mutex_trylock (27 samples, 0.06%)</title><rect x="47.8024%" y="309" width="0.0570%" height="15" fill="rgb(205,3,43)" fg:x="22633" fg:w="27"/><text x="48.0524%" y="319.50"></text></g><g><title>malloc_mutex_lock (32 samples, 0.07%)</title><rect x="47.7961%" y="341" width="0.0676%" height="15" fill="rgb(245,7,22)" fg:x="22630" fg:w="32"/><text x="48.0461%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (31 samples, 0.07%)</title><rect x="47.7982%" y="325" width="0.0655%" height="15" fill="rgb(239,132,32)" fg:x="22631" fg:w="31"/><text x="48.0482%" y="335.50"></text></g><g><title>pthread_mutex_unlock (12 samples, 0.03%)</title><rect x="47.8679%" y="325" width="0.0253%" height="15" fill="rgb(228,202,34)" fg:x="22664" fg:w="12"/><text x="48.1179%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (100 samples, 0.21%)</title><rect x="47.6862%" y="357" width="0.2112%" height="15" fill="rgb(254,200,22)" fg:x="22578" fg:w="100"/><text x="47.9362%" y="367.50"></text></g><g><title>malloc_mutex_unlock (16 samples, 0.03%)</title><rect x="47.8636%" y="341" width="0.0338%" height="15" fill="rgb(219,10,39)" fg:x="22662" fg:w="16"/><text x="48.1136%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (105 samples, 0.22%)</title><rect x="47.6799%" y="373" width="0.2218%" height="15" fill="rgb(226,210,39)" fg:x="22575" fg:w="105"/><text x="47.9299%" y="383.50"></text></g><g><title>arena_choose (14 samples, 0.03%)</title><rect x="47.9080%" y="373" width="0.0296%" height="15" fill="rgb(208,219,16)" fg:x="22683" fg:w="14"/><text x="48.1580%" y="383.50"></text></g><g><title>arena_choose_impl (14 samples, 0.03%)</title><rect x="47.9080%" y="357" width="0.0296%" height="15" fill="rgb(216,158,51)" fg:x="22683" fg:w="14"/><text x="48.1580%" y="367.50"></text></g><g><title>imalloc_no_sample (138 samples, 0.29%)</title><rect x="47.6588%" y="437" width="0.2915%" height="15" fill="rgb(233,14,44)" fg:x="22565" fg:w="138"/><text x="47.9088%" y="447.50"></text></g><g><title>iallocztm (138 samples, 0.29%)</title><rect x="47.6588%" y="421" width="0.2915%" height="15" fill="rgb(237,97,39)" fg:x="22565" fg:w="138"/><text x="47.9088%" y="431.50"></text></g><g><title>arena_malloc (138 samples, 0.29%)</title><rect x="47.6588%" y="405" width="0.2915%" height="15" fill="rgb(218,198,43)" fg:x="22565" fg:w="138"/><text x="47.9088%" y="415.50"></text></g><g><title>tcache_alloc_small (138 samples, 0.29%)</title><rect x="47.6588%" y="389" width="0.2915%" height="15" fill="rgb(231,104,20)" fg:x="22565" fg:w="138"/><text x="47.9088%" y="399.50"></text></g><g><title>imalloc_body (144 samples, 0.30%)</title><rect x="47.6546%" y="453" width="0.3041%" height="15" fill="rgb(254,36,13)" fg:x="22563" fg:w="144"/><text x="47.9046%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (146 samples, 0.31%)</title><rect x="47.6524%" y="485" width="0.3084%" height="15" fill="rgb(248,14,50)" fg:x="22562" fg:w="146"/><text x="47.9024%" y="495.50"></text></g><g><title>imalloc (145 samples, 0.31%)</title><rect x="47.6546%" y="469" width="0.3062%" height="15" fill="rgb(217,107,29)" fg:x="22563" fg:w="145"/><text x="47.9046%" y="479.50"></text></g><g><title>cache_bin_alloc_easy (74 samples, 0.16%)</title><rect x="48.2227%" y="453" width="0.1563%" height="15" fill="rgb(251,169,33)" fg:x="22832" fg:w="74"/><text x="48.4727%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (74 samples, 0.16%)</title><rect x="48.2227%" y="437" width="0.1563%" height="15" fill="rgb(217,108,32)" fg:x="22832" fg:w="74"/><text x="48.4727%" y="447.50"></text></g><g><title>sz_index2size_lookup_impl (52 samples, 0.11%)</title><rect x="48.3874%" y="437" width="0.1098%" height="15" fill="rgb(219,66,42)" fg:x="22910" fg:w="52"/><text x="48.6374%" y="447.50"></text></g><g><title>__rust_alloc (406 samples, 0.86%)</title><rect x="47.6440%" y="517" width="0.8575%" height="15" fill="rgb(206,180,7)" fg:x="22558" fg:w="406"/><text x="47.8940%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (406 samples, 0.86%)</title><rect x="47.6440%" y="501" width="0.8575%" height="15" fill="rgb(208,226,31)" fg:x="22558" fg:w="406"/><text x="47.8940%" y="511.50"></text></g><g><title>_rjem_malloc (256 samples, 0.54%)</title><rect x="47.9608%" y="485" width="0.5407%" height="15" fill="rgb(218,26,49)" fg:x="22708" fg:w="256"/><text x="48.2108%" y="495.50"></text></g><g><title>imalloc_fastpath (251 samples, 0.53%)</title><rect x="47.9714%" y="469" width="0.5301%" height="15" fill="rgb(233,197,48)" fg:x="22713" fg:w="251"/><text x="48.2214%" y="479.50"></text></g><g><title>sz_size2index_usize_fastpath (54 samples, 0.11%)</title><rect x="48.3874%" y="453" width="0.1141%" height="15" fill="rgb(252,181,51)" fg:x="22910" fg:w="54"/><text x="48.6374%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (455 samples, 0.96%)</title><rect x="47.5827%" y="597" width="0.9610%" height="15" fill="rgb(253,90,19)" fg:x="22529" fg:w="455"/><text x="47.8327%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (427 samples, 0.90%)</title><rect x="47.6419%" y="581" width="0.9019%" height="15" fill="rgb(215,171,30)" fg:x="22557" fg:w="427"/><text x="47.8919%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (426 samples, 0.90%)</title><rect x="47.6440%" y="565" width="0.8997%" height="15" fill="rgb(214,222,9)" fg:x="22558" fg:w="426"/><text x="47.8940%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (426 samples, 0.90%)</title><rect x="47.6440%" y="549" width="0.8997%" height="15" fill="rgb(223,3,22)" fg:x="22558" fg:w="426"/><text x="47.8940%" y="559.50"></text></g><g><title>alloc::alloc::alloc (426 samples, 0.90%)</title><rect x="47.6440%" y="533" width="0.8997%" height="15" fill="rgb(225,196,46)" fg:x="22558" fg:w="426"/><text x="47.8940%" y="543.50"></text></g><g><title>core::ptr::read_volatile (20 samples, 0.04%)</title><rect x="48.5015%" y="517" width="0.0422%" height="15" fill="rgb(209,110,37)" fg:x="22964" fg:w="20"/><text x="48.7515%" y="527.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (464 samples, 0.98%)</title><rect x="47.5722%" y="613" width="0.9800%" height="15" fill="rgb(249,89,12)" fg:x="22524" fg:w="464"/><text x="47.8222%" y="623.50"></text></g><g><title>bytes::bytes_mut::increment_shared (10 samples, 0.02%)</title><rect x="48.5522%" y="613" width="0.0211%" height="15" fill="rgb(226,27,33)" fg:x="22988" fg:w="10"/><text x="48.8022%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.02%)</title><rect x="48.5522%" y="597" width="0.0211%" height="15" fill="rgb(213,82,22)" fg:x="22988" fg:w="10"/><text x="48.8022%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.02%)</title><rect x="48.5522%" y="581" width="0.0211%" height="15" fill="rgb(248,140,0)" fg:x="22988" fg:w="10"/><text x="48.8022%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (480 samples, 1.01%)</title><rect x="47.5616%" y="629" width="1.0138%" height="15" fill="rgb(228,106,3)" fg:x="22519" fg:w="480"/><text x="47.8116%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (502 samples, 1.06%)</title><rect x="47.5215%" y="645" width="1.0603%" height="15" fill="rgb(209,23,37)" fg:x="22500" fg:w="502"/><text x="47.7715%" y="655.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (11,428 samples, 24.14%)</title><rect x="24.4493%" y="661" width="24.1367%" height="15" fill="rgb(241,93,50)" fg:x="11576" fg:w="11428"/><text x="24.6993%" y="671.50">fastwebsockets::ReadHalf::parse_frame_..</text></g><g><title>fastwebsockets::frame::Payload::to_mut (23 samples, 0.05%)</title><rect x="48.6852%" y="645" width="0.0486%" height="15" fill="rgb(253,46,43)" fg:x="23051" fg:w="23"/><text x="48.9352%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.07%)</title><rect x="63.4570%" y="613" width="0.0676%" height="15" fill="rgb(226,206,43)" fg:x="30045" fg:w="32"/><text x="63.7070%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_mut (14 samples, 0.03%)</title><rect x="63.5246%" y="613" width="0.0296%" height="15" fill="rgb(217,54,7)" fg:x="30077" fg:w="14"/><text x="63.7746%" y="623.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (19,058 samples, 40.25%)</title><rect x="23.3573%" y="693" width="40.2518%" height="15" fill="rgb(223,5,52)" fg:x="11059" fg:w="19058"/><text x="23.6073%" y="703.50">fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}}</text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (18,711 samples, 39.52%)</title><rect x="24.0902%" y="677" width="39.5189%" height="15" fill="rgb(206,52,46)" fg:x="11406" fg:w="18711"/><text x="24.3402%" y="687.50">fastwebsockets::ReadHalf::read_frame_inner::_{{closure}}</text></g><g><title>fastwebsockets::frame::Frame::unmask (7,113 samples, 15.02%)</title><rect x="48.5860%" y="661" width="15.0231%" height="15" fill="rgb(253,136,11)" fg:x="23004" fg:w="7113"/><text x="48.8360%" y="671.50">fastwebsockets::frame::..</text></g><g><title>fastwebsockets::mask::unmask (7,043 samples, 14.88%)</title><rect x="48.7338%" y="645" width="14.8753%" height="15" fill="rgb(208,106,33)" fg:x="23074" fg:w="7043"/><text x="48.9838%" y="655.50">fastwebsockets::mask::u..</text></g><g><title>fastwebsockets::mask::unmask_fallback (7,043 samples, 14.88%)</title><rect x="48.7338%" y="629" width="14.8753%" height="15" fill="rgb(206,54,4)" fg:x="23074" fg:w="7043"/><text x="48.9838%" y="639.50">fastwebsockets::mask::u..</text></g><g><title>fastwebsockets::mask::unmask_easy (26 samples, 0.05%)</title><rect x="63.5542%" y="613" width="0.0549%" height="15" fill="rgb(213,3,15)" fg:x="30091" fg:w="26"/><text x="63.8042%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.05%)</title><rect x="63.5542%" y="597" width="0.0549%" height="15" fill="rgb(252,211,39)" fg:x="30091" fg:w="26"/><text x="63.8042%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.05%)</title><rect x="63.5542%" y="581" width="0.0549%" height="15" fill="rgb(223,6,36)" fg:x="30091" fg:w="26"/><text x="63.8042%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.05%)</title><rect x="63.5542%" y="565" width="0.0549%" height="15" fill="rgb(252,169,45)" fg:x="30091" fg:w="26"/><text x="63.8042%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (8 samples, 0.02%)</title><rect x="63.5922%" y="549" width="0.0169%" height="15" fill="rgb(212,48,26)" fg:x="30109" fg:w="8"/><text x="63.8422%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8 samples, 0.02%)</title><rect x="63.5922%" y="533" width="0.0169%" height="15" fill="rgb(251,102,48)" fg:x="30109" fg:w="8"/><text x="63.8422%" y="543.50"></text></g><g><title>fastwebsockets::mask::unmask_easy::_{{closure}} (8 samples, 0.02%)</title><rect x="63.5922%" y="517" width="0.0169%" height="15" fill="rgb(243,208,16)" fg:x="30109" fg:w="8"/><text x="63.8422%" y="527.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (19,470 samples, 41.12%)</title><rect x="22.7026%" y="725" width="41.1219%" height="15" fill="rgb(219,96,24)" fg:x="10749" fg:w="19470"/><text x="22.9526%" y="735.50">&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSocketR..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (19,390 samples, 40.95%)</title><rect x="22.8716%" y="709" width="40.9530%" height="15" fill="rgb(219,33,29)" fg:x="10829" fg:w="19390"/><text x="23.1216%" y="719.50">wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fa..</text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (102 samples, 0.22%)</title><rect x="63.6091%" y="693" width="0.2154%" height="15" fill="rgb(223,176,5)" fg:x="30117" fg:w="102"/><text x="63.8591%" y="703.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (9 samples, 0.02%)</title><rect x="64.4708%" y="693" width="0.0190%" height="15" fill="rgb(228,140,14)" fg:x="30525" fg:w="9"/><text x="64.7208%" y="703.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::chunk (5 samples, 0.01%)</title><rect x="64.5004%" y="677" width="0.0106%" height="15" fill="rgb(217,179,31)" fg:x="30539" fg:w="5"/><text x="64.7504%" y="687.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::chunk (5 samples, 0.01%)</title><rect x="64.5004%" y="661" width="0.0106%" height="15" fill="rgb(230,9,30)" fg:x="30539" fg:w="5"/><text x="64.7504%" y="671.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (6 samples, 0.01%)</title><rect x="64.5110%" y="677" width="0.0127%" height="15" fill="rgb(230,136,20)" fg:x="30544" fg:w="6"/><text x="64.7610%" y="687.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (6 samples, 0.01%)</title><rect x="64.5110%" y="661" width="0.0127%" height="15" fill="rgb(215,210,22)" fg:x="30544" fg:w="6"/><text x="64.7610%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (5 samples, 0.01%)</title><rect x="64.5257%" y="645" width="0.0106%" height="15" fill="rgb(218,43,5)" fg:x="30551" fg:w="5"/><text x="64.7757%" y="655.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (7 samples, 0.01%)</title><rect x="64.5236%" y="677" width="0.0148%" height="15" fill="rgb(216,11,5)" fg:x="30550" fg:w="7"/><text x="64.7736%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (6 samples, 0.01%)</title><rect x="64.5257%" y="661" width="0.0127%" height="15" fill="rgb(209,82,29)" fg:x="30551" fg:w="6"/><text x="64.7757%" y="671.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (28 samples, 0.06%)</title><rect x="64.4898%" y="693" width="0.0591%" height="15" fill="rgb(244,115,12)" fg:x="30534" fg:w="28"/><text x="64.7398%" y="703.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::chunk (15 samples, 0.03%)</title><rect x="64.5743%" y="677" width="0.0317%" height="15" fill="rgb(222,82,18)" fg:x="30574" fg:w="15"/><text x="64.8243%" y="687.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::chunk (15 samples, 0.03%)</title><rect x="64.5743%" y="661" width="0.0317%" height="15" fill="rgb(249,227,8)" fg:x="30574" fg:w="15"/><text x="64.8243%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (8 samples, 0.02%)</title><rect x="64.6187%" y="645" width="0.0169%" height="15" fill="rgb(253,141,45)" fg:x="30595" fg:w="8"/><text x="64.8687%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20,664 samples, 43.64%)</title><rect x="20.9982%" y="901" width="43.6437%" height="15" fill="rgb(234,184,4)" fg:x="9942" fg:w="20664"/><text x="21.2482%" y="911.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mu..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (20,663 samples, 43.64%)</title><rect x="21.0003%" y="885" width="43.6416%" height="15" fill="rgb(218,194,23)" fg:x="9943" fg:w="20663"/><text x="21.2503%" y="895.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{clos..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (20,596 samples, 43.50%)</title><rect x="21.1418%" y="869" width="43.5001%" height="15" fill="rgb(235,66,41)" fg:x="10010" fg:w="20596"/><text x="21.3918%" y="879.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (20,596 samples, 43.50%)</title><rect x="21.1418%" y="853" width="43.5001%" height="15" fill="rgb(245,217,1)" fg:x="10010" fg:w="20596"/><text x="21.3918%" y="863.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (20,366 samples, 43.01%)</title><rect x="21.6276%" y="837" width="43.0143%" height="15" fill="rgb(229,91,1)" fg:x="10240" fg:w="20366"/><text x="21.8776%" y="847.50">&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future:..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (20,366 samples, 43.01%)</title><rect x="21.6276%" y="821" width="43.0143%" height="15" fill="rgb(207,101,30)" fg:x="10240" fg:w="20366"/><text x="21.8776%" y="831.50">futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (20,366 samples, 43.01%)</title><rect x="21.6276%" y="805" width="43.0143%" height="15" fill="rgb(223,82,49)" fg:x="10240" fg:w="20366"/><text x="21.8776%" y="815.50">&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (20,357 samples, 43.00%)</title><rect x="21.6466%" y="789" width="42.9953%" height="15" fill="rgb(218,167,17)" fg:x="10249" fg:w="20357"/><text x="21.8966%" y="799.50">&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (20,357 samples, 43.00%)</title><rect x="21.6466%" y="773" width="42.9953%" height="15" fill="rgb(208,103,14)" fg:x="10249" fg:w="20357"/><text x="21.8966%" y="783.50">&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (20,215 samples, 42.70%)</title><rect x="21.9465%" y="757" width="42.6954%" height="15" fill="rgb(238,20,8)" fg:x="10391" fg:w="20215"/><text x="22.1965%" y="767.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{clo..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (20,081 samples, 42.41%)</title><rect x="22.2295%" y="741" width="42.4124%" height="15" fill="rgb(218,80,54)" fg:x="10525" fg:w="20081"/><text x="22.4795%" y="751.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{cl..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::process_wisp_message::_{{closure}} (381 samples, 0.80%)</title><rect x="63.8372%" y="725" width="0.8047%" height="15" fill="rgb(240,144,17)" fg:x="30225" fg:w="381"/><text x="64.0872%" y="735.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (198 samples, 0.42%)</title><rect x="64.2237%" y="709" width="0.4182%" height="15" fill="rgb(245,27,50)" fg:x="30408" fg:w="198"/><text x="64.4737%" y="719.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (44 samples, 0.09%)</title><rect x="64.5490%" y="693" width="0.0929%" height="15" fill="rgb(251,51,7)" fg:x="30562" fg:w="44"/><text x="64.7990%" y="703.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (17 samples, 0.04%)</title><rect x="64.6060%" y="677" width="0.0359%" height="15" fill="rgb(245,217,29)" fg:x="30589" fg:w="17"/><text x="64.8560%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (12 samples, 0.03%)</title><rect x="64.6166%" y="661" width="0.0253%" height="15" fill="rgb(221,176,29)" fg:x="30594" fg:w="12"/><text x="64.8666%" y="671.50"></text></g><g><title>core::intrinsics::copy (6 samples, 0.01%)</title><rect x="64.6419%" y="853" width="0.0127%" height="15" fill="rgb(212,180,24)" fg:x="30606" fg:w="6"/><text x="64.8919%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (56 samples, 0.12%)</title><rect x="64.6419%" y="885" width="0.1183%" height="15" fill="rgb(254,24,2)" fg:x="30606" fg:w="56"/><text x="64.8919%" y="895.50"></text></g><g><title>core::ptr::swap (56 samples, 0.12%)</title><rect x="64.6419%" y="869" width="0.1183%" height="15" fill="rgb(230,100,2)" fg:x="30606" fg:w="56"/><text x="64.8919%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.11%)</title><rect x="64.6546%" y="853" width="0.1056%" height="15" fill="rgb(219,142,25)" fg:x="30612" fg:w="50"/><text x="64.9046%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.06%)</title><rect x="64.7623%" y="821" width="0.0570%" height="15" fill="rgb(240,73,43)" fg:x="30663" fg:w="27"/><text x="65.0123%" y="831.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (27 samples, 0.06%)</title><rect x="64.7623%" y="805" width="0.0570%" height="15" fill="rgb(214,114,15)" fg:x="30663" fg:w="27"/><text x="65.0123%" y="815.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (27 samples, 0.06%)</title><rect x="64.7623%" y="789" width="0.0570%" height="15" fill="rgb(207,130,4)" fg:x="30663" fg:w="27"/><text x="65.0123%" y="799.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::bit::BitXorAssign&gt;::bitxor_assign (5 samples, 0.01%)</title><rect x="64.8193%" y="805" width="0.0106%" height="15" fill="rgb(221,25,40)" fg:x="30690" fg:w="5"/><text x="65.0693%" y="815.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::bit::BitXor&gt;::bitxor (5 samples, 0.01%)</title><rect x="64.8193%" y="789" width="0.0106%" height="15" fill="rgb(241,184,7)" fg:x="30690" fg:w="5"/><text x="65.0693%" y="799.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (5 samples, 0.01%)</title><rect x="64.8341%" y="805" width="0.0106%" height="15" fill="rgb(235,159,4)" fg:x="30697" fg:w="5"/><text x="65.0841%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_shr (5 samples, 0.01%)</title><rect x="64.8341%" y="789" width="0.0106%" height="15" fill="rgb(214,87,48)" fg:x="30697" fg:w="5"/><text x="65.0841%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (5 samples, 0.01%)</title><rect x="64.8341%" y="773" width="0.0106%" height="15" fill="rgb(246,198,24)" fg:x="30697" fg:w="5"/><text x="65.0841%" y="783.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (20,907 samples, 44.16%)</title><rect x="20.6898%" y="933" width="44.1570%" height="15" fill="rgb(209,66,40)" fg:x="9796" fg:w="20907"/><text x="20.9398%" y="943.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Futur..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}} (20,907 samples, 44.16%)</title><rect x="20.6898%" y="917" width="44.1570%" height="15" fill="rgb(233,147,39)" fg:x="9796" fg:w="20907"/><text x="20.9398%" y="927.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closu..</text></g><g><title>futures_util::async_await::random::shuffle (97 samples, 0.20%)</title><rect x="64.6419%" y="901" width="0.2049%" height="15" fill="rgb(231,145,52)" fg:x="30606" fg:w="97"/><text x="64.8919%" y="911.50"></text></g><g><title>futures_util::async_await::random::gen_index (41 samples, 0.09%)</title><rect x="64.7602%" y="885" width="0.0866%" height="15" fill="rgb(206,20,26)" fg:x="30662" fg:w="41"/><text x="65.0102%" y="895.50"></text></g><g><title>futures_util::async_await::random::random (40 samples, 0.08%)</title><rect x="64.7623%" y="869" width="0.0845%" height="15" fill="rgb(238,220,4)" fg:x="30663" fg:w="40"/><text x="65.0123%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.08%)</title><rect x="64.7623%" y="853" width="0.0845%" height="15" fill="rgb(252,195,42)" fg:x="30663" fg:w="40"/><text x="65.0123%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.08%)</title><rect x="64.7623%" y="837" width="0.0845%" height="15" fill="rgb(209,10,6)" fg:x="30663" fg:w="40"/><text x="65.0123%" y="847.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (13 samples, 0.03%)</title><rect x="64.8193%" y="821" width="0.0275%" height="15" fill="rgb(229,3,52)" fg:x="30690" fg:w="13"/><text x="65.0693%" y="831.50"></text></g><g><title>_ZN4core3ptr2235drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..handle_packet..$u7b$$u7b$closure$u7d$$u7d$$GT$17h43b694ca702a9533E (5 samples, 0.01%)</title><rect x="64.8468%" y="933" width="0.0106%" height="15" fill="rgb(253,49,37)" fg:x="30703" fg:w="5"/><text x="65.0968%" y="943.50"></text></g><g><title>core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;::transpose (90 samples, 0.19%)</title><rect x="64.8573%" y="933" width="0.1901%" height="15" fill="rgb(240,103,49)" fg:x="30708" fg:w="90"/><text x="65.1073%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (19 samples, 0.04%)</title><rect x="65.3600%" y="901" width="0.0401%" height="15" fill="rgb(250,182,30)" fg:x="30946" fg:w="19"/><text x="65.6100%" y="911.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (19 samples, 0.04%)</title><rect x="65.3600%" y="885" width="0.0401%" height="15" fill="rgb(248,8,30)" fg:x="30946" fg:w="19"/><text x="65.6100%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (9 samples, 0.02%)</title><rect x="65.4022%" y="901" width="0.0190%" height="15" fill="rgb(237,120,30)" fg:x="30966" fg:w="9"/><text x="65.6522%" y="911.50"></text></g><g><title>inallocx (23 samples, 0.05%)</title><rect x="65.4825%" y="661" width="0.0486%" height="15" fill="rgb(221,146,34)" fg:x="31004" fg:w="23"/><text x="65.7325%" y="671.50"></text></g><g><title>aligned_usize_get (22 samples, 0.05%)</title><rect x="65.4846%" y="645" width="0.0465%" height="15" fill="rgb(242,55,13)" fg:x="31005" fg:w="22"/><text x="65.7346%" y="655.50"></text></g><g><title>sz_s2u (21 samples, 0.04%)</title><rect x="65.4867%" y="629" width="0.0444%" height="15" fill="rgb(242,112,31)" fg:x="31006" fg:w="21"/><text x="65.7367%" y="639.50"></text></g><g><title>sz_s2u_compute (20 samples, 0.04%)</title><rect x="65.4888%" y="613" width="0.0422%" height="15" fill="rgb(249,192,27)" fg:x="31007" fg:w="20"/><text x="65.7388%" y="623.50"></text></g><g><title>arena_get_from_edata (13 samples, 0.03%)</title><rect x="65.5754%" y="581" width="0.0275%" height="15" fill="rgb(208,204,44)" fg:x="31048" fg:w="13"/><text x="65.8254%" y="591.50"></text></g><g><title>atomic_load_p (13 samples, 0.03%)</title><rect x="65.5754%" y="565" width="0.0275%" height="15" fill="rgb(208,93,54)" fg:x="31048" fg:w="13"/><text x="65.8254%" y="575.50"></text></g><g><title>arena_background_thread_inactivity_check (5 samples, 0.01%)</title><rect x="65.6113%" y="549" width="0.0106%" height="15" fill="rgb(242,1,31)" fg:x="31065" fg:w="5"/><text x="65.8613%" y="559.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (10 samples, 0.02%)</title><rect x="65.6050%" y="565" width="0.0211%" height="15" fill="rgb(241,83,25)" fg:x="31062" fg:w="10"/><text x="65.8550%" y="575.50"></text></g><g><title>_rjem_je_pa_dalloc (12 samples, 0.03%)</title><rect x="65.6282%" y="565" width="0.0253%" height="15" fill="rgb(205,169,50)" fg:x="31073" fg:w="12"/><text x="65.8782%" y="575.50"></text></g><g><title>pai_dalloc (5 samples, 0.01%)</title><rect x="65.6430%" y="549" width="0.0106%" height="15" fill="rgb(239,186,37)" fg:x="31080" fg:w="5"/><text x="65.8930%" y="559.50"></text></g><g><title>[libc.so.6] (11 samples, 0.02%)</title><rect x="65.6641%" y="549" width="0.0232%" height="15" fill="rgb(205,221,10)" fg:x="31090" fg:w="11"/><text x="65.9141%" y="559.50"></text></g><g><title>_rjem_je_emap_update_edata_state (7 samples, 0.01%)</title><rect x="65.6979%" y="501" width="0.0148%" height="15" fill="rgb(218,196,15)" fg:x="31106" fg:w="7"/><text x="65.9479%" y="511.50"></text></g><g><title>_rjem_je_edata_heap_empty (5 samples, 0.01%)</title><rect x="65.7233%" y="485" width="0.0106%" height="15" fill="rgb(218,196,35)" fg:x="31118" fg:w="5"/><text x="65.9733%" y="495.50"></text></g><g><title>_rjem_je_edata_heap_insert (6 samples, 0.01%)</title><rect x="65.7338%" y="485" width="0.0127%" height="15" fill="rgb(233,63,24)" fg:x="31123" fg:w="6"/><text x="65.9838%" y="495.50"></text></g><g><title>ph_insert (5 samples, 0.01%)</title><rect x="65.7359%" y="469" width="0.0106%" height="15" fill="rgb(225,8,4)" fg:x="31124" fg:w="5"/><text x="65.9859%" y="479.50"></text></g><g><title>extent_deactivate_locked (32 samples, 0.07%)</title><rect x="65.6979%" y="533" width="0.0676%" height="15" fill="rgb(234,105,35)" fg:x="31106" fg:w="32"/><text x="65.9479%" y="543.50"></text></g><g><title>extent_deactivate_locked_impl (32 samples, 0.07%)</title><rect x="65.6979%" y="517" width="0.0676%" height="15" fill="rgb(236,21,32)" fg:x="31106" fg:w="32"/><text x="65.9479%" y="527.50"></text></g><g><title>_rjem_je_eset_insert (25 samples, 0.05%)</title><rect x="65.7127%" y="501" width="0.0528%" height="15" fill="rgb(228,109,6)" fg:x="31113" fg:w="25"/><text x="65.9627%" y="511.50"></text></g><g><title>extent_can_acquire_neighbor (10 samples, 0.02%)</title><rect x="65.8056%" y="469" width="0.0211%" height="15" fill="rgb(229,215,31)" fg:x="31157" fg:w="10"/><text x="66.0556%" y="479.50"></text></g><g><title>edata_committed_get (7 samples, 0.01%)</title><rect x="65.8120%" y="453" width="0.0148%" height="15" fill="rgb(221,52,54)" fg:x="31160" fg:w="7"/><text x="66.0620%" y="463.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (25 samples, 0.05%)</title><rect x="65.7930%" y="501" width="0.0528%" height="15" fill="rgb(252,129,43)" fg:x="31151" fg:w="25"/><text x="66.0430%" y="511.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (24 samples, 0.05%)</title><rect x="65.7951%" y="485" width="0.0507%" height="15" fill="rgb(248,183,27)" fg:x="31152" fg:w="24"/><text x="66.0451%" y="495.50"></text></g><g><title>rtree_leaf_elm_read (7 samples, 0.01%)</title><rect x="65.8310%" y="469" width="0.0148%" height="15" fill="rgb(250,0,22)" fg:x="31169" fg:w="7"/><text x="66.0810%" y="479.50"></text></g><g><title>rtree_leaf_elm_bits_read (6 samples, 0.01%)</title><rect x="65.8331%" y="453" width="0.0127%" height="15" fill="rgb(213,166,10)" fg:x="31170" fg:w="6"/><text x="66.0831%" y="463.50"></text></g><g><title>atomic_load_p (6 samples, 0.01%)</title><rect x="65.8331%" y="437" width="0.0127%" height="15" fill="rgb(207,163,36)" fg:x="31170" fg:w="6"/><text x="66.0831%" y="447.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (6 samples, 0.01%)</title><rect x="65.8606%" y="469" width="0.0127%" height="15" fill="rgb(208,122,22)" fg:x="31183" fg:w="6"/><text x="66.1106%" y="479.50"></text></g><g><title>edata_list_inactive_remove (6 samples, 0.01%)</title><rect x="65.8732%" y="469" width="0.0127%" height="15" fill="rgb(207,104,49)" fg:x="31189" fg:w="6"/><text x="66.1232%" y="479.50"></text></g><g><title>_rjem_je_eset_remove (23 samples, 0.05%)</title><rect x="65.8479%" y="485" width="0.0486%" height="15" fill="rgb(248,211,50)" fg:x="31177" fg:w="23"/><text x="66.0979%" y="495.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (6 samples, 0.01%)</title><rect x="65.9007%" y="453" width="0.0127%" height="15" fill="rgb(217,13,45)" fg:x="31202" fg:w="6"/><text x="66.1507%" y="463.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (6 samples, 0.01%)</title><rect x="65.9007%" y="437" width="0.0127%" height="15" fill="rgb(211,216,49)" fg:x="31202" fg:w="6"/><text x="66.1507%" y="447.50"></text></g><g><title>ehooks_merge (10 samples, 0.02%)</title><rect x="65.8986%" y="469" width="0.0211%" height="15" fill="rgb(221,58,53)" fg:x="31201" fg:w="10"/><text x="66.1486%" y="479.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="65.9197%" y="453" width="0.0190%" height="15" fill="rgb(220,112,41)" fg:x="31211" fg:w="9"/><text x="66.1697%" y="463.50"></text></g><g><title>_rjem_je_edata_avail_insert (9 samples, 0.02%)</title><rect x="65.9387%" y="437" width="0.0190%" height="15" fill="rgb(236,38,28)" fg:x="31220" fg:w="9"/><text x="66.1887%" y="447.50"></text></g><g><title>ph_insert (9 samples, 0.02%)</title><rect x="65.9387%" y="421" width="0.0190%" height="15" fill="rgb(227,195,22)" fg:x="31220" fg:w="9"/><text x="66.1887%" y="431.50"></text></g><g><title>edata_avail_ph_cmp (6 samples, 0.01%)</title><rect x="65.9450%" y="405" width="0.0127%" height="15" fill="rgb(214,55,33)" fg:x="31223" fg:w="6"/><text x="66.1950%" y="415.50"></text></g><g><title>edata_esnead_comp (6 samples, 0.01%)</title><rect x="65.9450%" y="389" width="0.0127%" height="15" fill="rgb(248,80,13)" fg:x="31223" fg:w="6"/><text x="66.1950%" y="399.50"></text></g><g><title>edata_esn_comp (6 samples, 0.01%)</title><rect x="65.9450%" y="373" width="0.0127%" height="15" fill="rgb(238,52,6)" fg:x="31223" fg:w="6"/><text x="66.1950%" y="383.50"></text></g><g><title>edata_esn_get (5 samples, 0.01%)</title><rect x="65.9472%" y="357" width="0.0106%" height="15" fill="rgb(224,198,47)" fg:x="31224" fg:w="5"/><text x="66.1972%" y="367.50"></text></g><g><title>_rjem_je_edata_cache_put (15 samples, 0.03%)</title><rect x="65.9387%" y="453" width="0.0317%" height="15" fill="rgb(233,171,20)" fg:x="31220" fg:w="15"/><text x="66.1887%" y="463.50"></text></g><g><title>malloc_mutex_lock (6 samples, 0.01%)</title><rect x="65.9577%" y="437" width="0.0127%" height="15" fill="rgb(241,30,25)" fg:x="31229" fg:w="6"/><text x="66.2077%" y="447.50"></text></g><g><title>malloc_mutex_trylock_final (6 samples, 0.01%)</title><rect x="65.9577%" y="421" width="0.0127%" height="15" fill="rgb(207,171,38)" fg:x="31229" fg:w="6"/><text x="66.2077%" y="431.50"></text></g><g><title>pthread_mutex_trylock (6 samples, 0.01%)</title><rect x="65.9577%" y="405" width="0.0127%" height="15" fill="rgb(234,70,1)" fg:x="31229" fg:w="6"/><text x="66.2077%" y="415.50"></text></g><g><title>_rjem_je_emap_merge_commit (5 samples, 0.01%)</title><rect x="65.9704%" y="453" width="0.0106%" height="15" fill="rgb(232,178,18)" fg:x="31235" fg:w="5"/><text x="66.2204%" y="463.50"></text></g><g><title>_rjem_je_emap_merge_prepare (8 samples, 0.02%)</title><rect x="65.9809%" y="453" width="0.0169%" height="15" fill="rgb(241,78,40)" fg:x="31240" fg:w="8"/><text x="66.2309%" y="463.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (6 samples, 0.01%)</title><rect x="65.9852%" y="437" width="0.0127%" height="15" fill="rgb(222,35,25)" fg:x="31242" fg:w="6"/><text x="66.2352%" y="447.50"></text></g><g><title>rtree_leaf_elm_lookup (5 samples, 0.01%)</title><rect x="65.9873%" y="421" width="0.0106%" height="15" fill="rgb(207,92,16)" fg:x="31243" fg:w="5"/><text x="66.2373%" y="431.50"></text></g><g><title>extent_try_coalesce_large (116 samples, 0.24%)</title><rect x="65.7655%" y="533" width="0.2450%" height="15" fill="rgb(216,59,51)" fg:x="31138" fg:w="116"/><text x="66.0155%" y="543.50"></text></g><g><title>extent_try_coalesce_impl (115 samples, 0.24%)</title><rect x="65.7676%" y="517" width="0.2429%" height="15" fill="rgb(213,80,28)" fg:x="31139" fg:w="115"/><text x="66.0176%" y="527.50"></text></g><g><title>extent_coalesce (78 samples, 0.16%)</title><rect x="65.8458%" y="501" width="0.1647%" height="15" fill="rgb(220,93,7)" fg:x="31176" fg:w="78"/><text x="66.0958%" y="511.50"></text></g><g><title>extent_merge_impl (54 samples, 0.11%)</title><rect x="65.8965%" y="485" width="0.1141%" height="15" fill="rgb(225,24,44)" fg:x="31200" fg:w="54"/><text x="66.1465%" y="495.50"></text></g><g><title>extent_merge_impl (43 samples, 0.09%)</title><rect x="65.9197%" y="469" width="0.0908%" height="15" fill="rgb(243,74,40)" fg:x="31211" fg:w="43"/><text x="66.1697%" y="479.50"></text></g><g><title>pthread_mutex_trylock (17 samples, 0.04%)</title><rect x="66.0126%" y="501" width="0.0359%" height="15" fill="rgb(228,39,7)" fg:x="31255" fg:w="17"/><text x="66.2626%" y="511.50"></text></g><g><title>_rjem_je_extent_record (170 samples, 0.36%)</title><rect x="65.6916%" y="549" width="0.3591%" height="15" fill="rgb(227,79,8)" fg:x="31103" fg:w="170"/><text x="65.9416%" y="559.50"></text></g><g><title>malloc_mutex_lock (19 samples, 0.04%)</title><rect x="66.0105%" y="533" width="0.0401%" height="15" fill="rgb(236,58,11)" fg:x="31254" fg:w="19"/><text x="66.2605%" y="543.50"></text></g><g><title>malloc_mutex_trylock_final (18 samples, 0.04%)</title><rect x="66.0126%" y="517" width="0.0380%" height="15" fill="rgb(249,63,35)" fg:x="31255" fg:w="18"/><text x="66.2626%" y="527.50"></text></g><g><title>large_dalloc_finish_impl (222 samples, 0.47%)</title><rect x="65.6029%" y="581" width="0.4689%" height="15" fill="rgb(252,114,16)" fg:x="31061" fg:w="222"/><text x="65.8529%" y="591.50"></text></g><g><title>pac_dalloc_impl (198 samples, 0.42%)</title><rect x="65.6536%" y="565" width="0.4182%" height="15" fill="rgb(254,151,24)" fg:x="31085" fg:w="198"/><text x="65.9036%" y="575.50"></text></g><g><title>pthread_mutex_unlock (8 samples, 0.02%)</title><rect x="66.0549%" y="549" width="0.0169%" height="15" fill="rgb(253,54,39)" fg:x="31275" fg:w="8"/><text x="66.3049%" y="559.50"></text></g><g><title>locked_inc_u64 (9 samples, 0.02%)</title><rect x="66.0823%" y="533" width="0.0190%" height="15" fill="rgb(243,25,45)" fg:x="31288" fg:w="9"/><text x="66.3323%" y="543.50"></text></g><g><title>atomic_fetch_add_u64 (9 samples, 0.02%)</title><rect x="66.0823%" y="517" width="0.0190%" height="15" fill="rgb(234,134,9)" fg:x="31288" fg:w="9"/><text x="66.3323%" y="527.50"></text></g><g><title>arena_large_dalloc_stats_update (12 samples, 0.03%)</title><rect x="66.0802%" y="549" width="0.0253%" height="15" fill="rgb(227,166,31)" fg:x="31287" fg:w="12"/><text x="66.3302%" y="559.50"></text></g><g><title>_rjem_je_large_dalloc (256 samples, 0.54%)</title><rect x="65.5691%" y="597" width="0.5407%" height="15" fill="rgb(245,143,41)" fg:x="31045" fg:w="256"/><text x="65.8191%" y="607.50"></text></g><g><title>large_dalloc_prep_impl (18 samples, 0.04%)</title><rect x="66.0718%" y="581" width="0.0380%" height="15" fill="rgb(238,181,32)" fg:x="31283" fg:w="18"/><text x="66.3218%" y="591.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (14 samples, 0.03%)</title><rect x="66.0802%" y="565" width="0.0296%" height="15" fill="rgb(224,113,18)" fg:x="31287" fg:w="14"/><text x="66.3302%" y="575.50"></text></g><g><title>emap_edata_lookup (7 samples, 0.01%)</title><rect x="66.1098%" y="597" width="0.0148%" height="15" fill="rgb(240,229,28)" fg:x="31301" fg:w="7"/><text x="66.3598%" y="607.50"></text></g><g><title>rtree_read (7 samples, 0.01%)</title><rect x="66.1098%" y="581" width="0.0148%" height="15" fill="rgb(250,185,3)" fg:x="31301" fg:w="7"/><text x="66.3598%" y="591.50"></text></g><g><title>rtree_leaf_elm_read (5 samples, 0.01%)</title><rect x="66.1140%" y="565" width="0.0106%" height="15" fill="rgb(212,59,25)" fg:x="31303" fg:w="5"/><text x="66.3640%" y="575.50"></text></g><g><title>rtree_leaf_elm_bits_read (5 samples, 0.01%)</title><rect x="66.1140%" y="549" width="0.0106%" height="15" fill="rgb(221,87,20)" fg:x="31303" fg:w="5"/><text x="66.3640%" y="559.50"></text></g><g><title>atomic_load_p (5 samples, 0.01%)</title><rect x="66.1140%" y="533" width="0.0106%" height="15" fill="rgb(213,74,28)" fg:x="31303" fg:w="5"/><text x="66.3640%" y="543.50"></text></g><g><title>arena_dalloc_large (283 samples, 0.60%)</title><rect x="65.5395%" y="613" width="0.5977%" height="15" fill="rgb(224,132,34)" fg:x="31031" fg:w="283"/><text x="65.7895%" y="623.50"></text></g><g><title>tcache_dalloc_large (6 samples, 0.01%)</title><rect x="66.1246%" y="597" width="0.0127%" height="15" fill="rgb(222,101,24)" fg:x="31308" fg:w="6"/><text x="66.3746%" y="607.50"></text></g><g><title>cache_bin_dalloc_easy (6 samples, 0.01%)</title><rect x="66.1246%" y="581" width="0.0127%" height="15" fill="rgb(254,142,4)" fg:x="31308" fg:w="6"/><text x="66.3746%" y="591.50"></text></g><g><title>isdalloct (322 samples, 0.68%)</title><rect x="65.5311%" y="645" width="0.6801%" height="15" fill="rgb(230,229,49)" fg:x="31027" fg:w="322"/><text x="65.7811%" y="655.50"></text></g><g><title>arena_sdalloc (322 samples, 0.68%)</title><rect x="65.5311%" y="629" width="0.6801%" height="15" fill="rgb(238,70,47)" fg:x="31027" fg:w="322"/><text x="65.7811%" y="639.50"></text></g><g><title>tcache_dalloc_small (35 samples, 0.07%)</title><rect x="66.1372%" y="613" width="0.0739%" height="15" fill="rgb(231,160,17)" fg:x="31314" fg:w="35"/><text x="66.3872%" y="623.50"></text></g><g><title>cache_bin_dalloc_easy (35 samples, 0.07%)</title><rect x="66.1372%" y="597" width="0.0739%" height="15" fill="rgb(218,68,53)" fg:x="31314" fg:w="35"/><text x="66.3872%" y="607.50"></text></g><g><title>cache_bin_full (27 samples, 0.06%)</title><rect x="66.1541%" y="581" width="0.0570%" height="15" fill="rgb(236,111,10)" fg:x="31322" fg:w="27"/><text x="66.4041%" y="591.50"></text></g><g><title>sz_size2index (16 samples, 0.03%)</title><rect x="66.2112%" y="645" width="0.0338%" height="15" fill="rgb(224,34,41)" fg:x="31349" fg:w="16"/><text x="66.4612%" y="655.50"></text></g><g><title>sz_size2index_compute (14 samples, 0.03%)</title><rect x="66.2154%" y="629" width="0.0296%" height="15" fill="rgb(241,118,19)" fg:x="31351" fg:w="14"/><text x="66.4654%" y="639.50"></text></g><g><title>cache_bin_ncached_get_local (6 samples, 0.01%)</title><rect x="66.4308%" y="565" width="0.0127%" height="15" fill="rgb(238,129,25)" fg:x="31453" fg:w="6"/><text x="66.6808%" y="575.50"></text></g><g><title>cache_bin_ncached_get_internal (6 samples, 0.01%)</title><rect x="66.4308%" y="549" width="0.0127%" height="15" fill="rgb(238,22,31)" fg:x="31453" fg:w="6"/><text x="66.6808%" y="559.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (14 samples, 0.03%)</title><rect x="66.4308%" y="581" width="0.0296%" height="15" fill="rgb(222,174,48)" fg:x="31453" fg:w="14"/><text x="66.6808%" y="591.50"></text></g><g><title>cache_bin_nstashed_get_local (8 samples, 0.02%)</title><rect x="66.4435%" y="565" width="0.0169%" height="15" fill="rgb(206,152,40)" fg:x="31459" fg:w="8"/><text x="66.6935%" y="575.50"></text></g><g><title>cache_bin_nstashed_get_internal (8 samples, 0.02%)</title><rect x="66.4435%" y="549" width="0.0169%" height="15" fill="rgb(218,99,54)" fg:x="31459" fg:w="8"/><text x="66.6935%" y="559.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (7 samples, 0.01%)</title><rect x="66.4456%" y="533" width="0.0148%" height="15" fill="rgb(220,174,26)" fg:x="31460" fg:w="7"/><text x="66.6956%" y="543.50"></text></g><g><title>malloc_mutex_lock (8 samples, 0.02%)</title><rect x="66.4794%" y="517" width="0.0169%" height="15" fill="rgb(245,116,9)" fg:x="31476" fg:w="8"/><text x="66.7294%" y="527.50"></text></g><g><title>malloc_mutex_trylock_final (8 samples, 0.02%)</title><rect x="66.4794%" y="501" width="0.0169%" height="15" fill="rgb(209,72,35)" fg:x="31476" fg:w="8"/><text x="66.7294%" y="511.50"></text></g><g><title>pthread_mutex_trylock (8 samples, 0.02%)</title><rect x="66.4794%" y="485" width="0.0169%" height="15" fill="rgb(226,126,21)" fg:x="31476" fg:w="8"/><text x="66.7294%" y="495.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (9 samples, 0.02%)</title><rect x="66.5005%" y="517" width="0.0190%" height="15" fill="rgb(227,192,1)" fg:x="31486" fg:w="9"/><text x="66.7505%" y="527.50"></text></g><g><title>emap_edata_lookup_batch (9 samples, 0.02%)</title><rect x="66.5005%" y="501" width="0.0190%" height="15" fill="rgb(237,180,29)" fg:x="31486" fg:w="9"/><text x="66.7505%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (29 samples, 0.06%)</title><rect x="66.4604%" y="565" width="0.0612%" height="15" fill="rgb(230,197,35)" fg:x="31467" fg:w="29"/><text x="66.7104%" y="575.50"></text></g><g><title>tcache_bin_flush_bottom (29 samples, 0.06%)</title><rect x="66.4604%" y="549" width="0.0612%" height="15" fill="rgb(246,193,31)" fg:x="31467" fg:w="29"/><text x="66.7104%" y="559.50"></text></g><g><title>tcache_bin_flush_impl (29 samples, 0.06%)</title><rect x="66.4604%" y="533" width="0.0612%" height="15" fill="rgb(241,36,4)" fg:x="31467" fg:w="29"/><text x="66.7104%" y="543.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (79 samples, 0.17%)</title><rect x="66.3569%" y="597" width="0.1669%" height="15" fill="rgb(241,130,17)" fg:x="31418" fg:w="79"/><text x="66.6069%" y="607.50"></text></g><g><title>tcache_gc_small (30 samples, 0.06%)</title><rect x="66.4604%" y="581" width="0.0634%" height="15" fill="rgb(206,137,32)" fg:x="31467" fg:w="30"/><text x="66.7104%" y="591.50"></text></g><g><title>te_adjust_thresholds_helper (7 samples, 0.01%)</title><rect x="66.5322%" y="597" width="0.0148%" height="15" fill="rgb(237,228,51)" fg:x="31501" fg:w="7"/><text x="66.7822%" y="607.50"></text></g><g><title>te_ctx_next_event_set (7 samples, 0.01%)</title><rect x="66.5322%" y="581" width="0.0148%" height="15" fill="rgb(243,6,42)" fg:x="31501" fg:w="7"/><text x="66.7822%" y="591.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (7 samples, 0.01%)</title><rect x="66.5322%" y="565" width="0.0148%" height="15" fill="rgb(251,74,28)" fg:x="31501" fg:w="7"/><text x="66.7822%" y="575.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (7 samples, 0.01%)</title><rect x="66.5322%" y="549" width="0.0148%" height="15" fill="rgb(218,20,49)" fg:x="31501" fg:w="7"/><text x="66.7822%" y="559.50"></text></g><g><title>te_ctx_next_event_fast_update (5 samples, 0.01%)</title><rect x="66.5364%" y="533" width="0.0106%" height="15" fill="rgb(238,28,14)" fg:x="31503" fg:w="5"/><text x="66.7864%" y="543.50"></text></g><g><title>te_ctx_last_event_get (6 samples, 0.01%)</title><rect x="66.5470%" y="597" width="0.0127%" height="15" fill="rgb(229,40,46)" fg:x="31508" fg:w="6"/><text x="66.7970%" y="607.50"></text></g><g><title>_rjem_je_te_event_trigger (126 samples, 0.27%)</title><rect x="66.2956%" y="613" width="0.2661%" height="15" fill="rgb(244,195,20)" fg:x="31389" fg:w="126"/><text x="66.5456%" y="623.50"></text></g><g><title>isfree (491 samples, 1.04%)</title><rect x="65.5311%" y="661" width="1.0370%" height="15" fill="rgb(253,56,35)" fg:x="31027" fg:w="491"/><text x="65.7811%" y="671.50"></text></g><g><title>thread_dalloc_event (153 samples, 0.32%)</title><rect x="66.2450%" y="645" width="0.3231%" height="15" fill="rgb(210,149,44)" fg:x="31365" fg:w="153"/><text x="66.4950%" y="655.50"></text></g><g><title>te_event_advance (153 samples, 0.32%)</title><rect x="66.2450%" y="629" width="0.3231%" height="15" fill="rgb(240,135,12)" fg:x="31365" fg:w="153"/><text x="66.4950%" y="639.50"></text></g><g><title>_rjem_je_sdallocx_default (563 samples, 1.19%)</title><rect x="65.4466%" y="677" width="1.1891%" height="15" fill="rgb(251,24,50)" fg:x="30987" fg:w="563"/><text x="65.6966%" y="687.50"></text></g><g><title>tsd_fetch_min (29 samples, 0.06%)</title><rect x="66.5744%" y="661" width="0.0612%" height="15" fill="rgb(243,200,47)" fg:x="31521" fg:w="29"/><text x="66.8244%" y="671.50"></text></g><g><title>tsd_fetch_impl (29 samples, 0.06%)</title><rect x="66.5744%" y="645" width="0.0612%" height="15" fill="rgb(224,166,26)" fg:x="31521" fg:w="29"/><text x="66.8244%" y="655.50"></text></g><g><title>tsd_state_get (26 samples, 0.05%)</title><rect x="66.5808%" y="629" width="0.0549%" height="15" fill="rgb(233,0,47)" fg:x="31524" fg:w="26"/><text x="66.8308%" y="639.50"></text></g><g><title>core::mem::drop (674 samples, 1.42%)</title><rect x="65.4360%" y="853" width="1.4235%" height="15" fill="rgb(253,80,5)" fg:x="30982" fg:w="674"/><text x="65.6860%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (674 samples, 1.42%)</title><rect x="65.4360%" y="837" width="1.4235%" height="15" fill="rgb(214,133,25)" fg:x="30982" fg:w="674"/><text x="65.6860%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (670 samples, 1.42%)</title><rect x="65.4445%" y="821" width="1.4151%" height="15" fill="rgb(209,27,14)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (670 samples, 1.42%)</title><rect x="65.4445%" y="805" width="1.4151%" height="15" fill="rgb(219,102,51)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (670 samples, 1.42%)</title><rect x="65.4445%" y="789" width="1.4151%" height="15" fill="rgb(237,18,16)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (670 samples, 1.42%)</title><rect x="65.4445%" y="773" width="1.4151%" height="15" fill="rgb(241,85,17)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (670 samples, 1.42%)</title><rect x="65.4445%" y="757" width="1.4151%" height="15" fill="rgb(236,90,42)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (670 samples, 1.42%)</title><rect x="65.4445%" y="741" width="1.4151%" height="15" fill="rgb(249,57,21)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (670 samples, 1.42%)</title><rect x="65.4445%" y="725" width="1.4151%" height="15" fill="rgb(243,12,36)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="735.50"></text></g><g><title>__rust_dealloc (670 samples, 1.42%)</title><rect x="65.4445%" y="709" width="1.4151%" height="15" fill="rgb(253,128,47)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="719.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (670 samples, 1.42%)</title><rect x="65.4445%" y="693" width="1.4151%" height="15" fill="rgb(207,33,20)" fg:x="30986" fg:w="670"/><text x="65.6945%" y="703.50"></text></g><g><title>_rjem_sdallocx (105 samples, 0.22%)</title><rect x="66.6378%" y="677" width="0.2218%" height="15" fill="rgb(233,215,35)" fg:x="31551" fg:w="105"/><text x="66.8878%" y="687.50"></text></g><g><title>free_fastpath (96 samples, 0.20%)</title><rect x="66.6568%" y="661" width="0.2028%" height="15" fill="rgb(249,188,52)" fg:x="31560" fg:w="96"/><text x="66.9068%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (40 samples, 0.08%)</title><rect x="66.8596%" y="853" width="0.0845%" height="15" fill="rgb(225,12,32)" fg:x="31656" fg:w="40"/><text x="67.1096%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (40 samples, 0.08%)</title><rect x="66.8596%" y="837" width="0.0845%" height="15" fill="rgb(247,98,14)" fg:x="31656" fg:w="40"/><text x="67.1096%" y="847.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (721 samples, 1.52%)</title><rect x="65.4255%" y="885" width="1.5228%" height="15" fill="rgb(247,219,48)" fg:x="30977" fg:w="721"/><text x="65.6755%" y="895.50"></text></g><g><title>bytes::bytes_mut::release_shared (716 samples, 1.51%)</title><rect x="65.4360%" y="869" width="1.5122%" height="15" fill="rgb(253,60,48)" fg:x="30982" fg:w="716"/><text x="65.6860%" y="879.50"></text></g><g><title>cache_bin_dalloc_easy (24 samples, 0.05%)</title><rect x="67.0391%" y="853" width="0.0507%" height="15" fill="rgb(245,15,52)" fg:x="31741" fg:w="24"/><text x="67.2891%" y="863.50"></text></g><g><title>cache_bin_full (11 samples, 0.02%)</title><rect x="67.0666%" y="837" width="0.0232%" height="15" fill="rgb(220,133,28)" fg:x="31754" fg:w="11"/><text x="67.3166%" y="847.50"></text></g><g><title>sz_index2size (5 samples, 0.01%)</title><rect x="67.0898%" y="853" width="0.0106%" height="15" fill="rgb(217,180,4)" fg:x="31765" fg:w="5"/><text x="67.3398%" y="863.50"></text></g><g><title>sz_index2size_lookup (5 samples, 0.01%)</title><rect x="67.0898%" y="837" width="0.0106%" height="15" fill="rgb(251,24,1)" fg:x="31765" fg:w="5"/><text x="67.3398%" y="847.50"></text></g><g><title>sz_index2size_lookup_impl (5 samples, 0.01%)</title><rect x="67.0898%" y="821" width="0.0106%" height="15" fill="rgb(212,185,49)" fg:x="31765" fg:w="5"/><text x="67.3398%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (795 samples, 1.68%)</title><rect x="65.4234%" y="901" width="1.6791%" height="15" fill="rgb(215,175,22)" fg:x="30976" fg:w="795"/><text x="65.6734%" y="911.50"></text></g><g><title>_rjem_sdallocx (73 samples, 0.15%)</title><rect x="66.9483%" y="885" width="0.1542%" height="15" fill="rgb(250,205,14)" fg:x="31698" fg:w="73"/><text x="67.1983%" y="895.50"></text></g><g><title>free_fastpath (73 samples, 0.15%)</title><rect x="66.9483%" y="869" width="0.1542%" height="15" fill="rgb(225,211,22)" fg:x="31698" fg:w="73"/><text x="67.1983%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (24 samples, 0.05%)</title><rect x="67.1109%" y="901" width="0.0507%" height="15" fill="rgb(251,179,42)" fg:x="31775" fg:w="24"/><text x="67.3609%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.05%)</title><rect x="67.1109%" y="885" width="0.0507%" height="15" fill="rgb(208,216,51)" fg:x="31775" fg:w="24"/><text x="67.3609%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (5 samples, 0.01%)</title><rect x="67.1891%" y="821" width="0.0106%" height="15" fill="rgb(235,36,11)" fg:x="31812" fg:w="5"/><text x="67.4391%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (5 samples, 0.01%)</title><rect x="67.1891%" y="805" width="0.0106%" height="15" fill="rgb(213,189,28)" fg:x="31812" fg:w="5"/><text x="67.4391%" y="815.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5 samples, 0.01%)</title><rect x="67.1891%" y="789" width="0.0106%" height="15" fill="rgb(227,203,42)" fg:x="31812" fg:w="5"/><text x="67.4391%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::load (6 samples, 0.01%)</title><rect x="67.2081%" y="757" width="0.0127%" height="15" fill="rgb(244,72,36)" fg:x="31821" fg:w="6"/><text x="67.4581%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="67.2081%" y="741" width="0.0127%" height="15" fill="rgb(213,53,17)" fg:x="31821" fg:w="6"/><text x="67.4581%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="67.2081%" y="725" width="0.0127%" height="15" fill="rgb(207,167,3)" fg:x="31821" fg:w="6"/><text x="67.4581%" y="735.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (16 samples, 0.03%)</title><rect x="67.1891%" y="837" width="0.0338%" height="15" fill="rgb(216,98,30)" fg:x="31812" fg:w="16"/><text x="67.4391%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (8 samples, 0.02%)</title><rect x="67.2059%" y="821" width="0.0169%" height="15" fill="rgb(236,123,15)" fg:x="31820" fg:w="8"/><text x="67.4559%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (8 samples, 0.02%)</title><rect x="67.2059%" y="805" width="0.0169%" height="15" fill="rgb(248,81,50)" fg:x="31820" fg:w="8"/><text x="67.4559%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (7 samples, 0.01%)</title><rect x="67.2081%" y="789" width="0.0148%" height="15" fill="rgb(214,120,4)" fg:x="31821" fg:w="7"/><text x="67.4581%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (7 samples, 0.01%)</title><rect x="67.2081%" y="773" width="0.0148%" height="15" fill="rgb(208,179,34)" fg:x="31821" fg:w="7"/><text x="67.4581%" y="783.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (17 samples, 0.04%)</title><rect x="67.1891%" y="853" width="0.0359%" height="15" fill="rgb(227,140,7)" fg:x="31812" fg:w="17"/><text x="67.4391%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (8 samples, 0.02%)</title><rect x="67.2313%" y="837" width="0.0169%" height="15" fill="rgb(214,22,6)" fg:x="31832" fg:w="8"/><text x="67.4813%" y="847.50"></text></g><g><title>core::ptr::read (8 samples, 0.02%)</title><rect x="67.2313%" y="821" width="0.0169%" height="15" fill="rgb(207,137,27)" fg:x="31832" fg:w="8"/><text x="67.4813%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (9 samples, 0.02%)</title><rect x="67.2313%" y="853" width="0.0190%" height="15" fill="rgb(210,8,46)" fg:x="31832" fg:w="9"/><text x="67.4813%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (8 samples, 0.02%)</title><rect x="67.2672%" y="837" width="0.0169%" height="15" fill="rgb(240,16,54)" fg:x="31849" fg:w="8"/><text x="67.5172%" y="847.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="67.2672%" y="821" width="0.0169%" height="15" fill="rgb(211,209,29)" fg:x="31849" fg:w="8"/><text x="67.5172%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (22 samples, 0.05%)</title><rect x="67.2503%" y="853" width="0.0465%" height="15" fill="rgb(226,228,24)" fg:x="31841" fg:w="22"/><text x="67.5003%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (5 samples, 0.01%)</title><rect x="67.2862%" y="837" width="0.0106%" height="15" fill="rgb(222,84,9)" fg:x="31858" fg:w="5"/><text x="67.5362%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (5 samples, 0.01%)</title><rect x="67.2862%" y="821" width="0.0106%" height="15" fill="rgb(234,203,30)" fg:x="31858" fg:w="5"/><text x="67.5362%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="67.3116%" y="821" width="0.0148%" height="15" fill="rgb(238,109,14)" fg:x="31870" fg:w="7"/><text x="67.5616%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.04%)</title><rect x="67.3052%" y="853" width="0.0401%" height="15" fill="rgb(233,206,34)" fg:x="31867" fg:w="19"/><text x="67.5552%" y="863.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::_{{closure}} (18 samples, 0.04%)</title><rect x="67.3073%" y="837" width="0.0380%" height="15" fill="rgb(220,167,47)" fg:x="31868" fg:w="18"/><text x="67.5573%" y="847.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::fire_send (8 samples, 0.02%)</title><rect x="67.3284%" y="821" width="0.0169%" height="15" fill="rgb(238,105,10)" fg:x="31878" fg:w="8"/><text x="67.5784%" y="831.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::lock (6 samples, 0.01%)</title><rect x="67.3327%" y="805" width="0.0127%" height="15" fill="rgb(213,227,17)" fg:x="31880" fg:w="6"/><text x="67.5827%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="67.3327%" y="789" width="0.0127%" height="15" fill="rgb(217,132,38)" fg:x="31880" fg:w="6"/><text x="67.5827%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (65 samples, 0.14%)</title><rect x="67.3496%" y="853" width="0.1373%" height="15" fill="rgb(242,146,4)" fg:x="31888" fg:w="65"/><text x="67.5996%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.14%)</title><rect x="67.3496%" y="837" width="0.1373%" height="15" fill="rgb(212,61,9)" fg:x="31888" fg:w="65"/><text x="67.5996%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (62 samples, 0.13%)</title><rect x="67.3559%" y="821" width="0.1309%" height="15" fill="rgb(247,126,22)" fg:x="31891" fg:w="62"/><text x="67.6059%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (61 samples, 0.13%)</title><rect x="67.3580%" y="805" width="0.1288%" height="15" fill="rgb(220,196,2)" fg:x="31892" fg:w="61"/><text x="67.6080%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (61 samples, 0.13%)</title><rect x="67.3580%" y="789" width="0.1288%" height="15" fill="rgb(208,46,4)" fg:x="31892" fg:w="61"/><text x="67.6080%" y="799.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="67.4953%" y="821" width="0.0106%" height="15" fill="rgb(252,104,46)" fg:x="31957" fg:w="5"/><text x="67.7453%" y="831.50"></text></g><g><title>std::sync::poison::Flag::guard (5 samples, 0.01%)</title><rect x="67.4953%" y="805" width="0.0106%" height="15" fill="rgb(237,152,48)" fg:x="31957" fg:w="5"/><text x="67.7453%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (115 samples, 0.24%)</title><rect x="67.5101%" y="805" width="0.2429%" height="15" fill="rgb(221,59,37)" fg:x="31964" fg:w="115"/><text x="67.7601%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (115 samples, 0.24%)</title><rect x="67.5101%" y="789" width="0.2429%" height="15" fill="rgb(209,202,51)" fg:x="31964" fg:w="115"/><text x="67.7601%" y="799.50"></text></g><g><title>flume::Sender&lt;T&gt;::try_send (278 samples, 0.59%)</title><rect x="67.1700%" y="901" width="0.5872%" height="15" fill="rgb(228,81,30)" fg:x="31803" fg:w="278"/><text x="67.4200%" y="911.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (275 samples, 0.58%)</title><rect x="67.1764%" y="885" width="0.5808%" height="15" fill="rgb(227,42,39)" fg:x="31806" fg:w="275"/><text x="67.4264%" y="895.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (275 samples, 0.58%)</title><rect x="67.1764%" y="869" width="0.5808%" height="15" fill="rgb(221,26,2)" fg:x="31806" fg:w="275"/><text x="67.4264%" y="879.50"></text></g><g><title>flume::wait_lock (126 samples, 0.27%)</title><rect x="67.4911%" y="853" width="0.2661%" height="15" fill="rgb(254,61,31)" fg:x="31955" fg:w="126"/><text x="67.7411%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (124 samples, 0.26%)</title><rect x="67.4953%" y="837" width="0.2619%" height="15" fill="rgb(222,173,38)" fg:x="31957" fg:w="124"/><text x="67.7453%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (119 samples, 0.25%)</title><rect x="67.5059%" y="821" width="0.2513%" height="15" fill="rgb(218,50,12)" fg:x="31962" fg:w="119"/><text x="67.7559%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="67.8924%" y="805" width="0.0169%" height="15" fill="rgb(223,88,40)" fg:x="32145" fg:w="8"/><text x="68.1424%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.02%)</title><rect x="67.8924%" y="789" width="0.0169%" height="15" fill="rgb(237,54,19)" fg:x="32145" fg:w="8"/><text x="68.1424%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (43 samples, 0.09%)</title><rect x="67.9093%" y="789" width="0.0908%" height="15" fill="rgb(251,129,25)" fg:x="32153" fg:w="43"/><text x="68.1593%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (43 samples, 0.09%)</title><rect x="67.9093%" y="773" width="0.0908%" height="15" fill="rgb(238,97,19)" fg:x="32153" fg:w="43"/><text x="68.1593%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (43 samples, 0.09%)</title><rect x="67.9093%" y="757" width="0.0908%" height="15" fill="rgb(240,169,18)" fg:x="32153" fg:w="43"/><text x="68.1593%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (43 samples, 0.09%)</title><rect x="67.9093%" y="741" width="0.0908%" height="15" fill="rgb(230,187,49)" fg:x="32153" fg:w="43"/><text x="68.1593%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (46 samples, 0.10%)</title><rect x="67.9093%" y="805" width="0.0972%" height="15" fill="rgb(209,44,26)" fg:x="32153" fg:w="46"/><text x="68.1593%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (55 samples, 0.12%)</title><rect x="68.0085%" y="805" width="0.1162%" height="15" fill="rgb(244,0,6)" fg:x="32200" fg:w="55"/><text x="68.2585%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (55 samples, 0.12%)</title><rect x="68.0085%" y="789" width="0.1162%" height="15" fill="rgb(248,18,21)" fg:x="32200" fg:w="55"/><text x="68.2585%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.12%)</title><rect x="68.0085%" y="773" width="0.1162%" height="15" fill="rgb(245,180,19)" fg:x="32200" fg:w="55"/><text x="68.2585%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (182 samples, 0.38%)</title><rect x="67.7572%" y="901" width="0.3844%" height="15" fill="rgb(252,118,36)" fg:x="32081" fg:w="182"/><text x="68.0072%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (182 samples, 0.38%)</title><rect x="67.7572%" y="885" width="0.3844%" height="15" fill="rgb(210,224,19)" fg:x="32081" fg:w="182"/><text x="68.0072%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (182 samples, 0.38%)</title><rect x="67.7572%" y="869" width="0.3844%" height="15" fill="rgb(218,30,24)" fg:x="32081" fg:w="182"/><text x="68.0072%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (124 samples, 0.26%)</title><rect x="67.8797%" y="853" width="0.2619%" height="15" fill="rgb(219,75,50)" fg:x="32139" fg:w="124"/><text x="68.1297%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (124 samples, 0.26%)</title><rect x="67.8797%" y="837" width="0.2619%" height="15" fill="rgb(234,72,50)" fg:x="32139" fg:w="124"/><text x="68.1297%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (124 samples, 0.26%)</title><rect x="67.8797%" y="821" width="0.2619%" height="15" fill="rgb(219,100,48)" fg:x="32139" fg:w="124"/><text x="68.1297%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="68.1247%" y="805" width="0.0169%" height="15" fill="rgb(253,5,41)" fg:x="32255" fg:w="8"/><text x="68.3747%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.02%)</title><rect x="68.1247%" y="789" width="0.0169%" height="15" fill="rgb(247,181,11)" fg:x="32255" fg:w="8"/><text x="68.3747%" y="799.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}} (22,969 samples, 48.51%)</title><rect x="19.6486%" y="1013" width="48.5120%" height="15" fill="rgb(222,223,25)" fg:x="9303" fg:w="22969"/><text x="19.8986%" y="1023.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (22,969 samples, 48.51%)</title><rect x="19.6486%" y="997" width="48.5120%" height="15" fill="rgb(214,198,28)" fg:x="9303" fg:w="22969"/><text x="19.8986%" y="1007.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (22,969 samples, 48.51%)</title><rect x="19.6486%" y="981" width="48.5120%" height="15" fill="rgb(230,46,43)" fg:x="9303" fg:w="22969"/><text x="19.8986%" y="991.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;:..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::into_future::_{{closure}} (22,951 samples, 48.47%)</title><rect x="19.6866%" y="965" width="48.4740%" height="15" fill="rgb(233,65,53)" fg:x="9321" fg:w="22951"/><text x="19.9366%" y="975.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::into_future::_{{closure}}</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}} (22,924 samples, 48.42%)</title><rect x="19.7436%" y="949" width="48.4170%" height="15" fill="rgb(221,121,27)" fg:x="9348" fg:w="22924"/><text x="19.9936%" y="959.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_packet::_{{closure}} (1,474 samples, 3.11%)</title><rect x="65.0474%" y="933" width="3.1132%" height="15" fill="rgb(247,70,47)" fg:x="30798" fg:w="1474"/><text x="65.2974%" y="943.50">wis..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_data_packet (1,383 samples, 2.92%)</title><rect x="65.2396%" y="917" width="2.9210%" height="15" fill="rgb(228,85,35)" fg:x="30889" fg:w="1383"/><text x="65.4896%" y="927.50">wi..</text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (9 samples, 0.02%)</title><rect x="68.1416%" y="901" width="0.0190%" height="15" fill="rgb(209,50,18)" fg:x="32263" fg:w="9"/><text x="68.3916%" y="911.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (22,975 samples, 48.52%)</title><rect x="19.6486%" y="1061" width="48.5247%" height="15" fill="rgb(250,19,35)" fg:x="9303" fg:w="22975"/><text x="19.8986%" y="1071.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::..</text></g><g><title>tokio::runtime::coop::with_unconstrained (22,975 samples, 48.52%)</title><rect x="19.6486%" y="1045" width="48.5247%" height="15" fill="rgb(253,107,29)" fg:x="9303" fg:w="22975"/><text x="19.8986%" y="1055.50">tokio::runtime::coop::with_unconstrained</text></g><g><title>tokio::runtime::coop::with_budget (22,975 samples, 48.52%)</title><rect x="19.6486%" y="1029" width="48.5247%" height="15" fill="rgb(252,179,29)" fg:x="9303" fg:w="22975"/><text x="19.8986%" y="1039.50">tokio::runtime::coop::with_budget</text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 0.06%)</title><rect x="68.1733%" y="997" width="0.0591%" height="15" fill="rgb(238,194,6)" fg:x="32278" fg:w="28"/><text x="68.4233%" y="1007.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (28 samples, 0.06%)</title><rect x="68.1733%" y="981" width="0.0591%" height="15" fill="rgb(238,164,29)" fg:x="32278" fg:w="28"/><text x="68.4233%" y="991.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (28 samples, 0.06%)</title><rect x="68.1733%" y="965" width="0.0591%" height="15" fill="rgb(224,25,9)" fg:x="32278" fg:w="28"/><text x="68.4233%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (23 samples, 0.05%)</title><rect x="68.1838%" y="949" width="0.0486%" height="15" fill="rgb(244,153,23)" fg:x="32283" fg:w="23"/><text x="68.4338%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (31 samples, 0.07%)</title><rect x="68.1733%" y="1061" width="0.0655%" height="15" fill="rgb(212,203,14)" fg:x="32278" fg:w="31"/><text x="68.4233%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (31 samples, 0.07%)</title><rect x="68.1733%" y="1045" width="0.0655%" height="15" fill="rgb(220,164,20)" fg:x="32278" fg:w="31"/><text x="68.4233%" y="1055.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (31 samples, 0.07%)</title><rect x="68.1733%" y="1029" width="0.0655%" height="15" fill="rgb(222,203,48)" fg:x="32278" fg:w="31"/><text x="68.4233%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.07%)</title><rect x="68.1733%" y="1013" width="0.0655%" height="15" fill="rgb(215,159,22)" fg:x="32278" fg:w="31"/><text x="68.4233%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (7 samples, 0.01%)</title><rect x="68.4774%" y="965" width="0.0148%" height="15" fill="rgb(216,183,47)" fg:x="32422" fg:w="7"/><text x="68.7274%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="68.4816%" y="949" width="0.0106%" height="15" fill="rgb(229,195,25)" fg:x="32424" fg:w="5"/><text x="68.7316%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="68.4816%" y="933" width="0.0106%" height="15" fill="rgb(224,132,51)" fg:x="32424" fg:w="5"/><text x="68.7316%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5 samples, 0.01%)</title><rect x="68.4816%" y="917" width="0.0106%" height="15" fill="rgb(240,63,7)" fg:x="32424" fg:w="5"/><text x="68.7316%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (5 samples, 0.01%)</title><rect x="68.4816%" y="901" width="0.0106%" height="15" fill="rgb(249,182,41)" fg:x="32424" fg:w="5"/><text x="68.7316%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.01%)</title><rect x="68.4816%" y="885" width="0.0106%" height="15" fill="rgb(243,47,26)" fg:x="32424" fg:w="5"/><text x="68.7316%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.16%)</title><rect x="68.4077%" y="1013" width="0.1563%" height="15" fill="rgb(233,48,2)" fg:x="32389" fg:w="74"/><text x="68.6577%" y="1023.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (72 samples, 0.15%)</title><rect x="68.4119%" y="997" width="0.1521%" height="15" fill="rgb(244,165,34)" fg:x="32391" fg:w="72"/><text x="68.6619%" y="1007.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (41 samples, 0.09%)</title><rect x="68.4774%" y="981" width="0.0866%" height="15" fill="rgb(207,89,7)" fg:x="32422" fg:w="41"/><text x="68.7274%" y="991.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (32 samples, 0.07%)</title><rect x="68.4964%" y="965" width="0.0676%" height="15" fill="rgb(244,117,36)" fg:x="32431" fg:w="32"/><text x="68.7464%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.07%)</title><rect x="68.4964%" y="949" width="0.0676%" height="15" fill="rgb(226,144,34)" fg:x="32431" fg:w="32"/><text x="68.7464%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (32 samples, 0.07%)</title><rect x="68.4964%" y="933" width="0.0676%" height="15" fill="rgb(213,23,19)" fg:x="32431" fg:w="32"/><text x="68.7464%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (31 samples, 0.07%)</title><rect x="68.4985%" y="917" width="0.0655%" height="15" fill="rgb(217,75,12)" fg:x="32432" fg:w="31"/><text x="68.7485%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.07%)</title><rect x="68.4985%" y="901" width="0.0655%" height="15" fill="rgb(224,159,17)" fg:x="32432" fg:w="31"/><text x="68.7485%" y="911.50"></text></g><g><title>[libc.so.6] (161 samples, 0.34%)</title><rect x="68.9590%" y="789" width="0.3400%" height="15" fill="rgb(217,118,1)" fg:x="32650" fg:w="161"/><text x="69.2090%" y="799.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (195 samples, 0.41%)</title><rect x="68.9125%" y="805" width="0.4119%" height="15" fill="rgb(232,180,48)" fg:x="32628" fg:w="195"/><text x="69.1625%" y="815.50"></text></g><g><title>_ZN4core3ptr2276drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..into_inner_stream..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hf7efb861bdb7aa3fE (12 samples, 0.03%)</title><rect x="69.2990%" y="789" width="0.0253%" height="15" fill="rgb(230,27,33)" fg:x="32811" fg:w="12"/><text x="69.5490%" y="799.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (58 samples, 0.12%)</title><rect x="69.3328%" y="805" width="0.1225%" height="15" fill="rgb(205,31,21)" fg:x="32827" fg:w="58"/><text x="69.5828%" y="815.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project_replace (8 samples, 0.02%)</title><rect x="69.4384%" y="789" width="0.0169%" height="15" fill="rgb(253,59,4)" fg:x="32877" fg:w="8"/><text x="69.6884%" y="799.50"></text></g><g><title>core::ptr::read (7 samples, 0.01%)</title><rect x="69.4405%" y="773" width="0.0148%" height="15" fill="rgb(224,201,9)" fg:x="32878" fg:w="7"/><text x="69.6905%" y="783.50"></text></g><g><title>_rjem_je_bitmap_init (6 samples, 0.01%)</title><rect x="69.7214%" y="389" width="0.0127%" height="15" fill="rgb(229,206,30)" fg:x="33011" fg:w="6"/><text x="69.9714%" y="399.50"></text></g><g><title>arena_slab_alloc (10 samples, 0.02%)</title><rect x="69.7214%" y="405" width="0.0211%" height="15" fill="rgb(212,67,47)" fg:x="33011" fg:w="10"/><text x="69.9714%" y="415.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (23 samples, 0.05%)</title><rect x="69.7045%" y="437" width="0.0486%" height="15" fill="rgb(211,96,50)" fg:x="33003" fg:w="23"/><text x="69.9545%" y="447.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (22 samples, 0.05%)</title><rect x="69.7066%" y="421" width="0.0465%" height="15" fill="rgb(252,114,18)" fg:x="33004" fg:w="22"/><text x="69.9566%" y="431.50"></text></g><g><title>__rust_alloc (25 samples, 0.05%)</title><rect x="69.7024%" y="581" width="0.0528%" height="15" fill="rgb(223,58,37)" fg:x="33002" fg:w="25"/><text x="69.9524%" y="591.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.05%)</title><rect x="69.7024%" y="565" width="0.0528%" height="15" fill="rgb(237,70,4)" fg:x="33002" fg:w="25"/><text x="69.9524%" y="575.50"></text></g><g><title>_rjem_je_malloc_default (25 samples, 0.05%)</title><rect x="69.7024%" y="549" width="0.0528%" height="15" fill="rgb(244,85,46)" fg:x="33002" fg:w="25"/><text x="69.9524%" y="559.50"></text></g><g><title>imalloc (24 samples, 0.05%)</title><rect x="69.7045%" y="533" width="0.0507%" height="15" fill="rgb(223,39,52)" fg:x="33003" fg:w="24"/><text x="69.9545%" y="543.50"></text></g><g><title>imalloc_body (24 samples, 0.05%)</title><rect x="69.7045%" y="517" width="0.0507%" height="15" fill="rgb(218,200,14)" fg:x="33003" fg:w="24"/><text x="69.9545%" y="527.50"></text></g><g><title>imalloc_no_sample (24 samples, 0.05%)</title><rect x="69.7045%" y="501" width="0.0507%" height="15" fill="rgb(208,171,16)" fg:x="33003" fg:w="24"/><text x="69.9545%" y="511.50"></text></g><g><title>iallocztm (24 samples, 0.05%)</title><rect x="69.7045%" y="485" width="0.0507%" height="15" fill="rgb(234,200,18)" fg:x="33003" fg:w="24"/><text x="69.9545%" y="495.50"></text></g><g><title>arena_malloc (24 samples, 0.05%)</title><rect x="69.7045%" y="469" width="0.0507%" height="15" fill="rgb(228,45,11)" fg:x="33003" fg:w="24"/><text x="69.9545%" y="479.50"></text></g><g><title>tcache_alloc_small (24 samples, 0.05%)</title><rect x="69.7045%" y="453" width="0.0507%" height="15" fill="rgb(237,182,11)" fg:x="33003" fg:w="24"/><text x="69.9545%" y="463.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (26 samples, 0.05%)</title><rect x="69.7024%" y="725" width="0.0549%" height="15" fill="rgb(241,175,49)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.05%)</title><rect x="69.7024%" y="709" width="0.0549%" height="15" fill="rgb(247,38,35)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.05%)</title><rect x="69.7024%" y="693" width="0.0549%" height="15" fill="rgb(228,39,49)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.05%)</title><rect x="69.7024%" y="677" width="0.0549%" height="15" fill="rgb(226,101,26)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (26 samples, 0.05%)</title><rect x="69.7024%" y="661" width="0.0549%" height="15" fill="rgb(206,141,19)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (26 samples, 0.05%)</title><rect x="69.7024%" y="645" width="0.0549%" height="15" fill="rgb(211,200,13)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.05%)</title><rect x="69.7024%" y="629" width="0.0549%" height="15" fill="rgb(241,121,6)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.05%)</title><rect x="69.7024%" y="613" width="0.0549%" height="15" fill="rgb(234,221,29)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="623.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.05%)</title><rect x="69.7024%" y="597" width="0.0549%" height="15" fill="rgb(229,136,5)" fg:x="33002" fg:w="26"/><text x="69.9524%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.06%)</title><rect x="69.6982%" y="773" width="0.0612%" height="15" fill="rgb(238,36,11)" fg:x="33000" fg:w="29"/><text x="69.9482%" y="783.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (29 samples, 0.06%)</title><rect x="69.6982%" y="757" width="0.0612%" height="15" fill="rgb(251,55,41)" fg:x="33000" fg:w="29"/><text x="69.9482%" y="767.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (29 samples, 0.06%)</title><rect x="69.6982%" y="741" width="0.0612%" height="15" fill="rgb(242,34,40)" fg:x="33000" fg:w="29"/><text x="69.9482%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="69.8629%" y="677" width="0.0106%" height="15" fill="rgb(215,42,17)" fg:x="33078" fg:w="5"/><text x="70.1129%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="69.8629%" y="661" width="0.0106%" height="15" fill="rgb(207,44,46)" fg:x="33078" fg:w="5"/><text x="70.1129%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="69.8629%" y="645" width="0.0106%" height="15" fill="rgb(211,206,28)" fg:x="33078" fg:w="5"/><text x="70.1129%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (20 samples, 0.04%)</title><rect x="69.8545%" y="709" width="0.0422%" height="15" fill="rgb(237,167,16)" fg:x="33074" fg:w="20"/><text x="70.1045%" y="719.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as futures_core::future::FusedFuture&gt;::is_terminated (20 samples, 0.04%)</title><rect x="69.8545%" y="693" width="0.0422%" height="15" fill="rgb(233,66,6)" fg:x="33074" fg:w="20"/><text x="70.1045%" y="703.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (11 samples, 0.02%)</title><rect x="69.8735%" y="677" width="0.0232%" height="15" fill="rgb(246,123,29)" fg:x="33083" fg:w="11"/><text x="70.1235%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (11 samples, 0.02%)</title><rect x="69.8735%" y="661" width="0.0232%" height="15" fill="rgb(209,62,40)" fg:x="33083" fg:w="11"/><text x="70.1235%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.02%)</title><rect x="69.8735%" y="645" width="0.0232%" height="15" fill="rgb(218,4,25)" fg:x="33083" fg:w="11"/><text x="70.1235%" y="655.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (20 samples, 0.04%)</title><rect x="69.8967%" y="709" width="0.0422%" height="15" fill="rgb(253,91,49)" fg:x="33094" fg:w="20"/><text x="70.1467%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="69.9664%" y="645" width="0.0127%" height="15" fill="rgb(228,155,29)" fg:x="33127" fg:w="6"/><text x="70.2164%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="69.9664%" y="629" width="0.0127%" height="15" fill="rgb(243,57,37)" fg:x="33127" fg:w="6"/><text x="70.2164%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="69.9664%" y="613" width="0.0127%" height="15" fill="rgb(244,167,17)" fg:x="33127" fg:w="6"/><text x="70.2164%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="69.9664%" y="597" width="0.0127%" height="15" fill="rgb(207,181,38)" fg:x="33127" fg:w="6"/><text x="70.2164%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="69.9664%" y="581" width="0.0127%" height="15" fill="rgb(211,8,23)" fg:x="33127" fg:w="6"/><text x="70.2164%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (16 samples, 0.03%)</title><rect x="70.0065%" y="613" width="0.0338%" height="15" fill="rgb(235,11,44)" fg:x="33146" fg:w="16"/><text x="70.2565%" y="623.50"></text></g><g><title>core::ptr::read (15 samples, 0.03%)</title><rect x="70.0087%" y="597" width="0.0317%" height="15" fill="rgb(248,18,52)" fg:x="33147" fg:w="15"/><text x="70.2587%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (22 samples, 0.05%)</title><rect x="70.0002%" y="629" width="0.0465%" height="15" fill="rgb(208,4,7)" fg:x="33143" fg:w="22"/><text x="70.2502%" y="639.50"></text></g><g><title>core::mem::drop (30 samples, 0.06%)</title><rect x="70.0488%" y="629" width="0.0634%" height="15" fill="rgb(240,17,39)" fg:x="33166" fg:w="30"/><text x="70.2988%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (30 samples, 0.06%)</title><rect x="70.0488%" y="613" width="0.0634%" height="15" fill="rgb(207,170,3)" fg:x="33166" fg:w="30"/><text x="70.2988%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.06%)</title><rect x="70.0488%" y="597" width="0.0634%" height="15" fill="rgb(236,100,52)" fg:x="33166" fg:w="30"/><text x="70.2988%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (25 samples, 0.05%)</title><rect x="70.0593%" y="581" width="0.0528%" height="15" fill="rgb(246,78,51)" fg:x="33171" fg:w="25"/><text x="70.3093%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (24 samples, 0.05%)</title><rect x="70.0615%" y="565" width="0.0507%" height="15" fill="rgb(211,17,15)" fg:x="33172" fg:w="24"/><text x="70.3115%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.05%)</title><rect x="70.0615%" y="549" width="0.0507%" height="15" fill="rgb(209,59,46)" fg:x="33172" fg:w="24"/><text x="70.3115%" y="559.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (5 samples, 0.01%)</title><rect x="70.1122%" y="629" width="0.0106%" height="15" fill="rgb(210,92,25)" fg:x="33196" fg:w="5"/><text x="70.3622%" y="639.50"></text></g><g><title>extent_recycle_extract (7 samples, 0.01%)</title><rect x="70.1481%" y="213" width="0.0148%" height="15" fill="rgb(238,174,52)" fg:x="33213" fg:w="7"/><text x="70.3981%" y="223.50"></text></g><g><title>pac_alloc_real (9 samples, 0.02%)</title><rect x="70.1459%" y="261" width="0.0190%" height="15" fill="rgb(230,73,7)" fg:x="33212" fg:w="9"/><text x="70.3959%" y="271.50"></text></g><g><title>_rjem_je_ecache_alloc (9 samples, 0.02%)</title><rect x="70.1459%" y="245" width="0.0190%" height="15" fill="rgb(243,124,40)" fg:x="33212" fg:w="9"/><text x="70.3959%" y="255.50"></text></g><g><title>extent_recycle (9 samples, 0.02%)</title><rect x="70.1459%" y="229" width="0.0190%" height="15" fill="rgb(244,170,11)" fg:x="33212" fg:w="9"/><text x="70.3959%" y="239.50"></text></g><g><title>arena_slab_alloc (13 samples, 0.03%)</title><rect x="70.1396%" y="325" width="0.0275%" height="15" fill="rgb(207,114,54)" fg:x="33209" fg:w="13"/><text x="70.3896%" y="335.50"></text></g><g><title>_rjem_je_pa_alloc (10 samples, 0.02%)</title><rect x="70.1459%" y="309" width="0.0211%" height="15" fill="rgb(205,42,20)" fg:x="33212" fg:w="10"/><text x="70.3959%" y="319.50"></text></g><g><title>pai_alloc (10 samples, 0.02%)</title><rect x="70.1459%" y="293" width="0.0211%" height="15" fill="rgb(230,30,28)" fg:x="33212" fg:w="10"/><text x="70.3959%" y="303.50"></text></g><g><title>pac_alloc_impl (10 samples, 0.02%)</title><rect x="70.1459%" y="277" width="0.0211%" height="15" fill="rgb(205,73,54)" fg:x="33212" fg:w="10"/><text x="70.3959%" y="287.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (20 samples, 0.04%)</title><rect x="70.1354%" y="341" width="0.0422%" height="15" fill="rgb(254,227,23)" fg:x="33207" fg:w="20"/><text x="70.3854%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (22 samples, 0.05%)</title><rect x="70.1333%" y="357" width="0.0465%" height="15" fill="rgb(228,202,34)" fg:x="33206" fg:w="22"/><text x="70.3833%" y="367.50"></text></g><g><title>_rjem_je_malloc_default (26 samples, 0.05%)</title><rect x="70.1312%" y="469" width="0.0549%" height="15" fill="rgb(222,225,37)" fg:x="33205" fg:w="26"/><text x="70.3812%" y="479.50"></text></g><g><title>imalloc (26 samples, 0.05%)</title><rect x="70.1312%" y="453" width="0.0549%" height="15" fill="rgb(221,14,54)" fg:x="33205" fg:w="26"/><text x="70.3812%" y="463.50"></text></g><g><title>imalloc_body (26 samples, 0.05%)</title><rect x="70.1312%" y="437" width="0.0549%" height="15" fill="rgb(254,102,2)" fg:x="33205" fg:w="26"/><text x="70.3812%" y="447.50"></text></g><g><title>imalloc_no_sample (25 samples, 0.05%)</title><rect x="70.1333%" y="421" width="0.0528%" height="15" fill="rgb(232,104,17)" fg:x="33206" fg:w="25"/><text x="70.3833%" y="431.50"></text></g><g><title>iallocztm (25 samples, 0.05%)</title><rect x="70.1333%" y="405" width="0.0528%" height="15" fill="rgb(250,220,14)" fg:x="33206" fg:w="25"/><text x="70.3833%" y="415.50"></text></g><g><title>arena_malloc (25 samples, 0.05%)</title><rect x="70.1333%" y="389" width="0.0528%" height="15" fill="rgb(241,158,9)" fg:x="33206" fg:w="25"/><text x="70.3833%" y="399.50"></text></g><g><title>tcache_alloc_small (25 samples, 0.05%)</title><rect x="70.1333%" y="373" width="0.0528%" height="15" fill="rgb(246,9,43)" fg:x="33206" fg:w="25"/><text x="70.3833%" y="383.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (31 samples, 0.07%)</title><rect x="70.1227%" y="613" width="0.0655%" height="15" fill="rgb(206,73,33)" fg:x="33201" fg:w="31"/><text x="70.3727%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (31 samples, 0.07%)</title><rect x="70.1227%" y="597" width="0.0655%" height="15" fill="rgb(222,79,8)" fg:x="33201" fg:w="31"/><text x="70.3727%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (31 samples, 0.07%)</title><rect x="70.1227%" y="581" width="0.0655%" height="15" fill="rgb(234,8,54)" fg:x="33201" fg:w="31"/><text x="70.3727%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.06%)</title><rect x="70.1312%" y="565" width="0.0570%" height="15" fill="rgb(209,134,38)" fg:x="33205" fg:w="27"/><text x="70.3812%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.06%)</title><rect x="70.1312%" y="549" width="0.0570%" height="15" fill="rgb(230,127,29)" fg:x="33205" fg:w="27"/><text x="70.3812%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.06%)</title><rect x="70.1312%" y="533" width="0.0570%" height="15" fill="rgb(242,44,41)" fg:x="33205" fg:w="27"/><text x="70.3812%" y="543.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.06%)</title><rect x="70.1312%" y="517" width="0.0570%" height="15" fill="rgb(222,56,43)" fg:x="33205" fg:w="27"/><text x="70.3812%" y="527.50"></text></g><g><title>__rust_alloc (27 samples, 0.06%)</title><rect x="70.1312%" y="501" width="0.0570%" height="15" fill="rgb(238,39,47)" fg:x="33205" fg:w="27"/><text x="70.3812%" y="511.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (27 samples, 0.06%)</title><rect x="70.1312%" y="485" width="0.0570%" height="15" fill="rgb(226,79,43)" fg:x="33205" fg:w="27"/><text x="70.3812%" y="495.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (34 samples, 0.07%)</title><rect x="70.1227%" y="629" width="0.0718%" height="15" fill="rgb(242,105,53)" fg:x="33201" fg:w="34"/><text x="70.3727%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (27 samples, 0.06%)</title><rect x="70.1987%" y="581" width="0.0570%" height="15" fill="rgb(251,132,46)" fg:x="33237" fg:w="27"/><text x="70.4487%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.06%)</title><rect x="70.1987%" y="565" width="0.0570%" height="15" fill="rgb(231,77,14)" fg:x="33237" fg:w="27"/><text x="70.4487%" y="575.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (129 samples, 0.27%)</title><rect x="69.9854%" y="645" width="0.2725%" height="15" fill="rgb(240,135,9)" fg:x="33136" fg:w="129"/><text x="70.2354%" y="655.50"></text></g><g><title>flume::wait_lock (30 samples, 0.06%)</title><rect x="70.1945%" y="629" width="0.0634%" height="15" fill="rgb(248,109,14)" fg:x="33235" fg:w="30"/><text x="70.4445%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.06%)</title><rect x="70.1966%" y="613" width="0.0612%" height="15" fill="rgb(227,146,52)" fg:x="33236" fg:w="29"/><text x="70.4466%" y="623.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (28 samples, 0.06%)</title><rect x="70.1987%" y="597" width="0.0591%" height="15" fill="rgb(232,54,3)" fg:x="33237" fg:w="28"/><text x="70.4487%" y="607.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (18 samples, 0.04%)</title><rect x="70.2579%" y="645" width="0.0380%" height="15" fill="rgb(229,201,43)" fg:x="33265" fg:w="18"/><text x="70.5079%" y="655.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (18 samples, 0.04%)</title><rect x="70.2579%" y="629" width="0.0380%" height="15" fill="rgb(252,161,33)" fg:x="33265" fg:w="18"/><text x="70.5079%" y="639.50"></text></g><g><title>flume::wait_lock (7 samples, 0.01%)</title><rect x="70.2811%" y="613" width="0.0148%" height="15" fill="rgb(226,146,40)" fg:x="33276" fg:w="7"/><text x="70.5311%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.01%)</title><rect x="70.2811%" y="597" width="0.0148%" height="15" fill="rgb(219,47,25)" fg:x="33276" fg:w="7"/><text x="70.5311%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (6 samples, 0.01%)</title><rect x="70.2832%" y="581" width="0.0127%" height="15" fill="rgb(250,135,13)" fg:x="33277" fg:w="6"/><text x="70.5332%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.01%)</title><rect x="70.2832%" y="565" width="0.0127%" height="15" fill="rgb(219,229,18)" fg:x="33277" fg:w="6"/><text x="70.5332%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="70.2832%" y="549" width="0.0127%" height="15" fill="rgb(217,152,27)" fg:x="33277" fg:w="6"/><text x="70.5332%" y="559.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (164 samples, 0.35%)</title><rect x="69.9559%" y="677" width="0.3464%" height="15" fill="rgb(225,71,47)" fg:x="33122" fg:w="164"/><text x="70.2059%" y="687.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (164 samples, 0.35%)</title><rect x="69.9559%" y="661" width="0.3464%" height="15" fill="rgb(220,139,14)" fg:x="33122" fg:w="164"/><text x="70.2059%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (20 samples, 0.04%)</title><rect x="70.3403%" y="613" width="0.0422%" height="15" fill="rgb(247,54,32)" fg:x="33304" fg:w="20"/><text x="70.5903%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (16 samples, 0.03%)</title><rect x="70.3487%" y="597" width="0.0338%" height="15" fill="rgb(252,131,39)" fg:x="33308" fg:w="16"/><text x="70.5987%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="70.3487%" y="581" width="0.0338%" height="15" fill="rgb(210,108,39)" fg:x="33308" fg:w="16"/><text x="70.5987%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (15 samples, 0.03%)</title><rect x="70.3508%" y="565" width="0.0317%" height="15" fill="rgb(205,23,29)" fg:x="33309" fg:w="15"/><text x="70.6008%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.03%)</title><rect x="70.3508%" y="549" width="0.0317%" height="15" fill="rgb(246,139,46)" fg:x="33309" fg:w="15"/><text x="70.6008%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.03%)</title><rect x="70.3508%" y="533" width="0.0317%" height="15" fill="rgb(250,81,26)" fg:x="33309" fg:w="15"/><text x="70.6008%" y="543.50"></text></g><g><title>event_listener::TaskRef::into_task (62 samples, 0.13%)</title><rect x="70.3825%" y="613" width="0.1309%" height="15" fill="rgb(214,104,7)" fg:x="33324" fg:w="62"/><text x="70.6325%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (62 samples, 0.13%)</title><rect x="70.3825%" y="597" width="0.1309%" height="15" fill="rgb(233,189,8)" fg:x="33324" fg:w="62"/><text x="70.6325%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (58 samples, 0.12%)</title><rect x="70.3909%" y="581" width="0.1225%" height="15" fill="rgb(228,141,17)" fg:x="33328" fg:w="58"/><text x="70.6409%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (30 samples, 0.06%)</title><rect x="70.4501%" y="565" width="0.0634%" height="15" fill="rgb(247,157,1)" fg:x="33356" fg:w="30"/><text x="70.7001%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.06%)</title><rect x="70.4522%" y="549" width="0.0612%" height="15" fill="rgb(249,225,5)" fg:x="33357" fg:w="29"/><text x="70.7022%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.06%)</title><rect x="70.4522%" y="533" width="0.0612%" height="15" fill="rgb(242,55,13)" fg:x="33357" fg:w="29"/><text x="70.7022%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (357 samples, 0.75%)</title><rect x="69.8122%" y="741" width="0.7540%" height="15" fill="rgb(230,49,50)" fg:x="33054" fg:w="357"/><text x="70.0622%" y="751.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}}::_{{closure}} (357 samples, 0.75%)</title><rect x="69.8122%" y="725" width="0.7540%" height="15" fill="rgb(241,111,38)" fg:x="33054" fg:w="357"/><text x="70.0622%" y="735.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (297 samples, 0.63%)</title><rect x="69.9390%" y="709" width="0.6273%" height="15" fill="rgb(252,155,4)" fg:x="33114" fg:w="297"/><text x="70.1890%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (289 samples, 0.61%)</title><rect x="69.9559%" y="693" width="0.6104%" height="15" fill="rgb(212,69,32)" fg:x="33122" fg:w="289"/><text x="70.2059%" y="703.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (125 samples, 0.26%)</title><rect x="70.3022%" y="677" width="0.2640%" height="15" fill="rgb(243,107,47)" fg:x="33286" fg:w="125"/><text x="70.5522%" y="687.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (125 samples, 0.26%)</title><rect x="70.3022%" y="661" width="0.2640%" height="15" fill="rgb(247,130,12)" fg:x="33286" fg:w="125"/><text x="70.5522%" y="671.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (125 samples, 0.26%)</title><rect x="70.3022%" y="645" width="0.2640%" height="15" fill="rgb(233,74,16)" fg:x="33286" fg:w="125"/><text x="70.5522%" y="655.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (117 samples, 0.25%)</title><rect x="70.3191%" y="629" width="0.2471%" height="15" fill="rgb(208,58,18)" fg:x="33294" fg:w="117"/><text x="70.5691%" y="639.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (25 samples, 0.05%)</title><rect x="70.5134%" y="613" width="0.0528%" height="15" fill="rgb(242,225,1)" fg:x="33386" fg:w="25"/><text x="70.7634%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.05%)</title><rect x="70.5134%" y="597" width="0.0528%" height="15" fill="rgb(249,39,40)" fg:x="33386" fg:w="25"/><text x="70.7634%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (24 samples, 0.05%)</title><rect x="70.5156%" y="581" width="0.0507%" height="15" fill="rgb(207,72,44)" fg:x="33387" fg:w="24"/><text x="70.7656%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (24 samples, 0.05%)</title><rect x="70.5156%" y="565" width="0.0507%" height="15" fill="rgb(215,193,12)" fg:x="33387" fg:w="24"/><text x="70.7656%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.05%)</title><rect x="70.5156%" y="549" width="0.0507%" height="15" fill="rgb(248,41,39)" fg:x="33387" fg:w="24"/><text x="70.7656%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (32 samples, 0.07%)</title><rect x="70.5662%" y="725" width="0.0676%" height="15" fill="rgb(253,85,4)" fg:x="33411" fg:w="32"/><text x="70.8162%" y="735.50"></text></g><g><title>core::ptr::swap (32 samples, 0.07%)</title><rect x="70.5662%" y="709" width="0.0676%" height="15" fill="rgb(243,70,31)" fg:x="33411" fg:w="32"/><text x="70.8162%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.07%)</title><rect x="70.5684%" y="693" width="0.0655%" height="15" fill="rgb(253,195,26)" fg:x="33412" fg:w="31"/><text x="70.8184%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="70.6338%" y="661" width="0.0106%" height="15" fill="rgb(243,42,11)" fg:x="33443" fg:w="5"/><text x="70.8838%" y="671.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (5 samples, 0.01%)</title><rect x="70.6338%" y="645" width="0.0106%" height="15" fill="rgb(239,66,17)" fg:x="33443" fg:w="5"/><text x="70.8838%" y="655.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (5 samples, 0.01%)</title><rect x="70.6338%" y="629" width="0.0106%" height="15" fill="rgb(217,132,21)" fg:x="33443" fg:w="5"/><text x="70.8838%" y="639.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (423 samples, 0.89%)</title><rect x="69.7594%" y="773" width="0.8934%" height="15" fill="rgb(252,202,21)" fg:x="33029" fg:w="423"/><text x="70.0094%" y="783.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}} (423 samples, 0.89%)</title><rect x="69.7594%" y="757" width="0.8934%" height="15" fill="rgb(233,98,36)" fg:x="33029" fg:w="423"/><text x="70.0094%" y="767.50"></text></g><g><title>futures_util::async_await::random::shuffle (41 samples, 0.09%)</title><rect x="70.5662%" y="741" width="0.0866%" height="15" fill="rgb(216,153,54)" fg:x="33411" fg:w="41"/><text x="70.8162%" y="751.50"></text></g><g><title>futures_util::async_await::random::gen_index (9 samples, 0.02%)</title><rect x="70.6338%" y="725" width="0.0190%" height="15" fill="rgb(250,99,7)" fg:x="33443" fg:w="9"/><text x="70.8838%" y="735.50"></text></g><g><title>futures_util::async_await::random::random (9 samples, 0.02%)</title><rect x="70.6338%" y="709" width="0.0190%" height="15" fill="rgb(207,56,50)" fg:x="33443" fg:w="9"/><text x="70.8838%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="70.6338%" y="693" width="0.0190%" height="15" fill="rgb(244,61,34)" fg:x="33443" fg:w="9"/><text x="70.8838%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="70.6338%" y="677" width="0.0190%" height="15" fill="rgb(241,50,38)" fg:x="33443" fg:w="9"/><text x="70.8838%" y="687.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::as_any (5 samples, 0.01%)</title><rect x="70.6697%" y="725" width="0.0106%" height="15" fill="rgb(212,166,30)" fg:x="33460" fg:w="5"/><text x="70.9197%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;bytes::bytes::Bytes,dyn flume::signal::Signal&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="70.6845%" y="725" width="0.0190%" height="15" fill="rgb(249,127,32)" fg:x="33467" fg:w="9"/><text x="70.9345%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="70.6845%" y="709" width="0.0190%" height="15" fill="rgb(209,103,0)" fg:x="33467" fg:w="9"/><text x="70.9345%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.01%)</title><rect x="70.6887%" y="693" width="0.0148%" height="15" fill="rgb(238,209,51)" fg:x="33469" fg:w="7"/><text x="70.9387%" y="703.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.05%)</title><rect x="70.6550%" y="757" width="0.0528%" height="15" fill="rgb(237,56,23)" fg:x="33453" fg:w="25"/><text x="70.9050%" y="767.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (25 samples, 0.05%)</title><rect x="70.6550%" y="741" width="0.0528%" height="15" fill="rgb(215,153,46)" fg:x="33453" fg:w="25"/><text x="70.9050%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (34 samples, 0.07%)</title><rect x="70.6550%" y="773" width="0.0718%" height="15" fill="rgb(224,49,31)" fg:x="33453" fg:w="34"/><text x="70.9050%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::OwnedOrRef&lt;flume::Receiver&lt;bytes::bytes::Bytes&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="70.7120%" y="757" width="0.0148%" height="15" fill="rgb(250,18,42)" fg:x="33480" fg:w="7"/><text x="70.9620%" y="767.50"></text></g><g><title>cache_bin_dalloc_easy (7 samples, 0.01%)</title><rect x="70.7352%" y="709" width="0.0148%" height="15" fill="rgb(215,176,39)" fg:x="33491" fg:w="7"/><text x="70.9852%" y="719.50"></text></g><g><title>_rjem_sdallocx (12 samples, 0.03%)</title><rect x="70.7268%" y="741" width="0.0253%" height="15" fill="rgb(223,77,29)" fg:x="33487" fg:w="12"/><text x="70.9768%" y="751.50"></text></g><g><title>free_fastpath (12 samples, 0.03%)</title><rect x="70.7268%" y="725" width="0.0253%" height="15" fill="rgb(234,94,52)" fg:x="33487" fg:w="12"/><text x="70.9768%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt; (23 samples, 0.05%)</title><rect x="70.7606%" y="677" width="0.0486%" height="15" fill="rgb(220,154,50)" fg:x="33503" fg:w="23"/><text x="71.0106%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.05%)</title><rect x="70.7606%" y="661" width="0.0486%" height="15" fill="rgb(212,11,10)" fg:x="33503" fg:w="23"/><text x="71.0106%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.05%)</title><rect x="70.7606%" y="645" width="0.0486%" height="15" fill="rgb(205,166,19)" fg:x="33503" fg:w="23"/><text x="71.0106%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.05%)</title><rect x="70.7606%" y="629" width="0.0486%" height="15" fill="rgb(244,198,16)" fg:x="33503" fg:w="23"/><text x="71.0106%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="70.8155%" y="645" width="0.0401%" height="15" fill="rgb(219,69,12)" fg:x="33529" fg:w="19"/><text x="71.0655%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (17 samples, 0.04%)</title><rect x="70.8197%" y="629" width="0.0359%" height="15" fill="rgb(245,30,7)" fg:x="33531" fg:w="17"/><text x="71.0697%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (17 samples, 0.04%)</title><rect x="70.8197%" y="613" width="0.0359%" height="15" fill="rgb(218,221,48)" fg:x="33531" fg:w="17"/><text x="71.0697%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (17 samples, 0.04%)</title><rect x="70.8197%" y="597" width="0.0359%" height="15" fill="rgb(216,66,15)" fg:x="33531" fg:w="17"/><text x="71.0697%" y="607.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (17 samples, 0.04%)</title><rect x="70.8197%" y="581" width="0.0359%" height="15" fill="rgb(226,122,50)" fg:x="33531" fg:w="17"/><text x="71.0697%" y="591.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (17 samples, 0.04%)</title><rect x="70.8197%" y="565" width="0.0359%" height="15" fill="rgb(239,156,16)" fg:x="33531" fg:w="17"/><text x="71.0697%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (12 samples, 0.03%)</title><rect x="70.8303%" y="549" width="0.0253%" height="15" fill="rgb(224,27,38)" fg:x="33536" fg:w="12"/><text x="71.0803%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (12 samples, 0.03%)</title><rect x="70.8303%" y="533" width="0.0253%" height="15" fill="rgb(224,39,27)" fg:x="33536" fg:w="12"/><text x="71.0803%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.03%)</title><rect x="70.8303%" y="517" width="0.0253%" height="15" fill="rgb(215,92,29)" fg:x="33536" fg:w="12"/><text x="71.0803%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.03%)</title><rect x="70.8303%" y="501" width="0.0253%" height="15" fill="rgb(207,159,16)" fg:x="33536" fg:w="12"/><text x="71.0803%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (35 samples, 0.07%)</title><rect x="70.8577%" y="629" width="0.0739%" height="15" fill="rgb(238,163,47)" fg:x="33549" fg:w="35"/><text x="71.1077%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (34 samples, 0.07%)</title><rect x="70.8598%" y="613" width="0.0718%" height="15" fill="rgb(219,91,49)" fg:x="33550" fg:w="34"/><text x="71.1098%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.07%)</title><rect x="70.8598%" y="597" width="0.0718%" height="15" fill="rgb(227,167,31)" fg:x="33550" fg:w="34"/><text x="71.1098%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (33 samples, 0.07%)</title><rect x="70.8619%" y="581" width="0.0697%" height="15" fill="rgb(234,80,54)" fg:x="33551" fg:w="33"/><text x="71.1119%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (33 samples, 0.07%)</title><rect x="70.8619%" y="565" width="0.0697%" height="15" fill="rgb(212,114,2)" fg:x="33551" fg:w="33"/><text x="71.1119%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (33 samples, 0.07%)</title><rect x="70.8619%" y="549" width="0.0697%" height="15" fill="rgb(234,50,24)" fg:x="33551" fg:w="33"/><text x="71.1119%" y="559.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (25 samples, 0.05%)</title><rect x="70.9316%" y="629" width="0.0528%" height="15" fill="rgb(221,68,8)" fg:x="33584" fg:w="25"/><text x="71.1816%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.05%)</title><rect x="70.9316%" y="613" width="0.0528%" height="15" fill="rgb(254,180,31)" fg:x="33584" fg:w="25"/><text x="71.1816%" y="623.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (22 samples, 0.05%)</title><rect x="70.9380%" y="597" width="0.0465%" height="15" fill="rgb(247,130,50)" fg:x="33587" fg:w="22"/><text x="71.1880%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (22 samples, 0.05%)</title><rect x="70.9380%" y="581" width="0.0465%" height="15" fill="rgb(211,109,4)" fg:x="33587" fg:w="22"/><text x="71.1880%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.05%)</title><rect x="70.9380%" y="565" width="0.0465%" height="15" fill="rgb(238,50,21)" fg:x="33587" fg:w="22"/><text x="71.1880%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;event_listener::EventListener&gt;&gt; (142 samples, 0.30%)</title><rect x="70.7268%" y="773" width="0.2999%" height="15" fill="rgb(225,57,45)" fg:x="33487" fg:w="142"/><text x="70.9768%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (142 samples, 0.30%)</title><rect x="70.7268%" y="757" width="0.2999%" height="15" fill="rgb(209,196,50)" fg:x="33487" fg:w="142"/><text x="70.9768%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (130 samples, 0.27%)</title><rect x="70.7521%" y="741" width="0.2746%" height="15" fill="rgb(242,140,13)" fg:x="33499" fg:w="130"/><text x="71.0021%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (130 samples, 0.27%)</title><rect x="70.7521%" y="725" width="0.2746%" height="15" fill="rgb(217,111,7)" fg:x="33499" fg:w="130"/><text x="71.0021%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (130 samples, 0.27%)</title><rect x="70.7521%" y="709" width="0.2746%" height="15" fill="rgb(253,193,51)" fg:x="33499" fg:w="130"/><text x="71.0021%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (126 samples, 0.27%)</title><rect x="70.7606%" y="693" width="0.2661%" height="15" fill="rgb(252,70,29)" fg:x="33503" fg:w="126"/><text x="71.0106%" y="703.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (102 samples, 0.22%)</title><rect x="70.8112%" y="677" width="0.2154%" height="15" fill="rgb(232,127,12)" fg:x="33527" fg:w="102"/><text x="71.0612%" y="687.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (102 samples, 0.22%)</title><rect x="70.8112%" y="661" width="0.2154%" height="15" fill="rgb(211,180,21)" fg:x="33527" fg:w="102"/><text x="71.0612%" y="671.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (81 samples, 0.17%)</title><rect x="70.8556%" y="645" width="0.1711%" height="15" fill="rgb(229,72,13)" fg:x="33548" fg:w="81"/><text x="71.1056%" y="655.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (20 samples, 0.04%)</title><rect x="70.9844%" y="629" width="0.0422%" height="15" fill="rgb(240,211,49)" fg:x="33609" fg:w="20"/><text x="71.2344%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (15 samples, 0.03%)</title><rect x="71.0309%" y="773" width="0.0317%" height="15" fill="rgb(219,149,40)" fg:x="33631" fg:w="15"/><text x="71.2809%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.03%)</title><rect x="71.0309%" y="757" width="0.0317%" height="15" fill="rgb(210,127,46)" fg:x="33631" fg:w="15"/><text x="71.2809%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.11%)</title><rect x="71.0689%" y="757" width="0.1098%" height="15" fill="rgb(220,106,7)" fg:x="33649" fg:w="52"/><text x="71.3189%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (51 samples, 0.11%)</title><rect x="71.0710%" y="741" width="0.1077%" height="15" fill="rgb(249,31,22)" fg:x="33650" fg:w="51"/><text x="71.3210%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (51 samples, 0.11%)</title><rect x="71.0710%" y="725" width="0.1077%" height="15" fill="rgb(253,1,49)" fg:x="33650" fg:w="51"/><text x="71.3210%" y="735.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="71.2252%" y="581" width="0.0106%" height="15" fill="rgb(227,144,33)" fg:x="33723" fg:w="5"/><text x="71.4752%" y="591.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="71.2252%" y="565" width="0.0106%" height="15" fill="rgb(249,163,44)" fg:x="33723" fg:w="5"/><text x="71.4752%" y="575.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="71.2252%" y="549" width="0.0106%" height="15" fill="rgb(234,15,39)" fg:x="33723" fg:w="5"/><text x="71.4752%" y="559.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="71.2252%" y="533" width="0.0106%" height="15" fill="rgb(207,66,16)" fg:x="33723" fg:w="5"/><text x="71.4752%" y="543.50"></text></g><g><title>_rjem_je_malloc_default (7 samples, 0.01%)</title><rect x="71.2252%" y="629" width="0.0148%" height="15" fill="rgb(233,112,24)" fg:x="33723" fg:w="7"/><text x="71.4752%" y="639.50"></text></g><g><title>imalloc (7 samples, 0.01%)</title><rect x="71.2252%" y="613" width="0.0148%" height="15" fill="rgb(230,90,22)" fg:x="33723" fg:w="7"/><text x="71.4752%" y="623.50"></text></g><g><title>imalloc_body (7 samples, 0.01%)</title><rect x="71.2252%" y="597" width="0.0148%" height="15" fill="rgb(229,61,13)" fg:x="33723" fg:w="7"/><text x="71.4752%" y="607.50"></text></g><g><title>cache_bin_alloc_easy (32 samples, 0.07%)</title><rect x="71.3794%" y="597" width="0.0676%" height="15" fill="rgb(225,57,24)" fg:x="33796" fg:w="32"/><text x="71.6294%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (32 samples, 0.07%)</title><rect x="71.3794%" y="581" width="0.0676%" height="15" fill="rgb(208,169,48)" fg:x="33796" fg:w="32"/><text x="71.6294%" y="591.50"></text></g><g><title>sz_index2size_lookup_impl (5 samples, 0.01%)</title><rect x="71.4470%" y="581" width="0.0106%" height="15" fill="rgb(244,218,51)" fg:x="33828" fg:w="5"/><text x="71.6970%" y="591.50"></text></g><g><title>__rust_alloc (112 samples, 0.24%)</title><rect x="71.2252%" y="661" width="0.2366%" height="15" fill="rgb(214,148,10)" fg:x="33723" fg:w="112"/><text x="71.4752%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.24%)</title><rect x="71.2252%" y="645" width="0.2366%" height="15" fill="rgb(225,174,27)" fg:x="33723" fg:w="112"/><text x="71.4752%" y="655.50"></text></g><g><title>_rjem_malloc (105 samples, 0.22%)</title><rect x="71.2400%" y="629" width="0.2218%" height="15" fill="rgb(230,96,26)" fg:x="33730" fg:w="105"/><text x="71.4900%" y="639.50"></text></g><g><title>imalloc_fastpath (105 samples, 0.22%)</title><rect x="71.2400%" y="613" width="0.2218%" height="15" fill="rgb(232,10,30)" fg:x="33730" fg:w="105"/><text x="71.4900%" y="623.50"></text></g><g><title>sz_size2index_usize_fastpath (7 samples, 0.01%)</title><rect x="71.4470%" y="597" width="0.0148%" height="15" fill="rgb(222,8,50)" fg:x="33828" fg:w="7"/><text x="71.6970%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (135 samples, 0.29%)</title><rect x="71.1787%" y="757" width="0.2851%" height="15" fill="rgb(213,81,27)" fg:x="33701" fg:w="135"/><text x="71.4287%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (135 samples, 0.29%)</title><rect x="71.1787%" y="741" width="0.2851%" height="15" fill="rgb(245,50,10)" fg:x="33701" fg:w="135"/><text x="71.4287%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (113 samples, 0.24%)</title><rect x="71.2252%" y="725" width="0.2387%" height="15" fill="rgb(216,100,18)" fg:x="33723" fg:w="113"/><text x="71.4752%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.24%)</title><rect x="71.2252%" y="709" width="0.2387%" height="15" fill="rgb(236,147,54)" fg:x="33723" fg:w="113"/><text x="71.4752%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.24%)</title><rect x="71.2252%" y="693" width="0.2387%" height="15" fill="rgb(205,143,26)" fg:x="33723" fg:w="113"/><text x="71.4752%" y="703.50"></text></g><g><title>alloc::alloc::alloc (113 samples, 0.24%)</title><rect x="71.2252%" y="677" width="0.2387%" height="15" fill="rgb(236,26,9)" fg:x="33723" fg:w="113"/><text x="71.4752%" y="687.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (9 samples, 0.02%)</title><rect x="71.4639%" y="757" width="0.0190%" height="15" fill="rgb(221,165,53)" fg:x="33836" fg:w="9"/><text x="71.7139%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (7 samples, 0.01%)</title><rect x="71.4681%" y="741" width="0.0148%" height="15" fill="rgb(214,110,17)" fg:x="33838" fg:w="7"/><text x="71.7181%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="71.4681%" y="725" width="0.0148%" height="15" fill="rgb(237,197,12)" fg:x="33838" fg:w="7"/><text x="71.7181%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (39 samples, 0.08%)</title><rect x="71.4977%" y="725" width="0.0824%" height="15" fill="rgb(205,84,17)" fg:x="33852" fg:w="39"/><text x="71.7477%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (37 samples, 0.08%)</title><rect x="71.5019%" y="709" width="0.0781%" height="15" fill="rgb(237,18,45)" fg:x="33854" fg:w="37"/><text x="71.7519%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.08%)</title><rect x="71.5019%" y="693" width="0.0781%" height="15" fill="rgb(221,87,14)" fg:x="33854" fg:w="37"/><text x="71.7519%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (37 samples, 0.08%)</title><rect x="71.5019%" y="677" width="0.0781%" height="15" fill="rgb(238,186,15)" fg:x="33854" fg:w="37"/><text x="71.7519%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (36 samples, 0.08%)</title><rect x="71.5040%" y="661" width="0.0760%" height="15" fill="rgb(208,115,11)" fg:x="33855" fg:w="36"/><text x="71.7540%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (36 samples, 0.08%)</title><rect x="71.5040%" y="645" width="0.0760%" height="15" fill="rgb(254,175,0)" fg:x="33855" fg:w="36"/><text x="71.7540%" y="655.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (276 samples, 0.58%)</title><rect x="71.0626%" y="773" width="0.5829%" height="15" fill="rgb(227,24,42)" fg:x="33646" fg:w="276"/><text x="71.3126%" y="783.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::listen (77 samples, 0.16%)</title><rect x="71.4829%" y="757" width="0.1626%" height="15" fill="rgb(223,211,37)" fg:x="33845" fg:w="77"/><text x="71.7329%" y="767.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert (77 samples, 0.16%)</title><rect x="71.4829%" y="741" width="0.1626%" height="15" fill="rgb(235,49,27)" fg:x="33845" fg:w="77"/><text x="71.7329%" y="751.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (31 samples, 0.07%)</title><rect x="71.5800%" y="725" width="0.0655%" height="15" fill="rgb(254,97,51)" fg:x="33891" fg:w="31"/><text x="71.8300%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.07%)</title><rect x="71.5800%" y="709" width="0.0655%" height="15" fill="rgb(249,51,40)" fg:x="33891" fg:w="31"/><text x="71.8300%" y="719.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (30 samples, 0.06%)</title><rect x="71.5821%" y="693" width="0.0634%" height="15" fill="rgb(210,128,45)" fg:x="33892" fg:w="30"/><text x="71.8321%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (30 samples, 0.06%)</title><rect x="71.5821%" y="677" width="0.0634%" height="15" fill="rgb(224,137,50)" fg:x="33892" fg:w="30"/><text x="71.8321%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.06%)</title><rect x="71.5821%" y="661" width="0.0634%" height="15" fill="rgb(242,15,9)" fg:x="33892" fg:w="30"/><text x="71.8321%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (27 samples, 0.06%)</title><rect x="71.6518%" y="725" width="0.0570%" height="15" fill="rgb(233,187,41)" fg:x="33925" fg:w="27"/><text x="71.9018%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.06%)</title><rect x="71.6518%" y="709" width="0.0570%" height="15" fill="rgb(227,2,29)" fg:x="33925" fg:w="27"/><text x="71.9018%" y="719.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (27 samples, 0.06%)</title><rect x="71.6518%" y="693" width="0.0570%" height="15" fill="rgb(222,70,3)" fg:x="33925" fg:w="27"/><text x="71.9018%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (27 samples, 0.06%)</title><rect x="71.6518%" y="677" width="0.0570%" height="15" fill="rgb(213,11,42)" fg:x="33925" fg:w="27"/><text x="71.9018%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (27 samples, 0.06%)</title><rect x="71.6518%" y="661" width="0.0570%" height="15" fill="rgb(225,150,9)" fg:x="33925" fg:w="27"/><text x="71.9018%" y="671.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (10 samples, 0.02%)</title><rect x="71.7089%" y="725" width="0.0211%" height="15" fill="rgb(230,162,45)" fg:x="33952" fg:w="10"/><text x="71.9589%" y="735.50"></text></g><g><title>flume::Receiver&lt;T&gt;::is_empty (137 samples, 0.29%)</title><rect x="71.6455%" y="773" width="0.2894%" height="15" fill="rgb(222,14,52)" fg:x="33922" fg:w="137"/><text x="71.8955%" y="783.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_empty (137 samples, 0.29%)</title><rect x="71.6455%" y="757" width="0.2894%" height="15" fill="rgb(254,198,14)" fg:x="33922" fg:w="137"/><text x="71.8955%" y="767.50"></text></g><g><title>flume::Shared&lt;T&gt;::len (137 samples, 0.29%)</title><rect x="71.6455%" y="741" width="0.2894%" height="15" fill="rgb(220,217,30)" fg:x="33922" fg:w="137"/><text x="71.8955%" y="751.50"></text></g><g><title>flume::wait_lock (97 samples, 0.20%)</title><rect x="71.7300%" y="725" width="0.2049%" height="15" fill="rgb(215,146,41)" fg:x="33962" fg:w="97"/><text x="71.9800%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (97 samples, 0.20%)</title><rect x="71.7300%" y="709" width="0.2049%" height="15" fill="rgb(217,27,36)" fg:x="33962" fg:w="97"/><text x="71.9800%" y="719.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (95 samples, 0.20%)</title><rect x="71.7342%" y="693" width="0.2006%" height="15" fill="rgb(219,218,39)" fg:x="33964" fg:w="95"/><text x="71.9842%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (95 samples, 0.20%)</title><rect x="71.7342%" y="677" width="0.2006%" height="15" fill="rgb(219,4,42)" fg:x="33964" fg:w="95"/><text x="71.9842%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (95 samples, 0.20%)</title><rect x="71.7342%" y="661" width="0.2006%" height="15" fill="rgb(249,119,36)" fg:x="33964" fg:w="95"/><text x="71.9842%" y="671.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (5 samples, 0.01%)</title><rect x="71.9602%" y="757" width="0.0106%" height="15" fill="rgb(209,23,33)" fg:x="34071" fg:w="5"/><text x="72.2102%" y="767.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="71.9602%" y="741" width="0.0106%" height="15" fill="rgb(211,10,0)" fg:x="34071" fg:w="5"/><text x="72.2102%" y="751.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (8 samples, 0.02%)</title><rect x="71.9940%" y="741" width="0.0169%" height="15" fill="rgb(208,99,37)" fg:x="34087" fg:w="8"/><text x="72.2440%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.02%)</title><rect x="71.9940%" y="725" width="0.0169%" height="15" fill="rgb(213,132,31)" fg:x="34087" fg:w="8"/><text x="72.2440%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.02%)</title><rect x="71.9940%" y="709" width="0.0169%" height="15" fill="rgb(243,129,40)" fg:x="34087" fg:w="8"/><text x="72.2440%" y="719.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.04%)</title><rect x="71.9708%" y="757" width="0.0444%" height="15" fill="rgb(210,66,33)" fg:x="34076" fg:w="21"/><text x="72.2208%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.01%)</title><rect x="72.0341%" y="677" width="0.0106%" height="15" fill="rgb(209,189,4)" fg:x="34106" fg:w="5"/><text x="72.2841%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="72.0341%" y="661" width="0.0106%" height="15" fill="rgb(214,107,37)" fg:x="34106" fg:w="5"/><text x="72.2841%" y="671.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="72.0341%" y="645" width="0.0106%" height="15" fill="rgb(245,88,54)" fg:x="34106" fg:w="5"/><text x="72.2841%" y="655.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketWrite&lt;A,B&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (16 samples, 0.03%)</title><rect x="72.0151%" y="757" width="0.0338%" height="15" fill="rgb(205,146,20)" fg:x="34097" fg:w="16"/><text x="72.2651%" y="767.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame::_{{closure}} (16 samples, 0.03%)</title><rect x="72.0151%" y="741" width="0.0338%" height="15" fill="rgb(220,161,25)" fg:x="34097" fg:w="16"/><text x="72.2651%" y="751.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (15 samples, 0.03%)</title><rect x="72.0172%" y="725" width="0.0317%" height="15" fill="rgb(215,152,15)" fg:x="34098" fg:w="15"/><text x="72.2672%" y="735.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (14 samples, 0.03%)</title><rect x="72.0193%" y="709" width="0.0296%" height="15" fill="rgb(233,192,44)" fg:x="34099" fg:w="14"/><text x="72.2693%" y="719.50"></text></g><g><title>fastwebsockets::frame::Frame::write (7 samples, 0.01%)</title><rect x="72.0341%" y="693" width="0.0148%" height="15" fill="rgb(240,170,46)" fg:x="34106" fg:w="7"/><text x="72.2841%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,505 samples, 3.18%)</title><rect x="68.8829%" y="837" width="3.1787%" height="15" fill="rgb(207,104,33)" fg:x="32614" fg:w="1505"/><text x="69.1329%" y="847.50">&lt;co..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1,505 samples, 3.18%)</title><rect x="68.8829%" y="821" width="3.1787%" height="15" fill="rgb(219,21,39)" fg:x="32614" fg:w="1505"/><text x="69.1329%" y="831.50">&lt;fu..</text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::into_inner_stream::_{{closure}}::_{{closure}} (1,234 samples, 2.61%)</title><rect x="69.4553%" y="805" width="2.6063%" height="15" fill="rgb(214,133,29)" fg:x="32885" fg:w="1234"/><text x="69.7053%" y="815.50">wi..</text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}} (1,213 samples, 2.56%)</title><rect x="69.4997%" y="789" width="2.5619%" height="15" fill="rgb(226,93,6)" fg:x="32906" fg:w="1213"/><text x="69.7497%" y="799.50">wi..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_frame::_{{closure}} (57 samples, 0.12%)</title><rect x="71.9412%" y="773" width="0.1204%" height="15" fill="rgb(252,222,34)" fg:x="34062" fg:w="57"/><text x="72.1912%" y="783.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h4eb7268d3777a612E (5 samples, 0.01%)</title><rect x="72.0510%" y="757" width="0.0106%" height="15" fill="rgb(252,92,48)" fg:x="34114" fg:w="5"/><text x="72.3010%" y="767.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="72.0510%" y="741" width="0.0106%" height="15" fill="rgb(245,223,24)" fg:x="34114" fg:w="5"/><text x="72.3010%" y="751.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (5 samples, 0.01%)</title><rect x="72.0510%" y="725" width="0.0106%" height="15" fill="rgb(205,176,3)" fg:x="34114" fg:w="5"/><text x="72.3010%" y="735.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (1,540 samples, 3.25%)</title><rect x="68.8175%" y="917" width="3.2526%" height="15" fill="rgb(235,151,15)" fg:x="32583" fg:w="1540"/><text x="69.0675%" y="927.50">&lt;to..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (1,540 samples, 3.25%)</title><rect x="68.8175%" y="901" width="3.2526%" height="15" fill="rgb(237,209,11)" fg:x="32583" fg:w="1540"/><text x="69.0675%" y="911.50">&lt;wi..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (1,540 samples, 3.25%)</title><rect x="68.8175%" y="885" width="3.2526%" height="15" fill="rgb(243,227,24)" fg:x="32583" fg:w="1540"/><text x="69.0675%" y="895.50">&lt;fu..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1,509 samples, 3.19%)</title><rect x="68.8829%" y="869" width="3.1871%" height="15" fill="rgb(239,193,16)" fg:x="32614" fg:w="1509"/><text x="69.1329%" y="879.50">&lt;S ..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (1,509 samples, 3.19%)</title><rect x="68.8829%" y="853" width="3.1871%" height="15" fill="rgb(231,27,9)" fg:x="32614" fg:w="1509"/><text x="69.1329%" y="863.50">&lt;wi..</text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (1,546 samples, 3.27%)</title><rect x="68.8090%" y="933" width="3.2653%" height="15" fill="rgb(219,169,10)" fg:x="32579" fg:w="1546"/><text x="69.0590%" y="943.50">&lt;to..</text></g><g><title>[libc.so.6] (139 samples, 0.29%)</title><rect x="72.3847%" y="741" width="0.2936%" height="15" fill="rgb(244,229,43)" fg:x="34272" fg:w="139"/><text x="72.6347%" y="751.50"></text></g><g><title>__send (277 samples, 0.59%)</title><rect x="72.1503%" y="757" width="0.5850%" height="15" fill="rgb(254,38,20)" fg:x="34161" fg:w="277"/><text x="72.4003%" y="767.50"></text></g><g><title>[unknown] (27 samples, 0.06%)</title><rect x="72.6783%" y="741" width="0.0570%" height="15" fill="rgb(250,47,30)" fg:x="34411" fg:w="27"/><text x="72.9283%" y="751.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (282 samples, 0.60%)</title><rect x="72.1461%" y="853" width="0.5956%" height="15" fill="rgb(224,124,36)" fg:x="34159" fg:w="282"/><text x="72.3961%" y="863.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (282 samples, 0.60%)</title><rect x="72.1461%" y="837" width="0.5956%" height="15" fill="rgb(246,68,51)" fg:x="34159" fg:w="282"/><text x="72.3961%" y="847.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (282 samples, 0.60%)</title><rect x="72.1461%" y="821" width="0.5956%" height="15" fill="rgb(253,43,49)" fg:x="34159" fg:w="282"/><text x="72.3961%" y="831.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (282 samples, 0.60%)</title><rect x="72.1461%" y="805" width="0.5956%" height="15" fill="rgb(219,54,36)" fg:x="34159" fg:w="282"/><text x="72.3961%" y="815.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (282 samples, 0.60%)</title><rect x="72.1461%" y="789" width="0.5956%" height="15" fill="rgb(227,133,34)" fg:x="34159" fg:w="282"/><text x="72.3961%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::write (282 samples, 0.60%)</title><rect x="72.1461%" y="773" width="0.5956%" height="15" fill="rgb(247,227,15)" fg:x="34159" fg:w="282"/><text x="72.3961%" y="783.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (9 samples, 0.02%)</title><rect x="72.7628%" y="821" width="0.0190%" height="15" fill="rgb(229,96,14)" fg:x="34451" fg:w="9"/><text x="73.0128%" y="831.50"></text></g><g><title>tokio::runtime::context::budget (9 samples, 0.02%)</title><rect x="72.7628%" y="805" width="0.0190%" height="15" fill="rgb(220,79,17)" fg:x="34451" fg:w="9"/><text x="73.0128%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="72.7628%" y="789" width="0.0190%" height="15" fill="rgb(205,131,53)" fg:x="34451" fg:w="9"/><text x="73.0128%" y="799.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (7 samples, 0.01%)</title><rect x="72.7670%" y="773" width="0.0148%" height="15" fill="rgb(209,50,29)" fg:x="34453" fg:w="7"/><text x="73.0170%" y="783.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (7 samples, 0.01%)</title><rect x="72.7670%" y="757" width="0.0148%" height="15" fill="rgb(245,86,46)" fg:x="34453" fg:w="7"/><text x="73.0170%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.05%)</title><rect x="72.8093%" y="805" width="0.0465%" height="15" fill="rgb(235,66,46)" fg:x="34473" fg:w="22"/><text x="73.0593%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.05%)</title><rect x="72.8093%" y="789" width="0.0465%" height="15" fill="rgb(232,148,31)" fg:x="34473" fg:w="22"/><text x="73.0593%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="72.8557%" y="805" width="0.0106%" height="15" fill="rgb(217,149,8)" fg:x="34495" fg:w="5"/><text x="73.1057%" y="815.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.01%)</title><rect x="72.8557%" y="789" width="0.0106%" height="15" fill="rgb(209,183,11)" fg:x="34495" fg:w="5"/><text x="73.1057%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.01%)</title><rect x="72.8557%" y="773" width="0.0106%" height="15" fill="rgb(208,55,20)" fg:x="34495" fg:w="5"/><text x="73.1057%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (5 samples, 0.01%)</title><rect x="72.8557%" y="757" width="0.0106%" height="15" fill="rgb(218,39,14)" fg:x="34495" fg:w="5"/><text x="73.1057%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="72.8557%" y="741" width="0.0106%" height="15" fill="rgb(216,169,33)" fg:x="34495" fg:w="5"/><text x="73.1057%" y="751.50"></text></g><g><title>&lt;tokio::io::util::write::Write&lt;W&gt; as core::future::future::Future&gt;::poll (377 samples, 0.80%)</title><rect x="72.0743%" y="933" width="0.7962%" height="15" fill="rgb(233,80,24)" fg:x="34125" fg:w="377"/><text x="72.3243%" y="943.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (374 samples, 0.79%)</title><rect x="72.0806%" y="917" width="0.7899%" height="15" fill="rgb(213,179,31)" fg:x="34128" fg:w="374"/><text x="72.3306%" y="927.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (373 samples, 0.79%)</title><rect x="72.0827%" y="901" width="0.7878%" height="15" fill="rgb(209,19,5)" fg:x="34129" fg:w="373"/><text x="72.3327%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (371 samples, 0.78%)</title><rect x="72.0869%" y="885" width="0.7836%" height="15" fill="rgb(219,18,35)" fg:x="34131" fg:w="371"/><text x="72.3369%" y="895.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (356 samples, 0.75%)</title><rect x="72.1186%" y="869" width="0.7519%" height="15" fill="rgb(209,169,16)" fg:x="34146" fg:w="356"/><text x="72.3686%" y="879.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (58 samples, 0.12%)</title><rect x="72.7480%" y="853" width="0.1225%" height="15" fill="rgb(245,90,51)" fg:x="34444" fg:w="58"/><text x="72.9980%" y="863.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (55 samples, 0.12%)</title><rect x="72.7543%" y="837" width="0.1162%" height="15" fill="rgb(220,99,45)" fg:x="34447" fg:w="55"/><text x="73.0043%" y="847.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (42 samples, 0.09%)</title><rect x="72.7818%" y="821" width="0.0887%" height="15" fill="rgb(249,89,25)" fg:x="34460" fg:w="42"/><text x="73.0318%" y="831.50"></text></g><g><title>cache_bin_dalloc_easy (14 samples, 0.03%)</title><rect x="72.9381%" y="789" width="0.0296%" height="15" fill="rgb(239,193,0)" fg:x="34534" fg:w="14"/><text x="73.1881%" y="799.50"></text></g><g><title>_rjem_sdallocx (42 samples, 0.09%)</title><rect x="72.8874%" y="821" width="0.0887%" height="15" fill="rgb(231,126,1)" fg:x="34510" fg:w="42"/><text x="73.1374%" y="831.50"></text></g><g><title>free_fastpath (42 samples, 0.09%)</title><rect x="72.8874%" y="805" width="0.0887%" height="15" fill="rgb(243,166,3)" fg:x="34510" fg:w="42"/><text x="73.1374%" y="815.50"></text></g><g><title>inallocx (15 samples, 0.03%)</title><rect x="73.0648%" y="565" width="0.0317%" height="15" fill="rgb(223,22,34)" fg:x="34594" fg:w="15"/><text x="73.3148%" y="575.50"></text></g><g><title>aligned_usize_get (14 samples, 0.03%)</title><rect x="73.0669%" y="549" width="0.0296%" height="15" fill="rgb(251,52,51)" fg:x="34595" fg:w="14"/><text x="73.3169%" y="559.50"></text></g><g><title>sz_s2u (12 samples, 0.03%)</title><rect x="73.0712%" y="533" width="0.0253%" height="15" fill="rgb(221,165,28)" fg:x="34597" fg:w="12"/><text x="73.3212%" y="543.50"></text></g><g><title>sz_s2u_compute (12 samples, 0.03%)</title><rect x="73.0712%" y="517" width="0.0253%" height="15" fill="rgb(218,121,47)" fg:x="34597" fg:w="12"/><text x="73.3212%" y="527.50"></text></g><g><title>arena_decay_tick (6 samples, 0.01%)</title><rect x="73.1556%" y="485" width="0.0127%" height="15" fill="rgb(209,120,9)" fg:x="34637" fg:w="6"/><text x="73.4056%" y="495.50"></text></g><g><title>arena_decay_ticks (6 samples, 0.01%)</title><rect x="73.1556%" y="469" width="0.0127%" height="15" fill="rgb(236,68,12)" fg:x="34637" fg:w="6"/><text x="73.4056%" y="479.50"></text></g><g><title>ticker_geom_ticks (6 samples, 0.01%)</title><rect x="73.1556%" y="453" width="0.0127%" height="15" fill="rgb(225,194,26)" fg:x="34637" fg:w="6"/><text x="73.4056%" y="463.50"></text></g><g><title>arena_get_from_edata (151 samples, 0.32%)</title><rect x="73.1683%" y="485" width="0.3189%" height="15" fill="rgb(231,84,39)" fg:x="34643" fg:w="151"/><text x="73.4183%" y="495.50"></text></g><g><title>atomic_load_p (151 samples, 0.32%)</title><rect x="73.1683%" y="469" width="0.3189%" height="15" fill="rgb(210,11,45)" fg:x="34643" fg:w="151"/><text x="73.4183%" y="479.50"></text></g><g><title>arena_background_thread_inactivity_check (18 samples, 0.04%)</title><rect x="73.5041%" y="453" width="0.0380%" height="15" fill="rgb(224,54,52)" fg:x="34802" fg:w="18"/><text x="73.7541%" y="463.50"></text></g><g><title>background_thread_enabled (15 samples, 0.03%)</title><rect x="73.5105%" y="437" width="0.0317%" height="15" fill="rgb(238,102,14)" fg:x="34805" fg:w="15"/><text x="73.7605%" y="447.50"></text></g><g><title>atomic_load_b (15 samples, 0.03%)</title><rect x="73.5105%" y="421" width="0.0317%" height="15" fill="rgb(243,160,52)" fg:x="34805" fg:w="15"/><text x="73.7605%" y="431.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (28 samples, 0.06%)</title><rect x="73.4915%" y="469" width="0.0591%" height="15" fill="rgb(216,114,19)" fg:x="34796" fg:w="28"/><text x="73.7415%" y="479.50"></text></g><g><title>_rjem_je_emap_remap (14 samples, 0.03%)</title><rect x="73.5675%" y="453" width="0.0296%" height="15" fill="rgb(244,166,37)" fg:x="34832" fg:w="14"/><text x="73.8175%" y="463.50"></text></g><g><title>edata_szind_set (6 samples, 0.01%)</title><rect x="73.5971%" y="453" width="0.0127%" height="15" fill="rgb(246,29,44)" fg:x="34846" fg:w="6"/><text x="73.8471%" y="463.50"></text></g><g><title>pa_get_pai (5 samples, 0.01%)</title><rect x="73.6097%" y="453" width="0.0106%" height="15" fill="rgb(215,56,53)" fg:x="34852" fg:w="5"/><text x="73.8597%" y="463.50"></text></g><g><title>pa_nactive_sub (90 samples, 0.19%)</title><rect x="73.6203%" y="453" width="0.1901%" height="15" fill="rgb(217,60,2)" fg:x="34857" fg:w="90"/><text x="73.8703%" y="463.50"></text></g><g><title>atomic_fetch_sub_zu (90 samples, 0.19%)</title><rect x="73.6203%" y="437" width="0.1901%" height="15" fill="rgb(207,26,24)" fg:x="34857" fg:w="90"/><text x="73.8703%" y="447.50"></text></g><g><title>_rjem_je_pa_dalloc (136 samples, 0.29%)</title><rect x="73.5506%" y="469" width="0.2872%" height="15" fill="rgb(252,210,15)" fg:x="34824" fg:w="136"/><text x="73.8006%" y="479.50"></text></g><g><title>pai_dalloc (13 samples, 0.03%)</title><rect x="73.8104%" y="453" width="0.0275%" height="15" fill="rgb(253,209,26)" fg:x="34947" fg:w="13"/><text x="74.0604%" y="463.50"></text></g><g><title>[libc.so.6] (50 samples, 0.11%)</title><rect x="73.8505%" y="453" width="0.1056%" height="15" fill="rgb(238,170,14)" fg:x="34966" fg:w="50"/><text x="74.1005%" y="463.50"></text></g><g><title>_rjem_je_ecache_dalloc (11 samples, 0.02%)</title><rect x="73.9561%" y="453" width="0.0232%" height="15" fill="rgb(216,178,15)" fg:x="35016" fg:w="11"/><text x="74.2061%" y="463.50"></text></g><g><title>edata_base_get (7 samples, 0.01%)</title><rect x="73.9646%" y="437" width="0.0148%" height="15" fill="rgb(250,197,2)" fg:x="35020" fg:w="7"/><text x="74.2146%" y="447.50"></text></g><g><title>edata_state_set (5 samples, 0.01%)</title><rect x="74.0702%" y="389" width="0.0106%" height="15" fill="rgb(212,70,42)" fg:x="35070" fg:w="5"/><text x="74.3202%" y="399.50"></text></g><g><title>rtree_leaf_elm_lookup (6 samples, 0.01%)</title><rect x="74.0807%" y="389" width="0.0127%" height="15" fill="rgb(227,213,9)" fg:x="35075" fg:w="6"/><text x="74.3307%" y="399.50"></text></g><g><title>_rjem_je_emap_update_edata_state (27 samples, 0.06%)</title><rect x="74.0406%" y="405" width="0.0570%" height="15" fill="rgb(245,99,25)" fg:x="35056" fg:w="27"/><text x="74.2906%" y="415.50"></text></g><g><title>_rjem_je_edata_heap_empty (26 samples, 0.05%)</title><rect x="74.1441%" y="389" width="0.0549%" height="15" fill="rgb(250,82,29)" fg:x="35105" fg:w="26"/><text x="74.3941%" y="399.50"></text></g><g><title>edata_heap_ph_cmp (28 samples, 0.06%)</title><rect x="74.2412%" y="357" width="0.0591%" height="15" fill="rgb(241,226,54)" fg:x="35151" fg:w="28"/><text x="74.4912%" y="367.50"></text></g><g><title>edata_snad_comp (28 samples, 0.06%)</title><rect x="74.2412%" y="341" width="0.0591%" height="15" fill="rgb(221,99,41)" fg:x="35151" fg:w="28"/><text x="74.4912%" y="351.50"></text></g><g><title>edata_cmp_summary_get (25 samples, 0.05%)</title><rect x="74.2476%" y="325" width="0.0528%" height="15" fill="rgb(213,90,21)" fg:x="35154" fg:w="25"/><text x="74.4976%" y="335.50"></text></g><g><title>edata_sn_get (25 samples, 0.05%)</title><rect x="74.2476%" y="309" width="0.0528%" height="15" fill="rgb(205,208,24)" fg:x="35154" fg:w="25"/><text x="74.4976%" y="319.50"></text></g><g><title>_rjem_je_edata_heap_insert (53 samples, 0.11%)</title><rect x="74.1990%" y="389" width="0.1119%" height="15" fill="rgb(246,31,12)" fg:x="35131" fg:w="53"/><text x="74.4490%" y="399.50"></text></g><g><title>ph_insert (46 samples, 0.10%)</title><rect x="74.2138%" y="373" width="0.0972%" height="15" fill="rgb(213,154,6)" fg:x="35138" fg:w="46"/><text x="74.4638%" y="383.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (20 samples, 0.04%)</title><rect x="74.3109%" y="389" width="0.0422%" height="15" fill="rgb(222,163,29)" fg:x="35184" fg:w="20"/><text x="74.5609%" y="399.50"></text></g><g><title>sz_psz2ind (5 samples, 0.01%)</title><rect x="74.3426%" y="373" width="0.0106%" height="15" fill="rgb(227,201,8)" fg:x="35199" fg:w="5"/><text x="74.5926%" y="383.50"></text></g><g><title>edata_list_inactive_append (22 samples, 0.05%)</title><rect x="74.3659%" y="389" width="0.0465%" height="15" fill="rgb(233,9,32)" fg:x="35210" fg:w="22"/><text x="74.6159%" y="399.50"></text></g><g><title>atomic_load_zu (8 samples, 0.02%)</title><rect x="74.4123%" y="373" width="0.0169%" height="15" fill="rgb(217,54,24)" fg:x="35232" fg:w="8"/><text x="74.6623%" y="383.50"></text></g><g><title>eset_stats_add (9 samples, 0.02%)</title><rect x="74.4123%" y="389" width="0.0190%" height="15" fill="rgb(235,192,0)" fg:x="35232" fg:w="9"/><text x="74.6623%" y="399.50"></text></g><g><title>fb_set (5 samples, 0.01%)</title><rect x="74.4313%" y="389" width="0.0106%" height="15" fill="rgb(235,45,9)" fg:x="35241" fg:w="5"/><text x="74.6813%" y="399.50"></text></g><g><title>extent_deactivate_locked (210 samples, 0.44%)</title><rect x="74.0321%" y="437" width="0.4435%" height="15" fill="rgb(246,42,40)" fg:x="35052" fg:w="210"/><text x="74.2821%" y="447.50"></text></g><g><title>extent_deactivate_locked_impl (210 samples, 0.44%)</title><rect x="74.0321%" y="421" width="0.4435%" height="15" fill="rgb(248,111,24)" fg:x="35052" fg:w="210"/><text x="74.2821%" y="431.50"></text></g><g><title>_rjem_je_eset_insert (179 samples, 0.38%)</title><rect x="74.0976%" y="405" width="0.3781%" height="15" fill="rgb(249,65,22)" fg:x="35083" fg:w="179"/><text x="74.3476%" y="415.50"></text></g><g><title>sz_psz2ind (16 samples, 0.03%)</title><rect x="74.4419%" y="389" width="0.0338%" height="15" fill="rgb(238,111,51)" fg:x="35246" fg:w="16"/><text x="74.6919%" y="399.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (5 samples, 0.01%)</title><rect x="74.4884%" y="421" width="0.0106%" height="15" fill="rgb(250,118,22)" fg:x="35268" fg:w="5"/><text x="74.7384%" y="431.50"></text></g><g><title>rtree_leaf_elm_lookup (12 samples, 0.03%)</title><rect x="74.7059%" y="357" width="0.0253%" height="15" fill="rgb(234,84,26)" fg:x="35371" fg:w="12"/><text x="74.9559%" y="367.50"></text></g><g><title>rtree_leaf_elm_state_update (28 samples, 0.06%)</title><rect x="74.7312%" y="357" width="0.0591%" height="15" fill="rgb(243,172,12)" fg:x="35383" fg:w="28"/><text x="74.9812%" y="367.50"></text></g><g><title>rtree_leaf_elm_bits_read (23 samples, 0.05%)</title><rect x="74.7418%" y="341" width="0.0486%" height="15" fill="rgb(236,150,49)" fg:x="35388" fg:w="23"/><text x="74.9918%" y="351.50"></text></g><g><title>atomic_load_p (23 samples, 0.05%)</title><rect x="74.7418%" y="325" width="0.0486%" height="15" fill="rgb(225,197,26)" fg:x="35388" fg:w="23"/><text x="74.9918%" y="335.50"></text></g><g><title>_rjem_je_emap_update_edata_state (51 samples, 0.11%)</title><rect x="74.6848%" y="373" width="0.1077%" height="15" fill="rgb(214,17,42)" fg:x="35361" fg:w="51"/><text x="74.9348%" y="383.50"></text></g><g><title>edata_past_get (5 samples, 0.01%)</title><rect x="74.7925%" y="373" width="0.0106%" height="15" fill="rgb(224,165,40)" fg:x="35412" fg:w="5"/><text x="75.0425%" y="383.50"></text></g><g><title>edata_committed_get (45 samples, 0.10%)</title><rect x="74.8685%" y="357" width="0.0950%" height="15" fill="rgb(246,100,4)" fg:x="35448" fg:w="45"/><text x="75.1185%" y="367.50"></text></g><g><title>extent_can_acquire_neighbor (85 samples, 0.18%)</title><rect x="74.8030%" y="373" width="0.1795%" height="15" fill="rgb(222,103,0)" fg:x="35417" fg:w="85"/><text x="75.0530%" y="383.50"></text></g><g><title>extent_neighbor_head_state_mergeable (7 samples, 0.01%)</title><rect x="74.9678%" y="357" width="0.0148%" height="15" fill="rgb(227,189,26)" fg:x="35495" fg:w="7"/><text x="75.2178%" y="367.50"></text></g><g><title>rtree_leaf_elm_lookup (20 samples, 0.04%)</title><rect x="74.9826%" y="373" width="0.0422%" height="15" fill="rgb(214,202,17)" fg:x="35502" fg:w="20"/><text x="75.2326%" y="383.50"></text></g><g><title>rtree_leaf_elm_bits_decode (8 samples, 0.02%)</title><rect x="75.0248%" y="357" width="0.0169%" height="15" fill="rgb(229,111,3)" fg:x="35522" fg:w="8"/><text x="75.2748%" y="367.50"></text></g><g><title>rtree_leaf_elm_read (89 samples, 0.19%)</title><rect x="75.0248%" y="373" width="0.1880%" height="15" fill="rgb(229,172,15)" fg:x="35522" fg:w="89"/><text x="75.2748%" y="383.50"></text></g><g><title>rtree_leaf_elm_bits_read (81 samples, 0.17%)</title><rect x="75.0417%" y="357" width="0.1711%" height="15" fill="rgb(230,224,35)" fg:x="35530" fg:w="81"/><text x="75.2917%" y="367.50"></text></g><g><title>atomic_load_p (81 samples, 0.17%)</title><rect x="75.0417%" y="341" width="0.1711%" height="15" fill="rgb(251,141,6)" fg:x="35530" fg:w="81"/><text x="75.2917%" y="351.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (310 samples, 0.65%)</title><rect x="74.5686%" y="405" width="0.6547%" height="15" fill="rgb(225,208,6)" fg:x="35306" fg:w="310"/><text x="74.8186%" y="415.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (302 samples, 0.64%)</title><rect x="74.5855%" y="389" width="0.6378%" height="15" fill="rgb(246,181,16)" fg:x="35314" fg:w="302"/><text x="74.8355%" y="399.50"></text></g><g><title>tsdn_rtree_ctx (5 samples, 0.01%)</title><rect x="75.2128%" y="373" width="0.0106%" height="15" fill="rgb(227,129,36)" fg:x="35611" fg:w="5"/><text x="75.4628%" y="383.50"></text></g><g><title>_rjem_je_edata_heap_first (5 samples, 0.01%)</title><rect x="75.2614%" y="373" width="0.0106%" height="15" fill="rgb(248,117,24)" fg:x="35634" fg:w="5"/><text x="75.5114%" y="383.50"></text></g><g><title>ph_merge_children (9 samples, 0.02%)</title><rect x="75.3395%" y="341" width="0.0190%" height="15" fill="rgb(214,185,35)" fg:x="35671" fg:w="9"/><text x="75.5895%" y="351.50"></text></g><g><title>phn_merge_siblings (8 samples, 0.02%)</title><rect x="75.3416%" y="325" width="0.0169%" height="15" fill="rgb(236,150,34)" fg:x="35672" fg:w="8"/><text x="75.5916%" y="335.50"></text></g><g><title>phn_next_get (8 samples, 0.02%)</title><rect x="75.3416%" y="309" width="0.0169%" height="15" fill="rgb(243,228,27)" fg:x="35672" fg:w="8"/><text x="75.5916%" y="319.50"></text></g><g><title>_rjem_je_edata_heap_remove (49 samples, 0.10%)</title><rect x="75.2719%" y="373" width="0.1035%" height="15" fill="rgb(245,77,44)" fg:x="35639" fg:w="49"/><text x="75.5219%" y="383.50"></text></g><g><title>ph_remove (39 samples, 0.08%)</title><rect x="75.2930%" y="357" width="0.0824%" height="15" fill="rgb(235,214,42)" fg:x="35649" fg:w="39"/><text x="75.5430%" y="367.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (54 samples, 0.11%)</title><rect x="75.3754%" y="373" width="0.1141%" height="15" fill="rgb(221,74,3)" fg:x="35688" fg:w="54"/><text x="75.6254%" y="383.50"></text></g><g><title>sz_psz2ind (14 samples, 0.03%)</title><rect x="75.4599%" y="357" width="0.0296%" height="15" fill="rgb(206,121,29)" fg:x="35728" fg:w="14"/><text x="75.7099%" y="367.50"></text></g><g><title>lg_ceil (5 samples, 0.01%)</title><rect x="75.4789%" y="341" width="0.0106%" height="15" fill="rgb(249,131,53)" fg:x="35737" fg:w="5"/><text x="75.7289%" y="351.50"></text></g><g><title>edata_list_inactive_remove (26 samples, 0.05%)</title><rect x="75.5000%" y="373" width="0.0549%" height="15" fill="rgb(236,170,29)" fg:x="35747" fg:w="26"/><text x="75.7500%" y="383.50"></text></g><g><title>atomic_load_zu (47 samples, 0.10%)</title><rect x="75.5592%" y="357" width="0.0993%" height="15" fill="rgb(247,96,15)" fg:x="35775" fg:w="47"/><text x="75.8092%" y="367.50"></text></g><g><title>eset_stats_sub (48 samples, 0.10%)</title><rect x="75.5592%" y="373" width="0.1014%" height="15" fill="rgb(211,210,7)" fg:x="35775" fg:w="48"/><text x="75.8092%" y="383.50"></text></g><g><title>_rjem_je_eset_remove (222 samples, 0.47%)</title><rect x="75.2424%" y="389" width="0.4689%" height="15" fill="rgb(240,88,50)" fg:x="35625" fg:w="222"/><text x="75.4924%" y="399.50"></text></g><g><title>sz_psz2ind (20 samples, 0.04%)</title><rect x="75.6690%" y="373" width="0.0422%" height="15" fill="rgb(209,229,26)" fg:x="35827" fg:w="20"/><text x="75.9190%" y="383.50"></text></g><g><title>atomic_load_p (7 samples, 0.01%)</title><rect x="75.7830%" y="325" width="0.0148%" height="15" fill="rgb(210,68,23)" fg:x="35881" fg:w="7"/><text x="76.0330%" y="335.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (27 samples, 0.06%)</title><rect x="75.7535%" y="357" width="0.0570%" height="15" fill="rgb(229,180,13)" fg:x="35867" fg:w="27"/><text x="76.0035%" y="367.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (27 samples, 0.06%)</title><rect x="75.7535%" y="341" width="0.0570%" height="15" fill="rgb(236,53,44)" fg:x="35867" fg:w="27"/><text x="76.0035%" y="351.50"></text></g><g><title>extent_in_dss_helper (6 samples, 0.01%)</title><rect x="75.7978%" y="325" width="0.0127%" height="15" fill="rgb(244,214,29)" fg:x="35888" fg:w="6"/><text x="76.0478%" y="335.50"></text></g><g><title>ehooks_merge (43 samples, 0.09%)</title><rect x="75.7408%" y="373" width="0.0908%" height="15" fill="rgb(220,75,29)" fg:x="35861" fg:w="43"/><text x="75.9908%" y="383.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (10 samples, 0.02%)</title><rect x="75.8105%" y="357" width="0.0211%" height="15" fill="rgb(214,183,37)" fg:x="35894" fg:w="10"/><text x="76.0605%" y="367.50"></text></g><g><title>atomic_load_p (10 samples, 0.02%)</title><rect x="75.8105%" y="341" width="0.0211%" height="15" fill="rgb(239,117,29)" fg:x="35894" fg:w="10"/><text x="76.0605%" y="351.50"></text></g><g><title>[libc.so.6] (73 samples, 0.15%)</title><rect x="75.8612%" y="357" width="0.1542%" height="15" fill="rgb(237,171,35)" fg:x="35918" fg:w="73"/><text x="76.1112%" y="367.50"></text></g><g><title>edata_avail_ph_cmp (36 samples, 0.08%)</title><rect x="76.0576%" y="309" width="0.0760%" height="15" fill="rgb(229,178,53)" fg:x="36011" fg:w="36"/><text x="76.3076%" y="319.50"></text></g><g><title>edata_esnead_comp (36 samples, 0.08%)</title><rect x="76.0576%" y="293" width="0.0760%" height="15" fill="rgb(210,102,19)" fg:x="36011" fg:w="36"/><text x="76.3076%" y="303.50"></text></g><g><title>edata_esn_comp (28 samples, 0.06%)</title><rect x="76.0745%" y="277" width="0.0591%" height="15" fill="rgb(235,127,22)" fg:x="36019" fg:w="28"/><text x="76.3245%" y="287.50"></text></g><g><title>edata_esn_get (26 samples, 0.05%)</title><rect x="76.0787%" y="261" width="0.0549%" height="15" fill="rgb(244,31,31)" fg:x="36021" fg:w="26"/><text x="76.3287%" y="271.50"></text></g><g><title>edata_avail_ph_cmp (16 samples, 0.03%)</title><rect x="76.1548%" y="277" width="0.0338%" height="15" fill="rgb(231,43,21)" fg:x="36057" fg:w="16"/><text x="76.4048%" y="287.50"></text></g><g><title>edata_esnead_comp (16 samples, 0.03%)</title><rect x="76.1548%" y="261" width="0.0338%" height="15" fill="rgb(217,131,35)" fg:x="36057" fg:w="16"/><text x="76.4048%" y="271.50"></text></g><g><title>edata_esn_comp (14 samples, 0.03%)</title><rect x="76.1590%" y="245" width="0.0296%" height="15" fill="rgb(221,149,4)" fg:x="36059" fg:w="14"/><text x="76.4090%" y="255.50"></text></g><g><title>edata_esn_get (13 samples, 0.03%)</title><rect x="76.1611%" y="229" width="0.0275%" height="15" fill="rgb(232,170,28)" fg:x="36060" fg:w="13"/><text x="76.4111%" y="239.50"></text></g><g><title>phn_merge (30 samples, 0.06%)</title><rect x="76.1505%" y="293" width="0.0634%" height="15" fill="rgb(238,56,10)" fg:x="36055" fg:w="30"/><text x="76.4005%" y="303.50"></text></g><g><title>phn_merge_ordered (12 samples, 0.03%)</title><rect x="76.1886%" y="277" width="0.0253%" height="15" fill="rgb(235,196,14)" fg:x="36073" fg:w="12"/><text x="76.4386%" y="287.50"></text></g><g><title>phn_prev_set (7 samples, 0.01%)</title><rect x="76.1991%" y="261" width="0.0148%" height="15" fill="rgb(216,45,48)" fg:x="36078" fg:w="7"/><text x="76.4491%" y="271.50"></text></g><g><title>ph_try_aux_merge_pair (51 samples, 0.11%)</title><rect x="76.1337%" y="309" width="0.1077%" height="15" fill="rgb(238,213,17)" fg:x="36047" fg:w="51"/><text x="76.3837%" y="319.50"></text></g><g><title>phn_prev_set (9 samples, 0.02%)</title><rect x="76.2224%" y="293" width="0.0190%" height="15" fill="rgb(212,13,2)" fg:x="36089" fg:w="9"/><text x="76.4724%" y="303.50"></text></g><g><title>_rjem_je_edata_avail_insert (104 samples, 0.22%)</title><rect x="76.0365%" y="341" width="0.2197%" height="15" fill="rgb(240,114,20)" fg:x="36001" fg:w="104"/><text x="76.2865%" y="351.50"></text></g><g><title>ph_insert (102 samples, 0.22%)</title><rect x="76.0407%" y="325" width="0.2154%" height="15" fill="rgb(228,41,40)" fg:x="36003" fg:w="102"/><text x="76.2907%" y="335.50"></text></g><g><title>pthread_mutex_trylock (73 samples, 0.15%)</title><rect x="76.2730%" y="309" width="0.1542%" height="15" fill="rgb(244,132,35)" fg:x="36113" fg:w="73"/><text x="76.5230%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (79 samples, 0.17%)</title><rect x="76.2625%" y="325" width="0.1669%" height="15" fill="rgb(253,189,4)" fg:x="36108" fg:w="79"/><text x="76.5125%" y="335.50"></text></g><g><title>_rjem_je_edata_cache_put (199 samples, 0.42%)</title><rect x="76.0154%" y="357" width="0.4203%" height="15" fill="rgb(224,37,19)" fg:x="35991" fg:w="199"/><text x="76.2654%" y="367.50"></text></g><g><title>malloc_mutex_lock (82 samples, 0.17%)</title><rect x="76.2625%" y="341" width="0.1732%" height="15" fill="rgb(235,223,18)" fg:x="36108" fg:w="82"/><text x="76.5125%" y="351.50"></text></g><g><title>emap_rtree_write_acquired (6 samples, 0.01%)</title><rect x="76.4462%" y="341" width="0.0127%" height="15" fill="rgb(235,163,25)" fg:x="36195" fg:w="6"/><text x="76.6962%" y="351.50"></text></g><g><title>_rjem_je_emap_merge_commit (13 samples, 0.03%)</title><rect x="76.4357%" y="357" width="0.0275%" height="15" fill="rgb(217,145,28)" fg:x="36190" fg:w="13"/><text x="76.6857%" y="367.50"></text></g><g><title>_rjem_je_emap_merge_prepare (28 samples, 0.06%)</title><rect x="76.4631%" y="357" width="0.0591%" height="15" fill="rgb(223,223,32)" fg:x="36203" fg:w="28"/><text x="76.7131%" y="367.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (20 samples, 0.04%)</title><rect x="76.4800%" y="341" width="0.0422%" height="15" fill="rgb(227,189,39)" fg:x="36211" fg:w="20"/><text x="76.7300%" y="351.50"></text></g><g><title>rtree_leaf_elm_lookup (15 samples, 0.03%)</title><rect x="76.4906%" y="325" width="0.0317%" height="15" fill="rgb(248,10,22)" fg:x="36216" fg:w="15"/><text x="76.7406%" y="335.50"></text></g><g><title>pthread_mutex_unlock (40 samples, 0.08%)</title><rect x="76.5286%" y="357" width="0.0845%" height="15" fill="rgb(248,46,39)" fg:x="36234" fg:w="40"/><text x="76.7786%" y="367.50"></text></g><g><title>extent_try_coalesce_large (1,021 samples, 2.16%)</title><rect x="74.4757%" y="437" width="2.1564%" height="15" fill="rgb(248,113,48)" fg:x="35262" fg:w="1021"/><text x="74.7257%" y="447.50">e..</text></g><g><title>extent_try_coalesce_impl (1,010 samples, 2.13%)</title><rect x="74.4989%" y="421" width="2.1332%" height="15" fill="rgb(245,16,25)" fg:x="35273" fg:w="1010"/><text x="74.7489%" y="431.50">e..</text></g><g><title>extent_coalesce (666 samples, 1.41%)</title><rect x="75.2255%" y="405" width="1.4066%" height="15" fill="rgb(249,152,16)" fg:x="35617" fg:w="666"/><text x="75.4755%" y="415.50"></text></g><g><title>extent_merge_impl (436 samples, 0.92%)</title><rect x="75.7112%" y="389" width="0.9209%" height="15" fill="rgb(250,16,1)" fg:x="35847" fg:w="436"/><text x="75.9612%" y="399.50"></text></g><g><title>extent_merge_impl (379 samples, 0.80%)</title><rect x="75.8316%" y="373" width="0.8005%" height="15" fill="rgb(249,138,3)" fg:x="35904" fg:w="379"/><text x="76.0816%" y="383.50"></text></g><g><title>pthread_mutex_unlock@plt (9 samples, 0.02%)</title><rect x="76.6131%" y="357" width="0.0190%" height="15" fill="rgb(227,71,41)" fg:x="36274" fg:w="9"/><text x="76.8631%" y="367.50"></text></g><g><title>malloc_mutex_trylock_final (7 samples, 0.01%)</title><rect x="76.6427%" y="405" width="0.0148%" height="15" fill="rgb(209,184,23)" fg:x="36288" fg:w="7"/><text x="76.8927%" y="415.50"></text></g><g><title>pthread_mutex_trylock (7 samples, 0.01%)</title><rect x="76.6427%" y="389" width="0.0148%" height="15" fill="rgb(223,215,31)" fg:x="36288" fg:w="7"/><text x="76.8927%" y="399.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (23 samples, 0.05%)</title><rect x="76.6321%" y="421" width="0.0486%" height="15" fill="rgb(210,146,28)" fg:x="36283" fg:w="23"/><text x="76.8821%" y="431.50"></text></g><g><title>spin_cpu_spinwait (11 samples, 0.02%)</title><rect x="76.6574%" y="405" width="0.0232%" height="15" fill="rgb(209,183,41)" fg:x="36295" fg:w="11"/><text x="76.9074%" y="415.50"></text></g><g><title>pthread_mutex_trylock (137 samples, 0.29%)</title><rect x="76.6828%" y="405" width="0.2894%" height="15" fill="rgb(209,224,45)" fg:x="36307" fg:w="137"/><text x="76.9328%" y="415.50"></text></g><g><title>malloc_mutex_trylock_final (159 samples, 0.34%)</title><rect x="76.6807%" y="421" width="0.3358%" height="15" fill="rgb(224,209,51)" fg:x="36306" fg:w="159"/><text x="76.9307%" y="431.50"></text></g><g><title>pthread_mutex_trylock@plt (21 samples, 0.04%)</title><rect x="76.9721%" y="405" width="0.0444%" height="15" fill="rgb(223,17,39)" fg:x="36444" fg:w="21"/><text x="77.2221%" y="415.50"></text></g><g><title>malloc_mutex_lock (183 samples, 0.39%)</title><rect x="76.6321%" y="437" width="0.3865%" height="15" fill="rgb(234,204,37)" fg:x="36283" fg:w="183"/><text x="76.8821%" y="447.50"></text></g><g><title>_rjem_je_extent_record (1,441 samples, 3.04%)</title><rect x="73.9836%" y="453" width="3.0435%" height="15" fill="rgb(236,120,5)" fg:x="35029" fg:w="1441"/><text x="74.2336%" y="463.50">_rj..</text></g><g><title>pac_ehooks_get (18 samples, 0.04%)</title><rect x="77.0271%" y="453" width="0.0380%" height="15" fill="rgb(248,97,27)" fg:x="36470" fg:w="18"/><text x="77.2771%" y="463.50"></text></g><g><title>_rjem_je_base_ehooks_get (7 samples, 0.01%)</title><rect x="77.0503%" y="437" width="0.0148%" height="15" fill="rgb(240,66,17)" fg:x="36481" fg:w="7"/><text x="77.3003%" y="447.50"></text></g><g><title>large_dalloc_finish_impl (1,701 samples, 3.59%)</title><rect x="73.4872%" y="485" width="3.5926%" height="15" fill="rgb(210,79,3)" fg:x="34794" fg:w="1701"/><text x="73.7372%" y="495.50">larg..</text></g><g><title>pac_dalloc_impl (1,535 samples, 3.24%)</title><rect x="73.8378%" y="469" width="3.2420%" height="15" fill="rgb(214,176,27)" fg:x="34960" fg:w="1535"/><text x="74.0878%" y="479.50">pac..</text></g><g><title>pthread_mutex_unlock (7 samples, 0.01%)</title><rect x="77.0651%" y="453" width="0.0148%" height="15" fill="rgb(235,185,3)" fg:x="36488" fg:w="7"/><text x="77.3151%" y="463.50"></text></g><g><title>locked_inc_u64 (84 samples, 0.18%)</title><rect x="77.1728%" y="437" width="0.1774%" height="15" fill="rgb(227,24,12)" fg:x="36539" fg:w="84"/><text x="77.4228%" y="447.50"></text></g><g><title>atomic_fetch_add_u64 (84 samples, 0.18%)</title><rect x="77.1728%" y="421" width="0.1774%" height="15" fill="rgb(252,169,48)" fg:x="36539" fg:w="84"/><text x="77.4228%" y="431.50"></text></g><g><title>arena_large_dalloc_stats_update (108 samples, 0.23%)</title><rect x="77.1665%" y="453" width="0.2281%" height="15" fill="rgb(212,65,1)" fg:x="36536" fg:w="108"/><text x="77.4165%" y="463.50"></text></g><g><title>sz_size2index (21 samples, 0.04%)</title><rect x="77.3502%" y="437" width="0.0444%" height="15" fill="rgb(242,39,24)" fg:x="36623" fg:w="21"/><text x="77.6002%" y="447.50"></text></g><g><title>sz_size2index_compute (21 samples, 0.04%)</title><rect x="77.3502%" y="421" width="0.0444%" height="15" fill="rgb(249,32,23)" fg:x="36623" fg:w="21"/><text x="77.6002%" y="431.50"></text></g><g><title>_rjem_je_large_dalloc (2,020 samples, 4.27%)</title><rect x="73.1451%" y="501" width="4.2664%" height="15" fill="rgb(251,195,23)" fg:x="34632" fg:w="2020"/><text x="73.3951%" y="511.50">_rjem..</text></g><g><title>large_dalloc_prep_impl (157 samples, 0.33%)</title><rect x="77.0799%" y="485" width="0.3316%" height="15" fill="rgb(236,174,8)" fg:x="36495" fg:w="157"/><text x="77.3299%" y="495.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (116 samples, 0.24%)</title><rect x="77.1665%" y="469" width="0.2450%" height="15" fill="rgb(220,197,8)" fg:x="36536" fg:w="116"/><text x="77.4165%" y="479.50"></text></g><g><title>edata_usize_get (8 samples, 0.02%)</title><rect x="77.3946%" y="453" width="0.0169%" height="15" fill="rgb(240,108,37)" fg:x="36644" fg:w="8"/><text x="77.6446%" y="463.50"></text></g><g><title>sz_index2size (8 samples, 0.02%)</title><rect x="77.3946%" y="437" width="0.0169%" height="15" fill="rgb(232,176,24)" fg:x="36644" fg:w="8"/><text x="77.6446%" y="447.50"></text></g><g><title>sz_index2size_lookup (8 samples, 0.02%)</title><rect x="77.3946%" y="421" width="0.0169%" height="15" fill="rgb(243,35,29)" fg:x="36644" fg:w="8"/><text x="77.6446%" y="431.50"></text></g><g><title>sz_index2size_lookup_impl (8 samples, 0.02%)</title><rect x="77.3946%" y="405" width="0.0169%" height="15" fill="rgb(210,37,18)" fg:x="36644" fg:w="8"/><text x="77.6446%" y="415.50"></text></g><g><title>rtree_leaf_elm_lookup (10 samples, 0.02%)</title><rect x="77.4115%" y="469" width="0.0211%" height="15" fill="rgb(224,184,40)" fg:x="36652" fg:w="10"/><text x="77.6615%" y="479.50"></text></g><g><title>isdalloct (2,134 samples, 4.51%)</title><rect x="73.0965%" y="549" width="4.5071%" height="15" fill="rgb(236,39,29)" fg:x="34609" fg:w="2134"/><text x="73.3465%" y="559.50">isdal..</text></g><g><title>arena_sdalloc (2,134 samples, 4.51%)</title><rect x="73.0965%" y="533" width="4.5071%" height="15" fill="rgb(232,48,39)" fg:x="34609" fg:w="2134"/><text x="73.3465%" y="543.50">arena..</text></g><g><title>arena_dalloc_large (2,130 samples, 4.50%)</title><rect x="73.1049%" y="517" width="4.4987%" height="15" fill="rgb(236,34,42)" fg:x="34613" fg:w="2130"/><text x="73.3549%" y="527.50">arena..</text></g><g><title>emap_edata_lookup (91 samples, 0.19%)</title><rect x="77.4115%" y="501" width="0.1922%" height="15" fill="rgb(243,106,37)" fg:x="36652" fg:w="91"/><text x="77.6615%" y="511.50"></text></g><g><title>rtree_read (91 samples, 0.19%)</title><rect x="77.4115%" y="485" width="0.1922%" height="15" fill="rgb(218,96,6)" fg:x="36652" fg:w="91"/><text x="77.6615%" y="495.50"></text></g><g><title>rtree_leaf_elm_read (81 samples, 0.17%)</title><rect x="77.4326%" y="469" width="0.1711%" height="15" fill="rgb(235,130,12)" fg:x="36662" fg:w="81"/><text x="77.6826%" y="479.50"></text></g><g><title>rtree_leaf_elm_bits_read (78 samples, 0.16%)</title><rect x="77.4389%" y="453" width="0.1647%" height="15" fill="rgb(231,95,0)" fg:x="36665" fg:w="78"/><text x="77.6889%" y="463.50"></text></g><g><title>atomic_load_p (78 samples, 0.16%)</title><rect x="77.4389%" y="437" width="0.1647%" height="15" fill="rgb(228,12,23)" fg:x="36665" fg:w="78"/><text x="77.6889%" y="447.50"></text></g><g><title>sz_size2index (15 samples, 0.03%)</title><rect x="77.6036%" y="549" width="0.0317%" height="15" fill="rgb(216,12,1)" fg:x="36743" fg:w="15"/><text x="77.8536%" y="559.50"></text></g><g><title>sz_size2index_compute (11 samples, 0.02%)</title><rect x="77.6121%" y="533" width="0.0232%" height="15" fill="rgb(219,59,3)" fg:x="36747" fg:w="11"/><text x="77.8621%" y="543.50"></text></g><g><title>_rjem_je_peak_dalloc_new_event_wait (5 samples, 0.01%)</title><rect x="77.7557%" y="501" width="0.0106%" height="15" fill="rgb(215,208,46)" fg:x="36815" fg:w="5"/><text x="78.0057%" y="511.50"></text></g><g><title>cache_bin_ncached_get_local (16 samples, 0.03%)</title><rect x="77.8486%" y="469" width="0.0338%" height="15" fill="rgb(254,224,29)" fg:x="36859" fg:w="16"/><text x="78.0986%" y="479.50"></text></g><g><title>cache_bin_ncached_get_internal (16 samples, 0.03%)</title><rect x="77.8486%" y="453" width="0.0338%" height="15" fill="rgb(232,14,29)" fg:x="36859" fg:w="16"/><text x="78.0986%" y="463.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (33 samples, 0.07%)</title><rect x="77.8318%" y="485" width="0.0697%" height="15" fill="rgb(208,45,52)" fg:x="36851" fg:w="33"/><text x="78.0818%" y="495.50"></text></g><g><title>cache_bin_nstashed_get_local (9 samples, 0.02%)</title><rect x="77.8824%" y="469" width="0.0190%" height="15" fill="rgb(234,191,28)" fg:x="36875" fg:w="9"/><text x="78.1324%" y="479.50"></text></g><g><title>cache_bin_nstashed_get_internal (9 samples, 0.02%)</title><rect x="77.8824%" y="453" width="0.0190%" height="15" fill="rgb(244,67,43)" fg:x="36875" fg:w="9"/><text x="78.1324%" y="463.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (7 samples, 0.01%)</title><rect x="77.8867%" y="437" width="0.0148%" height="15" fill="rgb(236,189,24)" fg:x="36877" fg:w="7"/><text x="78.1367%" y="447.50"></text></g><g><title>[libc.so.6] (10 samples, 0.02%)</title><rect x="77.9099%" y="421" width="0.0211%" height="15" fill="rgb(239,214,33)" fg:x="36888" fg:w="10"/><text x="78.1599%" y="431.50"></text></g><g><title>cache_bin_finish_flush (13 samples, 0.03%)</title><rect x="77.9078%" y="437" width="0.0275%" height="15" fill="rgb(226,176,41)" fg:x="36887" fg:w="13"/><text x="78.1578%" y="447.50"></text></g><g><title>_rjem_je_arena_bin_choose (6 samples, 0.01%)</title><rect x="77.9500%" y="421" width="0.0127%" height="15" fill="rgb(248,47,8)" fg:x="36907" fg:w="6"/><text x="78.2000%" y="431.50"></text></g><g><title>_rjem_je_edata_heap_insert (5 samples, 0.01%)</title><rect x="77.9733%" y="325" width="0.0106%" height="15" fill="rgb(218,81,44)" fg:x="36918" fg:w="5"/><text x="78.2233%" y="335.50"></text></g><g><title>ph_insert (5 samples, 0.01%)</title><rect x="77.9733%" y="309" width="0.0106%" height="15" fill="rgb(213,98,6)" fg:x="36918" fg:w="5"/><text x="78.2233%" y="319.50"></text></g><g><title>edata_heap_ph_cmp (5 samples, 0.01%)</title><rect x="77.9733%" y="293" width="0.0106%" height="15" fill="rgb(222,85,22)" fg:x="36918" fg:w="5"/><text x="78.2233%" y="303.50"></text></g><g><title>edata_snad_comp (5 samples, 0.01%)</title><rect x="77.9733%" y="277" width="0.0106%" height="15" fill="rgb(239,46,39)" fg:x="36918" fg:w="5"/><text x="78.2233%" y="287.50"></text></g><g><title>edata_cmp_summary_get (5 samples, 0.01%)</title><rect x="77.9733%" y="261" width="0.0106%" height="15" fill="rgb(237,12,29)" fg:x="36918" fg:w="5"/><text x="78.2233%" y="271.50"></text></g><g><title>edata_sn_get (5 samples, 0.01%)</title><rect x="77.9733%" y="245" width="0.0106%" height="15" fill="rgb(214,77,8)" fg:x="36918" fg:w="5"/><text x="78.2233%" y="255.50"></text></g><g><title>extent_deactivate_locked (13 samples, 0.03%)</title><rect x="77.9711%" y="373" width="0.0275%" height="15" fill="rgb(217,168,37)" fg:x="36917" fg:w="13"/><text x="78.2211%" y="383.50"></text></g><g><title>extent_deactivate_locked_impl (13 samples, 0.03%)</title><rect x="77.9711%" y="357" width="0.0275%" height="15" fill="rgb(221,217,23)" fg:x="36917" fg:w="13"/><text x="78.2211%" y="367.50"></text></g><g><title>_rjem_je_eset_insert (13 samples, 0.03%)</title><rect x="77.9711%" y="341" width="0.0275%" height="15" fill="rgb(243,229,36)" fg:x="36917" fg:w="13"/><text x="78.2211%" y="351.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (21 samples, 0.04%)</title><rect x="77.9627%" y="421" width="0.0444%" height="15" fill="rgb(251,163,40)" fg:x="36913" fg:w="21"/><text x="78.2127%" y="431.50"></text></g><g><title>pac_dalloc_impl (17 samples, 0.04%)</title><rect x="77.9711%" y="405" width="0.0359%" height="15" fill="rgb(237,222,12)" fg:x="36917" fg:w="17"/><text x="78.2211%" y="415.50"></text></g><g><title>_rjem_je_extent_record (17 samples, 0.04%)</title><rect x="77.9711%" y="389" width="0.0359%" height="15" fill="rgb(248,132,6)" fg:x="36917" fg:w="17"/><text x="78.2211%" y="399.50"></text></g><g><title>arena_dalloc_bin_locked_step (6 samples, 0.01%)</title><rect x="78.0155%" y="421" width="0.0127%" height="15" fill="rgb(227,167,50)" fg:x="36938" fg:w="6"/><text x="78.2655%" y="431.50"></text></g><g><title>arena_decay_ticks (6 samples, 0.01%)</title><rect x="78.0282%" y="421" width="0.0127%" height="15" fill="rgb(242,84,37)" fg:x="36944" fg:w="6"/><text x="78.2782%" y="431.50"></text></g><g><title>_rjem_je_arena_decay (6 samples, 0.01%)</title><rect x="78.0282%" y="405" width="0.0127%" height="15" fill="rgb(212,4,50)" fg:x="36944" fg:w="6"/><text x="78.2782%" y="415.50"></text></g><g><title>arena_decay_dirty (6 samples, 0.01%)</title><rect x="78.0282%" y="389" width="0.0127%" height="15" fill="rgb(230,228,32)" fg:x="36944" fg:w="6"/><text x="78.2782%" y="399.50"></text></g><g><title>arena_decay_impl (6 samples, 0.01%)</title><rect x="78.0282%" y="373" width="0.0127%" height="15" fill="rgb(248,217,23)" fg:x="36944" fg:w="6"/><text x="78.2782%" y="383.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (6 samples, 0.01%)</title><rect x="78.0282%" y="357" width="0.0127%" height="15" fill="rgb(238,197,32)" fg:x="36944" fg:w="6"/><text x="78.2782%" y="367.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (6 samples, 0.01%)</title><rect x="78.0282%" y="341" width="0.0127%" height="15" fill="rgb(236,106,1)" fg:x="36944" fg:w="6"/><text x="78.2782%" y="351.50"></text></g><g><title>edata_arena_ind_get (7 samples, 0.01%)</title><rect x="78.0430%" y="421" width="0.0148%" height="15" fill="rgb(219,228,13)" fg:x="36951" fg:w="7"/><text x="78.2930%" y="431.50"></text></g><g><title>malloc_mutex_trylock_final (20 samples, 0.04%)</title><rect x="78.0577%" y="405" width="0.0422%" height="15" fill="rgb(238,30,35)" fg:x="36958" fg:w="20"/><text x="78.3077%" y="415.50"></text></g><g><title>pthread_mutex_trylock (20 samples, 0.04%)</title><rect x="78.0577%" y="389" width="0.0422%" height="15" fill="rgb(236,70,23)" fg:x="36958" fg:w="20"/><text x="78.3077%" y="399.50"></text></g><g><title>malloc_mutex_lock (23 samples, 0.05%)</title><rect x="78.0577%" y="421" width="0.0486%" height="15" fill="rgb(249,104,48)" fg:x="36958" fg:w="23"/><text x="78.3077%" y="431.50"></text></g><g><title>rtree_leaf_elm_read (14 samples, 0.03%)</title><rect x="78.1443%" y="389" width="0.0296%" height="15" fill="rgb(254,117,50)" fg:x="36999" fg:w="14"/><text x="78.3943%" y="399.50"></text></g><g><title>rtree_leaf_elm_bits_read (14 samples, 0.03%)</title><rect x="78.1443%" y="373" width="0.0296%" height="15" fill="rgb(223,152,4)" fg:x="36999" fg:w="14"/><text x="78.3943%" y="383.50"></text></g><g><title>atomic_load_p (14 samples, 0.03%)</title><rect x="78.1443%" y="357" width="0.0296%" height="15" fill="rgb(245,6,2)" fg:x="36999" fg:w="14"/><text x="78.3943%" y="367.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (33 samples, 0.07%)</title><rect x="78.1084%" y="421" width="0.0697%" height="15" fill="rgb(249,150,24)" fg:x="36982" fg:w="33"/><text x="78.3584%" y="431.50"></text></g><g><title>emap_edata_lookup_batch (33 samples, 0.07%)</title><rect x="78.1084%" y="405" width="0.0697%" height="15" fill="rgb(228,185,42)" fg:x="36982" fg:w="33"/><text x="78.3584%" y="415.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (132 samples, 0.28%)</title><rect x="77.9057%" y="469" width="0.2788%" height="15" fill="rgb(226,39,33)" fg:x="36886" fg:w="132"/><text x="78.1557%" y="479.50"></text></g><g><title>tcache_bin_flush_bottom (131 samples, 0.28%)</title><rect x="77.9078%" y="453" width="0.2767%" height="15" fill="rgb(221,166,19)" fg:x="36887" fg:w="131"/><text x="78.1578%" y="463.50"></text></g><g><title>tcache_bin_flush_impl (118 samples, 0.25%)</title><rect x="77.9352%" y="437" width="0.2492%" height="15" fill="rgb(209,109,2)" fg:x="36900" fg:w="118"/><text x="78.1852%" y="447.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (201 samples, 0.42%)</title><rect x="77.7663%" y="501" width="0.4245%" height="15" fill="rgb(252,216,26)" fg:x="36820" fg:w="201"/><text x="78.0163%" y="511.50"></text></g><g><title>tcache_gc_small (137 samples, 0.29%)</title><rect x="77.9015%" y="485" width="0.2894%" height="15" fill="rgb(227,173,36)" fg:x="36884" fg:w="137"/><text x="78.1515%" y="495.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_new_event_wait (7 samples, 0.01%)</title><rect x="78.1908%" y="501" width="0.0148%" height="15" fill="rgb(209,90,7)" fg:x="37021" fg:w="7"/><text x="78.4408%" y="511.50"></text></g><g><title>tcache_gc_dalloc_event_wait_get (6 samples, 0.01%)</title><rect x="78.2077%" y="501" width="0.0127%" height="15" fill="rgb(250,194,11)" fg:x="37029" fg:w="6"/><text x="78.4577%" y="511.50"></text></g><g><title>tsd_tcache_gc_dalloc_event_wait_get (6 samples, 0.01%)</title><rect x="78.2077%" y="485" width="0.0127%" height="15" fill="rgb(220,72,50)" fg:x="37029" fg:w="6"/><text x="78.4577%" y="495.50"></text></g><g><title>atomic_fence (14 samples, 0.03%)</title><rect x="78.2246%" y="437" width="0.0296%" height="15" fill="rgb(222,106,48)" fg:x="37037" fg:w="14"/><text x="78.4746%" y="447.50"></text></g><g><title>te_adjust_thresholds_helper (19 samples, 0.04%)</title><rect x="78.2204%" y="501" width="0.0401%" height="15" fill="rgb(216,220,45)" fg:x="37035" fg:w="19"/><text x="78.4704%" y="511.50"></text></g><g><title>te_ctx_next_event_set (19 samples, 0.04%)</title><rect x="78.2204%" y="485" width="0.0401%" height="15" fill="rgb(234,112,18)" fg:x="37035" fg:w="19"/><text x="78.4704%" y="495.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (17 samples, 0.04%)</title><rect x="78.2246%" y="469" width="0.0359%" height="15" fill="rgb(206,179,9)" fg:x="37037" fg:w="17"/><text x="78.4746%" y="479.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (17 samples, 0.04%)</title><rect x="78.2246%" y="453" width="0.0359%" height="15" fill="rgb(215,115,40)" fg:x="37037" fg:w="17"/><text x="78.4746%" y="463.50"></text></g><g><title>_rjem_je_te_event_trigger (287 samples, 0.61%)</title><rect x="77.6670%" y="517" width="0.6062%" height="15" fill="rgb(222,69,34)" fg:x="36773" fg:w="287"/><text x="77.9170%" y="527.50"></text></g><g><title>te_ctx_last_event_get (6 samples, 0.01%)</title><rect x="78.2605%" y="501" width="0.0127%" height="15" fill="rgb(209,161,10)" fg:x="37054" fg:w="6"/><text x="78.5105%" y="511.50"></text></g><g><title>isfree (2,457 samples, 5.19%)</title><rect x="73.0965%" y="565" width="5.1893%" height="15" fill="rgb(217,6,38)" fg:x="34609" fg:w="2457"/><text x="73.3465%" y="575.50">isfree</text></g><g><title>thread_dalloc_event (308 samples, 0.65%)</title><rect x="77.6353%" y="549" width="0.6505%" height="15" fill="rgb(229,229,48)" fg:x="36758" fg:w="308"/><text x="77.8853%" y="559.50"></text></g><g><title>te_event_advance (308 samples, 0.65%)</title><rect x="77.6353%" y="533" width="0.6505%" height="15" fill="rgb(225,21,28)" fg:x="36758" fg:w="308"/><text x="77.8853%" y="543.50"></text></g><g><title>te_ctx_get (6 samples, 0.01%)</title><rect x="78.2732%" y="517" width="0.0127%" height="15" fill="rgb(206,33,13)" fg:x="37060" fg:w="6"/><text x="78.5232%" y="527.50"></text></g><g><title>_rjem_je_sdallocx_default (2,501 samples, 5.28%)</title><rect x="73.0437%" y="581" width="5.2823%" height="15" fill="rgb(242,178,17)" fg:x="34584" fg:w="2501"/><text x="73.2937%" y="591.50">_rjem_..</text></g><g><title>tsd_fetch_min (16 samples, 0.03%)</title><rect x="78.2922%" y="565" width="0.0338%" height="15" fill="rgb(220,162,5)" fg:x="37069" fg:w="16"/><text x="78.5422%" y="575.50"></text></g><g><title>tsd_fetch_impl (16 samples, 0.03%)</title><rect x="78.2922%" y="549" width="0.0338%" height="15" fill="rgb(210,33,43)" fg:x="37069" fg:w="16"/><text x="78.5422%" y="559.50"></text></g><g><title>tsd_state_get (14 samples, 0.03%)</title><rect x="78.2964%" y="533" width="0.0296%" height="15" fill="rgb(216,116,54)" fg:x="37071" fg:w="14"/><text x="78.5464%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,542 samples, 5.37%)</title><rect x="73.0416%" y="645" width="5.3689%" height="15" fill="rgb(249,92,24)" fg:x="34583" fg:w="2542"/><text x="73.2916%" y="655.50">&lt;alloc:..</text></g><g><title>alloc::alloc::dealloc (2,542 samples, 5.37%)</title><rect x="73.0416%" y="629" width="5.3689%" height="15" fill="rgb(231,189,14)" fg:x="34583" fg:w="2542"/><text x="73.2916%" y="639.50">alloc::..</text></g><g><title>__rust_dealloc (2,542 samples, 5.37%)</title><rect x="73.0416%" y="613" width="5.3689%" height="15" fill="rgb(230,8,41)" fg:x="34583" fg:w="2542"/><text x="73.2916%" y="623.50">__rust_..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2,542 samples, 5.37%)</title><rect x="73.0416%" y="597" width="5.3689%" height="15" fill="rgb(249,7,27)" fg:x="34583" fg:w="2542"/><text x="73.2916%" y="607.50">&lt;tikv_j..</text></g><g><title>_rjem_sdallocx (40 samples, 0.08%)</title><rect x="78.3260%" y="581" width="0.0845%" height="15" fill="rgb(232,86,5)" fg:x="37085" fg:w="40"/><text x="78.5760%" y="591.50"></text></g><g><title>free_fastpath (37 samples, 0.08%)</title><rect x="78.3323%" y="565" width="0.0781%" height="15" fill="rgb(224,175,18)" fg:x="37088" fg:w="37"/><text x="78.5823%" y="575.50"></text></g><g><title>core::mem::drop (2,571 samples, 5.43%)</title><rect x="72.9824%" y="757" width="5.4301%" height="15" fill="rgb(220,129,12)" fg:x="34555" fg:w="2571"/><text x="73.2324%" y="767.50">core::m..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (2,571 samples, 5.43%)</title><rect x="72.9824%" y="741" width="5.4301%" height="15" fill="rgb(210,19,36)" fg:x="34555" fg:w="2571"/><text x="73.2324%" y="751.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (2,543 samples, 5.37%)</title><rect x="73.0416%" y="725" width="5.3710%" height="15" fill="rgb(219,96,14)" fg:x="34583" fg:w="2543"/><text x="73.2916%" y="735.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,543 samples, 5.37%)</title><rect x="73.0416%" y="709" width="5.3710%" height="15" fill="rgb(249,106,1)" fg:x="34583" fg:w="2543"/><text x="73.2916%" y="719.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,543 samples, 5.37%)</title><rect x="73.0416%" y="693" width="5.3710%" height="15" fill="rgb(249,155,20)" fg:x="34583" fg:w="2543"/><text x="73.2916%" y="703.50">core::p..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,543 samples, 5.37%)</title><rect x="73.0416%" y="677" width="5.3710%" height="15" fill="rgb(244,168,9)" fg:x="34583" fg:w="2543"/><text x="73.2916%" y="687.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,543 samples, 5.37%)</title><rect x="73.0416%" y="661" width="5.3710%" height="15" fill="rgb(216,23,50)" fg:x="34583" fg:w="2543"/><text x="73.2916%" y="671.50">alloc::..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (129 samples, 0.27%)</title><rect x="78.4126%" y="757" width="0.2725%" height="15" fill="rgb(224,219,20)" fg:x="37126" fg:w="129"/><text x="78.6626%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (129 samples, 0.27%)</title><rect x="78.4126%" y="741" width="0.2725%" height="15" fill="rgb(222,156,15)" fg:x="37126" fg:w="129"/><text x="78.6626%" y="751.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (4,722 samples, 9.97%)</title><rect x="68.7245%" y="949" width="9.9732%" height="15" fill="rgb(231,97,17)" fg:x="32539" fg:w="4722"/><text x="68.9745%" y="959.50">epoxy_server::..</text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (2,759 samples, 5.83%)</title><rect x="72.8705%" y="933" width="5.8272%" height="15" fill="rgb(218,70,48)" fg:x="34502" fg:w="2759"/><text x="73.1205%" y="943.50">tokio::..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (2,759 samples, 5.83%)</title><rect x="72.8705%" y="917" width="5.8272%" height="15" fill="rgb(212,196,52)" fg:x="34502" fg:w="2759"/><text x="73.1205%" y="927.50">&lt;tokio_..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (2,759 samples, 5.83%)</title><rect x="72.8705%" y="901" width="5.8272%" height="15" fill="rgb(243,203,18)" fg:x="34502" fg:w="2759"/><text x="73.1205%" y="911.50">&lt;wisp_m..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (2,759 samples, 5.83%)</title><rect x="72.8705%" y="885" width="5.8272%" height="15" fill="rgb(252,125,41)" fg:x="34502" fg:w="2759"/><text x="73.1205%" y="895.50">&lt;future..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (2,752 samples, 5.81%)</title><rect x="72.8853%" y="869" width="5.8124%" height="15" fill="rgb(223,180,33)" fg:x="34509" fg:w="2752"/><text x="73.1353%" y="879.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2,752 samples, 5.81%)</title><rect x="72.8853%" y="853" width="5.8124%" height="15" fill="rgb(254,159,46)" fg:x="34509" fg:w="2752"/><text x="73.1353%" y="863.50">core::p..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2,752 samples, 5.81%)</title><rect x="72.8853%" y="837" width="5.8124%" height="15" fill="rgb(254,38,10)" fg:x="34509" fg:w="2752"/><text x="73.1353%" y="847.50">&lt;bytes:..</text></g><g><title>bytes::bytes_mut::shared_v_drop (2,709 samples, 5.72%)</title><rect x="72.9761%" y="821" width="5.7216%" height="15" fill="rgb(208,217,32)" fg:x="34552" fg:w="2709"/><text x="73.2261%" y="831.50">bytes::..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,709 samples, 5.72%)</title><rect x="72.9761%" y="805" width="5.7216%" height="15" fill="rgb(221,120,13)" fg:x="34552" fg:w="2709"/><text x="73.2261%" y="815.50">&lt;core::..</text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (2,709 samples, 5.72%)</title><rect x="72.9761%" y="789" width="5.7216%" height="15" fill="rgb(246,54,52)" fg:x="34552" fg:w="2709"/><text x="73.2261%" y="799.50">bytes::..</text></g><g><title>bytes::bytes_mut::release_shared (2,709 samples, 5.72%)</title><rect x="72.9761%" y="773" width="5.7216%" height="15" fill="rgb(242,34,25)" fg:x="34552" fg:w="2709"/><text x="73.2261%" y="783.50">bytes::..</text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="78.6850%" y="757" width="0.0127%" height="15" fill="rgb(247,209,9)" fg:x="37255" fg:w="6"/><text x="78.9350%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="78.6850%" y="741" width="0.0127%" height="15" fill="rgb(228,71,26)" fg:x="37255" fg:w="6"/><text x="78.9350%" y="751.50"></text></g><g><title>[libc.so.6] (277 samples, 0.59%)</title><rect x="79.9713%" y="709" width="0.5850%" height="15" fill="rgb(222,145,49)" fg:x="37864" fg:w="277"/><text x="80.2213%" y="719.50"></text></g><g><title>recv (766 samples, 1.62%)</title><rect x="79.0884%" y="725" width="1.6178%" height="15" fill="rgb(218,121,17)" fg:x="37446" fg:w="766"/><text x="79.3384%" y="735.50"></text></g><g><title>[unknown] (71 samples, 0.15%)</title><rect x="80.5563%" y="709" width="0.1500%" height="15" fill="rgb(244,50,7)" fg:x="38141" fg:w="71"/><text x="80.8063%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (772 samples, 1.63%)</title><rect x="79.0842%" y="853" width="1.6305%" height="15" fill="rgb(246,229,37)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="863.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (772 samples, 1.63%)</title><rect x="79.0842%" y="837" width="1.6305%" height="15" fill="rgb(225,18,5)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="847.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (772 samples, 1.63%)</title><rect x="79.0842%" y="821" width="1.6305%" height="15" fill="rgb(213,204,8)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="831.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (772 samples, 1.63%)</title><rect x="79.0842%" y="805" width="1.6305%" height="15" fill="rgb(238,103,6)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="815.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (772 samples, 1.63%)</title><rect x="79.0842%" y="789" width="1.6305%" height="15" fill="rgb(222,25,35)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::read (772 samples, 1.63%)</title><rect x="79.0842%" y="773" width="1.6305%" height="15" fill="rgb(213,203,35)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="783.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (772 samples, 1.63%)</title><rect x="79.0842%" y="757" width="1.6305%" height="15" fill="rgb(221,79,53)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="767.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (772 samples, 1.63%)</title><rect x="79.0842%" y="741" width="1.6305%" height="15" fill="rgb(243,200,35)" fg:x="37444" fg:w="772"/><text x="79.3342%" y="751.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (18 samples, 0.04%)</title><rect x="80.7232%" y="853" width="0.0380%" height="15" fill="rgb(248,60,25)" fg:x="38220" fg:w="18"/><text x="80.9732%" y="863.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (6 samples, 0.01%)</title><rect x="80.7612%" y="853" width="0.0127%" height="15" fill="rgb(227,53,46)" fg:x="38238" fg:w="6"/><text x="81.0112%" y="863.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.01%)</title><rect x="80.7633%" y="837" width="0.0106%" height="15" fill="rgb(216,120,32)" fg:x="38239" fg:w="5"/><text x="81.0133%" y="847.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.01%)</title><rect x="80.7633%" y="821" width="0.0106%" height="15" fill="rgb(220,134,1)" fg:x="38239" fg:w="5"/><text x="81.0133%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="80.8077%" y="773" width="0.0190%" height="15" fill="rgb(237,168,5)" fg:x="38260" fg:w="9"/><text x="81.0577%" y="783.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (9 samples, 0.02%)</title><rect x="80.8077%" y="757" width="0.0190%" height="15" fill="rgb(231,100,33)" fg:x="38260" fg:w="9"/><text x="81.0577%" y="767.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="80.8077%" y="741" width="0.0190%" height="15" fill="rgb(236,177,47)" fg:x="38260" fg:w="9"/><text x="81.0577%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (5 samples, 0.01%)</title><rect x="80.8414%" y="741" width="0.0106%" height="15" fill="rgb(235,7,49)" fg:x="38276" fg:w="5"/><text x="81.0914%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (29 samples, 0.06%)</title><rect x="80.8034%" y="821" width="0.0612%" height="15" fill="rgb(232,119,22)" fg:x="38258" fg:w="29"/><text x="81.0534%" y="831.50"></text></g><g><title>tokio::runtime::context::budget (29 samples, 0.06%)</title><rect x="80.8034%" y="805" width="0.0612%" height="15" fill="rgb(254,73,53)" fg:x="38258" fg:w="29"/><text x="81.0534%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.06%)</title><rect x="80.8034%" y="789" width="0.0612%" height="15" fill="rgb(251,35,20)" fg:x="38258" fg:w="29"/><text x="81.0534%" y="799.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (18 samples, 0.04%)</title><rect x="80.8267%" y="773" width="0.0380%" height="15" fill="rgb(241,119,20)" fg:x="38269" fg:w="18"/><text x="81.0767%" y="783.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (18 samples, 0.04%)</title><rect x="80.8267%" y="757" width="0.0380%" height="15" fill="rgb(207,102,14)" fg:x="38269" fg:w="18"/><text x="81.0767%" y="767.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (6 samples, 0.01%)</title><rect x="80.8520%" y="741" width="0.0127%" height="15" fill="rgb(248,201,50)" fg:x="38281" fg:w="6"/><text x="81.1020%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (64 samples, 0.14%)</title><rect x="80.8795%" y="805" width="0.1352%" height="15" fill="rgb(222,185,44)" fg:x="38294" fg:w="64"/><text x="81.1295%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (64 samples, 0.14%)</title><rect x="80.8795%" y="789" width="0.1352%" height="15" fill="rgb(218,107,18)" fg:x="38294" fg:w="64"/><text x="81.1295%" y="799.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (1,024 samples, 2.16%)</title><rect x="78.8582%" y="901" width="2.1628%" height="15" fill="rgb(237,177,39)" fg:x="37337" fg:w="1024"/><text x="79.1082%" y="911.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1,021 samples, 2.16%)</title><rect x="78.8646%" y="885" width="2.1564%" height="15" fill="rgb(246,69,6)" fg:x="37340" fg:w="1021"/><text x="79.1146%" y="895.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (935 samples, 1.97%)</title><rect x="79.0462%" y="869" width="1.9748%" height="15" fill="rgb(234,208,37)" fg:x="37426" fg:w="935"/><text x="79.2962%" y="879.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (117 samples, 0.25%)</title><rect x="80.7739%" y="853" width="0.2471%" height="15" fill="rgb(225,4,6)" fg:x="38244" fg:w="117"/><text x="81.0239%" y="863.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (110 samples, 0.23%)</title><rect x="80.7886%" y="837" width="0.2323%" height="15" fill="rgb(233,45,0)" fg:x="38251" fg:w="110"/><text x="81.0386%" y="847.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (74 samples, 0.16%)</title><rect x="80.8647%" y="821" width="0.1563%" height="15" fill="rgb(226,136,5)" fg:x="38287" fg:w="74"/><text x="81.1147%" y="831.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (10 samples, 0.02%)</title><rect x="81.0273%" y="901" width="0.0211%" height="15" fill="rgb(211,91,47)" fg:x="38364" fg:w="10"/><text x="81.2773%" y="911.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (1,082 samples, 2.29%)</title><rect x="78.7716%" y="917" width="2.2853%" height="15" fill="rgb(242,88,51)" fg:x="37296" fg:w="1082"/><text x="79.0216%" y="927.50">&lt;..</text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (1,097 samples, 2.32%)</title><rect x="78.7716%" y="933" width="2.3169%" height="15" fill="rgb(230,91,28)" fg:x="37296" fg:w="1097"/><text x="79.0216%" y="943.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.03%)</title><rect x="81.0569%" y="917" width="0.0317%" height="15" fill="rgb(254,186,29)" fg:x="38378" fg:w="15"/><text x="81.3069%" y="927.50"></text></g><g><title>core::mem::replace (15 samples, 0.03%)</title><rect x="81.0569%" y="901" width="0.0317%" height="15" fill="rgb(238,6,4)" fg:x="38378" fg:w="15"/><text x="81.3069%" y="911.50"></text></g><g><title>core::ptr::write (13 samples, 0.03%)</title><rect x="81.0611%" y="885" width="0.0275%" height="15" fill="rgb(221,151,16)" fg:x="38380" fg:w="13"/><text x="81.3111%" y="895.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (27 samples, 0.06%)</title><rect x="81.0886%" y="933" width="0.0570%" height="15" fill="rgb(251,143,52)" fg:x="38393" fg:w="27"/><text x="81.3386%" y="943.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (27 samples, 0.06%)</title><rect x="81.0886%" y="917" width="0.0570%" height="15" fill="rgb(206,90,15)" fg:x="38393" fg:w="27"/><text x="81.3386%" y="927.50"></text></g><g><title>core::cmp::min (9 samples, 0.02%)</title><rect x="81.1266%" y="901" width="0.0190%" height="15" fill="rgb(218,35,8)" fg:x="38411" fg:w="9"/><text x="81.3766%" y="911.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.02%)</title><rect x="81.1266%" y="885" width="0.0190%" height="15" fill="rgb(239,215,6)" fg:x="38411" fg:w="9"/><text x="81.3766%" y="895.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.02%)</title><rect x="81.1266%" y="869" width="0.0190%" height="15" fill="rgb(245,116,39)" fg:x="38411" fg:w="9"/><text x="81.3766%" y="879.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (27 samples, 0.06%)</title><rect x="81.4011%" y="917" width="0.0570%" height="15" fill="rgb(242,65,28)" fg:x="38541" fg:w="27"/><text x="81.6511%" y="927.50"></text></g><g><title>_ZN4core3ptr1130drop_in_place$LT$wisp_mux..stream..MuxStreamWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_payload..$u7b$$u7b$closure$u7d$$u7d$$GT$17h3b934580ca0be316E (7 samples, 0.01%)</title><rect x="81.4582%" y="917" width="0.0148%" height="15" fill="rgb(252,132,53)" fg:x="38568" fg:w="7"/><text x="81.7082%" y="927.50"></text></g><g><title>_ZN4core3ptr1139drop_in_place$LT$wisp_mux..stream..MuxStreamWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_payload_internal..$u7b$$u7b$closure$u7d$$u7d$$GT$17h77875a1a59d78a7eE (9 samples, 0.02%)</title><rect x="81.7792%" y="901" width="0.0190%" height="15" fill="rgb(224,159,50)" fg:x="38720" fg:w="9"/><text x="82.0292%" y="911.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (25 samples, 0.05%)</title><rect x="81.8869%" y="821" width="0.0528%" height="15" fill="rgb(224,93,4)" fg:x="38771" fg:w="25"/><text x="82.1369%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (270 samples, 0.57%)</title><rect x="81.8827%" y="837" width="0.5703%" height="15" fill="rgb(208,81,34)" fg:x="38769" fg:w="270"/><text x="82.1327%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (238 samples, 0.50%)</title><rect x="81.9503%" y="821" width="0.5027%" height="15" fill="rgb(233,92,54)" fg:x="38801" fg:w="238"/><text x="82.2003%" y="831.50"></text></g><g><title>[libc.so.6] (230 samples, 0.49%)</title><rect x="81.9672%" y="805" width="0.4858%" height="15" fill="rgb(237,21,14)" fg:x="38809" fg:w="230"/><text x="82.2172%" y="815.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (289 samples, 0.61%)</title><rect x="81.8489%" y="853" width="0.6104%" height="15" fill="rgb(249,128,51)" fg:x="38753" fg:w="289"/><text x="82.0989%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (5 samples, 0.01%)</title><rect x="82.4593%" y="805" width="0.0106%" height="15" fill="rgb(223,129,24)" fg:x="39042" fg:w="5"/><text x="82.7093%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (6 samples, 0.01%)</title><rect x="82.4699%" y="805" width="0.0127%" height="15" fill="rgb(231,168,25)" fg:x="39047" fg:w="6"/><text x="82.7199%" y="815.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32_le (15 samples, 0.03%)</title><rect x="82.4593%" y="853" width="0.0317%" height="15" fill="rgb(224,39,20)" fg:x="39042" fg:w="15"/><text x="82.7093%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (15 samples, 0.03%)</title><rect x="82.4593%" y="837" width="0.0317%" height="15" fill="rgb(225,152,53)" fg:x="39042" fg:w="15"/><text x="82.7093%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (15 samples, 0.03%)</title><rect x="82.4593%" y="821" width="0.0317%" height="15" fill="rgb(252,17,24)" fg:x="39042" fg:w="15"/><text x="82.7093%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (7 samples, 0.01%)</title><rect x="82.4910%" y="805" width="0.0148%" height="15" fill="rgb(250,114,30)" fg:x="39057" fg:w="7"/><text x="82.7410%" y="815.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (352 samples, 0.74%)</title><rect x="81.8426%" y="869" width="0.7434%" height="15" fill="rgb(229,5,4)" fg:x="38750" fg:w="352"/><text x="82.0926%" y="879.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (45 samples, 0.10%)</title><rect x="82.4910%" y="853" width="0.0950%" height="15" fill="rgb(225,176,49)" fg:x="39057" fg:w="45"/><text x="82.7410%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (45 samples, 0.10%)</title><rect x="82.4910%" y="837" width="0.0950%" height="15" fill="rgb(224,221,49)" fg:x="39057" fg:w="45"/><text x="82.7410%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (45 samples, 0.10%)</title><rect x="82.4910%" y="821" width="0.0950%" height="15" fill="rgb(253,169,27)" fg:x="39057" fg:w="45"/><text x="82.7410%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.08%)</title><rect x="82.5079%" y="805" width="0.0781%" height="15" fill="rgb(211,206,16)" fg:x="39065" fg:w="37"/><text x="82.7579%" y="815.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.01%)</title><rect x="82.5987%" y="565" width="0.0106%" height="15" fill="rgb(244,87,35)" fg:x="39108" fg:w="5"/><text x="82.8487%" y="575.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.01%)</title><rect x="82.5966%" y="645" width="0.0148%" height="15" fill="rgb(246,28,10)" fg:x="39107" fg:w="7"/><text x="82.8466%" y="655.50"></text></g><g><title>iallocztm (7 samples, 0.01%)</title><rect x="82.5966%" y="629" width="0.0148%" height="15" fill="rgb(229,12,44)" fg:x="39107" fg:w="7"/><text x="82.8466%" y="639.50"></text></g><g><title>arena_malloc (7 samples, 0.01%)</title><rect x="82.5966%" y="613" width="0.0148%" height="15" fill="rgb(210,145,37)" fg:x="39107" fg:w="7"/><text x="82.8466%" y="623.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.01%)</title><rect x="82.5966%" y="597" width="0.0148%" height="15" fill="rgb(227,112,52)" fg:x="39107" fg:w="7"/><text x="82.8466%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (7 samples, 0.01%)</title><rect x="82.5966%" y="581" width="0.0148%" height="15" fill="rgb(238,155,34)" fg:x="39107" fg:w="7"/><text x="82.8466%" y="591.50"></text></g><g><title>_rjem_je_malloc_default (10 samples, 0.02%)</title><rect x="82.5924%" y="693" width="0.0211%" height="15" fill="rgb(239,226,36)" fg:x="39105" fg:w="10"/><text x="82.8424%" y="703.50"></text></g><g><title>imalloc (10 samples, 0.02%)</title><rect x="82.5924%" y="677" width="0.0211%" height="15" fill="rgb(230,16,23)" fg:x="39105" fg:w="10"/><text x="82.8424%" y="687.50"></text></g><g><title>imalloc_body (10 samples, 0.02%)</title><rect x="82.5924%" y="661" width="0.0211%" height="15" fill="rgb(236,171,36)" fg:x="39105" fg:w="10"/><text x="82.8424%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (71 samples, 0.15%)</title><rect x="83.2471%" y="661" width="0.1500%" height="15" fill="rgb(221,22,14)" fg:x="39415" fg:w="71"/><text x="83.4971%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (71 samples, 0.15%)</title><rect x="83.2471%" y="645" width="0.1500%" height="15" fill="rgb(242,43,11)" fg:x="39415" fg:w="71"/><text x="83.4971%" y="655.50"></text></g><g><title>sz_index2size_lookup_impl (107 samples, 0.23%)</title><rect x="83.3992%" y="645" width="0.2260%" height="15" fill="rgb(232,69,23)" fg:x="39487" fg:w="107"/><text x="83.6492%" y="655.50"></text></g><g><title>sz_size2index_usize_fastpath (110 samples, 0.23%)</title><rect x="83.3992%" y="661" width="0.2323%" height="15" fill="rgb(216,180,54)" fg:x="39487" fg:w="110"/><text x="83.6492%" y="671.50"></text></g><g><title>__rust_alloc (494 samples, 1.04%)</title><rect x="82.5902%" y="725" width="1.0434%" height="15" fill="rgb(216,5,24)" fg:x="39104" fg:w="494"/><text x="82.8402%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (494 samples, 1.04%)</title><rect x="82.5902%" y="709" width="1.0434%" height="15" fill="rgb(225,89,9)" fg:x="39104" fg:w="494"/><text x="82.8402%" y="719.50"></text></g><g><title>_rjem_malloc (483 samples, 1.02%)</title><rect x="82.6135%" y="693" width="1.0201%" height="15" fill="rgb(243,75,33)" fg:x="39115" fg:w="483"/><text x="82.8635%" y="703.50"></text></g><g><title>imalloc_fastpath (482 samples, 1.02%)</title><rect x="82.6156%" y="677" width="1.0180%" height="15" fill="rgb(247,141,45)" fg:x="39116" fg:w="482"/><text x="82.8656%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (505 samples, 1.07%)</title><rect x="82.5902%" y="773" width="1.0666%" height="15" fill="rgb(232,177,36)" fg:x="39104" fg:w="505"/><text x="82.8402%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (505 samples, 1.07%)</title><rect x="82.5902%" y="757" width="1.0666%" height="15" fill="rgb(219,125,36)" fg:x="39104" fg:w="505"/><text x="82.8402%" y="767.50"></text></g><g><title>alloc::alloc::alloc (505 samples, 1.07%)</title><rect x="82.5902%" y="741" width="1.0666%" height="15" fill="rgb(227,94,9)" fg:x="39104" fg:w="505"/><text x="82.8402%" y="751.50"></text></g><g><title>core::ptr::read_volatile (11 samples, 0.02%)</title><rect x="83.6336%" y="725" width="0.0232%" height="15" fill="rgb(240,34,52)" fg:x="39598" fg:w="11"/><text x="83.8836%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (508 samples, 1.07%)</title><rect x="82.5860%" y="853" width="1.0729%" height="15" fill="rgb(216,45,12)" fg:x="39102" fg:w="508"/><text x="82.8360%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (508 samples, 1.07%)</title><rect x="82.5860%" y="837" width="1.0729%" height="15" fill="rgb(246,21,19)" fg:x="39102" fg:w="508"/><text x="82.8360%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (508 samples, 1.07%)</title><rect x="82.5860%" y="821" width="1.0729%" height="15" fill="rgb(213,98,42)" fg:x="39102" fg:w="508"/><text x="82.8360%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (508 samples, 1.07%)</title><rect x="82.5860%" y="805" width="1.0729%" height="15" fill="rgb(250,136,47)" fg:x="39102" fg:w="508"/><text x="82.8360%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (508 samples, 1.07%)</title><rect x="82.5860%" y="789" width="1.0729%" height="15" fill="rgb(251,124,27)" fg:x="39102" fg:w="508"/><text x="82.8360%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (525 samples, 1.11%)</title><rect x="82.5860%" y="869" width="1.1088%" height="15" fill="rgb(229,180,14)" fg:x="39102" fg:w="525"/><text x="82.8360%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (17 samples, 0.04%)</title><rect x="83.6589%" y="853" width="0.0359%" height="15" fill="rgb(245,216,25)" fg:x="39610" fg:w="17"/><text x="83.9089%" y="863.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (6 samples, 0.01%)</title><rect x="83.6822%" y="837" width="0.0127%" height="15" fill="rgb(251,43,5)" fg:x="39621" fg:w="6"/><text x="83.9322%" y="847.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (947 samples, 2.00%)</title><rect x="81.8045%" y="885" width="2.0001%" height="15" fill="rgb(250,128,24)" fg:x="38732" fg:w="947"/><text x="82.0545%" y="895.50">w..</text></g><g><title>wisp_mux::packet::PacketType::get_packet_size (52 samples, 0.11%)</title><rect x="83.6948%" y="869" width="0.1098%" height="15" fill="rgb(217,117,27)" fg:x="39627" fg:w="52"/><text x="83.9448%" y="879.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (8 samples, 0.02%)</title><rect x="83.7878%" y="853" width="0.0169%" height="15" fill="rgb(245,147,4)" fg:x="39671" fg:w="8"/><text x="84.0378%" y="863.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (949 samples, 2.00%)</title><rect x="81.8045%" y="901" width="2.0044%" height="15" fill="rgb(242,201,35)" fg:x="38732" fg:w="949"/><text x="82.0545%" y="911.50">w..</text></g><g><title>wisp_mux::packet::Packet::new_data (11 samples, 0.02%)</title><rect x="83.8089%" y="901" width="0.0232%" height="15" fill="rgb(218,181,1)" fg:x="39681" fg:w="11"/><text x="84.0589%" y="911.50"></text></g><g><title>&lt;wisp_mux::Role as core::cmp::PartialEq&gt;::eq (35 samples, 0.07%)</title><rect x="84.6178%" y="885" width="0.0739%" height="15" fill="rgb(222,6,29)" fg:x="40064" fg:w="35"/><text x="84.8678%" y="895.50"></text></g><g><title>_ZN4core3ptr1130drop_in_place$LT$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17hee23a8ecea88e3c9E (7 samples, 0.01%)</title><rect x="84.6917%" y="885" width="0.0148%" height="15" fill="rgb(208,186,3)" fg:x="40099" fg:w="7"/><text x="84.9417%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (76 samples, 0.16%)</title><rect x="84.7065%" y="885" width="0.1605%" height="15" fill="rgb(216,36,26)" fg:x="40106" fg:w="76"/><text x="84.9565%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (74 samples, 0.16%)</title><rect x="84.7108%" y="869" width="0.1563%" height="15" fill="rgb(248,201,23)" fg:x="40108" fg:w="74"/><text x="84.9608%" y="879.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (191 samples, 0.40%)</title><rect x="85.4225%" y="869" width="0.4034%" height="15" fill="rgb(251,170,31)" fg:x="40445" fg:w="191"/><text x="85.6725%" y="879.50"></text></g><g><title>[libc.so.6] (191 samples, 0.40%)</title><rect x="85.4225%" y="853" width="0.4034%" height="15" fill="rgb(207,110,25)" fg:x="40445" fg:w="191"/><text x="85.6725%" y="863.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::IndexMut&lt;usize&gt;&gt;::index_mut (9 samples, 0.02%)</title><rect x="85.8998%" y="853" width="0.0190%" height="15" fill="rgb(250,54,15)" fg:x="40671" fg:w="9"/><text x="86.1498%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (6 samples, 0.01%)</title><rect x="85.9189%" y="853" width="0.0127%" height="15" fill="rgb(227,68,33)" fg:x="40680" fg:w="6"/><text x="86.1689%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="85.9315%" y="853" width="0.0127%" height="15" fill="rgb(238,34,41)" fg:x="40686" fg:w="6"/><text x="86.1815%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="85.9315%" y="837" width="0.0127%" height="15" fill="rgb(220,11,15)" fg:x="40686" fg:w="6"/><text x="86.1815%" y="847.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (7 samples, 0.01%)</title><rect x="85.9632%" y="837" width="0.0148%" height="15" fill="rgb(246,111,35)" fg:x="40701" fg:w="7"/><text x="86.2132%" y="847.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (7 samples, 0.01%)</title><rect x="85.9632%" y="821" width="0.0148%" height="15" fill="rgb(209,88,53)" fg:x="40701" fg:w="7"/><text x="86.2132%" y="831.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="85.9632%" y="805" width="0.0148%" height="15" fill="rgb(231,185,47)" fg:x="40701" fg:w="7"/><text x="86.2132%" y="815.50"></text></g><g><title>core::ptr::read (7 samples, 0.01%)</title><rect x="85.9632%" y="789" width="0.0148%" height="15" fill="rgb(233,154,1)" fg:x="40701" fg:w="7"/><text x="86.2132%" y="799.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (20 samples, 0.04%)</title><rect x="85.9442%" y="853" width="0.0422%" height="15" fill="rgb(225,15,46)" fg:x="40692" fg:w="20"/><text x="86.1942%" y="863.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (130 samples, 0.27%)</title><rect x="85.9864%" y="853" width="0.2746%" height="15" fill="rgb(211,135,41)" fg:x="40712" fg:w="130"/><text x="86.2364%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (130 samples, 0.27%)</title><rect x="85.9864%" y="837" width="0.2746%" height="15" fill="rgb(208,54,0)" fg:x="40712" fg:w="130"/><text x="86.2364%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (130 samples, 0.27%)</title><rect x="85.9864%" y="821" width="0.2746%" height="15" fill="rgb(244,136,14)" fg:x="40712" fg:w="130"/><text x="86.2364%" y="831.50"></text></g><g><title>futures_util::lock::mutex::Waiter::register (9 samples, 0.02%)</title><rect x="86.2610%" y="853" width="0.0190%" height="15" fill="rgb(241,56,14)" fg:x="40842" fg:w="9"/><text x="86.5110%" y="863.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="86.2610%" y="837" width="0.0190%" height="15" fill="rgb(205,80,24)" fg:x="40842" fg:w="9"/><text x="86.5110%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (9 samples, 0.02%)</title><rect x="86.2610%" y="821" width="0.0190%" height="15" fill="rgb(220,57,4)" fg:x="40842" fg:w="9"/><text x="86.5110%" y="831.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (8 samples, 0.02%)</title><rect x="86.2800%" y="853" width="0.0169%" height="15" fill="rgb(226,193,50)" fg:x="40851" fg:w="8"/><text x="86.5300%" y="863.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (8 samples, 0.02%)</title><rect x="86.2800%" y="837" width="0.0169%" height="15" fill="rgb(231,168,22)" fg:x="40851" fg:w="8"/><text x="86.5300%" y="847.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (234 samples, 0.49%)</title><rect x="85.8280%" y="869" width="0.4942%" height="15" fill="rgb(254,215,14)" fg:x="40637" fg:w="234"/><text x="86.0780%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.03%)</title><rect x="86.2969%" y="853" width="0.0253%" height="15" fill="rgb(211,115,16)" fg:x="40859" fg:w="12"/><text x="86.5469%" y="863.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (11 samples, 0.02%)</title><rect x="86.2990%" y="837" width="0.0232%" height="15" fill="rgb(236,210,16)" fg:x="40860" fg:w="11"/><text x="86.5490%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (11 samples, 0.02%)</title><rect x="86.2990%" y="821" width="0.0232%" height="15" fill="rgb(221,94,12)" fg:x="40860" fg:w="11"/><text x="86.5490%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="86.2990%" y="805" width="0.0232%" height="15" fill="rgb(235,218,49)" fg:x="40860" fg:w="11"/><text x="86.5490%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (34 samples, 0.07%)</title><rect x="86.4595%" y="853" width="0.0718%" height="15" fill="rgb(217,114,14)" fg:x="40936" fg:w="34"/><text x="86.7095%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.03%)</title><rect x="87.0953%" y="837" width="0.0275%" height="15" fill="rgb(216,145,22)" fg:x="41237" fg:w="13"/><text x="87.3453%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;::write_frame::{{closure}}&gt; (17 samples, 0.04%)</title><rect x="87.1227%" y="837" width="0.0359%" height="15" fill="rgb(217,112,39)" fg:x="41250" fg:w="17"/><text x="87.3727%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (18 samples, 0.04%)</title><rect x="87.5663%" y="821" width="0.0380%" height="15" fill="rgb(225,85,32)" fg:x="41460" fg:w="18"/><text x="87.8163%" y="831.50"></text></g><g><title>&lt;fastwebsockets::Role as core::cmp::PartialEq&gt;::eq (19 samples, 0.04%)</title><rect x="87.9380%" y="805" width="0.0401%" height="15" fill="rgb(245,209,47)" fg:x="41636" fg:w="19"/><text x="88.1880%" y="815.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (85 samples, 0.18%)</title><rect x="87.9781%" y="805" width="0.1795%" height="15" fill="rgb(218,220,15)" fg:x="41655" fg:w="85"/><text x="88.2281%" y="815.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="88.1576%" y="805" width="0.0127%" height="15" fill="rgb(222,202,31)" fg:x="41740" fg:w="6"/><text x="88.4076%" y="815.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (44 samples, 0.09%)</title><rect x="88.2780%" y="773" width="0.0929%" height="15" fill="rgb(243,203,4)" fg:x="41797" fg:w="44"/><text x="88.5280%" y="783.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (8 samples, 0.02%)</title><rect x="88.3541%" y="757" width="0.0169%" height="15" fill="rgb(237,92,17)" fg:x="41833" fg:w="8"/><text x="88.6041%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="88.3604%" y="741" width="0.0106%" height="15" fill="rgb(231,119,7)" fg:x="41836" fg:w="5"/><text x="88.6104%" y="751.50"></text></g><g><title>[libc.so.6] (227 samples, 0.48%)</title><rect x="89.0046%" y="629" width="0.4794%" height="15" fill="rgb(237,82,41)" fg:x="42141" fg:w="227"/><text x="89.2546%" y="639.50"></text></g><g><title>__send (518 samples, 1.09%)</title><rect x="88.5378%" y="645" width="1.0941%" height="15" fill="rgb(226,81,48)" fg:x="41920" fg:w="518"/><text x="88.7878%" y="655.50"></text></g><g><title>[unknown] (70 samples, 0.15%)</title><rect x="89.4840%" y="629" width="0.1478%" height="15" fill="rgb(234,70,51)" fg:x="42368" fg:w="70"/><text x="89.7340%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (623 samples, 1.32%)</title><rect x="88.5230%" y="741" width="1.3158%" height="15" fill="rgb(251,86,4)" fg:x="41913" fg:w="623"/><text x="88.7730%" y="751.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (623 samples, 1.32%)</title><rect x="88.5230%" y="725" width="1.3158%" height="15" fill="rgb(244,144,28)" fg:x="41913" fg:w="623"/><text x="88.7730%" y="735.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (623 samples, 1.32%)</title><rect x="88.5230%" y="709" width="1.3158%" height="15" fill="rgb(232,161,39)" fg:x="41913" fg:w="623"/><text x="88.7730%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (623 samples, 1.32%)</title><rect x="88.5230%" y="693" width="1.3158%" height="15" fill="rgb(247,34,51)" fg:x="41913" fg:w="623"/><text x="88.7730%" y="703.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (623 samples, 1.32%)</title><rect x="88.5230%" y="677" width="1.3158%" height="15" fill="rgb(225,132,2)" fg:x="41913" fg:w="623"/><text x="88.7730%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (623 samples, 1.32%)</title><rect x="88.5230%" y="661" width="1.3158%" height="15" fill="rgb(209,159,44)" fg:x="41913" fg:w="623"/><text x="88.7730%" y="671.50"></text></g><g><title>std::sys::pal::unix::cvt (98 samples, 0.21%)</title><rect x="89.6319%" y="645" width="0.2070%" height="15" fill="rgb(251,214,1)" fg:x="42438" fg:w="98"/><text x="89.8819%" y="655.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (95 samples, 0.20%)</title><rect x="89.6382%" y="629" width="0.2006%" height="15" fill="rgb(247,84,47)" fg:x="42441" fg:w="95"/><text x="89.8882%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.03%)</title><rect x="89.8769%" y="661" width="0.0338%" height="15" fill="rgb(240,111,43)" fg:x="42554" fg:w="16"/><text x="90.1269%" y="671.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (16 samples, 0.03%)</title><rect x="89.8769%" y="645" width="0.0338%" height="15" fill="rgb(215,214,35)" fg:x="42554" fg:w="16"/><text x="90.1269%" y="655.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (16 samples, 0.03%)</title><rect x="89.8769%" y="629" width="0.0338%" height="15" fill="rgb(248,207,23)" fg:x="42554" fg:w="16"/><text x="90.1269%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (13 samples, 0.03%)</title><rect x="89.8832%" y="613" width="0.0275%" height="15" fill="rgb(214,186,4)" fg:x="42557" fg:w="13"/><text x="90.1332%" y="623.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (5 samples, 0.01%)</title><rect x="89.9381%" y="629" width="0.0106%" height="15" fill="rgb(220,133,22)" fg:x="42583" fg:w="5"/><text x="90.1881%" y="639.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (37 samples, 0.08%)</title><rect x="89.8769%" y="709" width="0.0781%" height="15" fill="rgb(239,134,19)" fg:x="42554" fg:w="37"/><text x="90.1269%" y="719.50"></text></g><g><title>tokio::runtime::context::budget (37 samples, 0.08%)</title><rect x="89.8769%" y="693" width="0.0781%" height="15" fill="rgb(250,140,9)" fg:x="42554" fg:w="37"/><text x="90.1269%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.08%)</title><rect x="89.8769%" y="677" width="0.0781%" height="15" fill="rgb(225,59,14)" fg:x="42554" fg:w="37"/><text x="90.1269%" y="687.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (21 samples, 0.04%)</title><rect x="89.9107%" y="661" width="0.0444%" height="15" fill="rgb(214,152,51)" fg:x="42570" fg:w="21"/><text x="90.1607%" y="671.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (21 samples, 0.04%)</title><rect x="89.9107%" y="645" width="0.0444%" height="15" fill="rgb(251,227,43)" fg:x="42570" fg:w="21"/><text x="90.1607%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (120 samples, 0.25%)</title><rect x="89.9698%" y="693" width="0.2534%" height="15" fill="rgb(241,96,17)" fg:x="42598" fg:w="120"/><text x="90.2198%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (120 samples, 0.25%)</title><rect x="89.9698%" y="677" width="0.2534%" height="15" fill="rgb(234,198,43)" fg:x="42598" fg:w="120"/><text x="90.2198%" y="687.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (926 samples, 1.96%)</title><rect x="88.2759%" y="789" width="1.9558%" height="15" fill="rgb(220,108,29)" fg:x="41796" fg:w="926"/><text x="88.5259%" y="799.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (881 samples, 1.86%)</title><rect x="88.3710%" y="773" width="1.8607%" height="15" fill="rgb(226,163,33)" fg:x="41841" fg:w="881"/><text x="88.6210%" y="783.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (850 samples, 1.80%)</title><rect x="88.4364%" y="757" width="1.7953%" height="15" fill="rgb(205,194,45)" fg:x="41872" fg:w="850"/><text x="88.6864%" y="767.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (184 samples, 0.39%)</title><rect x="89.8431%" y="741" width="0.3886%" height="15" fill="rgb(206,143,44)" fg:x="42538" fg:w="184"/><text x="90.0931%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (177 samples, 0.37%)</title><rect x="89.8579%" y="725" width="0.3738%" height="15" fill="rgb(236,136,36)" fg:x="42545" fg:w="177"/><text x="90.1079%" y="735.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (131 samples, 0.28%)</title><rect x="89.9550%" y="709" width="0.2767%" height="15" fill="rgb(249,172,42)" fg:x="42591" fg:w="131"/><text x="90.2050%" y="719.50"></text></g><g><title>core::ptr::read (12 samples, 0.03%)</title><rect x="90.2359%" y="757" width="0.0253%" height="15" fill="rgb(216,139,23)" fg:x="42724" fg:w="12"/><text x="90.4859%" y="767.50"></text></g><g><title>core::mem::take (15 samples, 0.03%)</title><rect x="90.2359%" y="789" width="0.0317%" height="15" fill="rgb(207,166,20)" fg:x="42724" fg:w="15"/><text x="90.4859%" y="799.50"></text></g><g><title>core::mem::replace (15 samples, 0.03%)</title><rect x="90.2359%" y="773" width="0.0317%" height="15" fill="rgb(210,209,22)" fg:x="42724" fg:w="15"/><text x="90.4859%" y="783.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (997 samples, 2.11%)</title><rect x="88.1703%" y="805" width="2.1057%" height="15" fill="rgb(232,118,20)" fg:x="41746" fg:w="997"/><text x="88.4203%" y="815.50">&lt;..</text></g><g><title>bytes::bytes_mut::BytesMut::kind (13 samples, 0.03%)</title><rect x="90.4070%" y="741" width="0.0275%" height="15" fill="rgb(238,113,42)" fg:x="42805" fg:w="13"/><text x="90.6570%" y="751.50"></text></g><g><title>cache_bin_dalloc_easy (36 samples, 0.08%)</title><rect x="90.9413%" y="581" width="0.0760%" height="15" fill="rgb(231,42,5)" fg:x="43058" fg:w="36"/><text x="91.1913%" y="591.50"></text></g><g><title>cache_bin_full (13 samples, 0.03%)</title><rect x="90.9899%" y="565" width="0.0275%" height="15" fill="rgb(243,166,24)" fg:x="43081" fg:w="13"/><text x="91.2399%" y="575.50"></text></g><g><title>sz_index2size (45 samples, 0.10%)</title><rect x="91.0174%" y="581" width="0.0950%" height="15" fill="rgb(237,226,12)" fg:x="43094" fg:w="45"/><text x="91.2674%" y="591.50"></text></g><g><title>sz_index2size_lookup (45 samples, 0.10%)</title><rect x="91.0174%" y="565" width="0.0950%" height="15" fill="rgb(229,133,24)" fg:x="43094" fg:w="45"/><text x="91.2674%" y="575.50"></text></g><g><title>sz_index2size_lookup_impl (45 samples, 0.10%)</title><rect x="91.0174%" y="549" width="0.0950%" height="15" fill="rgb(238,33,43)" fg:x="43094" fg:w="45"/><text x="91.2674%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (322 samples, 0.68%)</title><rect x="90.4387%" y="677" width="0.6801%" height="15" fill="rgb(227,59,38)" fg:x="42820" fg:w="322"/><text x="90.6887%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (322 samples, 0.68%)</title><rect x="90.4387%" y="661" width="0.6801%" height="15" fill="rgb(230,97,0)" fg:x="42820" fg:w="322"/><text x="90.6887%" y="671.50"></text></g><g><title>__rust_dealloc (322 samples, 0.68%)</title><rect x="90.4387%" y="645" width="0.6801%" height="15" fill="rgb(250,173,50)" fg:x="42820" fg:w="322"/><text x="90.6887%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (322 samples, 0.68%)</title><rect x="90.4387%" y="629" width="0.6801%" height="15" fill="rgb(240,15,50)" fg:x="42820" fg:w="322"/><text x="90.6887%" y="639.50"></text></g><g><title>_rjem_sdallocx (319 samples, 0.67%)</title><rect x="90.4450%" y="613" width="0.6737%" height="15" fill="rgb(221,93,22)" fg:x="42823" fg:w="319"/><text x="90.6950%" y="623.50"></text></g><g><title>free_fastpath (319 samples, 0.67%)</title><rect x="90.4450%" y="597" width="0.6737%" height="15" fill="rgb(245,180,53)" fg:x="42823" fg:w="319"/><text x="90.6950%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (400 samples, 0.84%)</title><rect x="90.2760%" y="805" width="0.8448%" height="15" fill="rgb(231,88,51)" fg:x="42743" fg:w="400"/><text x="90.5260%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (400 samples, 0.84%)</title><rect x="90.2760%" y="789" width="0.8448%" height="15" fill="rgb(240,58,21)" fg:x="42743" fg:w="400"/><text x="90.5260%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (352 samples, 0.74%)</title><rect x="90.3774%" y="773" width="0.7434%" height="15" fill="rgb(237,21,10)" fg:x="42791" fg:w="352"/><text x="90.6274%" y="783.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (352 samples, 0.74%)</title><rect x="90.3774%" y="757" width="0.7434%" height="15" fill="rgb(218,43,11)" fg:x="42791" fg:w="352"/><text x="90.6274%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (323 samples, 0.68%)</title><rect x="90.4387%" y="741" width="0.6822%" height="15" fill="rgb(218,221,29)" fg:x="42820" fg:w="323"/><text x="90.6887%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (323 samples, 0.68%)</title><rect x="90.4387%" y="725" width="0.6822%" height="15" fill="rgb(214,118,42)" fg:x="42820" fg:w="323"/><text x="90.6887%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (323 samples, 0.68%)</title><rect x="90.4387%" y="709" width="0.6822%" height="15" fill="rgb(251,200,26)" fg:x="42820" fg:w="323"/><text x="90.6887%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (323 samples, 0.68%)</title><rect x="90.4387%" y="693" width="0.6822%" height="15" fill="rgb(237,101,39)" fg:x="42820" fg:w="323"/><text x="90.6887%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (44 samples, 0.09%)</title><rect x="91.1568%" y="789" width="0.0929%" height="15" fill="rgb(251,117,11)" fg:x="43160" fg:w="44"/><text x="91.4068%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.09%)</title><rect x="91.1568%" y="773" width="0.0929%" height="15" fill="rgb(216,223,23)" fg:x="43160" fg:w="44"/><text x="91.4068%" y="783.50"></text></g><g><title>[libc.so.6] (39 samples, 0.08%)</title><rect x="91.1673%" y="757" width="0.0824%" height="15" fill="rgb(251,54,12)" fg:x="43165" fg:w="39"/><text x="91.4173%" y="767.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (26 samples, 0.05%)</title><rect x="91.2497%" y="789" width="0.0549%" height="15" fill="rgb(254,176,54)" fg:x="43204" fg:w="26"/><text x="91.4997%" y="799.50"></text></g><g><title>fastwebsockets::frame::Frame::write (90 samples, 0.19%)</title><rect x="91.1209%" y="805" width="0.1901%" height="15" fill="rgb(210,32,8)" fg:x="43143" fg:w="90"/><text x="91.3709%" y="815.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="91.4482%" y="789" width="0.0127%" height="15" fill="rgb(235,52,38)" fg:x="43298" fg:w="6"/><text x="91.6982%" y="799.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (11 samples, 0.02%)</title><rect x="91.4609%" y="773" width="0.0232%" height="15" fill="rgb(231,4,44)" fg:x="43304" fg:w="11"/><text x="91.7109%" y="783.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (8 samples, 0.02%)</title><rect x="91.4673%" y="757" width="0.0169%" height="15" fill="rgb(249,2,32)" fg:x="43307" fg:w="8"/><text x="91.7173%" y="767.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (7 samples, 0.01%)</title><rect x="91.4694%" y="741" width="0.0148%" height="15" fill="rgb(224,65,26)" fg:x="43308" fg:w="7"/><text x="91.7194%" y="751.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (12 samples, 0.03%)</title><rect x="91.4609%" y="789" width="0.0253%" height="15" fill="rgb(250,73,40)" fg:x="43304" fg:w="12"/><text x="91.7109%" y="799.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (47 samples, 0.10%)</title><rect x="91.5116%" y="757" width="0.0993%" height="15" fill="rgb(253,177,16)" fg:x="43328" fg:w="47"/><text x="91.7616%" y="767.50"></text></g><g><title>std::sys::pal::unix::cvt (21 samples, 0.04%)</title><rect x="91.7101%" y="565" width="0.0444%" height="15" fill="rgb(217,32,34)" fg:x="43422" fg:w="21"/><text x="91.9601%" y="575.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (21 samples, 0.04%)</title><rect x="91.7101%" y="549" width="0.0444%" height="15" fill="rgb(212,7,10)" fg:x="43422" fg:w="21"/><text x="91.9601%" y="559.50"></text></g><g><title>[libc.so.6] (273 samples, 0.58%)</title><rect x="92.6880%" y="549" width="0.5766%" height="15" fill="rgb(245,89,8)" fg:x="43885" fg:w="273"/><text x="92.9380%" y="559.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (827 samples, 1.75%)</title><rect x="91.7038%" y="693" width="1.7467%" height="15" fill="rgb(237,16,53)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="703.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (827 samples, 1.75%)</title><rect x="91.7038%" y="677" width="1.7467%" height="15" fill="rgb(250,204,30)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="687.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (827 samples, 1.75%)</title><rect x="91.7038%" y="661" width="1.7467%" height="15" fill="rgb(208,77,27)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="671.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (827 samples, 1.75%)</title><rect x="91.7038%" y="645" width="1.7467%" height="15" fill="rgb(250,204,28)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="655.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (827 samples, 1.75%)</title><rect x="91.7038%" y="629" width="1.7467%" height="15" fill="rgb(244,63,21)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="639.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (827 samples, 1.75%)</title><rect x="91.7038%" y="613" width="1.7467%" height="15" fill="rgb(236,85,44)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="623.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (827 samples, 1.75%)</title><rect x="91.7038%" y="597" width="1.7467%" height="15" fill="rgb(215,98,4)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="607.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (827 samples, 1.75%)</title><rect x="91.7038%" y="581" width="1.7467%" height="15" fill="rgb(235,38,11)" fg:x="43419" fg:w="827"/><text x="91.9538%" y="591.50"></text></g><g><title>writev (803 samples, 1.70%)</title><rect x="91.7545%" y="565" width="1.6960%" height="15" fill="rgb(254,186,25)" fg:x="43443" fg:w="803"/><text x="92.0045%" y="575.50"></text></g><g><title>[unknown] (88 samples, 0.19%)</title><rect x="93.2646%" y="549" width="0.1859%" height="15" fill="rgb(225,55,31)" fg:x="44158" fg:w="88"/><text x="93.5146%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="93.4843%" y="629" width="0.0148%" height="15" fill="rgb(211,15,21)" fg:x="44262" fg:w="7"/><text x="93.7343%" y="639.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (7 samples, 0.01%)</title><rect x="93.4843%" y="613" width="0.0148%" height="15" fill="rgb(215,187,41)" fg:x="44262" fg:w="7"/><text x="93.7343%" y="623.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="93.4843%" y="597" width="0.0148%" height="15" fill="rgb(248,69,32)" fg:x="44262" fg:w="7"/><text x="93.7343%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="93.5012%" y="597" width="0.0106%" height="15" fill="rgb(252,102,52)" fg:x="44270" fg:w="5"/><text x="93.7512%" y="607.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (6 samples, 0.01%)</title><rect x="93.5138%" y="597" width="0.0127%" height="15" fill="rgb(253,140,32)" fg:x="44276" fg:w="6"/><text x="93.7638%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (5 samples, 0.01%)</title><rect x="93.5160%" y="581" width="0.0106%" height="15" fill="rgb(216,56,42)" fg:x="44277" fg:w="5"/><text x="93.7660%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (5 samples, 0.01%)</title><rect x="93.5160%" y="565" width="0.0106%" height="15" fill="rgb(216,184,14)" fg:x="44277" fg:w="5"/><text x="93.7660%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (5 samples, 0.01%)</title><rect x="93.5160%" y="549" width="0.0106%" height="15" fill="rgb(237,187,27)" fg:x="44277" fg:w="5"/><text x="93.7660%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.01%)</title><rect x="93.5160%" y="533" width="0.0106%" height="15" fill="rgb(219,65,3)" fg:x="44277" fg:w="5"/><text x="93.7660%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (28 samples, 0.06%)</title><rect x="93.4822%" y="677" width="0.0591%" height="15" fill="rgb(245,83,25)" fg:x="44261" fg:w="28"/><text x="93.7322%" y="687.50"></text></g><g><title>tokio::runtime::context::budget (28 samples, 0.06%)</title><rect x="93.4822%" y="661" width="0.0591%" height="15" fill="rgb(214,205,45)" fg:x="44261" fg:w="28"/><text x="93.7322%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.06%)</title><rect x="93.4822%" y="645" width="0.0591%" height="15" fill="rgb(241,20,18)" fg:x="44261" fg:w="28"/><text x="93.7322%" y="655.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (20 samples, 0.04%)</title><rect x="93.4991%" y="629" width="0.0422%" height="15" fill="rgb(232,163,23)" fg:x="44269" fg:w="20"/><text x="93.7491%" y="639.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (20 samples, 0.04%)</title><rect x="93.4991%" y="613" width="0.0422%" height="15" fill="rgb(214,5,46)" fg:x="44269" fg:w="20"/><text x="93.7491%" y="623.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (7 samples, 0.01%)</title><rect x="93.5265%" y="597" width="0.0148%" height="15" fill="rgb(229,78,17)" fg:x="44282" fg:w="7"/><text x="93.7765%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (80 samples, 0.17%)</title><rect x="93.5561%" y="661" width="0.1690%" height="15" fill="rgb(248,89,10)" fg:x="44296" fg:w="80"/><text x="93.8061%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.17%)</title><rect x="93.5561%" y="645" width="0.1690%" height="15" fill="rgb(248,54,15)" fg:x="44296" fg:w="80"/><text x="93.8061%" y="655.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (1,063 samples, 2.25%)</title><rect x="91.4863%" y="789" width="2.2451%" height="15" fill="rgb(223,116,6)" fg:x="43316" fg:w="1063"/><text x="91.7363%" y="799.50">&lt;..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,063 samples, 2.25%)</title><rect x="91.4863%" y="773" width="2.2451%" height="15" fill="rgb(205,125,38)" fg:x="43316" fg:w="1063"/><text x="91.7363%" y="783.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (1,004 samples, 2.12%)</title><rect x="91.6109%" y="757" width="2.1205%" height="15" fill="rgb(251,78,38)" fg:x="43375" fg:w="1004"/><text x="91.8609%" y="767.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (969 samples, 2.05%)</title><rect x="91.6848%" y="741" width="2.0466%" height="15" fill="rgb(253,78,28)" fg:x="43410" fg:w="969"/><text x="91.9348%" y="751.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (969 samples, 2.05%)</title><rect x="91.6848%" y="725" width="2.0466%" height="15" fill="rgb(209,120,3)" fg:x="43410" fg:w="969"/><text x="91.9348%" y="735.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (969 samples, 2.05%)</title><rect x="91.6848%" y="709" width="2.0466%" height="15" fill="rgb(238,229,9)" fg:x="43410" fg:w="969"/><text x="91.9348%" y="719.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (133 samples, 0.28%)</title><rect x="93.4505%" y="693" width="0.2809%" height="15" fill="rgb(253,159,18)" fg:x="44246" fg:w="133"/><text x="93.7005%" y="703.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (90 samples, 0.19%)</title><rect x="93.5413%" y="677" width="0.1901%" height="15" fill="rgb(244,42,34)" fg:x="44289" fg:w="90"/><text x="93.7913%" y="687.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (3,130 samples, 6.61%)</title><rect x="87.1586%" y="837" width="6.6108%" height="15" fill="rgb(224,8,7)" fg:x="41267" fg:w="3130"/><text x="87.4086%" y="847.50">fastwebso..</text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (2,919 samples, 6.17%)</title><rect x="87.6043%" y="821" width="6.1651%" height="15" fill="rgb(210,201,45)" fg:x="41478" fg:w="2919"/><text x="87.8543%" y="831.50">fastwebs..</text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (1,164 samples, 2.46%)</title><rect x="91.3110%" y="805" width="2.4584%" height="15" fill="rgb(252,185,21)" fg:x="43233" fg:w="1164"/><text x="91.5610%" y="815.50">fa..</text></g><g><title>fastwebsockets::frame::Frame::fmt_head (18 samples, 0.04%)</title><rect x="93.7314%" y="789" width="0.0380%" height="15" fill="rgb(223,131,1)" fg:x="44379" fg:w="18"/><text x="93.9814%" y="799.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketWrite&lt;A,B&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (3,553 samples, 7.50%)</title><rect x="86.3223%" y="869" width="7.5042%" height="15" fill="rgb(245,141,16)" fg:x="40871" fg:w="3553"/><text x="86.5723%" y="879.50">&lt;wisp_mux:..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (3,454 samples, 7.30%)</title><rect x="86.5314%" y="853" width="7.2951%" height="15" fill="rgb(229,55,45)" fg:x="40970" fg:w="3454"/><text x="86.7814%" y="863.50">wisp_mux::..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;wisp_mux::ws::Frame&gt; for fastwebsockets::frame::Frame&gt;::from (27 samples, 0.06%)</title><rect x="93.7694%" y="837" width="0.0570%" height="15" fill="rgb(208,92,15)" fg:x="44397" fg:w="27"/><text x="94.0194%" y="847.50"></text></g><g><title>wisp_mux::fastwebsockets::match_payload_reverse (16 samples, 0.03%)</title><rect x="93.7926%" y="821" width="0.0338%" height="15" fill="rgb(234,185,47)" fg:x="44408" fg:w="16"/><text x="94.0426%" y="831.50"></text></g><g><title>[libc.so.6] (225 samples, 0.48%)</title><rect x="93.8264%" y="869" width="0.4752%" height="15" fill="rgb(253,104,50)" fg:x="44424" fg:w="225"/><text x="94.0764%" y="879.50"></text></g><g><title>&lt;slab::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.18%)</title><rect x="94.3122%" y="821" width="0.1837%" height="15" fill="rgb(205,70,7)" fg:x="44654" fg:w="87"/><text x="94.5622%" y="831.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="94.4706%" y="805" width="0.0253%" height="15" fill="rgb(240,178,43)" fg:x="44729" fg:w="12"/><text x="94.7206%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="94.4706%" y="789" width="0.0253%" height="15" fill="rgb(214,112,2)" fg:x="44729" fg:w="12"/><text x="94.7206%" y="799.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="94.4706%" y="773" width="0.0253%" height="15" fill="rgb(206,46,17)" fg:x="44729" fg:w="12"/><text x="94.7206%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="94.4748%" y="757" width="0.0211%" height="15" fill="rgb(225,220,16)" fg:x="44731" fg:w="10"/><text x="94.7248%" y="767.50"></text></g><g><title>std::sync::poison::Flag::done (5 samples, 0.01%)</title><rect x="94.5023%" y="789" width="0.0106%" height="15" fill="rgb(238,65,40)" fg:x="44744" fg:w="5"/><text x="94.7523%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (98 samples, 0.21%)</title><rect x="94.4960%" y="821" width="0.2070%" height="15" fill="rgb(230,151,21)" fg:x="44741" fg:w="98"/><text x="94.7460%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.21%)</title><rect x="94.4960%" y="805" width="0.2070%" height="15" fill="rgb(218,58,49)" fg:x="44741" fg:w="98"/><text x="94.7460%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (90 samples, 0.19%)</title><rect x="94.5129%" y="789" width="0.1901%" height="15" fill="rgb(219,179,14)" fg:x="44749" fg:w="90"/><text x="94.7629%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (86 samples, 0.18%)</title><rect x="94.5213%" y="773" width="0.1816%" height="15" fill="rgb(223,72,1)" fg:x="44753" fg:w="86"/><text x="94.7713%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (86 samples, 0.18%)</title><rect x="94.5213%" y="757" width="0.1816%" height="15" fill="rgb(238,126,10)" fg:x="44753" fg:w="86"/><text x="94.7713%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (116 samples, 0.24%)</title><rect x="94.7050%" y="821" width="0.2450%" height="15" fill="rgb(224,206,38)" fg:x="44840" fg:w="116"/><text x="94.9550%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_and (116 samples, 0.24%)</title><rect x="94.7050%" y="805" width="0.2450%" height="15" fill="rgb(212,201,54)" fg:x="44840" fg:w="116"/><text x="94.9550%" y="815.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="94.9522%" y="805" width="0.0127%" height="15" fill="rgb(218,154,48)" fg:x="44957" fg:w="6"/><text x="95.2022%" y="815.50"></text></g><g><title>core::ptr::read (6 samples, 0.01%)</title><rect x="94.9522%" y="789" width="0.0127%" height="15" fill="rgb(232,93,24)" fg:x="44957" fg:w="6"/><text x="95.2022%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="94.9691%" y="693" width="0.0127%" height="15" fill="rgb(245,30,21)" fg:x="44965" fg:w="6"/><text x="95.2191%" y="703.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (6 samples, 0.01%)</title><rect x="94.9691%" y="677" width="0.0127%" height="15" fill="rgb(242,148,29)" fg:x="44965" fg:w="6"/><text x="95.2191%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="94.9817%" y="677" width="0.0106%" height="15" fill="rgb(244,153,54)" fg:x="44971" fg:w="5"/><text x="95.2317%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="94.9817%" y="661" width="0.0106%" height="15" fill="rgb(252,87,22)" fg:x="44971" fg:w="5"/><text x="95.2317%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="94.9817%" y="645" width="0.0106%" height="15" fill="rgb(210,51,29)" fg:x="44971" fg:w="5"/><text x="95.2317%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (28 samples, 0.06%)</title><rect x="94.9691%" y="741" width="0.0591%" height="15" fill="rgb(242,136,47)" fg:x="44965" fg:w="28"/><text x="95.2191%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (28 samples, 0.06%)</title><rect x="94.9691%" y="725" width="0.0591%" height="15" fill="rgb(238,68,4)" fg:x="44965" fg:w="28"/><text x="95.2191%" y="735.50"></text></g><g><title>tokio::runtime::context::with_scheduler (28 samples, 0.06%)</title><rect x="94.9691%" y="709" width="0.0591%" height="15" fill="rgb(242,161,30)" fg:x="44965" fg:w="28"/><text x="95.2191%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (22 samples, 0.05%)</title><rect x="94.9817%" y="693" width="0.0465%" height="15" fill="rgb(218,58,44)" fg:x="44971" fg:w="22"/><text x="95.2317%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (17 samples, 0.04%)</title><rect x="94.9923%" y="677" width="0.0359%" height="15" fill="rgb(252,125,32)" fg:x="44976" fg:w="17"/><text x="95.2423%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (6 samples, 0.01%)</title><rect x="95.0155%" y="661" width="0.0127%" height="15" fill="rgb(219,178,0)" fg:x="44987" fg:w="6"/><text x="95.2655%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (6 samples, 0.01%)</title><rect x="95.0155%" y="645" width="0.0127%" height="15" fill="rgb(213,152,7)" fg:x="44987" fg:w="6"/><text x="95.2655%" y="655.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (53 samples, 0.11%)</title><rect x="94.9691%" y="757" width="0.1119%" height="15" fill="rgb(249,109,34)" fg:x="44965" fg:w="53"/><text x="95.2191%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::schedule (25 samples, 0.05%)</title><rect x="95.0282%" y="741" width="0.0528%" height="15" fill="rgb(232,96,21)" fg:x="44993" fg:w="25"/><text x="95.2782%" y="751.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (14 samples, 0.03%)</title><rect x="95.0514%" y="725" width="0.0296%" height="15" fill="rgb(228,27,39)" fg:x="45004" fg:w="14"/><text x="95.3014%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::load (26 samples, 0.05%)</title><rect x="95.0894%" y="725" width="0.0549%" height="15" fill="rgb(211,182,52)" fg:x="45022" fg:w="26"/><text x="95.3394%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (26 samples, 0.05%)</title><rect x="95.0894%" y="709" width="0.0549%" height="15" fill="rgb(234,178,38)" fg:x="45022" fg:w="26"/><text x="95.3394%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.05%)</title><rect x="95.0894%" y="693" width="0.0549%" height="15" fill="rgb(221,111,3)" fg:x="45022" fg:w="26"/><text x="95.3394%" y="703.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (93 samples, 0.20%)</title><rect x="94.9500%" y="821" width="0.1964%" height="15" fill="rgb(228,175,21)" fg:x="44956" fg:w="93"/><text x="95.2000%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (86 samples, 0.18%)</title><rect x="94.9648%" y="805" width="0.1816%" height="15" fill="rgb(228,174,43)" fg:x="44963" fg:w="86"/><text x="95.2148%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (86 samples, 0.18%)</title><rect x="94.9648%" y="789" width="0.1816%" height="15" fill="rgb(211,191,0)" fg:x="44963" fg:w="86"/><text x="95.2148%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (86 samples, 0.18%)</title><rect x="94.9648%" y="773" width="0.1816%" height="15" fill="rgb(253,117,3)" fg:x="44963" fg:w="86"/><text x="95.2148%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (31 samples, 0.07%)</title><rect x="95.0810%" y="757" width="0.0655%" height="15" fill="rgb(241,127,19)" fg:x="45018" fg:w="31"/><text x="95.3310%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (31 samples, 0.07%)</title><rect x="95.0810%" y="741" width="0.0655%" height="15" fill="rgb(218,103,12)" fg:x="45018" fg:w="31"/><text x="95.3310%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (100 samples, 0.21%)</title><rect x="95.1591%" y="789" width="0.2112%" height="15" fill="rgb(236,214,43)" fg:x="45055" fg:w="100"/><text x="95.4091%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (100 samples, 0.21%)</title><rect x="95.1591%" y="773" width="0.2112%" height="15" fill="rgb(244,144,19)" fg:x="45055" fg:w="100"/><text x="95.4091%" y="783.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h4eb7268d3777a612E (509 samples, 1.08%)</title><rect x="94.3016%" y="869" width="1.0750%" height="15" fill="rgb(246,188,10)" fg:x="44649" fg:w="509"/><text x="94.5516%" y="879.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (507 samples, 1.07%)</title><rect x="94.3059%" y="853" width="1.0708%" height="15" fill="rgb(212,193,33)" fg:x="44651" fg:w="507"/><text x="94.5559%" y="863.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (507 samples, 1.07%)</title><rect x="94.3059%" y="837" width="1.0708%" height="15" fill="rgb(241,51,29)" fg:x="44651" fg:w="507"/><text x="94.5559%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (108 samples, 0.23%)</title><rect x="95.1486%" y="821" width="0.2281%" height="15" fill="rgb(211,58,19)" fg:x="45050" fg:w="108"/><text x="95.3986%" y="831.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (104 samples, 0.22%)</title><rect x="95.1570%" y="805" width="0.2197%" height="15" fill="rgb(229,111,26)" fg:x="45054" fg:w="104"/><text x="95.4070%" y="815.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (7,910 samples, 16.71%)</title><rect x="78.6977%" y="949" width="16.7064%" height="15" fill="rgb(213,115,40)" fg:x="37261" fg:w="7910"/><text x="78.9477%" y="959.50">epoxy_server::handle::wisp..</text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write::_{{closure}} (6,751 samples, 14.26%)</title><rect x="81.1456%" y="933" width="14.2586%" height="15" fill="rgb(209,56,44)" fg:x="38420" fg:w="6751"/><text x="81.3956%" y="943.50">wisp_mux::stream::MuxS..</text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload::_{{closure}} (6,596 samples, 13.93%)</title><rect x="81.4730%" y="917" width="13.9312%" height="15" fill="rgb(230,108,32)" fg:x="38575" fg:w="6596"/><text x="81.7230%" y="927.50">wisp_mux::stream::Mux..</text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload_internal::_{{closure}} (5,479 samples, 11.57%)</title><rect x="83.8321%" y="901" width="11.5720%" height="15" fill="rgb(216,165,31)" fg:x="39692" fg:w="5479"/><text x="84.0821%" y="911.50">wisp_mux::stream:..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_split::_{{closure}} (4,989 samples, 10.54%)</title><rect x="84.8670%" y="885" width="10.5371%" height="15" fill="rgb(218,122,21)" fg:x="40182" fg:w="4989"/><text x="85.1170%" y="895.50">wisp_mux::ws::L..</text></g><g><title>_ZN4core3ptr1141drop_in_place$LT$$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$u20$as$u20$wisp_mux..ws..WebSocketWrite$GT$..wisp_write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17hc5896ef9fe9e10c8E (13 samples, 0.03%)</title><rect x="95.3767%" y="869" width="0.0275%" height="15" fill="rgb(223,224,47)" fg:x="45158" fg:w="13"/><text x="95.6267%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="95.4041%" y="885" width="0.0106%" height="15" fill="rgb(238,102,44)" fg:x="45171" fg:w="5"/><text x="95.6541%" y="895.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (5 samples, 0.01%)</title><rect x="95.4041%" y="869" width="0.0106%" height="15" fill="rgb(236,46,40)" fg:x="45171" fg:w="5"/><text x="95.6541%" y="879.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="95.4041%" y="853" width="0.0106%" height="15" fill="rgb(247,202,50)" fg:x="45171" fg:w="5"/><text x="95.6541%" y="863.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12,697 samples, 26.82%)</title><rect x="68.6084%" y="981" width="26.8169%" height="15" fill="rgb(209,99,20)" fg:x="32484" fg:w="12697"/><text x="68.8584%" y="991.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (12,697 samples, 26.82%)</title><rect x="68.6084%" y="965" width="26.8169%" height="15" fill="rgb(252,27,34)" fg:x="32484" fg:w="12697"/><text x="68.8584%" y="975.50">epoxy_server::handle::wisp::handle_stream::..</text></g><g><title>tokio::macros::support::thread_rng_n (10 samples, 0.02%)</title><rect x="95.4041%" y="949" width="0.0211%" height="15" fill="rgb(215,206,23)" fg:x="45171" fg:w="10"/><text x="95.6541%" y="959.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (10 samples, 0.02%)</title><rect x="95.4041%" y="933" width="0.0211%" height="15" fill="rgb(212,135,36)" fg:x="45171" fg:w="10"/><text x="95.6541%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="95.4041%" y="917" width="0.0211%" height="15" fill="rgb(240,189,1)" fg:x="45171" fg:w="10"/><text x="95.6541%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="95.4041%" y="901" width="0.0211%" height="15" fill="rgb(242,56,20)" fg:x="45171" fg:w="10"/><text x="95.6541%" y="911.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (5 samples, 0.01%)</title><rect x="95.4147%" y="885" width="0.0106%" height="15" fill="rgb(247,132,33)" fg:x="45176" fg:w="5"/><text x="95.6647%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::Dropper&lt;bytes::bytes::Bytes&gt;&gt; (7 samples, 0.01%)</title><rect x="95.4253%" y="677" width="0.0148%" height="15" fill="rgb(208,149,11)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="687.50"></text></g><g><title>&lt;&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="95.4253%" y="661" width="0.0148%" height="15" fill="rgb(211,33,11)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bytes::bytes::Bytes]&gt; (7 samples, 0.01%)</title><rect x="95.4253%" y="645" width="0.0148%" height="15" fill="rgb(221,29,38)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (7 samples, 0.01%)</title><rect x="95.4253%" y="629" width="0.0148%" height="15" fill="rgb(206,182,49)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="95.4253%" y="613" width="0.0148%" height="15" fill="rgb(216,140,1)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="623.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (7 samples, 0.01%)</title><rect x="95.4253%" y="597" width="0.0148%" height="15" fill="rgb(232,57,40)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="607.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7 samples, 0.01%)</title><rect x="95.4253%" y="581" width="0.0148%" height="15" fill="rgb(224,186,18)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="591.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (7 samples, 0.01%)</title><rect x="95.4253%" y="565" width="0.0148%" height="15" fill="rgb(215,121,11)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="575.50"></text></g><g><title>bytes::bytes_mut::release_shared (7 samples, 0.01%)</title><rect x="95.4253%" y="549" width="0.0148%" height="15" fill="rgb(245,147,10)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="559.50"></text></g><g><title>core::mem::drop (7 samples, 0.01%)</title><rect x="95.4253%" y="533" width="0.0148%" height="15" fill="rgb(238,153,13)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (7 samples, 0.01%)</title><rect x="95.4253%" y="517" width="0.0148%" height="15" fill="rgb(233,108,0)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (7 samples, 0.01%)</title><rect x="95.4253%" y="501" width="0.0148%" height="15" fill="rgb(212,157,17)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.01%)</title><rect x="95.4253%" y="485" width="0.0148%" height="15" fill="rgb(225,213,38)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.01%)</title><rect x="95.4253%" y="469" width="0.0148%" height="15" fill="rgb(248,16,11)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="95.4253%" y="453" width="0.0148%" height="15" fill="rgb(241,33,4)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7 samples, 0.01%)</title><rect x="95.4253%" y="437" width="0.0148%" height="15" fill="rgb(222,26,43)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.01%)</title><rect x="95.4253%" y="421" width="0.0148%" height="15" fill="rgb(243,29,36)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.01%)</title><rect x="95.4253%" y="405" width="0.0148%" height="15" fill="rgb(241,9,27)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="415.50"></text></g><g><title>__rust_dealloc (7 samples, 0.01%)</title><rect x="95.4253%" y="389" width="0.0148%" height="15" fill="rgb(205,117,26)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="399.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (7 samples, 0.01%)</title><rect x="95.4253%" y="373" width="0.0148%" height="15" fill="rgb(209,80,39)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="383.50"></text></g><g><title>_rjem_je_sdallocx_default (7 samples, 0.01%)</title><rect x="95.4253%" y="357" width="0.0148%" height="15" fill="rgb(239,155,6)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="367.50"></text></g><g><title>isfree (7 samples, 0.01%)</title><rect x="95.4253%" y="341" width="0.0148%" height="15" fill="rgb(212,104,12)" fg:x="45181" fg:w="7"/><text x="95.6753%" y="351.50"></text></g><g><title>thread_dalloc_event (5 samples, 0.01%)</title><rect x="95.4295%" y="325" width="0.0106%" height="15" fill="rgb(234,204,3)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="335.50"></text></g><g><title>te_event_advance (5 samples, 0.01%)</title><rect x="95.4295%" y="309" width="0.0106%" height="15" fill="rgb(251,218,7)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="319.50"></text></g><g><title>_rjem_je_te_event_trigger (5 samples, 0.01%)</title><rect x="95.4295%" y="293" width="0.0106%" height="15" fill="rgb(221,81,32)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="303.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (5 samples, 0.01%)</title><rect x="95.4295%" y="277" width="0.0106%" height="15" fill="rgb(214,152,26)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="287.50"></text></g><g><title>tcache_gc_small (5 samples, 0.01%)</title><rect x="95.4295%" y="261" width="0.0106%" height="15" fill="rgb(223,22,3)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="271.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.01%)</title><rect x="95.4295%" y="245" width="0.0106%" height="15" fill="rgb(207,174,7)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="255.50"></text></g><g><title>tcache_bin_flush_bottom (5 samples, 0.01%)</title><rect x="95.4295%" y="229" width="0.0106%" height="15" fill="rgb(224,19,52)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="239.50"></text></g><g><title>tcache_bin_flush_impl (5 samples, 0.01%)</title><rect x="95.4295%" y="213" width="0.0106%" height="15" fill="rgb(228,24,14)" fg:x="45183" fg:w="5"/><text x="95.6795%" y="223.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (12,729 samples, 26.88%)</title><rect x="68.5640%" y="1013" width="26.8845%" height="15" fill="rgb(230,153,43)" fg:x="32463" fg:w="12729"/><text x="68.8140%" y="1023.50">epoxy_server::handle::wisp::handle_stream::..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (12,720 samples, 26.87%)</title><rect x="68.5830%" y="997" width="26.8655%" height="15" fill="rgb(231,106,12)" fg:x="32472" fg:w="12720"/><text x="68.8330%" y="1007.50">epoxy_server::handle::wisp::handle_stream::..</text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::copy_read_fast::{{closure}},epoxy_server::handle::wisp::copy_write_fast::{{closure}})&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="981" width="0.0232%" height="15" fill="rgb(215,92,2)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::copy_read_fast::{{closure}}&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="965" width="0.0232%" height="15" fill="rgb(249,143,25)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::compat::Compat&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="949" width="0.0232%" height="15" fill="rgb(252,7,35)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="933" width="0.0232%" height="15" fill="rgb(216,69,40)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="917" width="0.0232%" height="15" fill="rgb(240,36,33)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="901" width="0.0232%" height="15" fill="rgb(231,128,14)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="885" width="0.0232%" height="15" fill="rgb(245,143,14)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="869" width="0.0232%" height="15" fill="rgb(222,130,28)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="879.50"></text></g><g><title>_ZN4core3ptr1085drop_in_place$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h5504fbae381281c3E (11 samples, 0.02%)</title><rect x="95.4253%" y="853" width="0.0232%" height="15" fill="rgb(212,10,48)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Receiver&lt;bytes::bytes::Bytes&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="837" width="0.0232%" height="15" fill="rgb(254,118,45)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="821" width="0.0232%" height="15" fill="rgb(228,6,45)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="95.4253%" y="805" width="0.0232%" height="15" fill="rgb(241,18,35)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.02%)</title><rect x="95.4253%" y="789" width="0.0232%" height="15" fill="rgb(227,214,53)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="773" width="0.0232%" height="15" fill="rgb(224,107,51)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="757" width="0.0232%" height="15" fill="rgb(248,60,28)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="741" width="0.0232%" height="15" fill="rgb(249,101,23)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="725" width="0.0232%" height="15" fill="rgb(228,51,19)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;bytes::bytes::Bytes&gt;&gt; (11 samples, 0.02%)</title><rect x="95.4253%" y="709" width="0.0232%" height="15" fill="rgb(213,20,6)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="719.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="95.4253%" y="693" width="0.0232%" height="15" fill="rgb(212,124,10)" fg:x="45181" fg:w="11"/><text x="95.6753%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.02%)</title><rect x="95.4527%" y="933" width="0.0211%" height="15" fill="rgb(248,3,40)" fg:x="45194" fg:w="10"/><text x="95.7027%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.02%)</title><rect x="95.4527%" y="917" width="0.0211%" height="15" fill="rgb(223,178,23)" fg:x="45194" fg:w="10"/><text x="95.7027%" y="927.50"></text></g><g><title>core::mem::replace (10 samples, 0.02%)</title><rect x="95.4527%" y="901" width="0.0211%" height="15" fill="rgb(240,132,45)" fg:x="45194" fg:w="10"/><text x="95.7027%" y="911.50"></text></g><g><title>core::ptr::write (10 samples, 0.02%)</title><rect x="95.4527%" y="885" width="0.0211%" height="15" fill="rgb(245,164,36)" fg:x="45194" fg:w="10"/><text x="95.7027%" y="895.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12,846 samples, 27.13%)</title><rect x="68.3591%" y="1045" width="27.1316%" height="15" fill="rgb(231,188,53)" fg:x="32366" fg:w="12846"/><text x="68.6091%" y="1055.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (12,846 samples, 27.13%)</title><rect x="68.3591%" y="1029" width="27.1316%" height="15" fill="rgb(237,198,39)" fg:x="32366" fg:w="12846"/><text x="68.6091%" y="1039.50">epoxy_server::handle::wisp::handle_stream::..</text></g><g><title>tokio::macros::support::thread_rng_n (20 samples, 0.04%)</title><rect x="95.4485%" y="1013" width="0.0422%" height="15" fill="rgb(223,120,35)" fg:x="45192" fg:w="20"/><text x="95.6985%" y="1023.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (20 samples, 0.04%)</title><rect x="95.4485%" y="997" width="0.0422%" height="15" fill="rgb(253,107,49)" fg:x="45192" fg:w="20"/><text x="95.6985%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.04%)</title><rect x="95.4485%" y="981" width="0.0422%" height="15" fill="rgb(216,44,31)" fg:x="45192" fg:w="20"/><text x="95.6985%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.04%)</title><rect x="95.4485%" y="965" width="0.0422%" height="15" fill="rgb(253,87,21)" fg:x="45192" fg:w="20"/><text x="95.6985%" y="975.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (20 samples, 0.04%)</title><rect x="95.4485%" y="949" width="0.0422%" height="15" fill="rgb(226,18,2)" fg:x="45192" fg:w="20"/><text x="95.6985%" y="959.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (8 samples, 0.02%)</title><rect x="95.4738%" y="933" width="0.0169%" height="15" fill="rgb(216,8,46)" fg:x="45204" fg:w="8"/><text x="95.7238%" y="943.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (8 samples, 0.02%)</title><rect x="95.4738%" y="917" width="0.0169%" height="15" fill="rgb(226,140,39)" fg:x="45204" fg:w="8"/><text x="95.7238%" y="927.50"></text></g><g><title>_rjem_je_base_new (5 samples, 0.01%)</title><rect x="95.4992%" y="501" width="0.0106%" height="15" fill="rgb(221,194,54)" fg:x="45216" fg:w="5"/><text x="95.7492%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}},event_listener::EventListener)&gt; (9 samples, 0.02%)</title><rect x="95.4929%" y="1045" width="0.0190%" height="15" fill="rgb(213,92,11)" fg:x="45213" fg:w="9"/><text x="95.7429%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="95.4929%" y="1029" width="0.0190%" height="15" fill="rgb(229,162,46)" fg:x="45213" fg:w="9"/><text x="95.7429%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}}::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="95.4929%" y="1013" width="0.0190%" height="15" fill="rgb(214,111,36)" fg:x="45213" fg:w="9"/><text x="95.7429%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::copy_read_fast::{{closure}},epoxy_server::handle::wisp::copy_write_fast::{{closure}})&gt; (9 samples, 0.02%)</title><rect x="95.4929%" y="997" width="0.0190%" height="15" fill="rgb(207,6,21)" fg:x="45213" fg:w="9"/><text x="95.7429%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::copy_write_fast::{{closure}}&gt; (6 samples, 0.01%)</title><rect x="95.4992%" y="981" width="0.0127%" height="15" fill="rgb(213,127,38)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::util::buf_reader::BufReader&lt;tokio::net::tcp::split_owned::OwnedReadHalf&gt;&gt; (6 samples, 0.01%)</title><rect x="95.4992%" y="965" width="0.0127%" height="15" fill="rgb(238,118,32)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::split_owned::OwnedReadHalf&gt; (6 samples, 0.01%)</title><rect x="95.4992%" y="949" width="0.0127%" height="15" fill="rgb(240,139,39)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (6 samples, 0.01%)</title><rect x="95.4992%" y="933" width="0.0127%" height="15" fill="rgb(235,10,37)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="95.4992%" y="917" width="0.0127%" height="15" fill="rgb(249,171,38)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.01%)</title><rect x="95.4992%" y="901" width="0.0127%" height="15" fill="rgb(242,144,32)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::udp::UdpSocket&gt; (6 samples, 0.01%)</title><rect x="95.4992%" y="885" width="0.0127%" height="15" fill="rgb(217,117,21)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::udp::UdpSocket&gt;&gt; (6 samples, 0.01%)</title><rect x="95.4992%" y="869" width="0.0127%" height="15" fill="rgb(249,87,1)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="879.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="95.4992%" y="853" width="0.0127%" height="15" fill="rgb(248,196,48)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="863.50"></text></g><g><title>tokio::runtime::io::registration::Registration::deregister (6 samples, 0.01%)</title><rect x="95.4992%" y="837" width="0.0127%" height="15" fill="rgb(251,206,33)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="847.50"></text></g><g><title>tokio::runtime::io::driver::Handle::deregister_source (6 samples, 0.01%)</title><rect x="95.4992%" y="821" width="0.0127%" height="15" fill="rgb(232,141,28)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="831.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::deregister (6 samples, 0.01%)</title><rect x="95.4992%" y="805" width="0.0127%" height="15" fill="rgb(209,167,14)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="95.4992%" y="789" width="0.0127%" height="15" fill="rgb(225,11,50)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="95.4992%" y="773" width="0.0127%" height="15" fill="rgb(209,50,20)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (6 samples, 0.01%)</title><rect x="95.4992%" y="757" width="0.0127%" height="15" fill="rgb(212,17,46)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="95.4992%" y="741" width="0.0127%" height="15" fill="rgb(216,101,39)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="95.4992%" y="725" width="0.0127%" height="15" fill="rgb(212,228,48)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="735.50"></text></g><g><title>_rjem_je_malloc_default (6 samples, 0.01%)</title><rect x="95.4992%" y="709" width="0.0127%" height="15" fill="rgb(250,6,50)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="719.50"></text></g><g><title>imalloc (6 samples, 0.01%)</title><rect x="95.4992%" y="693" width="0.0127%" height="15" fill="rgb(250,160,48)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="703.50"></text></g><g><title>tsd_fetch (6 samples, 0.01%)</title><rect x="95.4992%" y="677" width="0.0127%" height="15" fill="rgb(244,216,33)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="687.50"></text></g><g><title>tsd_fetch_impl (6 samples, 0.01%)</title><rect x="95.4992%" y="661" width="0.0127%" height="15" fill="rgb(207,157,5)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="671.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (6 samples, 0.01%)</title><rect x="95.4992%" y="645" width="0.0127%" height="15" fill="rgb(228,199,8)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="655.50"></text></g><g><title>tsd_data_init (6 samples, 0.01%)</title><rect x="95.4992%" y="629" width="0.0127%" height="15" fill="rgb(227,80,20)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="639.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (6 samples, 0.01%)</title><rect x="95.4992%" y="613" width="0.0127%" height="15" fill="rgb(222,9,33)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="623.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (6 samples, 0.01%)</title><rect x="95.4992%" y="597" width="0.0127%" height="15" fill="rgb(239,44,28)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="607.50"></text></g><g><title>arena_choose (6 samples, 0.01%)</title><rect x="95.4992%" y="581" width="0.0127%" height="15" fill="rgb(249,187,43)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="591.50"></text></g><g><title>arena_choose_impl (6 samples, 0.01%)</title><rect x="95.4992%" y="565" width="0.0127%" height="15" fill="rgb(216,141,28)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="575.50"></text></g><g><title>_rjem_je_arena_choose_hard (6 samples, 0.01%)</title><rect x="95.4992%" y="549" width="0.0127%" height="15" fill="rgb(230,154,53)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="559.50"></text></g><g><title>arena_init_locked (6 samples, 0.01%)</title><rect x="95.4992%" y="533" width="0.0127%" height="15" fill="rgb(227,82,4)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="543.50"></text></g><g><title>_rjem_je_arena_new (6 samples, 0.01%)</title><rect x="95.4992%" y="517" width="0.0127%" height="15" fill="rgb(220,107,16)" fg:x="45216" fg:w="6"/><text x="95.7492%" y="527.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_write_shard (5 samples, 0.01%)</title><rect x="95.5140%" y="981" width="0.0106%" height="15" fill="rgb(207,187,2)" fg:x="45223" fg:w="5"/><text x="95.7640%" y="991.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (5 samples, 0.01%)</title><rect x="95.5140%" y="965" width="0.0106%" height="15" fill="rgb(210,162,52)" fg:x="45223" fg:w="5"/><text x="95.7640%" y="975.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (5 samples, 0.01%)</title><rect x="95.5140%" y="949" width="0.0106%" height="15" fill="rgb(217,216,49)" fg:x="45223" fg:w="5"/><text x="95.7640%" y="959.50"></text></g><g><title>_rjem_je_base_new (5 samples, 0.01%)</title><rect x="95.5266%" y="565" width="0.0106%" height="15" fill="rgb(218,146,49)" fg:x="45229" fg:w="5"/><text x="95.7766%" y="575.50"></text></g><g><title>base_block_alloc (5 samples, 0.01%)</title><rect x="95.5266%" y="549" width="0.0106%" height="15" fill="rgb(216,55,40)" fg:x="45229" fg:w="5"/><text x="95.7766%" y="559.50"></text></g><g><title>base_map (5 samples, 0.01%)</title><rect x="95.5266%" y="533" width="0.0106%" height="15" fill="rgb(208,196,21)" fg:x="45229" fg:w="5"/><text x="95.7766%" y="543.50"></text></g><g><title>_rjem_je_extent_alloc_mmap (5 samples, 0.01%)</title><rect x="95.5266%" y="517" width="0.0106%" height="15" fill="rgb(242,117,42)" fg:x="45229" fg:w="5"/><text x="95.7766%" y="527.50"></text></g><g><title>arena_init_locked (6 samples, 0.01%)</title><rect x="95.5266%" y="597" width="0.0127%" height="15" fill="rgb(210,11,23)" fg:x="45229" fg:w="6"/><text x="95.7766%" y="607.50"></text></g><g><title>_rjem_je_arena_new (6 samples, 0.01%)</title><rect x="95.5266%" y="581" width="0.0127%" height="15" fill="rgb(217,110,2)" fg:x="45229" fg:w="6"/><text x="95.7766%" y="591.50"></text></g><g><title>_rjem_je_malloc_default (10 samples, 0.02%)</title><rect x="95.5266%" y="773" width="0.0211%" height="15" fill="rgb(229,77,54)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="783.50"></text></g><g><title>imalloc (10 samples, 0.02%)</title><rect x="95.5266%" y="757" width="0.0211%" height="15" fill="rgb(218,53,16)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="767.50"></text></g><g><title>tsd_fetch (10 samples, 0.02%)</title><rect x="95.5266%" y="741" width="0.0211%" height="15" fill="rgb(215,38,13)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="751.50"></text></g><g><title>tsd_fetch_impl (10 samples, 0.02%)</title><rect x="95.5266%" y="725" width="0.0211%" height="15" fill="rgb(235,42,18)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="735.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (10 samples, 0.02%)</title><rect x="95.5266%" y="709" width="0.0211%" height="15" fill="rgb(219,66,54)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="719.50"></text></g><g><title>tsd_data_init (10 samples, 0.02%)</title><rect x="95.5266%" y="693" width="0.0211%" height="15" fill="rgb(222,205,4)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="703.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (10 samples, 0.02%)</title><rect x="95.5266%" y="677" width="0.0211%" height="15" fill="rgb(227,213,46)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="687.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (10 samples, 0.02%)</title><rect x="95.5266%" y="661" width="0.0211%" height="15" fill="rgb(250,145,42)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="671.50"></text></g><g><title>arena_choose (10 samples, 0.02%)</title><rect x="95.5266%" y="645" width="0.0211%" height="15" fill="rgb(219,15,2)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="655.50"></text></g><g><title>arena_choose_impl (10 samples, 0.02%)</title><rect x="95.5266%" y="629" width="0.0211%" height="15" fill="rgb(231,181,52)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="639.50"></text></g><g><title>_rjem_je_arena_choose_hard (10 samples, 0.02%)</title><rect x="95.5266%" y="613" width="0.0211%" height="15" fill="rgb(235,1,42)" fg:x="45229" fg:w="10"/><text x="95.7766%" y="623.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (18 samples, 0.04%)</title><rect x="95.5119%" y="1045" width="0.0380%" height="15" fill="rgb(249,88,27)" fg:x="45222" fg:w="18"/><text x="95.7619%" y="1055.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (18 samples, 0.04%)</title><rect x="95.5119%" y="1029" width="0.0380%" height="15" fill="rgb(235,145,16)" fg:x="45222" fg:w="18"/><text x="95.7619%" y="1039.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::entry (17 samples, 0.04%)</title><rect x="95.5140%" y="1013" width="0.0359%" height="15" fill="rgb(237,114,19)" fg:x="45223" fg:w="17"/><text x="95.7640%" y="1023.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (17 samples, 0.04%)</title><rect x="95.5140%" y="997" width="0.0359%" height="15" fill="rgb(238,51,50)" fg:x="45223" fg:w="17"/><text x="95.7640%" y="1007.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find_or_find_insert_slot (12 samples, 0.03%)</title><rect x="95.5245%" y="981" width="0.0253%" height="15" fill="rgb(205,194,25)" fg:x="45228" fg:w="12"/><text x="95.7745%" y="991.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (12 samples, 0.03%)</title><rect x="95.5245%" y="965" width="0.0253%" height="15" fill="rgb(215,203,17)" fg:x="45228" fg:w="12"/><text x="95.7745%" y="975.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.03%)</title><rect x="95.5245%" y="949" width="0.0253%" height="15" fill="rgb(233,112,49)" fg:x="45228" fg:w="12"/><text x="95.7745%" y="959.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::reserve_rehash_inner (12 samples, 0.03%)</title><rect x="95.5245%" y="933" width="0.0253%" height="15" fill="rgb(241,130,26)" fg:x="45228" fg:w="12"/><text x="95.7745%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::resize_inner (12 samples, 0.03%)</title><rect x="95.5245%" y="917" width="0.0253%" height="15" fill="rgb(252,223,19)" fg:x="45228" fg:w="12"/><text x="95.7745%" y="927.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::prepare_resize (12 samples, 0.03%)</title><rect x="95.5245%" y="901" width="0.0253%" height="15" fill="rgb(211,95,25)" fg:x="45228" fg:w="12"/><text x="95.7745%" y="911.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::fallible_with_capacity (12 samples, 0.03%)</title><rect x="95.5245%" y="885" width="0.0253%" height="15" fill="rgb(251,182,27)" fg:x="45228" fg:w="12"/><text x="95.7745%" y="895.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::new_uninitialized (11 samples, 0.02%)</title><rect x="95.5266%" y="869" width="0.0232%" height="15" fill="rgb(238,24,4)" fg:x="45229" fg:w="11"/><text x="95.7766%" y="879.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (11 samples, 0.02%)</title><rect x="95.5266%" y="853" width="0.0232%" height="15" fill="rgb(224,220,25)" fg:x="45229" fg:w="11"/><text x="95.7766%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (11 samples, 0.02%)</title><rect x="95.5266%" y="837" width="0.0232%" height="15" fill="rgb(239,133,26)" fg:x="45229" fg:w="11"/><text x="95.7766%" y="847.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.02%)</title><rect x="95.5266%" y="821" width="0.0232%" height="15" fill="rgb(211,94,48)" fg:x="45229" fg:w="11"/><text x="95.7766%" y="831.50"></text></g><g><title>__rust_alloc (11 samples, 0.02%)</title><rect x="95.5266%" y="805" width="0.0232%" height="15" fill="rgb(239,87,6)" fg:x="45229" fg:w="11"/><text x="95.7766%" y="815.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.02%)</title><rect x="95.5266%" y="789" width="0.0232%" height="15" fill="rgb(227,62,0)" fg:x="45229" fg:w="11"/><text x="95.7766%" y="799.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (12,942 samples, 27.33%)</title><rect x="68.2387%" y="1061" width="27.3344%" height="15" fill="rgb(211,226,4)" fg:x="32309" fg:w="12942"/><text x="68.4887%" y="1071.50">epoxy_server::handle::wisp::handle_stream::_..</text></g><g><title>event_listener::Event&lt;T&gt;::listen (5 samples, 0.01%)</title><rect x="95.5625%" y="1045" width="0.0106%" height="15" fill="rgb(253,38,52)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (5 samples, 0.01%)</title><rect x="95.5625%" y="1029" width="0.0106%" height="15" fill="rgb(229,126,40)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="95.5625%" y="1013" width="0.0106%" height="15" fill="rgb(229,165,44)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="95.5625%" y="997" width="0.0106%" height="15" fill="rgb(247,95,47)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="95.5625%" y="981" width="0.0106%" height="15" fill="rgb(216,140,30)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="95.5625%" y="965" width="0.0106%" height="15" fill="rgb(246,214,8)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="975.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="95.5625%" y="949" width="0.0106%" height="15" fill="rgb(227,224,15)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="959.50"></text></g><g><title>__rust_alloc (5 samples, 0.01%)</title><rect x="95.5625%" y="933" width="0.0106%" height="15" fill="rgb(233,175,4)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="943.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.01%)</title><rect x="95.5625%" y="917" width="0.0106%" height="15" fill="rgb(221,66,45)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="927.50"></text></g><g><title>_rjem_je_malloc_default (5 samples, 0.01%)</title><rect x="95.5625%" y="901" width="0.0106%" height="15" fill="rgb(221,178,18)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="911.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="95.5625%" y="885" width="0.0106%" height="15" fill="rgb(213,81,29)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="895.50"></text></g><g><title>tsd_fetch (5 samples, 0.01%)</title><rect x="95.5625%" y="869" width="0.0106%" height="15" fill="rgb(220,89,49)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="879.50"></text></g><g><title>tsd_fetch_impl (5 samples, 0.01%)</title><rect x="95.5625%" y="853" width="0.0106%" height="15" fill="rgb(227,60,33)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="863.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (5 samples, 0.01%)</title><rect x="95.5625%" y="837" width="0.0106%" height="15" fill="rgb(205,113,12)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="847.50"></text></g><g><title>tsd_data_init (5 samples, 0.01%)</title><rect x="95.5625%" y="821" width="0.0106%" height="15" fill="rgb(211,32,1)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="831.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (5 samples, 0.01%)</title><rect x="95.5625%" y="805" width="0.0106%" height="15" fill="rgb(246,2,12)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="815.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (5 samples, 0.01%)</title><rect x="95.5625%" y="789" width="0.0106%" height="15" fill="rgb(243,37,27)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="799.50"></text></g><g><title>arena_choose (5 samples, 0.01%)</title><rect x="95.5625%" y="773" width="0.0106%" height="15" fill="rgb(248,211,31)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="783.50"></text></g><g><title>arena_choose_impl (5 samples, 0.01%)</title><rect x="95.5625%" y="757" width="0.0106%" height="15" fill="rgb(242,146,47)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="767.50"></text></g><g><title>_rjem_je_arena_choose_hard (5 samples, 0.01%)</title><rect x="95.5625%" y="741" width="0.0106%" height="15" fill="rgb(206,70,20)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="751.50"></text></g><g><title>malloc_mutex_lock (5 samples, 0.01%)</title><rect x="95.5625%" y="725" width="0.0106%" height="15" fill="rgb(215,10,51)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="735.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (5 samples, 0.01%)</title><rect x="95.5625%" y="709" width="0.0106%" height="15" fill="rgb(243,178,53)" fg:x="45246" fg:w="5"/><text x="95.8125%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1205" width="75.9393%" height="15" fill="rgb(233,221,20)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1215.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1189" width="75.9393%" height="15" fill="rgb(218,95,35)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1199.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1173" width="75.9393%" height="15" fill="rgb(229,13,5)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1183.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1157" width="75.9393%" height="15" fill="rgb(252,164,30)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1167.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1141" width="75.9393%" height="15" fill="rgb(232,68,36)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1151.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1125" width="75.9393%" height="15" fill="rgb(219,59,54)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1135.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1109" width="75.9393%" height="15" fill="rgb(250,92,33)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1119.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1093" width="75.9393%" height="15" fill="rgb(229,162,54)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1103.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (35,955 samples, 75.94%)</title><rect x="19.6422%" y="1077" width="75.9393%" height="15" fill="rgb(244,114,52)" fg:x="9300" fg:w="35955"/><text x="19.8922%" y="1087.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10 samples, 0.02%)</title><rect x="95.5858%" y="1173" width="0.0211%" height="15" fill="rgb(212,211,43)" fg:x="45257" fg:w="10"/><text x="95.8358%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="95.5858%" y="1157" width="0.0211%" height="15" fill="rgb(226,147,8)" fg:x="45257" fg:w="10"/><text x="95.8358%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (32 samples, 0.07%)</title><rect x="95.5816%" y="1205" width="0.0676%" height="15" fill="rgb(226,23,13)" fg:x="45255" fg:w="32"/><text x="95.8316%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (32 samples, 0.07%)</title><rect x="95.5816%" y="1189" width="0.0676%" height="15" fill="rgb(240,63,4)" fg:x="45255" fg:w="32"/><text x="95.8316%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (17 samples, 0.04%)</title><rect x="95.6132%" y="1173" width="0.0359%" height="15" fill="rgb(221,1,32)" fg:x="45270" fg:w="17"/><text x="95.8632%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (9 samples, 0.02%)</title><rect x="95.6491%" y="1173" width="0.0190%" height="15" fill="rgb(242,117,10)" fg:x="45287" fg:w="9"/><text x="95.8991%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.02%)</title><rect x="95.6491%" y="1157" width="0.0190%" height="15" fill="rgb(249,172,44)" fg:x="45287" fg:w="9"/><text x="95.8991%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (16 samples, 0.03%)</title><rect x="95.6491%" y="1205" width="0.0338%" height="15" fill="rgb(244,46,45)" fg:x="45287" fg:w="16"/><text x="95.8991%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (16 samples, 0.03%)</title><rect x="95.6491%" y="1189" width="0.0338%" height="15" fill="rgb(206,43,17)" fg:x="45287" fg:w="16"/><text x="95.8991%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (5 samples, 0.01%)</title><rect x="95.6724%" y="1173" width="0.0106%" height="15" fill="rgb(239,218,39)" fg:x="45298" fg:w="5"/><text x="95.9224%" y="1183.50"></text></g><g><title>tokio::runtime::coop::budget (36,412 samples, 76.90%)</title><rect x="18.7805%" y="1333" width="76.9046%" height="15" fill="rgb(208,169,54)" fg:x="8892" fg:w="36412"/><text x="19.0305%" y="1343.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (36,412 samples, 76.90%)</title><rect x="18.7805%" y="1317" width="76.9046%" height="15" fill="rgb(247,25,42)" fg:x="8892" fg:w="36412"/><text x="19.0305%" y="1327.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (36,404 samples, 76.89%)</title><rect x="18.7974%" y="1301" width="76.8877%" height="15" fill="rgb(226,23,31)" fg:x="8900" fg:w="36404"/><text x="19.0474%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (36,349 samples, 76.77%)</title><rect x="18.9136%" y="1285" width="76.7715%" height="15" fill="rgb(247,16,28)" fg:x="8955" fg:w="36349"/><text x="19.1636%" y="1295.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (36,349 samples, 76.77%)</title><rect x="18.9136%" y="1269" width="76.7715%" height="15" fill="rgb(231,147,38)" fg:x="8955" fg:w="36349"/><text x="19.1636%" y="1279.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (36,330 samples, 76.73%)</title><rect x="18.9537%" y="1253" width="76.7314%" height="15" fill="rgb(253,81,48)" fg:x="8974" fg:w="36330"/><text x="19.2037%" y="1263.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36,330 samples, 76.73%)</title><rect x="18.9537%" y="1237" width="76.7314%" height="15" fill="rgb(249,222,43)" fg:x="8974" fg:w="36330"/><text x="19.2037%" y="1247.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (36,052 samples, 76.14%)</title><rect x="19.5408%" y="1221" width="76.1442%" height="15" fill="rgb(221,3,27)" fg:x="9252" fg:w="36052"/><text x="19.7908%" y="1231.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (5 samples, 0.01%)</title><rect x="95.6850%" y="1333" width="0.0106%" height="15" fill="rgb(228,180,5)" fg:x="45304" fg:w="5"/><text x="95.9350%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (60 samples, 0.13%)</title><rect x="95.6977%" y="1269" width="0.1267%" height="15" fill="rgb(227,131,42)" fg:x="45310" fg:w="60"/><text x="95.9477%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (60 samples, 0.13%)</title><rect x="95.6977%" y="1253" width="0.1267%" height="15" fill="rgb(212,3,39)" fg:x="45310" fg:w="60"/><text x="95.9477%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (9 samples, 0.02%)</title><rect x="95.8244%" y="1269" width="0.0190%" height="15" fill="rgb(226,45,5)" fg:x="45370" fg:w="9"/><text x="96.0744%" y="1279.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.01%)</title><rect x="95.8308%" y="1253" width="0.0127%" height="15" fill="rgb(215,167,45)" fg:x="45373" fg:w="6"/><text x="96.0808%" y="1263.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (96 samples, 0.20%)</title><rect x="95.6956%" y="1301" width="0.2028%" height="15" fill="rgb(250,218,53)" fg:x="45309" fg:w="96"/><text x="95.9456%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (96 samples, 0.20%)</title><rect x="95.6956%" y="1285" width="0.2028%" height="15" fill="rgb(207,140,0)" fg:x="45309" fg:w="96"/><text x="95.9456%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (26 samples, 0.05%)</title><rect x="95.8435%" y="1269" width="0.0549%" height="15" fill="rgb(238,133,51)" fg:x="45379" fg:w="26"/><text x="96.0935%" y="1279.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (18 samples, 0.04%)</title><rect x="95.8604%" y="1253" width="0.0380%" height="15" fill="rgb(218,203,53)" fg:x="45387" fg:w="18"/><text x="96.1104%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 0.04%)</title><rect x="95.8604%" y="1237" width="0.0380%" height="15" fill="rgb(226,184,25)" fg:x="45387" fg:w="18"/><text x="96.1104%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.04%)</title><rect x="95.8604%" y="1221" width="0.0380%" height="15" fill="rgb(231,121,21)" fg:x="45387" fg:w="18"/><text x="96.1104%" y="1231.50"></text></g><g><title>syscall (7 samples, 0.01%)</title><rect x="95.8984%" y="1301" width="0.0148%" height="15" fill="rgb(251,14,34)" fg:x="45405" fg:w="7"/><text x="96.1484%" y="1311.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (13 samples, 0.03%)</title><rect x="95.9132%" y="1301" width="0.0275%" height="15" fill="rgb(249,193,11)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1311.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (13 samples, 0.03%)</title><rect x="95.9132%" y="1285" width="0.0275%" height="15" fill="rgb(220,172,37)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1295.50"></text></g><g><title>mio::waker::Waker::wake (13 samples, 0.03%)</title><rect x="95.9132%" y="1269" width="0.0275%" height="15" fill="rgb(231,229,43)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1279.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (13 samples, 0.03%)</title><rect x="95.9132%" y="1253" width="0.0275%" height="15" fill="rgb(250,161,5)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1263.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (13 samples, 0.03%)</title><rect x="95.9132%" y="1237" width="0.0275%" height="15" fill="rgb(218,225,18)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1247.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (13 samples, 0.03%)</title><rect x="95.9132%" y="1221" width="0.0275%" height="15" fill="rgb(245,45,42)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1231.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (13 samples, 0.03%)</title><rect x="95.9132%" y="1205" width="0.0275%" height="15" fill="rgb(211,115,1)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1215.50"></text></g><g><title>write (13 samples, 0.03%)</title><rect x="95.9132%" y="1189" width="0.0275%" height="15" fill="rgb(248,133,52)" fg:x="45412" fg:w="13"/><text x="96.1632%" y="1199.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="95.9216%" y="1173" width="0.0190%" height="15" fill="rgb(238,100,21)" fg:x="45416" fg:w="9"/><text x="96.1716%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (11 samples, 0.02%)</title><rect x="95.9596%" y="1269" width="0.0232%" height="15" fill="rgb(247,144,11)" fg:x="45434" fg:w="11"/><text x="96.2096%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.02%)</title><rect x="95.9596%" y="1253" width="0.0232%" height="15" fill="rgb(206,164,16)" fg:x="45434" fg:w="11"/><text x="96.2096%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (20 samples, 0.04%)</title><rect x="95.9427%" y="1301" width="0.0422%" height="15" fill="rgb(222,34,3)" fg:x="45426" fg:w="20"/><text x="96.1927%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (20 samples, 0.04%)</title><rect x="95.9427%" y="1285" width="0.0422%" height="15" fill="rgb(248,82,4)" fg:x="45426" fg:w="20"/><text x="96.1927%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (36,563 samples, 77.22%)</title><rect x="18.7720%" y="1349" width="77.2235%" height="15" fill="rgb(228,81,46)" fg:x="8888" fg:w="36563"/><text x="19.0220%" y="1359.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (142 samples, 0.30%)</title><rect x="95.6956%" y="1333" width="0.2999%" height="15" fill="rgb(227,67,47)" fg:x="45309" fg:w="142"/><text x="95.9456%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (142 samples, 0.30%)</title><rect x="95.6956%" y="1317" width="0.2999%" height="15" fill="rgb(215,93,53)" fg:x="45309" fg:w="142"/><text x="95.9456%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (5 samples, 0.01%)</title><rect x="95.9850%" y="1301" width="0.0106%" height="15" fill="rgb(248,194,39)" fg:x="45446" fg:w="5"/><text x="96.2350%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (9 samples, 0.02%)</title><rect x="96.0504%" y="1285" width="0.0190%" height="15" fill="rgb(215,5,19)" fg:x="45477" fg:w="9"/><text x="96.3004%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (6 samples, 0.01%)</title><rect x="96.0568%" y="1269" width="0.0127%" height="15" fill="rgb(226,215,51)" fg:x="45480" fg:w="6"/><text x="96.3068%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="96.0568%" y="1253" width="0.0127%" height="15" fill="rgb(225,56,26)" fg:x="45480" fg:w="6"/><text x="96.3068%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (11 samples, 0.02%)</title><rect x="96.0483%" y="1333" width="0.0232%" height="15" fill="rgb(222,75,29)" fg:x="45476" fg:w="11"/><text x="96.2983%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (11 samples, 0.02%)</title><rect x="96.0483%" y="1317" width="0.0232%" height="15" fill="rgb(236,139,6)" fg:x="45476" fg:w="11"/><text x="96.2983%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (11 samples, 0.02%)</title><rect x="96.0483%" y="1301" width="0.0232%" height="15" fill="rgb(223,137,36)" fg:x="45476" fg:w="11"/><text x="96.2983%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (5 samples, 0.01%)</title><rect x="96.0969%" y="1269" width="0.0106%" height="15" fill="rgb(226,99,2)" fg:x="45499" fg:w="5"/><text x="96.3469%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="96.0969%" y="1253" width="0.0106%" height="15" fill="rgb(206,133,23)" fg:x="45499" fg:w="5"/><text x="96.3469%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (5 samples, 0.01%)</title><rect x="96.1075%" y="1269" width="0.0106%" height="15" fill="rgb(243,173,15)" fg:x="45504" fg:w="5"/><text x="96.3575%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="96.1075%" y="1253" width="0.0106%" height="15" fill="rgb(228,69,28)" fg:x="45504" fg:w="5"/><text x="96.3575%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (19 samples, 0.04%)</title><rect x="96.0863%" y="1317" width="0.0401%" height="15" fill="rgb(212,51,22)" fg:x="45494" fg:w="19"/><text x="96.3363%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (17 samples, 0.04%)</title><rect x="96.0906%" y="1301" width="0.0359%" height="15" fill="rgb(227,113,0)" fg:x="45496" fg:w="17"/><text x="96.3406%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (17 samples, 0.04%)</title><rect x="96.0906%" y="1285" width="0.0359%" height="15" fill="rgb(252,84,27)" fg:x="45496" fg:w="17"/><text x="96.3406%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (25 samples, 0.05%)</title><rect x="96.0842%" y="1333" width="0.0528%" height="15" fill="rgb(223,145,39)" fg:x="45493" fg:w="25"/><text x="96.3342%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.01%)</title><rect x="96.1265%" y="1317" width="0.0106%" height="15" fill="rgb(239,219,30)" fg:x="45513" fg:w="5"/><text x="96.3765%" y="1327.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="96.1265%" y="1301" width="0.0106%" height="15" fill="rgb(224,196,39)" fg:x="45513" fg:w="5"/><text x="96.3765%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (48 samples, 0.10%)</title><rect x="96.1370%" y="1333" width="0.1014%" height="15" fill="rgb(205,35,43)" fg:x="45518" fg:w="48"/><text x="96.3870%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (42 samples, 0.09%)</title><rect x="96.1497%" y="1317" width="0.0887%" height="15" fill="rgb(228,201,21)" fg:x="45524" fg:w="42"/><text x="96.3997%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (116 samples, 0.24%)</title><rect x="95.9955%" y="1349" width="0.2450%" height="15" fill="rgb(237,118,16)" fg:x="45451" fg:w="116"/><text x="96.2455%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.03%)</title><rect x="96.3567%" y="1333" width="0.0253%" height="15" fill="rgb(241,17,19)" fg:x="45622" fg:w="12"/><text x="96.6067%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (12 samples, 0.03%)</title><rect x="96.3567%" y="1317" width="0.0253%" height="15" fill="rgb(214,10,25)" fg:x="45622" fg:w="12"/><text x="96.6067%" y="1327.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (12 samples, 0.03%)</title><rect x="96.3567%" y="1301" width="0.0253%" height="15" fill="rgb(238,37,29)" fg:x="45622" fg:w="12"/><text x="96.6067%" y="1311.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.01%)</title><rect x="96.3820%" y="1333" width="0.0106%" height="15" fill="rgb(253,83,25)" fg:x="45634" fg:w="5"/><text x="96.6320%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.01%)</title><rect x="96.3820%" y="1317" width="0.0106%" height="15" fill="rgb(234,192,12)" fg:x="45634" fg:w="5"/><text x="96.6320%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="96.4412%" y="1301" width="0.0148%" height="15" fill="rgb(241,216,45)" fg:x="45662" fg:w="7"/><text x="96.6912%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7 samples, 0.01%)</title><rect x="96.4412%" y="1285" width="0.0148%" height="15" fill="rgb(242,22,33)" fg:x="45662" fg:w="7"/><text x="96.6912%" y="1295.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.01%)</title><rect x="96.4412%" y="1269" width="0.0148%" height="15" fill="rgb(231,105,49)" fg:x="45662" fg:w="7"/><text x="96.6912%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (23 samples, 0.05%)</title><rect x="96.4560%" y="1301" width="0.0486%" height="15" fill="rgb(218,204,15)" fg:x="45669" fg:w="23"/><text x="96.7060%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.05%)</title><rect x="96.4560%" y="1285" width="0.0486%" height="15" fill="rgb(235,138,41)" fg:x="45669" fg:w="23"/><text x="96.7060%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (7 samples, 0.01%)</title><rect x="96.5045%" y="1301" width="0.0148%" height="15" fill="rgb(246,0,9)" fg:x="45692" fg:w="7"/><text x="96.7545%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="96.5045%" y="1285" width="0.0148%" height="15" fill="rgb(210,74,4)" fg:x="45692" fg:w="7"/><text x="96.7545%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (74 samples, 0.16%)</title><rect x="96.5193%" y="1301" width="0.1563%" height="15" fill="rgb(250,60,41)" fg:x="45699" fg:w="74"/><text x="96.7693%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_load (74 samples, 0.16%)</title><rect x="96.5193%" y="1285" width="0.1563%" height="15" fill="rgb(220,115,12)" fg:x="45699" fg:w="74"/><text x="96.7693%" y="1295.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="96.6756%" y="1301" width="0.0190%" height="15" fill="rgb(237,100,13)" fg:x="45773" fg:w="9"/><text x="96.9256%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (9 samples, 0.02%)</title><rect x="96.6756%" y="1285" width="0.0190%" height="15" fill="rgb(213,55,26)" fg:x="45773" fg:w="9"/><text x="96.9256%" y="1295.50"></text></g><g><title>core::ptr::read (9 samples, 0.02%)</title><rect x="96.6756%" y="1269" width="0.0190%" height="15" fill="rgb(216,17,4)" fg:x="45773" fg:w="9"/><text x="96.9256%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (138 samples, 0.29%)</title><rect x="96.4158%" y="1317" width="0.2915%" height="15" fill="rgb(220,153,47)" fg:x="45650" fg:w="138"/><text x="96.6658%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (151 samples, 0.32%)</title><rect x="96.3926%" y="1333" width="0.3189%" height="15" fill="rgb(215,131,9)" fg:x="45639" fg:w="151"/><text x="96.6426%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (232 samples, 0.49%)</title><rect x="96.2405%" y="1349" width="0.4900%" height="15" fill="rgb(233,46,42)" fg:x="45567" fg:w="232"/><text x="96.4905%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (8 samples, 0.02%)</title><rect x="96.7136%" y="1333" width="0.0169%" height="15" fill="rgb(226,86,7)" fg:x="45791" fg:w="8"/><text x="96.9636%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (8 samples, 0.02%)</title><rect x="96.7136%" y="1317" width="0.0169%" height="15" fill="rgb(239,226,21)" fg:x="45791" fg:w="8"/><text x="96.9636%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (6 samples, 0.01%)</title><rect x="96.7178%" y="1301" width="0.0127%" height="15" fill="rgb(244,137,22)" fg:x="45793" fg:w="6"/><text x="96.9678%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="96.7178%" y="1285" width="0.0127%" height="15" fill="rgb(211,139,35)" fg:x="45793" fg:w="6"/><text x="96.9678%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="96.7178%" y="1269" width="0.0127%" height="15" fill="rgb(214,62,50)" fg:x="45793" fg:w="6"/><text x="96.9678%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1909" width="92.1537%" height="15" fill="rgb(212,113,44)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1919.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1893" width="92.1537%" height="15" fill="rgb(226,150,43)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1903.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1877" width="92.1537%" height="15" fill="rgb(250,71,37)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1887.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1861" width="92.1537%" height="15" fill="rgb(219,76,19)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1871.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1845" width="92.1537%" height="15" fill="rgb(250,39,11)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1855.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1829" width="92.1537%" height="15" fill="rgb(230,64,31)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1839.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1813" width="92.1537%" height="15" fill="rgb(208,222,23)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1823.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (43,632 samples, 92.15%)</title><rect x="4.6022%" y="1797" width="92.1537%" height="15" fill="rgb(227,125,18)" fg:x="2179" fg:w="43632"/><text x="4.8522%" y="1807.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1781" width="92.1220%" height="15" fill="rgb(234,210,9)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1791.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1765" width="92.1220%" height="15" fill="rgb(217,127,24)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1775.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1749" width="92.1220%" height="15" fill="rgb(239,141,48)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1759.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1733" width="92.1220%" height="15" fill="rgb(227,109,8)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1743.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1717" width="92.1220%" height="15" fill="rgb(235,184,23)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1727.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1701" width="92.1220%" height="15" fill="rgb(227,226,48)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1711.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1685" width="92.1220%" height="15" fill="rgb(206,150,11)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1695.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1669" width="92.1220%" height="15" fill="rgb(254,2,33)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1653" width="92.1220%" height="15" fill="rgb(243,160,20)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1637" width="92.1220%" height="15" fill="rgb(218,208,30)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1647.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1621" width="92.1220%" height="15" fill="rgb(224,120,49)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1631.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1605" width="92.1220%" height="15" fill="rgb(246,12,2)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1615.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1589" width="92.1220%" height="15" fill="rgb(236,117,3)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1599.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1573" width="92.1220%" height="15" fill="rgb(216,128,52)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1583.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1557" width="92.1220%" height="15" fill="rgb(246,145,19)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1567.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1541" width="92.1220%" height="15" fill="rgb(222,11,46)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1551.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1525" width="92.1220%" height="15" fill="rgb(245,82,36)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1535.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1509" width="92.1220%" height="15" fill="rgb(250,73,51)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1519.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1493" width="92.1220%" height="15" fill="rgb(221,189,23)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1503.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1477" width="92.1220%" height="15" fill="rgb(210,33,7)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1487.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1461" width="92.1220%" height="15" fill="rgb(210,107,22)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1471.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1445" width="92.1220%" height="15" fill="rgb(222,116,37)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1455.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1429" width="92.1220%" height="15" fill="rgb(254,17,48)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1439.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1413" width="92.1220%" height="15" fill="rgb(224,36,32)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1423.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1397" width="92.1220%" height="15" fill="rgb(232,90,46)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1407.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1381" width="92.1220%" height="15" fill="rgb(241,66,40)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1391.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (43,617 samples, 92.12%)</title><rect x="4.6339%" y="1365" width="92.1220%" height="15" fill="rgb(249,184,29)" fg:x="2194" fg:w="43617"/><text x="4.8839%" y="1375.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (12 samples, 0.03%)</title><rect x="96.7305%" y="1349" width="0.0253%" height="15" fill="rgb(231,181,1)" fg:x="45799" fg:w="12"/><text x="96.9805%" y="1359.50"></text></g><g><title>[libc.so.6] (43,633 samples, 92.16%)</title><rect x="4.6022%" y="2021" width="92.1558%" height="15" fill="rgb(224,94,2)" fg:x="2179" fg:w="43633"/><text x="4.8522%" y="2031.50">[libc.so.6]</text></g><g><title>[libc.so.6] (43,633 samples, 92.16%)</title><rect x="4.6022%" y="2005" width="92.1558%" height="15" fill="rgb(229,170,15)" fg:x="2179" fg:w="43633"/><text x="4.8522%" y="2015.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (43,633 samples, 92.16%)</title><rect x="4.6022%" y="1989" width="92.1558%" height="15" fill="rgb(240,127,35)" fg:x="2179" fg:w="43633"/><text x="4.8522%" y="1999.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (43,633 samples, 92.16%)</title><rect x="4.6022%" y="1973" width="92.1558%" height="15" fill="rgb(248,196,34)" fg:x="2179" fg:w="43633"/><text x="4.8522%" y="1983.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (43,633 samples, 92.16%)</title><rect x="4.6022%" y="1957" width="92.1558%" height="15" fill="rgb(236,137,7)" fg:x="2179" fg:w="43633"/><text x="4.8522%" y="1967.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43,633 samples, 92.16%)</title><rect x="4.6022%" y="1941" width="92.1558%" height="15" fill="rgb(235,127,16)" fg:x="2179" fg:w="43633"/><text x="4.8522%" y="1951.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (43,633 samples, 92.16%)</title><rect x="4.6022%" y="1925" width="92.1558%" height="15" fill="rgb(250,192,54)" fg:x="2179" fg:w="43633"/><text x="4.8522%" y="1935.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.06%)</title><rect x="96.9882%" y="2005" width="0.0634%" height="15" fill="rgb(218,98,20)" fg:x="45921" fg:w="30"/><text x="97.2382%" y="2015.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="97.0579%" y="2005" width="0.0148%" height="15" fill="rgb(230,176,47)" fg:x="45954" fg:w="7"/><text x="97.3079%" y="2015.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (6 samples, 0.01%)</title><rect x="97.0769%" y="2005" width="0.0127%" height="15" fill="rgb(244,2,33)" fg:x="45963" fg:w="6"/><text x="97.3269%" y="2015.50"></text></g><g><title>[libc.so.6] (14 samples, 0.03%)</title><rect x="97.0980%" y="2005" width="0.0296%" height="15" fill="rgb(231,100,17)" fg:x="45973" fg:w="14"/><text x="97.3480%" y="2015.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h4eb7268d3777a612E (49 samples, 0.10%)</title><rect x="97.1276%" y="2005" width="0.1035%" height="15" fill="rgb(245,23,12)" fg:x="45987" fg:w="49"/><text x="97.3776%" y="2015.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="97.2078%" y="1989" width="0.0232%" height="15" fill="rgb(249,55,22)" fg:x="46025" fg:w="11"/><text x="97.4578%" y="1999.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (11 samples, 0.02%)</title><rect x="97.2078%" y="1973" width="0.0232%" height="15" fill="rgb(207,134,9)" fg:x="46025" fg:w="11"/><text x="97.4578%" y="1983.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (11 samples, 0.02%)</title><rect x="97.2078%" y="1957" width="0.0232%" height="15" fill="rgb(218,134,0)" fg:x="46025" fg:w="11"/><text x="97.4578%" y="1967.50"></text></g><g><title>core::task::wake::Waker::wake (11 samples, 0.02%)</title><rect x="97.2078%" y="1941" width="0.0232%" height="15" fill="rgb(213,212,33)" fg:x="46025" fg:w="11"/><text x="97.4578%" y="1951.50"></text></g><g><title>_ZN4core3ptr1952drop_in_place$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2d161bfd68533904E (7 samples, 0.01%)</title><rect x="97.2374%" y="2005" width="0.0148%" height="15" fill="rgb(252,106,18)" fg:x="46039" fg:w="7"/><text x="97.4874%" y="2015.50"></text></g><g><title>_ZN4core3ptr2242drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..process_wisp_message..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5428a0f193db5b34E (25 samples, 0.05%)</title><rect x="97.2522%" y="2005" width="0.0528%" height="15" fill="rgb(208,126,42)" fg:x="46046" fg:w="25"/><text x="97.5022%" y="2015.50"></text></g><g><title>_rjem_je_base_ehooks_get (6 samples, 0.01%)</title><rect x="97.3156%" y="2005" width="0.0127%" height="15" fill="rgb(246,175,29)" fg:x="46076" fg:w="6"/><text x="97.5656%" y="2015.50"></text></g><g><title>_rjem_je_malloc_default (6 samples, 0.01%)</title><rect x="97.3578%" y="2005" width="0.0127%" height="15" fill="rgb(215,13,50)" fg:x="46096" fg:w="6"/><text x="97.6078%" y="2015.50"></text></g><g><title>_rjem_je_sdallocx_default (25 samples, 0.05%)</title><rect x="97.3768%" y="2005" width="0.0528%" height="15" fill="rgb(216,172,15)" fg:x="46105" fg:w="25"/><text x="97.6268%" y="2015.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (6 samples, 0.01%)</title><rect x="97.4444%" y="2005" width="0.0127%" height="15" fill="rgb(212,103,13)" fg:x="46137" fg:w="6"/><text x="97.6944%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;epoxy_server::util_chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (6 samples, 0.01%)</title><rect x="97.4782%" y="2005" width="0.0127%" height="15" fill="rgb(231,171,36)" fg:x="46153" fg:w="6"/><text x="97.7282%" y="2015.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (5 samples, 0.01%)</title><rect x="97.5035%" y="2005" width="0.0106%" height="15" fill="rgb(250,123,20)" fg:x="46165" fg:w="5"/><text x="97.7535%" y="2015.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (19 samples, 0.04%)</title><rect x="97.5162%" y="2005" width="0.0401%" height="15" fill="rgb(212,53,50)" fg:x="46171" fg:w="19"/><text x="97.7662%" y="2015.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (31 samples, 0.07%)</title><rect x="97.5563%" y="2005" width="0.0655%" height="15" fill="rgb(243,54,12)" fg:x="46190" fg:w="31"/><text x="97.8063%" y="2015.50"></text></g><g><title>fastwebsockets::frame::Frame::unmask (59 samples, 0.12%)</title><rect x="97.6281%" y="2005" width="0.1246%" height="15" fill="rgb(234,101,34)" fg:x="46224" fg:w="59"/><text x="97.8781%" y="2015.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (7 samples, 0.01%)</title><rect x="97.7528%" y="2005" width="0.0148%" height="15" fill="rgb(254,67,22)" fg:x="46283" fg:w="7"/><text x="98.0028%" y="2015.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (19 samples, 0.04%)</title><rect x="97.7781%" y="2005" width="0.0401%" height="15" fill="rgb(250,35,47)" fg:x="46295" fg:w="19"/><text x="98.0281%" y="2015.50"></text></g><g><title>recv (17 samples, 0.04%)</title><rect x="97.8267%" y="2005" width="0.0359%" height="15" fill="rgb(226,126,38)" fg:x="46318" fg:w="17"/><text x="98.0767%" y="2015.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.01%)</title><rect x="97.8626%" y="2005" width="0.0148%" height="15" fill="rgb(216,138,53)" fg:x="46335" fg:w="7"/><text x="98.1126%" y="2015.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.02%)</title><rect x="97.8816%" y="2005" width="0.0169%" height="15" fill="rgb(246,199,43)" fg:x="46344" fg:w="8"/><text x="98.1316%" y="2015.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (16 samples, 0.03%)</title><rect x="97.9428%" y="1973" width="0.0338%" height="15" fill="rgb(232,125,11)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1983.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (16 samples, 0.03%)</title><rect x="97.9428%" y="1957" width="0.0338%" height="15" fill="rgb(218,219,45)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1967.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (16 samples, 0.03%)</title><rect x="97.9428%" y="1941" width="0.0338%" height="15" fill="rgb(216,102,54)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (16 samples, 0.03%)</title><rect x="97.9428%" y="1925" width="0.0338%" height="15" fill="rgb(250,228,7)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1935.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (16 samples, 0.03%)</title><rect x="97.9428%" y="1909" width="0.0338%" height="15" fill="rgb(226,125,25)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1919.50"></text></g><g><title>std::sys_common::net::TcpStream::read (16 samples, 0.03%)</title><rect x="97.9428%" y="1893" width="0.0338%" height="15" fill="rgb(224,165,27)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1903.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (16 samples, 0.03%)</title><rect x="97.9428%" y="1877" width="0.0338%" height="15" fill="rgb(233,86,3)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1887.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (16 samples, 0.03%)</title><rect x="97.9428%" y="1861" width="0.0338%" height="15" fill="rgb(228,116,20)" fg:x="46373" fg:w="16"/><text x="98.1928%" y="1871.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (38 samples, 0.08%)</title><rect x="97.8985%" y="2005" width="0.0803%" height="15" fill="rgb(209,192,17)" fg:x="46352" fg:w="38"/><text x="98.1485%" y="2015.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (17 samples, 0.04%)</title><rect x="97.9428%" y="1989" width="0.0359%" height="15" fill="rgb(224,88,34)" fg:x="46373" fg:w="17"/><text x="98.1928%" y="1999.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (16 samples, 0.03%)</title><rect x="97.9788%" y="2005" width="0.0338%" height="15" fill="rgb(233,38,6)" fg:x="46390" fg:w="16"/><text x="98.2288%" y="2015.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (8 samples, 0.02%)</title><rect x="97.9956%" y="1989" width="0.0169%" height="15" fill="rgb(212,59,30)" fg:x="46398" fg:w="8"/><text x="98.2456%" y="1999.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (8 samples, 0.02%)</title><rect x="97.9956%" y="1973" width="0.0169%" height="15" fill="rgb(213,80,3)" fg:x="46398" fg:w="8"/><text x="98.2456%" y="1983.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (8 samples, 0.02%)</title><rect x="97.9956%" y="1957" width="0.0169%" height="15" fill="rgb(251,178,7)" fg:x="46398" fg:w="8"/><text x="98.2456%" y="1967.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (8 samples, 0.02%)</title><rect x="97.9956%" y="1941" width="0.0169%" height="15" fill="rgb(213,154,26)" fg:x="46398" fg:w="8"/><text x="98.2456%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (8 samples, 0.02%)</title><rect x="97.9956%" y="1925" width="0.0169%" height="15" fill="rgb(238,165,49)" fg:x="46398" fg:w="8"/><text x="98.2456%" y="1935.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (8 samples, 0.02%)</title><rect x="97.9956%" y="1909" width="0.0169%" height="15" fill="rgb(248,91,46)" fg:x="46398" fg:w="8"/><text x="98.2456%" y="1919.50"></text></g><g><title>std::sys_common::net::TcpStream::write (8 samples, 0.02%)</title><rect x="97.9956%" y="1893" width="0.0169%" height="15" fill="rgb(244,21,52)" fg:x="46398" fg:w="8"/><text x="98.2456%" y="1903.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (19 samples, 0.04%)</title><rect x="98.0231%" y="2005" width="0.0401%" height="15" fill="rgb(247,122,20)" fg:x="46411" fg:w="19"/><text x="98.2731%" y="2015.50"></text></g><g><title>mio::poll::Poll::poll (8 samples, 0.02%)</title><rect x="98.0463%" y="1989" width="0.0169%" height="15" fill="rgb(218,27,9)" fg:x="46422" fg:w="8"/><text x="98.2963%" y="1999.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (8 samples, 0.02%)</title><rect x="98.0463%" y="1973" width="0.0169%" height="15" fill="rgb(246,7,6)" fg:x="46422" fg:w="8"/><text x="98.2963%" y="1983.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (46 samples, 0.10%)</title><rect x="98.0632%" y="2005" width="0.0972%" height="15" fill="rgb(227,135,54)" fg:x="46430" fg:w="46"/><text x="98.3132%" y="2015.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (6 samples, 0.01%)</title><rect x="98.1477%" y="1989" width="0.0127%" height="15" fill="rgb(247,14,11)" fg:x="46470" fg:w="6"/><text x="98.3977%" y="1999.50"></text></g><g><title>tokio::runtime::context::budget (6 samples, 0.01%)</title><rect x="98.1477%" y="1973" width="0.0127%" height="15" fill="rgb(206,149,34)" fg:x="46470" fg:w="6"/><text x="98.3977%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="98.1477%" y="1957" width="0.0127%" height="15" fill="rgb(227,228,4)" fg:x="46470" fg:w="6"/><text x="98.3977%" y="1967.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (6 samples, 0.01%)</title><rect x="98.1477%" y="1941" width="0.0127%" height="15" fill="rgb(238,218,28)" fg:x="46470" fg:w="6"/><text x="98.3977%" y="1951.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (6 samples, 0.01%)</title><rect x="98.1477%" y="1925" width="0.0127%" height="15" fill="rgb(252,86,40)" fg:x="46470" fg:w="6"/><text x="98.3977%" y="1935.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (6 samples, 0.01%)</title><rect x="98.1477%" y="1909" width="0.0127%" height="15" fill="rgb(251,225,11)" fg:x="46470" fg:w="6"/><text x="98.3977%" y="1919.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (18 samples, 0.04%)</title><rect x="98.1604%" y="2005" width="0.0380%" height="15" fill="rgb(206,46,49)" fg:x="46476" fg:w="18"/><text x="98.4104%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (6 samples, 0.01%)</title><rect x="98.2047%" y="2005" width="0.0127%" height="15" fill="rgb(245,128,24)" fg:x="46497" fg:w="6"/><text x="98.4547%" y="2015.50"></text></g><g><title>tokio::runtime::signal::Driver::process (5 samples, 0.01%)</title><rect x="98.2174%" y="2005" width="0.0106%" height="15" fill="rgb(219,177,34)" fg:x="46503" fg:w="5"/><text x="98.4674%" y="2015.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (5 samples, 0.01%)</title><rect x="98.2174%" y="1989" width="0.0106%" height="15" fill="rgb(218,60,48)" fg:x="46503" fg:w="5"/><text x="98.4674%" y="1999.50"></text></g><g><title>tokio::runtime::task::raw::poll (6 samples, 0.01%)</title><rect x="98.2280%" y="2005" width="0.0127%" height="15" fill="rgb(221,11,5)" fg:x="46508" fg:w="6"/><text x="98.4780%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (6 samples, 0.01%)</title><rect x="98.2808%" y="1989" width="0.0127%" height="15" fill="rgb(220,148,13)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (6 samples, 0.01%)</title><rect x="98.2808%" y="1973" width="0.0127%" height="15" fill="rgb(210,16,3)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (6 samples, 0.01%)</title><rect x="98.2808%" y="1957" width="0.0127%" height="15" fill="rgb(236,80,2)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="98.2808%" y="1941" width="0.0127%" height="15" fill="rgb(239,129,19)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1951.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (6 samples, 0.01%)</title><rect x="98.2808%" y="1925" width="0.0127%" height="15" fill="rgb(220,106,35)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.01%)</title><rect x="98.2808%" y="1909" width="0.0127%" height="15" fill="rgb(252,139,45)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1919.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (6 samples, 0.01%)</title><rect x="98.2808%" y="1893" width="0.0127%" height="15" fill="rgb(229,8,36)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1903.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (6 samples, 0.01%)</title><rect x="98.2808%" y="1877" width="0.0127%" height="15" fill="rgb(230,126,33)" fg:x="46533" fg:w="6"/><text x="98.5308%" y="1887.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (5 samples, 0.01%)</title><rect x="98.3019%" y="1989" width="0.0106%" height="15" fill="rgb(239,140,21)" fg:x="46543" fg:w="5"/><text x="98.5519%" y="1999.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (5 samples, 0.01%)</title><rect x="98.3019%" y="1973" width="0.0106%" height="15" fill="rgb(254,104,9)" fg:x="46543" fg:w="5"/><text x="98.5519%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (5 samples, 0.01%)</title><rect x="98.3019%" y="1957" width="0.0106%" height="15" fill="rgb(239,52,14)" fg:x="46543" fg:w="5"/><text x="98.5519%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (5 samples, 0.01%)</title><rect x="98.3019%" y="1941" width="0.0106%" height="15" fill="rgb(208,227,44)" fg:x="46543" fg:w="5"/><text x="98.5519%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (5 samples, 0.01%)</title><rect x="98.3019%" y="1925" width="0.0106%" height="15" fill="rgb(246,18,19)" fg:x="46543" fg:w="5"/><text x="98.5519%" y="1935.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (33 samples, 0.07%)</title><rect x="98.2470%" y="2005" width="0.0697%" height="15" fill="rgb(235,228,25)" fg:x="46517" fg:w="33"/><text x="98.4970%" y="2015.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (53 samples, 0.11%)</title><rect x="98.3167%" y="2005" width="0.1119%" height="15" fill="rgb(240,156,20)" fg:x="46550" fg:w="53"/><text x="98.5667%" y="2015.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (5 samples, 0.01%)</title><rect x="98.4181%" y="1989" width="0.0106%" height="15" fill="rgb(224,8,20)" fg:x="46598" fg:w="5"/><text x="98.6681%" y="1999.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (5 samples, 0.01%)</title><rect x="98.4181%" y="1973" width="0.0106%" height="15" fill="rgb(214,12,52)" fg:x="46598" fg:w="5"/><text x="98.6681%" y="1983.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (5 samples, 0.01%)</title><rect x="98.4286%" y="2005" width="0.0106%" height="15" fill="rgb(211,220,47)" fg:x="46603" fg:w="5"/><text x="98.6786%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (27 samples, 0.06%)</title><rect x="98.4392%" y="2005" width="0.0570%" height="15" fill="rgb(250,173,5)" fg:x="46608" fg:w="27"/><text x="98.6892%" y="2015.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (6 samples, 0.01%)</title><rect x="98.5638%" y="1973" width="0.0127%" height="15" fill="rgb(250,125,52)" fg:x="46667" fg:w="6"/><text x="98.8138%" y="1983.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (6 samples, 0.01%)</title><rect x="98.5638%" y="1957" width="0.0127%" height="15" fill="rgb(209,133,18)" fg:x="46667" fg:w="6"/><text x="98.8138%" y="1967.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (6 samples, 0.01%)</title><rect x="98.5638%" y="1941" width="0.0127%" height="15" fill="rgb(216,173,22)" fg:x="46667" fg:w="6"/><text x="98.8138%" y="1951.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="98.5638%" y="1925" width="0.0127%" height="15" fill="rgb(205,3,22)" fg:x="46667" fg:w="6"/><text x="98.8138%" y="1935.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (42 samples, 0.09%)</title><rect x="98.5025%" y="2005" width="0.0887%" height="15" fill="rgb(248,22,20)" fg:x="46638" fg:w="42"/><text x="98.7525%" y="2015.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (13 samples, 0.03%)</title><rect x="98.5638%" y="1989" width="0.0275%" height="15" fill="rgb(233,6,29)" fg:x="46667" fg:w="13"/><text x="98.8138%" y="1999.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (7 samples, 0.01%)</title><rect x="98.5765%" y="1973" width="0.0148%" height="15" fill="rgb(240,22,54)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.01%)</title><rect x="98.5765%" y="1957" width="0.0148%" height="15" fill="rgb(231,133,32)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="98.5765%" y="1941" width="0.0148%" height="15" fill="rgb(248,193,4)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="98.5765%" y="1925" width="0.0148%" height="15" fill="rgb(211,178,46)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="98.5765%" y="1909" width="0.0148%" height="15" fill="rgb(224,5,42)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.01%)</title><rect x="98.5765%" y="1893" width="0.0148%" height="15" fill="rgb(239,176,25)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.01%)</title><rect x="98.5765%" y="1877" width="0.0148%" height="15" fill="rgb(245,187,50)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="98.5765%" y="1861" width="0.0148%" height="15" fill="rgb(248,24,15)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.01%)</title><rect x="98.5765%" y="1845" width="0.0148%" height="15" fill="rgb(205,166,13)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1855.50"></text></g><g><title>__rust_alloc (7 samples, 0.01%)</title><rect x="98.5765%" y="1829" width="0.0148%" height="15" fill="rgb(208,114,23)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1839.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.01%)</title><rect x="98.5765%" y="1813" width="0.0148%" height="15" fill="rgb(239,127,18)" fg:x="46673" fg:w="7"/><text x="98.8265%" y="1823.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload::_{{closure}} (17 samples, 0.04%)</title><rect x="98.6060%" y="2005" width="0.0359%" height="15" fill="rgb(219,154,28)" fg:x="46687" fg:w="17"/><text x="98.8560%" y="2015.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (11 samples, 0.02%)</title><rect x="98.6419%" y="2005" width="0.0232%" height="15" fill="rgb(225,157,23)" fg:x="46704" fg:w="11"/><text x="98.8919%" y="2015.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_split::_{{closure}} (53 samples, 0.11%)</title><rect x="98.6652%" y="2005" width="0.1119%" height="15" fill="rgb(219,8,6)" fg:x="46715" fg:w="53"/><text x="98.9152%" y="2015.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketWrite&lt;A,B&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (21 samples, 0.04%)</title><rect x="98.7328%" y="1989" width="0.0444%" height="15" fill="rgb(212,47,6)" fg:x="46747" fg:w="21"/><text x="98.9828%" y="1999.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (19 samples, 0.04%)</title><rect x="98.7370%" y="1973" width="0.0401%" height="15" fill="rgb(224,190,4)" fg:x="46749" fg:w="19"/><text x="98.9870%" y="1983.50"></text></g><g><title>[unknown] (964 samples, 2.04%)</title><rect x="96.7580%" y="2021" width="2.0360%" height="15" fill="rgb(239,183,29)" fg:x="45812" fg:w="964"/><text x="97.0080%" y="2031.50">[..</text></g><g><title>writev (7 samples, 0.01%)</title><rect x="98.7792%" y="2005" width="0.0148%" height="15" fill="rgb(213,57,7)" fg:x="46769" fg:w="7"/><text x="99.0292%" y="2015.50"></text></g><g><title>_ZN4core3ptr2235drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..handle_packet..$u7b$$u7b$closure$u7d$$u7d$$GT$17h43b694ca702a9533E (11 samples, 0.02%)</title><rect x="98.7940%" y="2021" width="0.0232%" height="15" fill="rgb(216,148,1)" fg:x="46776" fg:w="11"/><text x="99.0440%" y="2031.50"></text></g><g><title>_ZN4core3ptr2242drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..process_wisp_message..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5428a0f193db5b34E (9 samples, 0.02%)</title><rect x="98.8172%" y="2021" width="0.0190%" height="15" fill="rgb(236,182,29)" fg:x="46787" fg:w="9"/><text x="99.0672%" y="2031.50"></text></g><g><title>_ZN4core3ptr4591drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hfb65917b7f5c0ce3E (10 samples, 0.02%)</title><rect x="98.8363%" y="2021" width="0.0211%" height="15" fill="rgb(244,120,48)" fg:x="46796" fg:w="10"/><text x="99.0863%" y="2031.50"></text></g><g><title>_rjem_je_sdallocx_default (41 samples, 0.09%)</title><rect x="98.8722%" y="2021" width="0.0866%" height="15" fill="rgb(206,71,34)" fg:x="46813" fg:w="41"/><text x="99.1222%" y="2031.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (9 samples, 0.02%)</title><rect x="98.9672%" y="2021" width="0.0190%" height="15" fill="rgb(242,32,6)" fg:x="46858" fg:w="9"/><text x="99.2172%" y="2031.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (12 samples, 0.03%)</title><rect x="99.0221%" y="1893" width="0.0253%" height="15" fill="rgb(241,35,3)" fg:x="46884" fg:w="12"/><text x="99.2721%" y="1903.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (12 samples, 0.03%)</title><rect x="99.0221%" y="1877" width="0.0253%" height="15" fill="rgb(222,62,19)" fg:x="46884" fg:w="12"/><text x="99.2721%" y="1887.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (12 samples, 0.03%)</title><rect x="99.0221%" y="1861" width="0.0253%" height="15" fill="rgb(223,110,41)" fg:x="46884" fg:w="12"/><text x="99.2721%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (12 samples, 0.03%)</title><rect x="99.0221%" y="1845" width="0.0253%" height="15" fill="rgb(208,224,4)" fg:x="46884" fg:w="12"/><text x="99.2721%" y="1855.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 0.03%)</title><rect x="99.0221%" y="1829" width="0.0253%" height="15" fill="rgb(241,137,19)" fg:x="46884" fg:w="12"/><text x="99.2721%" y="1839.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.03%)</title><rect x="99.0221%" y="1813" width="0.0253%" height="15" fill="rgb(244,24,17)" fg:x="46884" fg:w="12"/><text x="99.2721%" y="1823.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.03%)</title><rect x="99.0221%" y="1797" width="0.0253%" height="15" fill="rgb(245,178,49)" fg:x="46884" fg:w="12"/><text x="99.2721%" y="1807.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (43 samples, 0.09%)</title><rect x="99.0221%" y="1909" width="0.0908%" height="15" fill="rgb(219,160,38)" fg:x="46884" fg:w="43"/><text x="99.2721%" y="1919.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (30 samples, 0.06%)</title><rect x="99.0496%" y="1893" width="0.0634%" height="15" fill="rgb(228,137,14)" fg:x="46897" fg:w="30"/><text x="99.2996%" y="1903.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (30 samples, 0.06%)</title><rect x="99.0496%" y="1877" width="0.0634%" height="15" fill="rgb(237,134,11)" fg:x="46897" fg:w="30"/><text x="99.2996%" y="1887.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (30 samples, 0.06%)</title><rect x="99.0496%" y="1861" width="0.0634%" height="15" fill="rgb(211,126,44)" fg:x="46897" fg:w="30"/><text x="99.2996%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (30 samples, 0.06%)</title><rect x="99.0496%" y="1845" width="0.0634%" height="15" fill="rgb(226,171,33)" fg:x="46897" fg:w="30"/><text x="99.2996%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (30 samples, 0.06%)</title><rect x="99.0496%" y="1829" width="0.0634%" height="15" fill="rgb(253,99,13)" fg:x="46897" fg:w="30"/><text x="99.2996%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (30 samples, 0.06%)</title><rect x="99.0496%" y="1813" width="0.0634%" height="15" fill="rgb(244,48,7)" fg:x="46897" fg:w="30"/><text x="99.2996%" y="1823.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (30 samples, 0.06%)</title><rect x="99.0496%" y="1797" width="0.0634%" height="15" fill="rgb(244,217,54)" fg:x="46897" fg:w="30"/><text x="99.2996%" y="1807.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (58 samples, 0.12%)</title><rect x="98.9968%" y="2021" width="0.1225%" height="15" fill="rgb(224,15,18)" fg:x="46872" fg:w="58"/><text x="99.2468%" y="2031.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.10%)</title><rect x="99.0221%" y="2005" width="0.0972%" height="15" fill="rgb(244,99,12)" fg:x="46884" fg:w="46"/><text x="99.2721%" y="2015.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (46 samples, 0.10%)</title><rect x="99.0221%" y="1989" width="0.0972%" height="15" fill="rgb(233,226,8)" fg:x="46884" fg:w="46"/><text x="99.2721%" y="1999.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (46 samples, 0.10%)</title><rect x="99.0221%" y="1973" width="0.0972%" height="15" fill="rgb(229,211,3)" fg:x="46884" fg:w="46"/><text x="99.2721%" y="1983.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (46 samples, 0.10%)</title><rect x="99.0221%" y="1957" width="0.0972%" height="15" fill="rgb(216,140,21)" fg:x="46884" fg:w="46"/><text x="99.2721%" y="1967.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.10%)</title><rect x="99.0221%" y="1941" width="0.0972%" height="15" fill="rgb(234,122,30)" fg:x="46884" fg:w="46"/><text x="99.2721%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (46 samples, 0.10%)</title><rect x="99.0221%" y="1925" width="0.0972%" height="15" fill="rgb(236,25,46)" fg:x="46884" fg:w="46"/><text x="99.2721%" y="1935.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (12 samples, 0.03%)</title><rect x="99.1193%" y="2021" width="0.0253%" height="15" fill="rgb(217,52,54)" fg:x="46930" fg:w="12"/><text x="99.3693%" y="2031.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (11 samples, 0.02%)</title><rect x="99.1214%" y="2005" width="0.0232%" height="15" fill="rgb(222,29,26)" fg:x="46931" fg:w="11"/><text x="99.3714%" y="2015.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (11 samples, 0.02%)</title><rect x="99.1214%" y="1989" width="0.0232%" height="15" fill="rgb(216,177,29)" fg:x="46931" fg:w="11"/><text x="99.3714%" y="1999.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.02%)</title><rect x="99.1214%" y="1973" width="0.0232%" height="15" fill="rgb(247,136,51)" fg:x="46931" fg:w="11"/><text x="99.3714%" y="1983.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (8 samples, 0.02%)</title><rect x="99.1446%" y="2021" width="0.0169%" height="15" fill="rgb(231,47,47)" fg:x="46942" fg:w="8"/><text x="99.3946%" y="2031.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (6 samples, 0.01%)</title><rect x="99.1488%" y="2005" width="0.0127%" height="15" fill="rgb(211,192,36)" fg:x="46944" fg:w="6"/><text x="99.3988%" y="2015.50"></text></g><g><title>event_listener::TaskRef::into_task (6 samples, 0.01%)</title><rect x="99.1488%" y="1989" width="0.0127%" height="15" fill="rgb(229,156,32)" fg:x="46944" fg:w="6"/><text x="99.3988%" y="1999.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="99.1488%" y="1973" width="0.0127%" height="15" fill="rgb(248,213,20)" fg:x="46944" fg:w="6"/><text x="99.3988%" y="1983.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (6 samples, 0.01%)</title><rect x="99.1615%" y="2021" width="0.0127%" height="15" fill="rgb(217,64,7)" fg:x="46950" fg:w="6"/><text x="99.4115%" y="2031.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (10 samples, 0.02%)</title><rect x="99.1742%" y="2021" width="0.0211%" height="15" fill="rgb(232,142,8)" fg:x="46956" fg:w="10"/><text x="99.4242%" y="2031.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (12 samples, 0.03%)</title><rect x="99.2016%" y="2021" width="0.0253%" height="15" fill="rgb(224,92,44)" fg:x="46969" fg:w="12"/><text x="99.4516%" y="2031.50"></text></g><g><title>recv (6 samples, 0.01%)</title><rect x="99.2481%" y="2021" width="0.0127%" height="15" fill="rgb(214,169,17)" fg:x="46991" fg:w="6"/><text x="99.4981%" y="2031.50"></text></g><g><title>syscall (6 samples, 0.01%)</title><rect x="99.2756%" y="2021" width="0.0127%" height="15" fill="rgb(210,59,37)" fg:x="47004" fg:w="6"/><text x="99.5256%" y="2031.50"></text></g><g><title>tokio::runtime::task::raw::poll (49 samples, 0.10%)</title><rect x="99.3136%" y="2021" width="0.1035%" height="15" fill="rgb(214,116,48)" fg:x="47022" fg:w="49"/><text x="99.5636%" y="2031.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (9 samples, 0.02%)</title><rect x="99.4192%" y="2021" width="0.0190%" height="15" fill="rgb(244,191,6)" fg:x="47072" fg:w="9"/><text x="99.6692%" y="2031.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (56 samples, 0.12%)</title><rect x="99.4382%" y="2021" width="0.1183%" height="15" fill="rgb(241,50,52)" fg:x="47081" fg:w="56"/><text x="99.6882%" y="2031.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (27 samples, 0.06%)</title><rect x="99.4994%" y="2005" width="0.0570%" height="15" fill="rgb(236,75,39)" fg:x="47110" fg:w="27"/><text x="99.7494%" y="2015.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (27 samples, 0.06%)</title><rect x="99.4994%" y="1989" width="0.0570%" height="15" fill="rgb(236,99,0)" fg:x="47110" fg:w="27"/><text x="99.7494%" y="1999.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_packet::_{{closure}} (18 samples, 0.04%)</title><rect x="99.5565%" y="2021" width="0.0380%" height="15" fill="rgb(207,202,15)" fg:x="47137" fg:w="18"/><text x="99.8065%" y="2031.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_data_packet (5 samples, 0.01%)</title><rect x="99.5839%" y="2005" width="0.0106%" height="15" fill="rgb(233,207,14)" fg:x="47150" fg:w="5"/><text x="99.8339%" y="2015.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::into_future::_{{closure}} (75 samples, 0.16%)</title><rect x="99.5945%" y="2021" width="0.1584%" height="15" fill="rgb(226,27,51)" fg:x="47155" fg:w="75"/><text x="99.8445%" y="2031.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}} (53 samples, 0.11%)</title><rect x="99.6409%" y="2005" width="0.1119%" height="15" fill="rgb(206,104,42)" fg:x="47177" fg:w="53"/><text x="99.8909%" y="2015.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (42 samples, 0.09%)</title><rect x="99.6642%" y="1989" width="0.0887%" height="15" fill="rgb(212,225,4)" fg:x="47188" fg:w="42"/><text x="99.9142%" y="1999.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}} (42 samples, 0.09%)</title><rect x="99.6642%" y="1973" width="0.0887%" height="15" fill="rgb(233,96,42)" fg:x="47188" fg:w="42"/><text x="99.9142%" y="1983.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (42 samples, 0.09%)</title><rect x="99.6642%" y="1957" width="0.0887%" height="15" fill="rgb(229,21,32)" fg:x="47188" fg:w="42"/><text x="99.9142%" y="1967.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (72 samples, 0.15%)</title><rect x="99.7529%" y="2021" width="0.1521%" height="15" fill="rgb(226,216,24)" fg:x="47230" fg:w="72"/><text x="100.0029%" y="2031.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (7 samples, 0.01%)</title><rect x="99.8902%" y="2005" width="0.0148%" height="15" fill="rgb(221,163,17)" fg:x="47295" fg:w="7"/><text x="100.1402%" y="2015.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="99.8902%" y="1989" width="0.0148%" height="15" fill="rgb(216,216,42)" fg:x="47295" fg:w="7"/><text x="100.1402%" y="1999.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="99.8944%" y="1973" width="0.0106%" height="15" fill="rgb(240,118,7)" fg:x="47297" fg:w="5"/><text x="100.1444%" y="1983.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (5 samples, 0.01%)</title><rect x="99.8944%" y="1957" width="0.0106%" height="15" fill="rgb(221,67,37)" fg:x="47297" fg:w="5"/><text x="100.1444%" y="1967.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="99.8944%" y="1941" width="0.0106%" height="15" fill="rgb(241,32,44)" fg:x="47297" fg:w="5"/><text x="100.1444%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="99.8944%" y="1925" width="0.0106%" height="15" fill="rgb(235,204,43)" fg:x="47297" fg:w="5"/><text x="100.1444%" y="1935.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="99.8944%" y="1909" width="0.0106%" height="15" fill="rgb(213,116,10)" fg:x="47297" fg:w="5"/><text x="100.1444%" y="1919.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.01%)</title><rect x="99.8944%" y="1893" width="0.0106%" height="15" fill="rgb(239,15,48)" fg:x="47297" fg:w="5"/><text x="100.1444%" y="1903.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.01%)</title><rect x="99.8944%" y="1877" width="0.0106%" height="15" fill="rgb(207,123,36)" fg:x="47297" fg:w="5"/><text x="100.1444%" y="1887.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}} (14 samples, 0.03%)</title><rect x="99.9050%" y="2021" width="0.0296%" height="15" fill="rgb(209,103,30)" fg:x="47302" fg:w="14"/><text x="100.1550%" y="2031.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 0.02%)</title><rect x="99.9345%" y="2021" width="0.0169%" height="15" fill="rgb(238,100,19)" fg:x="47316" fg:w="8"/><text x="100.1845%" y="2031.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}} (20 samples, 0.04%)</title><rect x="99.9514%" y="2021" width="0.0422%" height="15" fill="rgb(244,30,14)" fg:x="47324" fg:w="20"/><text x="100.2014%" y="2031.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="99.9514%" y="2005" width="0.0422%" height="15" fill="rgb(249,174,6)" fg:x="47324" fg:w="20"/><text x="100.2014%" y="2015.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}} (20 samples, 0.04%)</title><rect x="99.9514%" y="1989" width="0.0422%" height="15" fill="rgb(235,213,41)" fg:x="47324" fg:w="20"/><text x="100.2014%" y="1999.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20 samples, 0.04%)</title><rect x="99.9514%" y="1973" width="0.0422%" height="15" fill="rgb(213,118,6)" fg:x="47324" fg:w="20"/><text x="100.2014%" y="1983.50"></text></g><g><title>all (47,347 samples, 100%)</title><rect x="0.0000%" y="2053" width="100.0000%" height="15" fill="rgb(235,44,51)" fg:x="0" fg:w="47347"/><text x="0.2500%" y="2063.50"></text></g><g><title>tokio-runtime-w (47,254 samples, 99.80%)</title><rect x="0.1964%" y="2037" width="99.8036%" height="15" fill="rgb(217,9,53)" fg:x="93" fg:w="47254"/><text x="0.4464%" y="2047.50">tokio-runtime-w</text></g></svg></svg>