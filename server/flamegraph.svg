<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2038" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2021.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2021.00"> </text><svg id="frames" x="10" width="1180" total_samples="37992"><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.01%)</title><rect x="0.0026%" y="1957" width="0.0132%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="5"/><text x="0.2526%" y="1967.50"></text></g><g><title>[libc.so.6] (34 samples, 0.09%)</title><rect x="0.0158%" y="1957" width="0.0895%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="34"/><text x="0.2658%" y="1967.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="0.0790%" y="1941" width="0.0263%" height="15" fill="rgb(221,193,54)" fg:x="30" fg:w="10"/><text x="0.3290%" y="1951.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (4 samples, 0.01%)</title><rect x="0.0948%" y="1925" width="0.0105%" height="15" fill="rgb(248,212,6)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1935.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (4 samples, 0.01%)</title><rect x="0.0948%" y="1909" width="0.0105%" height="15" fill="rgb(208,68,35)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1919.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (4 samples, 0.01%)</title><rect x="0.0948%" y="1893" width="0.0105%" height="15" fill="rgb(232,128,0)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1903.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (4 samples, 0.01%)</title><rect x="0.0948%" y="1877" width="0.0105%" height="15" fill="rgb(207,160,47)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1887.50"></text></g><g><title>pthread_getattr_np (4 samples, 0.01%)</title><rect x="0.0948%" y="1861" width="0.0105%" height="15" fill="rgb(228,23,34)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1871.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="0.0948%" y="1845" width="0.0105%" height="15" fill="rgb(218,30,26)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1855.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.0948%" y="1829" width="0.0105%" height="15" fill="rgb(220,122,19)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1839.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.0948%" y="1813" width="0.0105%" height="15" fill="rgb(250,228,42)" fg:x="36" fg:w="4"/><text x="0.3448%" y="1823.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="0.1105%" y="1717" width="0.0105%" height="15" fill="rgb(240,193,28)" fg:x="42" fg:w="4"/><text x="0.3605%" y="1727.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.01%)</title><rect x="0.1105%" y="1701" width="0.0105%" height="15" fill="rgb(216,20,37)" fg:x="42" fg:w="4"/><text x="0.3605%" y="1711.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.01%)</title><rect x="0.1105%" y="1685" width="0.0105%" height="15" fill="rgb(206,188,39)" fg:x="42" fg:w="4"/><text x="0.3605%" y="1695.50"></text></g><g><title>epoxy-server (47 samples, 0.12%)</title><rect x="0.0000%" y="1973" width="0.1237%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="47"/><text x="0.2500%" y="1983.50"></text></g><g><title>_start (5 samples, 0.01%)</title><rect x="0.1105%" y="1957" width="0.0132%" height="15" fill="rgb(231,73,38)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1967.50"></text></g><g><title>__libc_start_main (5 samples, 0.01%)</title><rect x="0.1105%" y="1941" width="0.0132%" height="15" fill="rgb(225,20,46)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1951.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="0.1105%" y="1925" width="0.0132%" height="15" fill="rgb(210,31,41)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1935.50"></text></g><g><title>main (5 samples, 0.01%)</title><rect x="0.1105%" y="1909" width="0.0132%" height="15" fill="rgb(221,200,47)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1919.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (5 samples, 0.01%)</title><rect x="0.1105%" y="1893" width="0.0132%" height="15" fill="rgb(226,26,5)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1903.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="0.1105%" y="1877" width="0.0132%" height="15" fill="rgb(249,33,26)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1887.50"></text></g><g><title>epoxy_server::main (5 samples, 0.01%)</title><rect x="0.1105%" y="1861" width="0.0132%" height="15" fill="rgb(235,183,28)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1871.50"></text></g><g><title>tokio::runtime::builder::Builder::build (5 samples, 0.01%)</title><rect x="0.1105%" y="1845" width="0.0132%" height="15" fill="rgb(221,5,38)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1855.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (5 samples, 0.01%)</title><rect x="0.1105%" y="1829" width="0.0132%" height="15" fill="rgb(247,18,42)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1839.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (5 samples, 0.01%)</title><rect x="0.1105%" y="1813" width="0.0132%" height="15" fill="rgb(241,131,45)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1823.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (5 samples, 0.01%)</title><rect x="0.1105%" y="1797" width="0.0132%" height="15" fill="rgb(249,31,29)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1807.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (5 samples, 0.01%)</title><rect x="0.1105%" y="1781" width="0.0132%" height="15" fill="rgb(225,111,53)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1791.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (5 samples, 0.01%)</title><rect x="0.1105%" y="1765" width="0.0132%" height="15" fill="rgb(238,160,17)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1775.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (5 samples, 0.01%)</title><rect x="0.1105%" y="1749" width="0.0132%" height="15" fill="rgb(214,148,48)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1759.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (5 samples, 0.01%)</title><rect x="0.1105%" y="1733" width="0.0132%" height="15" fill="rgb(232,36,49)" fg:x="42" fg:w="5"/><text x="0.3605%" y="1743.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="0.1237%" y="1957" width="0.0132%" height="15" fill="rgb(209,103,24)" fg:x="47" fg:w="5"/><text x="0.3737%" y="1967.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (39 samples, 0.10%)</title><rect x="0.1500%" y="1957" width="0.1027%" height="15" fill="rgb(229,88,8)" fg:x="57" fg:w="39"/><text x="0.4000%" y="1967.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (39 samples, 0.10%)</title><rect x="0.1500%" y="1941" width="0.1027%" height="15" fill="rgb(213,181,19)" fg:x="57" fg:w="39"/><text x="0.4000%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (39 samples, 0.10%)</title><rect x="0.1500%" y="1925" width="0.1027%" height="15" fill="rgb(254,191,54)" fg:x="57" fg:w="39"/><text x="0.4000%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (39 samples, 0.10%)</title><rect x="0.1500%" y="1909" width="0.1027%" height="15" fill="rgb(241,83,37)" fg:x="57" fg:w="39"/><text x="0.4000%" y="1919.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (39 samples, 0.10%)</title><rect x="0.1500%" y="1893" width="0.1027%" height="15" fill="rgb(233,36,39)" fg:x="57" fg:w="39"/><text x="0.4000%" y="1903.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="0.2553%" y="1941" width="0.0211%" height="15" fill="rgb(226,3,54)" fg:x="97" fg:w="8"/><text x="0.5053%" y="1951.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (19 samples, 0.05%)</title><rect x="0.2764%" y="1941" width="0.0500%" height="15" fill="rgb(245,192,40)" fg:x="105" fg:w="19"/><text x="0.5264%" y="1951.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (31 samples, 0.08%)</title><rect x="0.3264%" y="1941" width="0.0816%" height="15" fill="rgb(238,167,29)" fg:x="124" fg:w="31"/><text x="0.5764%" y="1951.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (39 samples, 0.10%)</title><rect x="0.4080%" y="1941" width="0.1027%" height="15" fill="rgb(232,182,51)" fg:x="155" fg:w="39"/><text x="0.6580%" y="1951.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="0.5159%" y="1941" width="0.0211%" height="15" fill="rgb(231,60,39)" fg:x="196" fg:w="8"/><text x="0.7659%" y="1951.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="0.5159%" y="1925" width="0.0211%" height="15" fill="rgb(208,69,12)" fg:x="196" fg:w="8"/><text x="0.7659%" y="1935.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (8 samples, 0.02%)</title><rect x="0.5159%" y="1909" width="0.0211%" height="15" fill="rgb(235,93,37)" fg:x="196" fg:w="8"/><text x="0.7659%" y="1919.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.03%)</title><rect x="0.5370%" y="1941" width="0.0342%" height="15" fill="rgb(213,116,39)" fg:x="204" fg:w="13"/><text x="0.7870%" y="1951.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (88 samples, 0.23%)</title><rect x="0.5712%" y="1941" width="0.2316%" height="15" fill="rgb(222,207,29)" fg:x="217" fg:w="88"/><text x="0.8212%" y="1951.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (11 samples, 0.03%)</title><rect x="0.8107%" y="1941" width="0.0290%" height="15" fill="rgb(206,96,30)" fg:x="308" fg:w="11"/><text x="1.0607%" y="1951.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (19 samples, 0.05%)</title><rect x="0.8397%" y="1941" width="0.0500%" height="15" fill="rgb(218,138,4)" fg:x="319" fg:w="19"/><text x="1.0897%" y="1951.50"></text></g><g><title>[libc.so.6] (40 samples, 0.11%)</title><rect x="0.8897%" y="1941" width="0.1053%" height="15" fill="rgb(250,191,14)" fg:x="338" fg:w="40"/><text x="1.1397%" y="1951.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h5adf97a234b091cbE (7 samples, 0.02%)</title><rect x="0.9949%" y="1941" width="0.0184%" height="15" fill="rgb(239,60,40)" fg:x="378" fg:w="7"/><text x="1.2449%" y="1951.50"></text></g><g><title>_ZN4core3ptr1130drop_in_place$LT$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17ha733a0e4ab631cc6E (40 samples, 0.11%)</title><rect x="1.0134%" y="1941" width="0.1053%" height="15" fill="rgb(206,27,48)" fg:x="385" fg:w="40"/><text x="1.2634%" y="1951.50"></text></g><g><title>_ZN4core3ptr1139drop_in_place$LT$wisp_mux..stream..MuxStreamWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_payload_internal..$u7b$$u7b$closure$u7d$$u7d$$GT$17h1e1f16b307ada95fE (17 samples, 0.04%)</title><rect x="1.1187%" y="1941" width="0.0447%" height="15" fill="rgb(225,35,8)" fg:x="425" fg:w="17"/><text x="1.3687%" y="1951.50"></text></g><g><title>_ZN4core3ptr1141drop_in_place$LT$$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$u20$as$u20$wisp_mux..ws..WebSocketWrite$GT$..wisp_write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17h46d8d85450636ef6E (43 samples, 0.11%)</title><rect x="1.1634%" y="1941" width="0.1132%" height="15" fill="rgb(250,213,24)" fg:x="442" fg:w="43"/><text x="1.4134%" y="1951.50"></text></g><g><title>_ZN4core3ptr1952drop_in_place$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17he1725c7536cd403aE (7 samples, 0.02%)</title><rect x="1.2766%" y="1941" width="0.0184%" height="15" fill="rgb(247,123,22)" fg:x="485" fg:w="7"/><text x="1.5266%" y="1951.50"></text></g><g><title>_ZN4core3ptr2235drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..handle_packet..$u7b$$u7b$closure$u7d$$u7d$$GT$17h8573672948dae986E (9 samples, 0.02%)</title><rect x="1.2950%" y="1941" width="0.0237%" height="15" fill="rgb(231,138,38)" fg:x="492" fg:w="9"/><text x="1.5450%" y="1951.50"></text></g><g><title>_ZN4core3ptr2242drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..process_wisp_message..$u7b$$u7b$closure$u7d$$u7d$$GT$17he74726959e7424b4E (6 samples, 0.02%)</title><rect x="1.3187%" y="1941" width="0.0158%" height="15" fill="rgb(231,145,46)" fg:x="501" fg:w="6"/><text x="1.5687%" y="1951.50"></text></g><g><title>_ZN4core3ptr2276drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..into_inner_stream..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h86c016b731abc5f2E (10 samples, 0.03%)</title><rect x="1.3345%" y="1941" width="0.0263%" height="15" fill="rgb(251,118,11)" fg:x="507" fg:w="10"/><text x="1.5845%" y="1951.50"></text></g><g><title>_ZN4core3ptr4591drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17he85d75ce02d52a02E (22 samples, 0.06%)</title><rect x="1.3608%" y="1941" width="0.0579%" height="15" fill="rgb(217,147,25)" fg:x="517" fg:w="22"/><text x="1.6108%" y="1951.50"></text></g><g><title>__floattidf (37 samples, 0.10%)</title><rect x="1.4187%" y="1941" width="0.0974%" height="15" fill="rgb(247,81,37)" fg:x="539" fg:w="37"/><text x="1.6687%" y="1951.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.03%)</title><rect x="1.5266%" y="1941" width="0.0316%" height="15" fill="rgb(209,12,38)" fg:x="580" fg:w="12"/><text x="1.7766%" y="1951.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (7 samples, 0.02%)</title><rect x="1.5582%" y="1941" width="0.0184%" height="15" fill="rgb(227,1,9)" fg:x="592" fg:w="7"/><text x="1.8082%" y="1951.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (17 samples, 0.04%)</title><rect x="1.5766%" y="1941" width="0.0447%" height="15" fill="rgb(248,47,43)" fg:x="599" fg:w="17"/><text x="1.8266%" y="1951.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (11 samples, 0.03%)</title><rect x="1.6214%" y="1941" width="0.0290%" height="15" fill="rgb(221,10,30)" fg:x="616" fg:w="11"/><text x="1.8714%" y="1951.50"></text></g><g><title>_rjem_je_arena_malloc_hard (10 samples, 0.03%)</title><rect x="1.6503%" y="1941" width="0.0263%" height="15" fill="rgb(210,229,1)" fg:x="627" fg:w="10"/><text x="1.9003%" y="1951.50"></text></g><g><title>_rjem_je_ecache_alloc (14 samples, 0.04%)</title><rect x="1.6872%" y="1941" width="0.0368%" height="15" fill="rgb(222,148,37)" fg:x="641" fg:w="14"/><text x="1.9372%" y="1951.50"></text></g><g><title>_rjem_je_edata_avail_remove (16 samples, 0.04%)</title><rect x="1.7319%" y="1941" width="0.0421%" height="15" fill="rgb(234,67,33)" fg:x="658" fg:w="16"/><text x="1.9819%" y="1951.50"></text></g><g><title>_rjem_je_edata_cache_get (4 samples, 0.01%)</title><rect x="1.7741%" y="1941" width="0.0105%" height="15" fill="rgb(247,98,35)" fg:x="674" fg:w="4"/><text x="2.0241%" y="1951.50"></text></g><g><title>_rjem_je_edata_cache_put (6 samples, 0.02%)</title><rect x="1.7846%" y="1941" width="0.0158%" height="15" fill="rgb(247,138,52)" fg:x="678" fg:w="6"/><text x="2.0346%" y="1951.50"></text></g><g><title>_rjem_je_edata_heap_insert (10 samples, 0.03%)</title><rect x="1.8083%" y="1941" width="0.0263%" height="15" fill="rgb(213,79,30)" fg:x="687" fg:w="10"/><text x="2.0583%" y="1951.50"></text></g><g><title>_rjem_je_edata_heap_remove (8 samples, 0.02%)</title><rect x="1.8346%" y="1941" width="0.0211%" height="15" fill="rgb(246,177,23)" fg:x="697" fg:w="8"/><text x="2.0846%" y="1951.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (4 samples, 0.01%)</title><rect x="1.8609%" y="1941" width="0.0105%" height="15" fill="rgb(230,62,27)" fg:x="707" fg:w="4"/><text x="2.1109%" y="1951.50"></text></g><g><title>_rjem_je_emap_remap (7 samples, 0.02%)</title><rect x="1.8846%" y="1941" width="0.0184%" height="15" fill="rgb(216,154,8)" fg:x="716" fg:w="7"/><text x="2.1346%" y="1951.50"></text></g><g><title>_rjem_je_emap_split_prepare (17 samples, 0.04%)</title><rect x="1.9030%" y="1941" width="0.0447%" height="15" fill="rgb(244,35,45)" fg:x="723" fg:w="17"/><text x="2.1530%" y="1951.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (14 samples, 0.04%)</title><rect x="1.9478%" y="1941" width="0.0368%" height="15" fill="rgb(251,115,12)" fg:x="740" fg:w="14"/><text x="2.1978%" y="1951.50"></text></g><g><title>_rjem_je_emap_update_edata_state (10 samples, 0.03%)</title><rect x="1.9846%" y="1941" width="0.0263%" height="15" fill="rgb(240,54,50)" fg:x="754" fg:w="10"/><text x="2.2346%" y="1951.50"></text></g><g><title>_rjem_je_eset_insert (7 samples, 0.02%)</title><rect x="2.0162%" y="1941" width="0.0184%" height="15" fill="rgb(233,84,52)" fg:x="766" fg:w="7"/><text x="2.2662%" y="1951.50"></text></g><g><title>_rjem_je_eset_remove (7 samples, 0.02%)</title><rect x="2.0346%" y="1941" width="0.0184%" height="15" fill="rgb(207,117,47)" fg:x="773" fg:w="7"/><text x="2.2846%" y="1951.50"></text></g><g><title>_rjem_je_extent_record (6 samples, 0.02%)</title><rect x="2.0610%" y="1941" width="0.0158%" height="15" fill="rgb(249,43,39)" fg:x="783" fg:w="6"/><text x="2.3110%" y="1951.50"></text></g><g><title>_rjem_je_large_palloc (14 samples, 0.04%)</title><rect x="2.0846%" y="1941" width="0.0368%" height="15" fill="rgb(209,38,44)" fg:x="792" fg:w="14"/><text x="2.3346%" y="1951.50"></text></g><g><title>_rjem_je_malloc_default (18 samples, 0.05%)</title><rect x="2.1215%" y="1941" width="0.0474%" height="15" fill="rgb(236,212,23)" fg:x="806" fg:w="18"/><text x="2.3715%" y="1951.50"></text></g><g><title>_rjem_je_pa_alloc (19 samples, 0.05%)</title><rect x="2.1768%" y="1941" width="0.0500%" height="15" fill="rgb(242,79,21)" fg:x="827" fg:w="19"/><text x="2.4268%" y="1951.50"></text></g><g><title>_rjem_je_pa_dalloc (8 samples, 0.02%)</title><rect x="2.2268%" y="1941" width="0.0211%" height="15" fill="rgb(211,96,35)" fg:x="846" fg:w="8"/><text x="2.4768%" y="1951.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (4 samples, 0.01%)</title><rect x="2.2636%" y="1941" width="0.0105%" height="15" fill="rgb(253,215,40)" fg:x="860" fg:w="4"/><text x="2.5136%" y="1951.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (6 samples, 0.02%)</title><rect x="2.2742%" y="1941" width="0.0158%" height="15" fill="rgb(211,81,21)" fg:x="864" fg:w="6"/><text x="2.5242%" y="1951.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (9 samples, 0.02%)</title><rect x="2.2900%" y="1941" width="0.0237%" height="15" fill="rgb(208,190,38)" fg:x="870" fg:w="9"/><text x="2.5400%" y="1951.50"></text></g><g><title>_rjem_je_tcache_gc_new_event_wait (6 samples, 0.02%)</title><rect x="2.3268%" y="1941" width="0.0158%" height="15" fill="rgb(235,213,38)" fg:x="884" fg:w="6"/><text x="2.5768%" y="1951.50"></text></g><g><title>_rjem_je_te_event_trigger (20 samples, 0.05%)</title><rect x="2.3426%" y="1941" width="0.0526%" height="15" fill="rgb(237,122,38)" fg:x="890" fg:w="20"/><text x="2.5926%" y="1951.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (15 samples, 0.04%)</title><rect x="2.4084%" y="1941" width="0.0395%" height="15" fill="rgb(244,218,35)" fg:x="915" fg:w="15"/><text x="2.6584%" y="1951.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (13 samples, 0.03%)</title><rect x="2.4137%" y="1925" width="0.0342%" height="15" fill="rgb(240,68,47)" fg:x="917" fg:w="13"/><text x="2.6637%" y="1935.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (13 samples, 0.03%)</title><rect x="2.4137%" y="1909" width="0.0342%" height="15" fill="rgb(210,16,53)" fg:x="917" fg:w="13"/><text x="2.6637%" y="1919.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (7 samples, 0.02%)</title><rect x="2.4479%" y="1941" width="0.0184%" height="15" fill="rgb(235,124,12)" fg:x="930" fg:w="7"/><text x="2.6979%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="2.5058%" y="1925" width="0.0105%" height="15" fill="rgb(224,169,11)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="2.5058%" y="1909" width="0.0105%" height="15" fill="rgb(250,166,2)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="2.5058%" y="1893" width="0.0105%" height="15" fill="rgb(242,216,29)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="2.5058%" y="1877" width="0.0105%" height="15" fill="rgb(230,116,27)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="2.5058%" y="1861" width="0.0105%" height="15" fill="rgb(228,99,48)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="2.5058%" y="1845" width="0.0105%" height="15" fill="rgb(253,11,6)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="2.5058%" y="1829" width="0.0105%" height="15" fill="rgb(247,143,39)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="2.5058%" y="1813" width="0.0105%" height="15" fill="rgb(236,97,10)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1823.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="2.5058%" y="1797" width="0.0105%" height="15" fill="rgb(233,208,19)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1807.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="2.5058%" y="1781" width="0.0105%" height="15" fill="rgb(216,164,2)" fg:x="952" fg:w="4"/><text x="2.7558%" y="1791.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (23 samples, 0.06%)</title><rect x="2.4663%" y="1941" width="0.0605%" height="15" fill="rgb(220,129,5)" fg:x="937" fg:w="23"/><text x="2.7163%" y="1951.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="2.5163%" y="1925" width="0.0105%" height="15" fill="rgb(242,17,10)" fg:x="956" fg:w="4"/><text x="2.7663%" y="1935.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (8 samples, 0.02%)</title><rect x="2.5321%" y="1925" width="0.0211%" height="15" fill="rgb(242,107,0)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1935.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (8 samples, 0.02%)</title><rect x="2.5321%" y="1909" width="0.0211%" height="15" fill="rgb(251,28,31)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1919.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="2.5321%" y="1893" width="0.0211%" height="15" fill="rgb(233,223,10)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1903.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.02%)</title><rect x="2.5321%" y="1877" width="0.0211%" height="15" fill="rgb(215,21,27)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="2.5321%" y="1861" width="0.0211%" height="15" fill="rgb(232,23,21)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="2.5321%" y="1845" width="0.0211%" height="15" fill="rgb(244,5,23)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="2.5321%" y="1829" width="0.0211%" height="15" fill="rgb(226,81,46)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1839.50"></text></g><g><title>__rust_alloc (8 samples, 0.02%)</title><rect x="2.5321%" y="1813" width="0.0211%" height="15" fill="rgb(247,70,30)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1823.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (8 samples, 0.02%)</title><rect x="2.5321%" y="1797" width="0.0211%" height="15" fill="rgb(212,68,19)" fg:x="962" fg:w="8"/><text x="2.7821%" y="1807.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (23 samples, 0.06%)</title><rect x="2.5268%" y="1941" width="0.0605%" height="15" fill="rgb(240,187,13)" fg:x="960" fg:w="23"/><text x="2.7768%" y="1951.50"></text></g><g><title>core::fmt::Arguments::new_v1 (13 samples, 0.03%)</title><rect x="2.5532%" y="1925" width="0.0342%" height="15" fill="rgb(223,113,26)" fg:x="970" fg:w="13"/><text x="2.8032%" y="1935.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (53 samples, 0.14%)</title><rect x="2.5874%" y="1941" width="0.1395%" height="15" fill="rgb(206,192,2)" fg:x="983" fg:w="53"/><text x="2.8374%" y="1951.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (53 samples, 0.14%)</title><rect x="2.5874%" y="1925" width="0.1395%" height="15" fill="rgb(241,108,4)" fg:x="983" fg:w="53"/><text x="2.8374%" y="1935.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (53 samples, 0.14%)</title><rect x="2.5874%" y="1909" width="0.1395%" height="15" fill="rgb(247,173,49)" fg:x="983" fg:w="53"/><text x="2.8374%" y="1919.50"></text></g><g><title>bytes::bytes_mut::release_shared (6 samples, 0.02%)</title><rect x="2.7111%" y="1893" width="0.0158%" height="15" fill="rgb(224,114,35)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1903.50"></text></g><g><title>core::mem::drop (6 samples, 0.02%)</title><rect x="2.7111%" y="1877" width="0.0158%" height="15" fill="rgb(245,159,27)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (6 samples, 0.02%)</title><rect x="2.7111%" y="1861" width="0.0158%" height="15" fill="rgb(245,172,44)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (6 samples, 0.02%)</title><rect x="2.7111%" y="1845" width="0.0158%" height="15" fill="rgb(236,23,11)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="2.7111%" y="1829" width="0.0158%" height="15" fill="rgb(205,117,38)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="2.7111%" y="1813" width="0.0158%" height="15" fill="rgb(237,72,25)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="2.7111%" y="1797" width="0.0158%" height="15" fill="rgb(244,70,9)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6 samples, 0.02%)</title><rect x="2.7111%" y="1781" width="0.0158%" height="15" fill="rgb(217,125,39)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="2.7111%" y="1765" width="0.0158%" height="15" fill="rgb(235,36,10)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="2.7111%" y="1749" width="0.0158%" height="15" fill="rgb(251,123,47)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1759.50"></text></g><g><title>__rust_dealloc (6 samples, 0.02%)</title><rect x="2.7111%" y="1733" width="0.0158%" height="15" fill="rgb(221,13,13)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1743.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.02%)</title><rect x="2.7111%" y="1717" width="0.0158%" height="15" fill="rgb(238,131,9)" fg:x="1030" fg:w="6"/><text x="2.9611%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (5 samples, 0.01%)</title><rect x="2.7269%" y="1941" width="0.0132%" height="15" fill="rgb(211,50,8)" fg:x="1036" fg:w="5"/><text x="2.9769%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (11 samples, 0.03%)</title><rect x="2.7401%" y="1941" width="0.0290%" height="15" fill="rgb(245,182,24)" fg:x="1041" fg:w="11"/><text x="2.9901%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (17 samples, 0.04%)</title><rect x="2.7690%" y="1941" width="0.0447%" height="15" fill="rgb(242,14,37)" fg:x="1052" fg:w="17"/><text x="3.0190%" y="1951.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="2.7901%" y="1925" width="0.0237%" height="15" fill="rgb(246,228,12)" fg:x="1060" fg:w="9"/><text x="3.0401%" y="1935.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (9 samples, 0.02%)</title><rect x="2.7901%" y="1909" width="0.0237%" height="15" fill="rgb(213,55,15)" fg:x="1060" fg:w="9"/><text x="3.0401%" y="1919.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (9 samples, 0.02%)</title><rect x="2.7901%" y="1893" width="0.0237%" height="15" fill="rgb(209,9,3)" fg:x="1060" fg:w="9"/><text x="3.0401%" y="1903.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (9 samples, 0.02%)</title><rect x="2.7901%" y="1877" width="0.0237%" height="15" fill="rgb(230,59,30)" fg:x="1060" fg:w="9"/><text x="3.0401%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;epoxy_server::util_chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="2.8138%" y="1941" width="0.0237%" height="15" fill="rgb(209,121,21)" fg:x="1069" fg:w="9"/><text x="3.0638%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (46 samples, 0.12%)</title><rect x="2.8453%" y="1941" width="0.1211%" height="15" fill="rgb(220,109,13)" fg:x="1081" fg:w="46"/><text x="3.0953%" y="1951.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (6 samples, 0.02%)</title><rect x="2.9664%" y="1941" width="0.0158%" height="15" fill="rgb(232,18,1)" fg:x="1127" fg:w="6"/><text x="3.2164%" y="1951.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (9 samples, 0.02%)</title><rect x="2.9901%" y="1941" width="0.0237%" height="15" fill="rgb(215,41,42)" fg:x="1136" fg:w="9"/><text x="3.2401%" y="1951.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (8 samples, 0.02%)</title><rect x="3.0138%" y="1941" width="0.0211%" height="15" fill="rgb(224,123,36)" fg:x="1145" fg:w="8"/><text x="3.2638%" y="1951.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.01%)</title><rect x="3.0217%" y="1925" width="0.0132%" height="15" fill="rgb(240,125,3)" fg:x="1148" fg:w="5"/><text x="3.2717%" y="1935.50"></text></g><g><title>extent_recycle (11 samples, 0.03%)</title><rect x="3.0427%" y="1941" width="0.0290%" height="15" fill="rgb(205,98,50)" fg:x="1156" fg:w="11"/><text x="3.2927%" y="1951.50"></text></g><g><title>extent_split_impl (4 samples, 0.01%)</title><rect x="3.0717%" y="1941" width="0.0105%" height="15" fill="rgb(205,185,37)" fg:x="1167" fg:w="4"/><text x="3.3217%" y="1951.50"></text></g><g><title>extent_try_coalesce_impl (4 samples, 0.01%)</title><rect x="3.0822%" y="1941" width="0.0105%" height="15" fill="rgb(238,207,15)" fg:x="1171" fg:w="4"/><text x="3.3322%" y="1951.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (37 samples, 0.10%)</title><rect x="3.0928%" y="1941" width="0.0974%" height="15" fill="rgb(213,199,42)" fg:x="1175" fg:w="37"/><text x="3.3428%" y="1951.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (7 samples, 0.02%)</title><rect x="3.1717%" y="1925" width="0.0184%" height="15" fill="rgb(235,201,11)" fg:x="1205" fg:w="7"/><text x="3.4217%" y="1935.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (60 samples, 0.16%)</title><rect x="3.1901%" y="1941" width="0.1579%" height="15" fill="rgb(207,46,11)" fg:x="1212" fg:w="60"/><text x="3.4401%" y="1951.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (18 samples, 0.05%)</title><rect x="3.3007%" y="1925" width="0.0474%" height="15" fill="rgb(241,35,35)" fg:x="1254" fg:w="18"/><text x="3.5507%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (16 samples, 0.04%)</title><rect x="3.3060%" y="1909" width="0.0421%" height="15" fill="rgb(243,32,47)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (16 samples, 0.04%)</title><rect x="3.3060%" y="1893" width="0.0421%" height="15" fill="rgb(247,202,23)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (16 samples, 0.04%)</title><rect x="3.3060%" y="1877" width="0.0421%" height="15" fill="rgb(219,102,11)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1887.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (16 samples, 0.04%)</title><rect x="3.3060%" y="1861" width="0.0421%" height="15" fill="rgb(243,110,44)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.04%)</title><rect x="3.3060%" y="1845" width="0.0421%" height="15" fill="rgb(222,74,54)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.04%)</title><rect x="3.3060%" y="1829" width="0.0421%" height="15" fill="rgb(216,99,12)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.04%)</title><rect x="3.3060%" y="1813" width="0.0421%" height="15" fill="rgb(226,22,26)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16 samples, 0.04%)</title><rect x="3.3060%" y="1797" width="0.0421%" height="15" fill="rgb(217,163,10)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.04%)</title><rect x="3.3060%" y="1781" width="0.0421%" height="15" fill="rgb(213,25,53)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.04%)</title><rect x="3.3060%" y="1765" width="0.0421%" height="15" fill="rgb(252,105,26)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1775.50"></text></g><g><title>__rust_dealloc (16 samples, 0.04%)</title><rect x="3.3060%" y="1749" width="0.0421%" height="15" fill="rgb(220,39,43)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1759.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.04%)</title><rect x="3.3060%" y="1733" width="0.0421%" height="15" fill="rgb(229,68,48)" fg:x="1256" fg:w="16"/><text x="3.5560%" y="1743.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (24 samples, 0.06%)</title><rect x="3.3770%" y="1925" width="0.0632%" height="15" fill="rgb(252,8,32)" fg:x="1283" fg:w="24"/><text x="3.6270%" y="1935.50"></text></g><g><title>fastwebsockets::frame::Frame::write (39 samples, 0.10%)</title><rect x="3.3507%" y="1941" width="0.1027%" height="15" fill="rgb(223,20,43)" fg:x="1273" fg:w="39"/><text x="3.6007%" y="1951.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.01%)</title><rect x="3.4402%" y="1925" width="0.0132%" height="15" fill="rgb(229,81,49)" fg:x="1307" fg:w="5"/><text x="3.6902%" y="1935.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="3.4402%" y="1909" width="0.0132%" height="15" fill="rgb(236,28,36)" fg:x="1307" fg:w="5"/><text x="3.6902%" y="1919.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (5 samples, 0.01%)</title><rect x="3.4534%" y="1941" width="0.0132%" height="15" fill="rgb(249,185,26)" fg:x="1312" fg:w="5"/><text x="3.7034%" y="1951.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (9 samples, 0.02%)</title><rect x="3.4718%" y="1941" width="0.0237%" height="15" fill="rgb(249,174,33)" fg:x="1319" fg:w="9"/><text x="3.7218%" y="1951.50"></text></g><g><title>pac_alloc_impl (91 samples, 0.24%)</title><rect x="3.5007%" y="1941" width="0.2395%" height="15" fill="rgb(233,201,37)" fg:x="1330" fg:w="91"/><text x="3.7507%" y="1951.50"></text></g><g><title>pac_alloc_real (6 samples, 0.02%)</title><rect x="3.7403%" y="1941" width="0.0158%" height="15" fill="rgb(221,78,26)" fg:x="1421" fg:w="6"/><text x="3.9903%" y="1951.50"></text></g><g><title>pac_dalloc_impl (9 samples, 0.02%)</title><rect x="3.7561%" y="1941" width="0.0237%" height="15" fill="rgb(250,127,30)" fg:x="1427" fg:w="9"/><text x="4.0061%" y="1951.50"></text></g><g><title>pow (5 samples, 0.01%)</title><rect x="3.7955%" y="1941" width="0.0132%" height="15" fill="rgb(230,49,44)" fg:x="1442" fg:w="5"/><text x="4.0455%" y="1951.50"></text></g><g><title>pthread_mutex_trylock (24 samples, 0.06%)</title><rect x="3.8087%" y="1941" width="0.0632%" height="15" fill="rgb(229,67,23)" fg:x="1447" fg:w="24"/><text x="4.0587%" y="1951.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.02%)</title><rect x="3.8771%" y="1941" width="0.0184%" height="15" fill="rgb(249,83,47)" fg:x="1473" fg:w="7"/><text x="4.1271%" y="1951.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.02%)</title><rect x="3.9008%" y="1941" width="0.0158%" height="15" fill="rgb(215,43,3)" fg:x="1482" fg:w="6"/><text x="4.1508%" y="1951.50"></text></g><g><title>syscall (34 samples, 0.09%)</title><rect x="3.9166%" y="1941" width="0.0895%" height="15" fill="rgb(238,154,13)" fg:x="1488" fg:w="34"/><text x="4.1666%" y="1951.50"></text></g><g><title>tcache_gc_small (9 samples, 0.02%)</title><rect x="4.0061%" y="1941" width="0.0237%" height="15" fill="rgb(219,56,2)" fg:x="1522" fg:w="9"/><text x="4.2561%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (11 samples, 0.03%)</title><rect x="4.1061%" y="1909" width="0.0290%" height="15" fill="rgb(233,0,4)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1919.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (11 samples, 0.03%)</title><rect x="4.1061%" y="1893" width="0.0290%" height="15" fill="rgb(235,30,7)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1903.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (11 samples, 0.03%)</title><rect x="4.1061%" y="1877" width="0.0290%" height="15" fill="rgb(250,79,13)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1887.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (11 samples, 0.03%)</title><rect x="4.1061%" y="1861" width="0.0290%" height="15" fill="rgb(211,146,34)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1871.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.03%)</title><rect x="4.1061%" y="1845" width="0.0290%" height="15" fill="rgb(228,22,38)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1855.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 0.03%)</title><rect x="4.1061%" y="1829" width="0.0290%" height="15" fill="rgb(235,168,5)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1839.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (11 samples, 0.03%)</title><rect x="4.1061%" y="1813" width="0.0290%" height="15" fill="rgb(221,155,16)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1823.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (11 samples, 0.03%)</title><rect x="4.1061%" y="1797" width="0.0290%" height="15" fill="rgb(215,215,53)" fg:x="1560" fg:w="11"/><text x="4.3561%" y="1807.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (41 samples, 0.11%)</title><rect x="4.0298%" y="1941" width="0.1079%" height="15" fill="rgb(223,4,10)" fg:x="1531" fg:w="41"/><text x="4.2798%" y="1951.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (12 samples, 0.03%)</title><rect x="4.1061%" y="1925" width="0.0316%" height="15" fill="rgb(234,103,6)" fg:x="1560" fg:w="12"/><text x="4.3561%" y="1935.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (33 samples, 0.09%)</title><rect x="4.1377%" y="1941" width="0.0869%" height="15" fill="rgb(227,97,0)" fg:x="1572" fg:w="33"/><text x="4.3877%" y="1951.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (7 samples, 0.02%)</title><rect x="4.2061%" y="1925" width="0.0184%" height="15" fill="rgb(234,150,53)" fg:x="1598" fg:w="7"/><text x="4.4561%" y="1935.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="4.2061%" y="1909" width="0.0184%" height="15" fill="rgb(228,201,54)" fg:x="1598" fg:w="7"/><text x="4.4561%" y="1919.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (7 samples, 0.02%)</title><rect x="4.2061%" y="1893" width="0.0184%" height="15" fill="rgb(222,22,37)" fg:x="1598" fg:w="7"/><text x="4.4561%" y="1903.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (7 samples, 0.02%)</title><rect x="4.2061%" y="1877" width="0.0184%" height="15" fill="rgb(237,53,32)" fg:x="1598" fg:w="7"/><text x="4.4561%" y="1887.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (7 samples, 0.02%)</title><rect x="4.2061%" y="1861" width="0.0184%" height="15" fill="rgb(233,25,53)" fg:x="1598" fg:w="7"/><text x="4.4561%" y="1871.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="4.2061%" y="1845" width="0.0184%" height="15" fill="rgb(210,40,34)" fg:x="1598" fg:w="7"/><text x="4.4561%" y="1855.50"></text></g><g><title>std::sys_common::net::TcpStream::write (7 samples, 0.02%)</title><rect x="4.2061%" y="1829" width="0.0184%" height="15" fill="rgb(241,220,44)" fg:x="1598" fg:w="7"/><text x="4.4561%" y="1839.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (47 samples, 0.12%)</title><rect x="4.2246%" y="1941" width="0.1237%" height="15" fill="rgb(235,28,35)" fg:x="1605" fg:w="47"/><text x="4.4746%" y="1951.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (9 samples, 0.02%)</title><rect x="4.3246%" y="1925" width="0.0237%" height="15" fill="rgb(210,56,17)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1935.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (9 samples, 0.02%)</title><rect x="4.3246%" y="1909" width="0.0237%" height="15" fill="rgb(224,130,29)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1919.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (9 samples, 0.02%)</title><rect x="4.3246%" y="1893" width="0.0237%" height="15" fill="rgb(235,212,8)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1903.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (9 samples, 0.02%)</title><rect x="4.3246%" y="1877" width="0.0237%" height="15" fill="rgb(223,33,50)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1887.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (9 samples, 0.02%)</title><rect x="4.3246%" y="1861" width="0.0237%" height="15" fill="rgb(219,149,13)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1871.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (9 samples, 0.02%)</title><rect x="4.3246%" y="1845" width="0.0237%" height="15" fill="rgb(250,156,29)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1855.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (9 samples, 0.02%)</title><rect x="4.3246%" y="1829" width="0.0237%" height="15" fill="rgb(216,193,19)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1839.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (9 samples, 0.02%)</title><rect x="4.3246%" y="1813" width="0.0237%" height="15" fill="rgb(216,135,14)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1823.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (9 samples, 0.02%)</title><rect x="4.3246%" y="1797" width="0.0237%" height="15" fill="rgb(241,47,5)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1807.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (9 samples, 0.02%)</title><rect x="4.3246%" y="1781" width="0.0237%" height="15" fill="rgb(233,42,35)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1791.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (9 samples, 0.02%)</title><rect x="4.3246%" y="1765" width="0.0237%" height="15" fill="rgb(231,13,6)" fg:x="1643" fg:w="9"/><text x="4.5746%" y="1775.50"></text></g><g><title>tokio::runtime::driver::Driver::park (9 samples, 0.02%)</title><rect x="4.3562%" y="1941" width="0.0237%" height="15" fill="rgb(207,181,40)" fg:x="1655" fg:w="9"/><text x="4.6062%" y="1951.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (6 samples, 0.02%)</title><rect x="4.3851%" y="1941" width="0.0158%" height="15" fill="rgb(254,173,49)" fg:x="1666" fg:w="6"/><text x="4.6351%" y="1951.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (44 samples, 0.12%)</title><rect x="4.4088%" y="1941" width="0.1158%" height="15" fill="rgb(221,1,38)" fg:x="1675" fg:w="44"/><text x="4.6588%" y="1951.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.01%)</title><rect x="4.5115%" y="1925" width="0.0132%" height="15" fill="rgb(206,124,46)" fg:x="1714" fg:w="5"/><text x="4.7615%" y="1935.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="4.5115%" y="1909" width="0.0132%" height="15" fill="rgb(249,21,11)" fg:x="1714" fg:w="5"/><text x="4.7615%" y="1919.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (4 samples, 0.01%)</title><rect x="4.5273%" y="1941" width="0.0105%" height="15" fill="rgb(222,201,40)" fg:x="1720" fg:w="4"/><text x="4.7773%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (9 samples, 0.02%)</title><rect x="4.5378%" y="1941" width="0.0237%" height="15" fill="rgb(235,61,29)" fg:x="1724" fg:w="9"/><text x="4.7878%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (5 samples, 0.01%)</title><rect x="4.5615%" y="1941" width="0.0132%" height="15" fill="rgb(219,207,3)" fg:x="1733" fg:w="5"/><text x="4.8115%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (5 samples, 0.01%)</title><rect x="4.5615%" y="1925" width="0.0132%" height="15" fill="rgb(222,56,46)" fg:x="1733" fg:w="5"/><text x="4.8115%" y="1935.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (5 samples, 0.01%)</title><rect x="4.5615%" y="1909" width="0.0132%" height="15" fill="rgb(239,76,54)" fg:x="1733" fg:w="5"/><text x="4.8115%" y="1919.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.01%)</title><rect x="4.5615%" y="1893" width="0.0132%" height="15" fill="rgb(231,124,27)" fg:x="1733" fg:w="5"/><text x="4.8115%" y="1903.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.01%)</title><rect x="4.5615%" y="1877" width="0.0132%" height="15" fill="rgb(249,195,6)" fg:x="1733" fg:w="5"/><text x="4.8115%" y="1887.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (5 samples, 0.01%)</title><rect x="4.5746%" y="1941" width="0.0132%" height="15" fill="rgb(237,174,47)" fg:x="1738" fg:w="5"/><text x="4.8246%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (7 samples, 0.02%)</title><rect x="4.5983%" y="1925" width="0.0184%" height="15" fill="rgb(206,201,31)" fg:x="1747" fg:w="7"/><text x="4.8483%" y="1935.50"></text></g><g><title>core::mem::replace (7 samples, 0.02%)</title><rect x="4.5983%" y="1909" width="0.0184%" height="15" fill="rgb(231,57,52)" fg:x="1747" fg:w="7"/><text x="4.8483%" y="1919.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="4.5983%" y="1893" width="0.0184%" height="15" fill="rgb(248,177,22)" fg:x="1747" fg:w="7"/><text x="4.8483%" y="1903.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (12 samples, 0.03%)</title><rect x="4.5878%" y="1941" width="0.0316%" height="15" fill="rgb(215,211,37)" fg:x="1743" fg:w="12"/><text x="4.8378%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (25 samples, 0.07%)</title><rect x="4.6194%" y="1941" width="0.0658%" height="15" fill="rgb(241,128,51)" fg:x="1755" fg:w="25"/><text x="4.8694%" y="1951.50"></text></g><g><title>tokio::runtime::coop::budget (16 samples, 0.04%)</title><rect x="4.6431%" y="1925" width="0.0421%" height="15" fill="rgb(227,165,31)" fg:x="1764" fg:w="16"/><text x="4.8931%" y="1935.50"></text></g><g><title>tokio::runtime::coop::with_budget (16 samples, 0.04%)</title><rect x="4.6431%" y="1909" width="0.0421%" height="15" fill="rgb(228,167,24)" fg:x="1764" fg:w="16"/><text x="4.8931%" y="1919.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (16 samples, 0.04%)</title><rect x="4.6431%" y="1893" width="0.0421%" height="15" fill="rgb(228,143,12)" fg:x="1764" fg:w="16"/><text x="4.8931%" y="1903.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (16 samples, 0.04%)</title><rect x="4.6431%" y="1877" width="0.0421%" height="15" fill="rgb(249,149,8)" fg:x="1764" fg:w="16"/><text x="4.8931%" y="1887.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (16 samples, 0.04%)</title><rect x="4.6431%" y="1861" width="0.0421%" height="15" fill="rgb(243,35,44)" fg:x="1764" fg:w="16"/><text x="4.8931%" y="1871.50"></text></g><g><title>tokio::runtime::signal::Driver::process (5 samples, 0.01%)</title><rect x="4.6852%" y="1941" width="0.0132%" height="15" fill="rgb(246,89,9)" fg:x="1780" fg:w="5"/><text x="4.9352%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (7 samples, 0.02%)</title><rect x="4.7115%" y="1557" width="0.0184%" height="15" fill="rgb(233,213,13)" fg:x="1790" fg:w="7"/><text x="4.9615%" y="1567.50"></text></g><g><title>tokio::runtime::task::raw::poll (13 samples, 0.03%)</title><rect x="4.6984%" y="1941" width="0.0342%" height="15" fill="rgb(233,141,41)" fg:x="1785" fg:w="13"/><text x="4.9484%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (8 samples, 0.02%)</title><rect x="4.7115%" y="1925" width="0.0211%" height="15" fill="rgb(239,167,4)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1935.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (8 samples, 0.02%)</title><rect x="4.7115%" y="1909" width="0.0211%" height="15" fill="rgb(209,217,16)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1919.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (8 samples, 0.02%)</title><rect x="4.7115%" y="1893" width="0.0211%" height="15" fill="rgb(219,88,35)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="4.7115%" y="1877" width="0.0211%" height="15" fill="rgb(220,193,23)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1887.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="4.7115%" y="1861" width="0.0211%" height="15" fill="rgb(230,90,52)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="4.7115%" y="1845" width="0.0211%" height="15" fill="rgb(252,106,19)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1855.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.02%)</title><rect x="4.7115%" y="1829" width="0.0211%" height="15" fill="rgb(206,74,20)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (8 samples, 0.02%)</title><rect x="4.7115%" y="1813" width="0.0211%" height="15" fill="rgb(230,138,44)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1823.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (8 samples, 0.02%)</title><rect x="4.7115%" y="1797" width="0.0211%" height="15" fill="rgb(235,182,43)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1807.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8 samples, 0.02%)</title><rect x="4.7115%" y="1781" width="0.0211%" height="15" fill="rgb(242,16,51)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (8 samples, 0.02%)</title><rect x="4.7115%" y="1765" width="0.0211%" height="15" fill="rgb(248,9,4)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="4.7115%" y="1749" width="0.0211%" height="15" fill="rgb(210,31,22)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (8 samples, 0.02%)</title><rect x="4.7115%" y="1733" width="0.0211%" height="15" fill="rgb(239,54,39)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (8 samples, 0.02%)</title><rect x="4.7115%" y="1717" width="0.0211%" height="15" fill="rgb(230,99,41)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1727.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (8 samples, 0.02%)</title><rect x="4.7115%" y="1701" width="0.0211%" height="15" fill="rgb(253,106,12)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (8 samples, 0.02%)</title><rect x="4.7115%" y="1685" width="0.0211%" height="15" fill="rgb(213,46,41)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1695.50"></text></g><g><title>tokio::runtime::context::set_scheduler (8 samples, 0.02%)</title><rect x="4.7115%" y="1669" width="0.0211%" height="15" fill="rgb(215,133,35)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.02%)</title><rect x="4.7115%" y="1653" width="0.0211%" height="15" fill="rgb(213,28,5)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.02%)</title><rect x="4.7115%" y="1637" width="0.0211%" height="15" fill="rgb(215,77,49)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1647.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (8 samples, 0.02%)</title><rect x="4.7115%" y="1621" width="0.0211%" height="15" fill="rgb(248,100,22)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1631.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (8 samples, 0.02%)</title><rect x="4.7115%" y="1605" width="0.0211%" height="15" fill="rgb(208,67,9)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (8 samples, 0.02%)</title><rect x="4.7115%" y="1589" width="0.0211%" height="15" fill="rgb(219,133,21)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (8 samples, 0.02%)</title><rect x="4.7115%" y="1573" width="0.0211%" height="15" fill="rgb(246,46,29)" fg:x="1790" fg:w="8"/><text x="4.9615%" y="1583.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (4 samples, 0.01%)</title><rect x="4.7326%" y="1941" width="0.0105%" height="15" fill="rgb(246,185,52)" fg:x="1798" fg:w="4"/><text x="4.9826%" y="1951.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (10 samples, 0.03%)</title><rect x="4.7431%" y="1941" width="0.0263%" height="15" fill="rgb(252,136,11)" fg:x="1802" fg:w="10"/><text x="4.9931%" y="1951.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (14 samples, 0.04%)</title><rect x="4.7694%" y="1909" width="0.0368%" height="15" fill="rgb(219,138,53)" fg:x="1812" fg:w="14"/><text x="5.0194%" y="1919.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (30 samples, 0.08%)</title><rect x="4.7694%" y="1941" width="0.0790%" height="15" fill="rgb(211,51,23)" fg:x="1812" fg:w="30"/><text x="5.0194%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (30 samples, 0.08%)</title><rect x="4.7694%" y="1925" width="0.0790%" height="15" fill="rgb(247,221,28)" fg:x="1812" fg:w="30"/><text x="5.0194%" y="1935.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (16 samples, 0.04%)</title><rect x="4.8063%" y="1909" width="0.0421%" height="15" fill="rgb(251,222,45)" fg:x="1826" fg:w="16"/><text x="5.0563%" y="1919.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (16 samples, 0.04%)</title><rect x="4.8063%" y="1893" width="0.0421%" height="15" fill="rgb(217,162,53)" fg:x="1826" fg:w="16"/><text x="5.0563%" y="1903.50"></text></g><g><title>tokio::runtime::task::state::State::load (16 samples, 0.04%)</title><rect x="4.8063%" y="1877" width="0.0421%" height="15" fill="rgb(229,93,14)" fg:x="1826" fg:w="16"/><text x="5.0563%" y="1887.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.04%)</title><rect x="4.8063%" y="1861" width="0.0421%" height="15" fill="rgb(209,67,49)" fg:x="1826" fg:w="16"/><text x="5.0563%" y="1871.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.04%)</title><rect x="4.8063%" y="1845" width="0.0421%" height="15" fill="rgb(213,87,29)" fg:x="1826" fg:w="16"/><text x="5.0563%" y="1855.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (13 samples, 0.03%)</title><rect x="4.8537%" y="1941" width="0.0342%" height="15" fill="rgb(205,151,52)" fg:x="1844" fg:w="13"/><text x="5.1037%" y="1951.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (30 samples, 0.08%)</title><rect x="4.8879%" y="1941" width="0.0790%" height="15" fill="rgb(253,215,39)" fg:x="1857" fg:w="30"/><text x="5.1379%" y="1951.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (9 samples, 0.02%)</title><rect x="4.9431%" y="1925" width="0.0237%" height="15" fill="rgb(221,220,41)" fg:x="1878" fg:w="9"/><text x="5.1931%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.02%)</title><rect x="4.9431%" y="1909" width="0.0237%" height="15" fill="rgb(218,133,21)" fg:x="1878" fg:w="9"/><text x="5.1931%" y="1919.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_packet::_{{closure}} (5 samples, 0.01%)</title><rect x="4.9668%" y="1941" width="0.0132%" height="15" fill="rgb(221,193,43)" fg:x="1887" fg:w="5"/><text x="5.2168%" y="1951.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (29 samples, 0.08%)</title><rect x="4.9826%" y="1941" width="0.0763%" height="15" fill="rgb(240,128,52)" fg:x="1893" fg:w="29"/><text x="5.2326%" y="1951.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (21 samples, 0.06%)</title><rect x="5.0590%" y="1941" width="0.0553%" height="15" fill="rgb(253,114,12)" fg:x="1922" fg:w="21"/><text x="5.3090%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}}::_{{closure}} (31 samples, 0.08%)</title><rect x="5.1169%" y="1941" width="0.0816%" height="15" fill="rgb(215,223,47)" fg:x="1944" fg:w="31"/><text x="5.3669%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload::_{{closure}} (29 samples, 0.08%)</title><rect x="5.1985%" y="1941" width="0.0763%" height="15" fill="rgb(248,225,23)" fg:x="1975" fg:w="29"/><text x="5.4485%" y="1951.50"></text></g><g><title>[anon] (1,918 samples, 5.05%)</title><rect x="0.2553%" y="1957" width="5.0484%" height="15" fill="rgb(250,108,0)" fg:x="97" fg:w="1918"/><text x="0.5053%" y="1967.50">[anon]</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_split::_{{closure}} (8 samples, 0.02%)</title><rect x="5.2827%" y="1941" width="0.0211%" height="15" fill="rgb(228,208,7)" fg:x="2007" fg:w="8"/><text x="5.5327%" y="1951.50"></text></g><g><title>[epoxy-server] (6 samples, 0.02%)</title><rect x="5.3037%" y="1957" width="0.0158%" height="15" fill="rgb(244,45,10)" fg:x="2015" fg:w="6"/><text x="5.5537%" y="1967.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="5.3064%" y="1941" width="0.0132%" height="15" fill="rgb(207,125,25)" fg:x="2016" fg:w="5"/><text x="5.5564%" y="1951.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (16 samples, 0.04%)</title><rect x="5.3301%" y="1621" width="0.0421%" height="15" fill="rgb(210,195,18)" fg:x="2025" fg:w="16"/><text x="5.5801%" y="1631.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.01%)</title><rect x="5.3590%" y="1605" width="0.0132%" height="15" fill="rgb(249,80,12)" fg:x="2036" fg:w="5"/><text x="5.6090%" y="1615.50"></text></g><g><title>malloc_mutex_lock_final (5 samples, 0.01%)</title><rect x="5.3748%" y="1045" width="0.0132%" height="15" fill="rgb(221,65,9)" fg:x="2042" fg:w="5"/><text x="5.6248%" y="1055.50"></text></g><g><title>pthread_mutex_lock (5 samples, 0.01%)</title><rect x="5.3748%" y="1029" width="0.0132%" height="15" fill="rgb(235,49,36)" fg:x="2042" fg:w="5"/><text x="5.6248%" y="1039.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="5.3774%" y="1013" width="0.0105%" height="15" fill="rgb(225,32,20)" fg:x="2043" fg:w="4"/><text x="5.6274%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (26 samples, 0.07%)</title><rect x="5.3222%" y="1717" width="0.0684%" height="15" fill="rgb(215,141,46)" fg:x="2022" fg:w="26"/><text x="5.5722%" y="1727.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (26 samples, 0.07%)</title><rect x="5.3222%" y="1701" width="0.0684%" height="15" fill="rgb(250,160,47)" fg:x="2022" fg:w="26"/><text x="5.5722%" y="1711.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.07%)</title><rect x="5.3222%" y="1685" width="0.0684%" height="15" fill="rgb(216,222,40)" fg:x="2022" fg:w="26"/><text x="5.5722%" y="1695.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (26 samples, 0.07%)</title><rect x="5.3222%" y="1669" width="0.0684%" height="15" fill="rgb(234,217,39)" fg:x="2022" fg:w="26"/><text x="5.5722%" y="1679.50"></text></g><g><title>parking_lot_core::parking_lot::park (24 samples, 0.06%)</title><rect x="5.3274%" y="1653" width="0.0632%" height="15" fill="rgb(207,178,40)" fg:x="2024" fg:w="24"/><text x="5.5774%" y="1663.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (24 samples, 0.06%)</title><rect x="5.3274%" y="1637" width="0.0632%" height="15" fill="rgb(221,136,13)" fg:x="2024" fg:w="24"/><text x="5.5774%" y="1647.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="5.3722%" y="1621" width="0.0184%" height="15" fill="rgb(249,199,10)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="5.3722%" y="1605" width="0.0184%" height="15" fill="rgb(249,222,13)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1615.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (7 samples, 0.02%)</title><rect x="5.3722%" y="1589" width="0.0184%" height="15" fill="rgb(244,185,38)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1599.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (7 samples, 0.02%)</title><rect x="5.3722%" y="1573" width="0.0184%" height="15" fill="rgb(236,202,9)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1583.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (7 samples, 0.02%)</title><rect x="5.3722%" y="1557" width="0.0184%" height="15" fill="rgb(250,229,37)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1567.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (7 samples, 0.02%)</title><rect x="5.3722%" y="1541" width="0.0184%" height="15" fill="rgb(206,174,23)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="5.3722%" y="1525" width="0.0184%" height="15" fill="rgb(211,33,43)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1535.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__init (7 samples, 0.02%)</title><rect x="5.3722%" y="1509" width="0.0184%" height="15" fill="rgb(245,58,50)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1519.50"></text></g><g><title>parking_lot_core::parking_lot::ThreadData::new (7 samples, 0.02%)</title><rect x="5.3722%" y="1493" width="0.0184%" height="15" fill="rgb(244,68,36)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1503.50"></text></g><g><title>parking_lot_core::parking_lot::grow_hashtable (7 samples, 0.02%)</title><rect x="5.3722%" y="1477" width="0.0184%" height="15" fill="rgb(232,229,15)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1487.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (7 samples, 0.02%)</title><rect x="5.3722%" y="1461" width="0.0184%" height="15" fill="rgb(254,30,23)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1471.50"></text></g><g><title>parking_lot_core::parking_lot::create_hashtable (7 samples, 0.02%)</title><rect x="5.3722%" y="1445" width="0.0184%" height="15" fill="rgb(235,160,14)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1455.50"></text></g><g><title>parking_lot_core::parking_lot::HashTable::new (7 samples, 0.02%)</title><rect x="5.3722%" y="1429" width="0.0184%" height="15" fill="rgb(212,155,44)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.02%)</title><rect x="5.3722%" y="1413" width="0.0184%" height="15" fill="rgb(226,2,50)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="5.3722%" y="1397" width="0.0184%" height="15" fill="rgb(234,177,6)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="5.3722%" y="1381" width="0.0184%" height="15" fill="rgb(217,24,9)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="5.3722%" y="1365" width="0.0184%" height="15" fill="rgb(220,13,46)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.02%)</title><rect x="5.3722%" y="1349" width="0.0184%" height="15" fill="rgb(239,221,27)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="5.3722%" y="1333" width="0.0184%" height="15" fill="rgb(222,198,25)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="5.3722%" y="1317" width="0.0184%" height="15" fill="rgb(211,99,13)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="5.3722%" y="1301" width="0.0184%" height="15" fill="rgb(232,111,31)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1311.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="5.3722%" y="1285" width="0.0184%" height="15" fill="rgb(245,82,37)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1295.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.02%)</title><rect x="5.3722%" y="1269" width="0.0184%" height="15" fill="rgb(227,149,46)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1279.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.02%)</title><rect x="5.3722%" y="1253" width="0.0184%" height="15" fill="rgb(218,36,50)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1263.50"></text></g><g><title>imalloc (7 samples, 0.02%)</title><rect x="5.3722%" y="1237" width="0.0184%" height="15" fill="rgb(226,80,48)" fg:x="2041" fg:w="7"/><text x="5.6222%" y="1247.50"></text></g><g><title>tsd_fetch (6 samples, 0.02%)</title><rect x="5.3748%" y="1221" width="0.0158%" height="15" fill="rgb(238,224,15)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1231.50"></text></g><g><title>tsd_fetch_impl (6 samples, 0.02%)</title><rect x="5.3748%" y="1205" width="0.0158%" height="15" fill="rgb(241,136,10)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1215.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (6 samples, 0.02%)</title><rect x="5.3748%" y="1189" width="0.0158%" height="15" fill="rgb(208,32,45)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1199.50"></text></g><g><title>tsd_data_init (6 samples, 0.02%)</title><rect x="5.3748%" y="1173" width="0.0158%" height="15" fill="rgb(207,135,9)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1183.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (6 samples, 0.02%)</title><rect x="5.3748%" y="1157" width="0.0158%" height="15" fill="rgb(206,86,44)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1167.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (6 samples, 0.02%)</title><rect x="5.3748%" y="1141" width="0.0158%" height="15" fill="rgb(245,177,15)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1151.50"></text></g><g><title>arena_choose (6 samples, 0.02%)</title><rect x="5.3748%" y="1125" width="0.0158%" height="15" fill="rgb(206,64,50)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1135.50"></text></g><g><title>arena_choose_impl (6 samples, 0.02%)</title><rect x="5.3748%" y="1109" width="0.0158%" height="15" fill="rgb(234,36,40)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1119.50"></text></g><g><title>_rjem_je_arena_choose_hard (6 samples, 0.02%)</title><rect x="5.3748%" y="1093" width="0.0158%" height="15" fill="rgb(213,64,8)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1103.50"></text></g><g><title>malloc_mutex_lock (6 samples, 0.02%)</title><rect x="5.3748%" y="1077" width="0.0158%" height="15" fill="rgb(210,75,36)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1087.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (6 samples, 0.02%)</title><rect x="5.3748%" y="1061" width="0.0158%" height="15" fill="rgb(229,88,21)" fg:x="2042" fg:w="6"/><text x="5.6248%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.04%)</title><rect x="5.4222%" y="1285" width="0.0421%" height="15" fill="rgb(252,204,47)" fg:x="2060" fg:w="16"/><text x="5.6722%" y="1295.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.01%)</title><rect x="5.5406%" y="1269" width="0.0105%" height="15" fill="rgb(208,77,27)" fg:x="2105" fg:w="4"/><text x="5.7906%" y="1279.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.01%)</title><rect x="5.5406%" y="1253" width="0.0105%" height="15" fill="rgb(221,76,26)" fg:x="2105" fg:w="4"/><text x="5.7906%" y="1263.50"></text></g><g><title>std::time::Instant::checked_duration_since (4 samples, 0.01%)</title><rect x="5.5406%" y="1237" width="0.0105%" height="15" fill="rgb(225,139,18)" fg:x="2105" fg:w="4"/><text x="5.7906%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (4 samples, 0.01%)</title><rect x="5.5406%" y="1221" width="0.0105%" height="15" fill="rgb(230,137,11)" fg:x="2105" fg:w="4"/><text x="5.7906%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (4 samples, 0.01%)</title><rect x="5.5406%" y="1205" width="0.0105%" height="15" fill="rgb(212,28,1)" fg:x="2105" fg:w="4"/><text x="5.7906%" y="1215.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (6 samples, 0.02%)</title><rect x="5.5696%" y="1221" width="0.0158%" height="15" fill="rgb(248,164,17)" fg:x="2116" fg:w="6"/><text x="5.8196%" y="1231.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (16 samples, 0.04%)</title><rect x="5.5538%" y="1237" width="0.0421%" height="15" fill="rgb(222,171,42)" fg:x="2110" fg:w="16"/><text x="5.8038%" y="1247.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_shl (4 samples, 0.01%)</title><rect x="5.5854%" y="1221" width="0.0105%" height="15" fill="rgb(243,84,45)" fg:x="2122" fg:w="4"/><text x="5.8354%" y="1231.50"></text></g><g><title>core::num::&lt;impl u128&gt;::unchecked_shl (4 samples, 0.01%)</title><rect x="5.5854%" y="1205" width="0.0105%" height="15" fill="rgb(252,49,23)" fg:x="2122" fg:w="4"/><text x="5.8354%" y="1215.50"></text></g><g><title>__floattidf (19 samples, 0.05%)</title><rect x="5.5512%" y="1269" width="0.0500%" height="15" fill="rgb(215,19,7)" fg:x="2109" fg:w="19"/><text x="5.8012%" y="1279.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (19 samples, 0.05%)</title><rect x="5.5512%" y="1253" width="0.0500%" height="15" fill="rgb(238,81,41)" fg:x="2109" fg:w="19"/><text x="5.8012%" y="1263.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (162 samples, 0.43%)</title><rect x="5.6091%" y="1269" width="0.4264%" height="15" fill="rgb(210,199,37)" fg:x="2131" fg:w="162"/><text x="5.8591%" y="1279.50"></text></g><g><title>pow (158 samples, 0.42%)</title><rect x="5.6196%" y="1253" width="0.4159%" height="15" fill="rgb(244,192,49)" fg:x="2135" fg:w="158"/><text x="5.8696%" y="1263.50"></text></g><g><title>[libm.so.6] (106 samples, 0.28%)</title><rect x="5.7565%" y="1237" width="0.2790%" height="15" fill="rgb(226,211,11)" fg:x="2187" fg:w="106"/><text x="6.0065%" y="1247.50"></text></g><g><title>clock_gettime (69 samples, 0.18%)</title><rect x="6.0434%" y="1253" width="0.1816%" height="15" fill="rgb(236,162,54)" fg:x="2296" fg:w="69"/><text x="6.2934%" y="1263.50"></text></g><g><title>__vdso_clock_gettime (42 samples, 0.11%)</title><rect x="6.1144%" y="1237" width="0.1105%" height="15" fill="rgb(220,229,9)" fg:x="2323" fg:w="42"/><text x="6.3644%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (289 samples, 0.76%)</title><rect x="5.4669%" y="1285" width="0.7607%" height="15" fill="rgb(250,87,22)" fg:x="2077" fg:w="289"/><text x="5.7169%" y="1295.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (73 samples, 0.19%)</title><rect x="6.0355%" y="1269" width="0.1921%" height="15" fill="rgb(239,43,17)" fg:x="2293" fg:w="73"/><text x="6.2855%" y="1279.50"></text></g><g><title>clock_gettime (77 samples, 0.20%)</title><rect x="6.2434%" y="1253" width="0.2027%" height="15" fill="rgb(231,177,25)" fg:x="2372" fg:w="77"/><text x="6.4934%" y="1263.50"></text></g><g><title>__vdso_clock_gettime (38 samples, 0.10%)</title><rect x="6.3461%" y="1237" width="0.1000%" height="15" fill="rgb(219,179,1)" fg:x="2411" fg:w="38"/><text x="6.5961%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (84 samples, 0.22%)</title><rect x="6.2276%" y="1285" width="0.2211%" height="15" fill="rgb(238,219,53)" fg:x="2366" fg:w="84"/><text x="6.4776%" y="1295.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (83 samples, 0.22%)</title><rect x="6.2303%" y="1269" width="0.2185%" height="15" fill="rgb(232,167,36)" fg:x="2367" fg:w="83"/><text x="6.4803%" y="1279.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (7 samples, 0.02%)</title><rect x="6.4856%" y="1253" width="0.0184%" height="15" fill="rgb(244,19,51)" fg:x="2464" fg:w="7"/><text x="6.7356%" y="1263.50"></text></g><g><title>pow (7 samples, 0.02%)</title><rect x="6.4856%" y="1237" width="0.0184%" height="15" fill="rgb(224,6,22)" fg:x="2464" fg:w="7"/><text x="6.7356%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (10 samples, 0.03%)</title><rect x="6.4803%" y="1269" width="0.0263%" height="15" fill="rgb(224,145,5)" fg:x="2462" fg:w="10"/><text x="6.7303%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="6.5119%" y="1173" width="0.0158%" height="15" fill="rgb(234,130,49)" fg:x="2474" fg:w="6"/><text x="6.7619%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="6.5119%" y="1157" width="0.0158%" height="15" fill="rgb(254,6,2)" fg:x="2474" fg:w="6"/><text x="6.7619%" y="1167.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (6 samples, 0.02%)</title><rect x="6.5119%" y="1141" width="0.0158%" height="15" fill="rgb(208,96,46)" fg:x="2474" fg:w="6"/><text x="6.7619%" y="1151.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (6 samples, 0.02%)</title><rect x="6.5119%" y="1125" width="0.0158%" height="15" fill="rgb(239,3,39)" fg:x="2474" fg:w="6"/><text x="6.7619%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (6 samples, 0.02%)</title><rect x="6.5119%" y="1109" width="0.0158%" height="15" fill="rgb(233,210,1)" fg:x="2474" fg:w="6"/><text x="6.7619%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.02%)</title><rect x="6.5119%" y="1093" width="0.0158%" height="15" fill="rgb(244,137,37)" fg:x="2474" fg:w="6"/><text x="6.7619%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (7 samples, 0.02%)</title><rect x="6.5119%" y="1221" width="0.0184%" height="15" fill="rgb(240,136,2)" fg:x="2474" fg:w="7"/><text x="6.7619%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (7 samples, 0.02%)</title><rect x="6.5119%" y="1205" width="0.0184%" height="15" fill="rgb(239,18,37)" fg:x="2474" fg:w="7"/><text x="6.7619%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (7 samples, 0.02%)</title><rect x="6.5119%" y="1189" width="0.0184%" height="15" fill="rgb(218,185,22)" fg:x="2474" fg:w="7"/><text x="6.7619%" y="1199.50"></text></g><g><title>mio::poll::Poll::poll (5 samples, 0.01%)</title><rect x="6.5330%" y="1205" width="0.0132%" height="15" fill="rgb(225,218,4)" fg:x="2482" fg:w="5"/><text x="6.7830%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (5 samples, 0.01%)</title><rect x="6.5330%" y="1189" width="0.0132%" height="15" fill="rgb(230,182,32)" fg:x="2482" fg:w="5"/><text x="6.7830%" y="1199.50"></text></g><g><title>epoll_wait (4 samples, 0.01%)</title><rect x="6.5356%" y="1173" width="0.0105%" height="15" fill="rgb(242,56,43)" fg:x="2483" fg:w="4"/><text x="6.7856%" y="1183.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (6 samples, 0.02%)</title><rect x="6.5330%" y="1221" width="0.0158%" height="15" fill="rgb(233,99,24)" fg:x="2482" fg:w="6"/><text x="6.7830%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (4 samples, 0.01%)</title><rect x="6.5514%" y="1045" width="0.0105%" height="15" fill="rgb(234,209,42)" fg:x="2489" fg:w="4"/><text x="6.8014%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (4 samples, 0.01%)</title><rect x="6.5514%" y="1029" width="0.0105%" height="15" fill="rgb(227,7,12)" fg:x="2489" fg:w="4"/><text x="6.8014%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="6.5514%" y="1013" width="0.0105%" height="15" fill="rgb(245,203,43)" fg:x="2489" fg:w="4"/><text x="6.8014%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.01%)</title><rect x="6.5514%" y="997" width="0.0105%" height="15" fill="rgb(238,205,33)" fg:x="2489" fg:w="4"/><text x="6.8014%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.01%)</title><rect x="6.5514%" y="981" width="0.0105%" height="15" fill="rgb(231,56,7)" fg:x="2489" fg:w="4"/><text x="6.8014%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="6.5514%" y="965" width="0.0105%" height="15" fill="rgb(244,186,29)" fg:x="2489" fg:w="4"/><text x="6.8014%" y="975.50"></text></g><g><title>core::mem::drop (6 samples, 0.02%)</title><rect x="6.5514%" y="1061" width="0.0158%" height="15" fill="rgb(234,111,31)" fg:x="2489" fg:w="6"/><text x="6.8014%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.03%)</title><rect x="6.5514%" y="1141" width="0.0263%" height="15" fill="rgb(241,149,10)" fg:x="2489" fg:w="10"/><text x="6.8014%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.03%)</title><rect x="6.5514%" y="1125" width="0.0263%" height="15" fill="rgb(249,206,44)" fg:x="2489" fg:w="10"/><text x="6.8014%" y="1135.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (10 samples, 0.03%)</title><rect x="6.5514%" y="1109" width="0.0263%" height="15" fill="rgb(251,153,30)" fg:x="2489" fg:w="10"/><text x="6.8014%" y="1119.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (10 samples, 0.03%)</title><rect x="6.5514%" y="1093" width="0.0263%" height="15" fill="rgb(239,152,38)" fg:x="2489" fg:w="10"/><text x="6.8014%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (10 samples, 0.03%)</title><rect x="6.5514%" y="1077" width="0.0263%" height="15" fill="rgb(249,139,47)" fg:x="2489" fg:w="10"/><text x="6.8014%" y="1087.50"></text></g><g><title>core::mem::drop (5 samples, 0.01%)</title><rect x="6.5777%" y="1029" width="0.0132%" height="15" fill="rgb(244,64,35)" fg:x="2499" fg:w="5"/><text x="6.8277%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (4 samples, 0.01%)</title><rect x="6.5803%" y="1013" width="0.0105%" height="15" fill="rgb(216,46,15)" fg:x="2500" fg:w="4"/><text x="6.8303%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (4 samples, 0.01%)</title><rect x="6.5803%" y="997" width="0.0105%" height="15" fill="rgb(250,74,19)" fg:x="2500" fg:w="4"/><text x="6.8303%" y="1007.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="6.5803%" y="981" width="0.0105%" height="15" fill="rgb(249,42,33)" fg:x="2500" fg:w="4"/><text x="6.8303%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (4 samples, 0.01%)</title><rect x="6.5803%" y="965" width="0.0105%" height="15" fill="rgb(242,149,17)" fg:x="2500" fg:w="4"/><text x="6.8303%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.01%)</title><rect x="6.5803%" y="949" width="0.0105%" height="15" fill="rgb(244,29,21)" fg:x="2500" fg:w="4"/><text x="6.8303%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.01%)</title><rect x="6.5803%" y="933" width="0.0105%" height="15" fill="rgb(220,130,37)" fg:x="2500" fg:w="4"/><text x="6.8303%" y="943.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (17 samples, 0.04%)</title><rect x="6.5514%" y="1205" width="0.0447%" height="15" fill="rgb(211,67,2)" fg:x="2489" fg:w="17"/><text x="6.8014%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (17 samples, 0.04%)</title><rect x="6.5514%" y="1189" width="0.0447%" height="15" fill="rgb(235,68,52)" fg:x="2489" fg:w="17"/><text x="6.8014%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (17 samples, 0.04%)</title><rect x="6.5514%" y="1173" width="0.0447%" height="15" fill="rgb(246,142,3)" fg:x="2489" fg:w="17"/><text x="6.8014%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (17 samples, 0.04%)</title><rect x="6.5514%" y="1157" width="0.0447%" height="15" fill="rgb(241,25,7)" fg:x="2489" fg:w="17"/><text x="6.8014%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="6.5777%" y="1141" width="0.0184%" height="15" fill="rgb(242,119,39)" fg:x="2499" fg:w="7"/><text x="6.8277%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7 samples, 0.02%)</title><rect x="6.5777%" y="1125" width="0.0184%" height="15" fill="rgb(241,98,45)" fg:x="2499" fg:w="7"/><text x="6.8277%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="6.5777%" y="1109" width="0.0184%" height="15" fill="rgb(254,28,30)" fg:x="2499" fg:w="7"/><text x="6.8277%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (7 samples, 0.02%)</title><rect x="6.5777%" y="1093" width="0.0184%" height="15" fill="rgb(241,142,54)" fg:x="2499" fg:w="7"/><text x="6.8277%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.02%)</title><rect x="6.5777%" y="1077" width="0.0184%" height="15" fill="rgb(222,85,15)" fg:x="2499" fg:w="7"/><text x="6.8277%" y="1087.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (7 samples, 0.02%)</title><rect x="6.5777%" y="1061" width="0.0184%" height="15" fill="rgb(210,85,47)" fg:x="2499" fg:w="7"/><text x="6.8277%" y="1071.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (7 samples, 0.02%)</title><rect x="6.5777%" y="1045" width="0.0184%" height="15" fill="rgb(224,206,25)" fg:x="2499" fg:w="7"/><text x="6.8277%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (19 samples, 0.05%)</title><rect x="6.5487%" y="1221" width="0.0500%" height="15" fill="rgb(243,201,19)" fg:x="2488" fg:w="19"/><text x="6.7987%" y="1231.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (34 samples, 0.09%)</title><rect x="6.5119%" y="1237" width="0.0895%" height="15" fill="rgb(236,59,4)" fg:x="2474" fg:w="34"/><text x="6.7619%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (36 samples, 0.09%)</title><rect x="6.5093%" y="1269" width="0.0948%" height="15" fill="rgb(254,179,45)" fg:x="2473" fg:w="36"/><text x="6.7593%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (35 samples, 0.09%)</title><rect x="6.5119%" y="1253" width="0.0921%" height="15" fill="rgb(226,14,10)" fg:x="2474" fg:w="35"/><text x="6.7619%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (60 samples, 0.16%)</title><rect x="6.4487%" y="1285" width="0.1579%" height="15" fill="rgb(244,27,41)" fg:x="2450" fg:w="60"/><text x="6.6987%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="6.8067%" y="1269" width="0.0237%" height="15" fill="rgb(235,35,32)" fg:x="2586" fg:w="9"/><text x="7.0567%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (9 samples, 0.02%)</title><rect x="6.8067%" y="1253" width="0.0237%" height="15" fill="rgb(218,68,31)" fg:x="2586" fg:w="9"/><text x="7.0567%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.02%)</title><rect x="6.8067%" y="1237" width="0.0237%" height="15" fill="rgb(207,120,37)" fg:x="2586" fg:w="9"/><text x="7.0567%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.02%)</title><rect x="6.8988%" y="1253" width="0.0158%" height="15" fill="rgb(227,98,0)" fg:x="2621" fg:w="6"/><text x="7.1488%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.02%)</title><rect x="6.8988%" y="1237" width="0.0158%" height="15" fill="rgb(207,7,3)" fg:x="2621" fg:w="6"/><text x="7.1488%" y="1247.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.02%)</title><rect x="6.8988%" y="1221" width="0.0158%" height="15" fill="rgb(206,98,19)" fg:x="2621" fg:w="6"/><text x="7.1488%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (9 samples, 0.02%)</title><rect x="6.9357%" y="1253" width="0.0237%" height="15" fill="rgb(217,5,26)" fg:x="2635" fg:w="9"/><text x="7.1857%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.01%)</title><rect x="6.9594%" y="1237" width="0.0105%" height="15" fill="rgb(235,190,38)" fg:x="2644" fg:w="4"/><text x="7.2094%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (7 samples, 0.02%)</title><rect x="6.9699%" y="1237" width="0.0184%" height="15" fill="rgb(247,86,24)" fg:x="2648" fg:w="7"/><text x="7.2199%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (7 samples, 0.02%)</title><rect x="6.9699%" y="1221" width="0.0184%" height="15" fill="rgb(205,101,16)" fg:x="2648" fg:w="7"/><text x="7.2199%" y="1231.50"></text></g><g><title>core::cell::BorrowRefMut::new (7 samples, 0.02%)</title><rect x="6.9699%" y="1205" width="0.0184%" height="15" fill="rgb(246,168,33)" fg:x="2648" fg:w="7"/><text x="7.2199%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (12 samples, 0.03%)</title><rect x="6.9594%" y="1253" width="0.0316%" height="15" fill="rgb(231,114,1)" fg:x="2644" fg:w="12"/><text x="7.2094%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (24 samples, 0.06%)</title><rect x="6.9936%" y="1221" width="0.0632%" height="15" fill="rgb(207,184,53)" fg:x="2657" fg:w="24"/><text x="7.2436%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.06%)</title><rect x="6.9936%" y="1205" width="0.0632%" height="15" fill="rgb(224,95,51)" fg:x="2657" fg:w="24"/><text x="7.2436%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (30 samples, 0.08%)</title><rect x="7.0699%" y="1205" width="0.0790%" height="15" fill="rgb(212,188,45)" fg:x="2686" fg:w="30"/><text x="7.3199%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.08%)</title><rect x="7.0699%" y="1189" width="0.0790%" height="15" fill="rgb(223,154,38)" fg:x="2686" fg:w="30"/><text x="7.3199%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.07%)</title><rect x="7.1620%" y="1157" width="0.0684%" height="15" fill="rgb(251,22,52)" fg:x="2721" fg:w="26"/><text x="7.4120%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (26 samples, 0.07%)</title><rect x="7.1620%" y="1141" width="0.0684%" height="15" fill="rgb(229,209,22)" fg:x="2721" fg:w="26"/><text x="7.4120%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (26 samples, 0.07%)</title><rect x="7.1620%" y="1125" width="0.0684%" height="15" fill="rgb(234,138,34)" fg:x="2721" fg:w="26"/><text x="7.4120%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (70 samples, 0.18%)</title><rect x="7.3068%" y="1093" width="0.1842%" height="15" fill="rgb(212,95,11)" fg:x="2776" fg:w="70"/><text x="7.5568%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (70 samples, 0.18%)</title><rect x="7.3068%" y="1077" width="0.1842%" height="15" fill="rgb(240,179,47)" fg:x="2776" fg:w="70"/><text x="7.5568%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (144 samples, 0.38%)</title><rect x="7.2594%" y="1109" width="0.3790%" height="15" fill="rgb(240,163,11)" fg:x="2758" fg:w="144"/><text x="7.5094%" y="1119.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (56 samples, 0.15%)</title><rect x="7.4911%" y="1093" width="0.1474%" height="15" fill="rgb(236,37,12)" fg:x="2846" fg:w="56"/><text x="7.7411%" y="1103.50"></text></g><g><title>syscall (56 samples, 0.15%)</title><rect x="7.4911%" y="1077" width="0.1474%" height="15" fill="rgb(232,164,16)" fg:x="2846" fg:w="56"/><text x="7.7411%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (12 samples, 0.03%)</title><rect x="7.6385%" y="1109" width="0.0316%" height="15" fill="rgb(244,205,15)" fg:x="2902" fg:w="12"/><text x="7.8885%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.03%)</title><rect x="7.6385%" y="1093" width="0.0316%" height="15" fill="rgb(223,117,47)" fg:x="2902" fg:w="12"/><text x="7.8885%" y="1103.50"></text></g><g><title>core::mem::replace (12 samples, 0.03%)</title><rect x="7.6385%" y="1077" width="0.0316%" height="15" fill="rgb(244,107,35)" fg:x="2902" fg:w="12"/><text x="7.8885%" y="1087.50"></text></g><g><title>core::ptr::write (12 samples, 0.03%)</title><rect x="7.6385%" y="1061" width="0.0316%" height="15" fill="rgb(205,140,8)" fg:x="2902" fg:w="12"/><text x="7.8885%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::hash (5 samples, 0.01%)</title><rect x="7.6858%" y="1093" width="0.0132%" height="15" fill="rgb(228,84,46)" fg:x="2920" fg:w="5"/><text x="7.9358%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (26 samples, 0.07%)</title><rect x="7.6779%" y="1109" width="0.0684%" height="15" fill="rgb(254,188,9)" fg:x="2917" fg:w="26"/><text x="7.9279%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (18 samples, 0.05%)</title><rect x="7.6990%" y="1093" width="0.0474%" height="15" fill="rgb(206,112,54)" fg:x="2925" fg:w="18"/><text x="7.9490%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 0.05%)</title><rect x="7.6990%" y="1077" width="0.0474%" height="15" fill="rgb(216,84,49)" fg:x="2925" fg:w="18"/><text x="7.9490%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.05%)</title><rect x="7.6990%" y="1061" width="0.0474%" height="15" fill="rgb(214,194,35)" fg:x="2925" fg:w="18"/><text x="7.9490%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (192 samples, 0.51%)</title><rect x="7.2594%" y="1125" width="0.5054%" height="15" fill="rgb(249,28,3)" fg:x="2758" fg:w="192"/><text x="7.5094%" y="1135.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (7 samples, 0.02%)</title><rect x="7.7464%" y="1109" width="0.0184%" height="15" fill="rgb(222,56,52)" fg:x="2943" fg:w="7"/><text x="7.9964%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.02%)</title><rect x="7.7490%" y="1093" width="0.0158%" height="15" fill="rgb(245,217,50)" fg:x="2944" fg:w="6"/><text x="7.9990%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.02%)</title><rect x="7.7490%" y="1077" width="0.0158%" height="15" fill="rgb(213,201,24)" fg:x="2944" fg:w="6"/><text x="7.9990%" y="1087.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (238 samples, 0.63%)</title><rect x="7.1489%" y="1205" width="0.6264%" height="15" fill="rgb(248,116,28)" fg:x="2716" fg:w="238"/><text x="7.3989%" y="1215.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (238 samples, 0.63%)</title><rect x="7.1489%" y="1189" width="0.6264%" height="15" fill="rgb(219,72,43)" fg:x="2716" fg:w="238"/><text x="7.3989%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (237 samples, 0.62%)</title><rect x="7.1515%" y="1173" width="0.6238%" height="15" fill="rgb(209,138,14)" fg:x="2717" fg:w="237"/><text x="7.4015%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park (207 samples, 0.54%)</title><rect x="7.2305%" y="1157" width="0.5449%" height="15" fill="rgb(222,18,33)" fg:x="2747" fg:w="207"/><text x="7.4805%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (207 samples, 0.54%)</title><rect x="7.2305%" y="1141" width="0.5449%" height="15" fill="rgb(213,199,7)" fg:x="2747" fg:w="207"/><text x="7.4805%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="7.7648%" y="1125" width="0.0105%" height="15" fill="rgb(250,110,10)" fg:x="2950" fg:w="4"/><text x="8.0148%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="7.7648%" y="1109" width="0.0105%" height="15" fill="rgb(248,123,6)" fg:x="2950" fg:w="4"/><text x="8.0148%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (4 samples, 0.01%)</title><rect x="7.7648%" y="1093" width="0.0105%" height="15" fill="rgb(206,91,31)" fg:x="2950" fg:w="4"/><text x="8.0148%" y="1103.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (4 samples, 0.01%)</title><rect x="7.7648%" y="1077" width="0.0105%" height="15" fill="rgb(211,154,13)" fg:x="2950" fg:w="4"/><text x="8.0148%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (277 samples, 0.73%)</title><rect x="7.0567%" y="1221" width="0.7291%" height="15" fill="rgb(225,148,7)" fg:x="2681" fg:w="277"/><text x="7.3067%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="7.7753%" y="1205" width="0.0105%" height="15" fill="rgb(220,160,43)" fg:x="2954" fg:w="4"/><text x="8.0253%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23 samples, 0.06%)</title><rect x="7.9227%" y="1205" width="0.0605%" height="15" fill="rgb(213,52,39)" fg:x="3010" fg:w="23"/><text x="8.1727%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.06%)</title><rect x="7.9227%" y="1189" width="0.0605%" height="15" fill="rgb(243,137,7)" fg:x="3010" fg:w="23"/><text x="8.1727%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (63 samples, 0.17%)</title><rect x="7.9833%" y="1205" width="0.1658%" height="15" fill="rgb(230,79,13)" fg:x="3033" fg:w="63"/><text x="8.2333%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_swap (63 samples, 0.17%)</title><rect x="7.9833%" y="1189" width="0.1658%" height="15" fill="rgb(247,105,23)" fg:x="3033" fg:w="63"/><text x="8.2333%" y="1199.50"></text></g><g><title>tokio::runtime::driver::Driver::park (8 samples, 0.02%)</title><rect x="8.1491%" y="1205" width="0.0211%" height="15" fill="rgb(223,179,41)" fg:x="3096" fg:w="8"/><text x="8.3991%" y="1215.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (8 samples, 0.02%)</title><rect x="8.1491%" y="1189" width="0.0211%" height="15" fill="rgb(218,9,34)" fg:x="3096" fg:w="8"/><text x="8.3991%" y="1199.50"></text></g><g><title>tokio::runtime::time::Driver::park (4 samples, 0.01%)</title><rect x="8.1596%" y="1173" width="0.0105%" height="15" fill="rgb(222,106,8)" fg:x="3100" fg:w="4"/><text x="8.4096%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.08%)</title><rect x="9.0045%" y="1045" width="0.0842%" height="15" fill="rgb(211,220,0)" fg:x="3421" fg:w="32"/><text x="9.2545%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.08%)</title><rect x="9.0045%" y="1029" width="0.0842%" height="15" fill="rgb(229,52,16)" fg:x="3421" fg:w="32"/><text x="9.2545%" y="1039.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.03%)</title><rect x="9.0572%" y="1013" width="0.0316%" height="15" fill="rgb(212,155,18)" fg:x="3441" fg:w="12"/><text x="9.3072%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (73 samples, 0.19%)</title><rect x="9.0888%" y="1045" width="0.1921%" height="15" fill="rgb(242,21,14)" fg:x="3453" fg:w="73"/><text x="9.3388%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (73 samples, 0.19%)</title><rect x="9.0888%" y="1029" width="0.1921%" height="15" fill="rgb(222,19,48)" fg:x="3453" fg:w="73"/><text x="9.3388%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (6 samples, 0.02%)</title><rect x="9.2809%" y="1029" width="0.0158%" height="15" fill="rgb(232,45,27)" fg:x="3526" fg:w="6"/><text x="9.5309%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (6 samples, 0.02%)</title><rect x="9.2809%" y="1013" width="0.0158%" height="15" fill="rgb(249,103,42)" fg:x="3526" fg:w="6"/><text x="9.5309%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (389 samples, 1.02%)</title><rect x="8.2886%" y="1141" width="1.0239%" height="15" fill="rgb(246,81,33)" fg:x="3149" fg:w="389"/><text x="8.5386%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (389 samples, 1.02%)</title><rect x="8.2886%" y="1125" width="1.0239%" height="15" fill="rgb(252,33,42)" fg:x="3149" fg:w="389"/><text x="8.5386%" y="1135.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (373 samples, 0.98%)</title><rect x="8.3307%" y="1109" width="0.9818%" height="15" fill="rgb(209,212,41)" fg:x="3165" fg:w="373"/><text x="8.5807%" y="1119.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (362 samples, 0.95%)</title><rect x="8.3597%" y="1093" width="0.9528%" height="15" fill="rgb(207,154,6)" fg:x="3176" fg:w="362"/><text x="8.6097%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (362 samples, 0.95%)</title><rect x="8.3597%" y="1077" width="0.9528%" height="15" fill="rgb(223,64,47)" fg:x="3176" fg:w="362"/><text x="8.6097%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (358 samples, 0.94%)</title><rect x="8.3702%" y="1061" width="0.9423%" height="15" fill="rgb(211,161,38)" fg:x="3180" fg:w="358"/><text x="8.6202%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (12 samples, 0.03%)</title><rect x="9.2809%" y="1045" width="0.0316%" height="15" fill="rgb(219,138,40)" fg:x="3526" fg:w="12"/><text x="9.5309%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (6 samples, 0.02%)</title><rect x="9.2967%" y="1029" width="0.0158%" height="15" fill="rgb(241,228,46)" fg:x="3532" fg:w="6"/><text x="9.5467%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::get_mut (4 samples, 0.01%)</title><rect x="9.3309%" y="1077" width="0.0105%" height="15" fill="rgb(223,209,38)" fg:x="3545" fg:w="4"/><text x="9.5809%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::get_mut (4 samples, 0.01%)</title><rect x="9.3309%" y="1061" width="0.0105%" height="15" fill="rgb(236,164,45)" fg:x="3545" fg:w="4"/><text x="9.5809%" y="1071.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="9.3309%" y="1045" width="0.0105%" height="15" fill="rgb(231,15,5)" fg:x="3545" fg:w="4"/><text x="9.5809%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.05%)</title><rect x="9.6941%" y="1045" width="0.0474%" height="15" fill="rgb(252,35,15)" fg:x="3683" fg:w="18"/><text x="9.9441%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.05%)</title><rect x="9.6941%" y="1029" width="0.0474%" height="15" fill="rgb(248,181,18)" fg:x="3683" fg:w="18"/><text x="9.9441%" y="1039.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.03%)</title><rect x="9.7126%" y="1013" width="0.0290%" height="15" fill="rgb(233,39,42)" fg:x="3690" fg:w="11"/><text x="9.9626%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (5 samples, 0.01%)</title><rect x="9.8758%" y="1013" width="0.0132%" height="15" fill="rgb(238,110,33)" fg:x="3752" fg:w="5"/><text x="10.1258%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (61 samples, 0.16%)</title><rect x="9.7521%" y="1029" width="0.1606%" height="15" fill="rgb(233,195,10)" fg:x="3705" fg:w="61"/><text x="10.0021%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (9 samples, 0.02%)</title><rect x="9.8889%" y="1013" width="0.0237%" height="15" fill="rgb(254,105,3)" fg:x="3757" fg:w="9"/><text x="10.1389%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (9 samples, 0.02%)</title><rect x="9.8889%" y="997" width="0.0237%" height="15" fill="rgb(221,225,9)" fg:x="3757" fg:w="9"/><text x="10.1389%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (6 samples, 0.02%)</title><rect x="9.9126%" y="1029" width="0.0158%" height="15" fill="rgb(224,227,45)" fg:x="3766" fg:w="6"/><text x="10.1626%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (5 samples, 0.01%)</title><rect x="9.9152%" y="1013" width="0.0132%" height="15" fill="rgb(229,198,43)" fg:x="3767" fg:w="5"/><text x="10.1652%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (5 samples, 0.01%)</title><rect x="9.9152%" y="997" width="0.0132%" height="15" fill="rgb(206,209,35)" fg:x="3767" fg:w="5"/><text x="10.1652%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (72 samples, 0.19%)</title><rect x="9.7415%" y="1045" width="0.1895%" height="15" fill="rgb(245,195,53)" fg:x="3701" fg:w="72"/><text x="9.9915%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (4 samples, 0.01%)</title><rect x="9.9310%" y="1029" width="0.0105%" height="15" fill="rgb(240,92,26)" fg:x="3773" fg:w="4"/><text x="10.1810%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.01%)</title><rect x="9.9310%" y="1013" width="0.0105%" height="15" fill="rgb(207,40,23)" fg:x="3773" fg:w="4"/><text x="10.1810%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (637 samples, 1.68%)</title><rect x="8.2860%" y="1189" width="1.6767%" height="15" fill="rgb(223,111,35)" fg:x="3148" fg:w="637"/><text x="8.5360%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (637 samples, 1.68%)</title><rect x="8.2860%" y="1173" width="1.6767%" height="15" fill="rgb(229,147,28)" fg:x="3148" fg:w="637"/><text x="8.5360%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (637 samples, 1.68%)</title><rect x="8.2860%" y="1157" width="1.6767%" height="15" fill="rgb(211,29,28)" fg:x="3148" fg:w="637"/><text x="8.5360%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (247 samples, 0.65%)</title><rect x="9.3125%" y="1141" width="0.6501%" height="15" fill="rgb(228,72,33)" fg:x="3538" fg:w="247"/><text x="9.5625%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (247 samples, 0.65%)</title><rect x="9.3125%" y="1125" width="0.6501%" height="15" fill="rgb(205,214,31)" fg:x="3538" fg:w="247"/><text x="9.5625%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (240 samples, 0.63%)</title><rect x="9.3309%" y="1109" width="0.6317%" height="15" fill="rgb(224,111,15)" fg:x="3545" fg:w="240"/><text x="9.5809%" y="1119.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (240 samples, 0.63%)</title><rect x="9.3309%" y="1093" width="0.6317%" height="15" fill="rgb(253,21,26)" fg:x="3545" fg:w="240"/><text x="9.5809%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (236 samples, 0.62%)</title><rect x="9.3414%" y="1077" width="0.6212%" height="15" fill="rgb(245,139,43)" fg:x="3549" fg:w="236"/><text x="9.5914%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (235 samples, 0.62%)</title><rect x="9.3441%" y="1061" width="0.6186%" height="15" fill="rgb(252,170,7)" fg:x="3550" fg:w="235"/><text x="9.5941%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (12 samples, 0.03%)</title><rect x="9.9310%" y="1045" width="0.0316%" height="15" fill="rgb(231,118,14)" fg:x="3773" fg:w="12"/><text x="10.1810%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (8 samples, 0.02%)</title><rect x="9.9416%" y="1029" width="0.0211%" height="15" fill="rgb(238,83,0)" fg:x="3777" fg:w="8"/><text x="10.1916%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockWriteGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (24 samples, 0.06%)</title><rect x="9.9679%" y="1189" width="0.0632%" height="15" fill="rgb(221,39,39)" fg:x="3787" fg:w="24"/><text x="10.2179%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (24 samples, 0.06%)</title><rect x="9.9679%" y="1173" width="0.0632%" height="15" fill="rgb(222,119,46)" fg:x="3787" fg:w="24"/><text x="10.2179%" y="1183.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.06%)</title><rect x="9.9679%" y="1157" width="0.0632%" height="15" fill="rgb(222,165,49)" fg:x="3787" fg:w="24"/><text x="10.2179%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (24 samples, 0.06%)</title><rect x="9.9679%" y="1141" width="0.0632%" height="15" fill="rgb(219,113,52)" fg:x="3787" fg:w="24"/><text x="10.2179%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (24 samples, 0.06%)</title><rect x="9.9679%" y="1125" width="0.0632%" height="15" fill="rgb(214,7,15)" fg:x="3787" fg:w="24"/><text x="10.2179%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.06%)</title><rect x="9.9679%" y="1109" width="0.0632%" height="15" fill="rgb(235,32,4)" fg:x="3787" fg:w="24"/><text x="10.2179%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::write (20 samples, 0.05%)</title><rect x="10.0337%" y="1189" width="0.0526%" height="15" fill="rgb(238,90,54)" fg:x="3812" fg:w="20"/><text x="10.2837%" y="1199.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (20 samples, 0.05%)</title><rect x="10.0337%" y="1173" width="0.0526%" height="15" fill="rgb(213,208,19)" fg:x="3812" fg:w="20"/><text x="10.2837%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (20 samples, 0.05%)</title><rect x="10.0337%" y="1157" width="0.0526%" height="15" fill="rgb(233,156,4)" fg:x="3812" fg:w="20"/><text x="10.2837%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20 samples, 0.05%)</title><rect x="10.0337%" y="1141" width="0.0526%" height="15" fill="rgb(207,194,5)" fg:x="3812" fg:w="20"/><text x="10.2837%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.05%)</title><rect x="10.0337%" y="1125" width="0.0526%" height="15" fill="rgb(206,111,30)" fg:x="3812" fg:w="20"/><text x="10.2837%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (22 samples, 0.06%)</title><rect x="10.0995%" y="1157" width="0.0579%" height="15" fill="rgb(243,70,54)" fg:x="3837" fg:w="22"/><text x="10.3495%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (22 samples, 0.06%)</title><rect x="10.0995%" y="1141" width="0.0579%" height="15" fill="rgb(242,28,8)" fg:x="3837" fg:w="22"/><text x="10.3495%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.06%)</title><rect x="10.0995%" y="1125" width="0.0579%" height="15" fill="rgb(219,106,18)" fg:x="3837" fg:w="22"/><text x="10.3495%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (22 samples, 0.06%)</title><rect x="10.0995%" y="1109" width="0.0579%" height="15" fill="rgb(244,222,10)" fg:x="3837" fg:w="22"/><text x="10.3495%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (22 samples, 0.06%)</title><rect x="10.0995%" y="1093" width="0.0579%" height="15" fill="rgb(236,179,52)" fg:x="3837" fg:w="22"/><text x="10.3495%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.06%)</title><rect x="10.0995%" y="1077" width="0.0579%" height="15" fill="rgb(213,23,39)" fg:x="3837" fg:w="22"/><text x="10.3495%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (16 samples, 0.04%)</title><rect x="10.1574%" y="1157" width="0.0421%" height="15" fill="rgb(238,48,10)" fg:x="3859" fg:w="16"/><text x="10.4074%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (16 samples, 0.04%)</title><rect x="10.1574%" y="1141" width="0.0421%" height="15" fill="rgb(251,196,23)" fg:x="3859" fg:w="16"/><text x="10.4074%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.04%)</title><rect x="10.1574%" y="1125" width="0.0421%" height="15" fill="rgb(250,152,24)" fg:x="3859" fg:w="16"/><text x="10.4074%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (16 samples, 0.04%)</title><rect x="10.1574%" y="1109" width="0.0421%" height="15" fill="rgb(209,150,17)" fg:x="3859" fg:w="16"/><text x="10.4074%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (16 samples, 0.04%)</title><rect x="10.1574%" y="1093" width="0.0421%" height="15" fill="rgb(234,202,34)" fg:x="3859" fg:w="16"/><text x="10.4074%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.04%)</title><rect x="10.1574%" y="1077" width="0.0421%" height="15" fill="rgb(253,148,53)" fg:x="3859" fg:w="16"/><text x="10.4074%" y="1087.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (22 samples, 0.06%)</title><rect x="10.1995%" y="1157" width="0.0579%" height="15" fill="rgb(218,129,16)" fg:x="3875" fg:w="22"/><text x="10.4495%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (22 samples, 0.06%)</title><rect x="10.1995%" y="1141" width="0.0579%" height="15" fill="rgb(216,85,19)" fg:x="3875" fg:w="22"/><text x="10.4495%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (22 samples, 0.06%)</title><rect x="10.1995%" y="1125" width="0.0579%" height="15" fill="rgb(235,228,7)" fg:x="3875" fg:w="22"/><text x="10.4495%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (22 samples, 0.06%)</title><rect x="10.1995%" y="1109" width="0.0579%" height="15" fill="rgb(245,175,0)" fg:x="3875" fg:w="22"/><text x="10.4495%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.06%)</title><rect x="10.1995%" y="1093" width="0.0579%" height="15" fill="rgb(208,168,36)" fg:x="3875" fg:w="22"/><text x="10.4495%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (19 samples, 0.05%)</title><rect x="10.2601%" y="1109" width="0.0500%" height="15" fill="rgb(246,171,24)" fg:x="3898" fg:w="19"/><text x="10.5101%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.05%)</title><rect x="10.2601%" y="1093" width="0.0500%" height="15" fill="rgb(215,142,24)" fg:x="3898" fg:w="19"/><text x="10.5101%" y="1103.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (107 samples, 0.28%)</title><rect x="10.0863%" y="1189" width="0.2816%" height="15" fill="rgb(250,187,7)" fg:x="3832" fg:w="107"/><text x="10.3363%" y="1199.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (107 samples, 0.28%)</title><rect x="10.0863%" y="1173" width="0.2816%" height="15" fill="rgb(228,66,33)" fg:x="3832" fg:w="107"/><text x="10.3363%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (42 samples, 0.11%)</title><rect x="10.2574%" y="1157" width="0.1105%" height="15" fill="rgb(234,215,21)" fg:x="3897" fg:w="42"/><text x="10.5074%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (42 samples, 0.11%)</title><rect x="10.2574%" y="1141" width="0.1105%" height="15" fill="rgb(222,191,20)" fg:x="3897" fg:w="42"/><text x="10.5074%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (42 samples, 0.11%)</title><rect x="10.2574%" y="1125" width="0.1105%" height="15" fill="rgb(245,79,54)" fg:x="3897" fg:w="42"/><text x="10.5074%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (22 samples, 0.06%)</title><rect x="10.3101%" y="1109" width="0.0579%" height="15" fill="rgb(240,10,37)" fg:x="3917" fg:w="22"/><text x="10.5601%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.06%)</title><rect x="10.3101%" y="1093" width="0.0579%" height="15" fill="rgb(214,192,32)" fg:x="3917" fg:w="22"/><text x="10.5601%" y="1103.50"></text></g><g><title>tokio::runtime::driver::Handle::time (5 samples, 0.01%)</title><rect x="10.3680%" y="1189" width="0.0132%" height="15" fill="rgb(209,36,54)" fg:x="3939" fg:w="5"/><text x="10.6180%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="10.3680%" y="1173" width="0.0132%" height="15" fill="rgb(220,10,11)" fg:x="3939" fg:w="5"/><text x="10.6180%" y="1183.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.06%)</title><rect x="10.3969%" y="1173" width="0.0632%" height="15" fill="rgb(221,106,17)" fg:x="3950" fg:w="24"/><text x="10.6469%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (24 samples, 0.06%)</title><rect x="10.3969%" y="1157" width="0.0632%" height="15" fill="rgb(251,142,44)" fg:x="3950" fg:w="24"/><text x="10.6469%" y="1167.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (24 samples, 0.06%)</title><rect x="10.3969%" y="1141" width="0.0632%" height="15" fill="rgb(238,13,15)" fg:x="3950" fg:w="24"/><text x="10.6469%" y="1151.50"></text></g><g><title>mio::event::event::Event::token (5 samples, 0.01%)</title><rect x="10.4601%" y="1173" width="0.0132%" height="15" fill="rgb(208,107,27)" fg:x="3974" fg:w="5"/><text x="10.7101%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::event::token (5 samples, 0.01%)</title><rect x="10.4601%" y="1157" width="0.0132%" height="15" fill="rgb(205,136,37)" fg:x="3974" fg:w="5"/><text x="10.7101%" y="1167.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (14 samples, 0.04%)</title><rect x="10.7891%" y="1141" width="0.0368%" height="15" fill="rgb(250,205,27)" fg:x="4099" fg:w="14"/><text x="11.0391%" y="1151.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (14 samples, 0.04%)</title><rect x="10.7891%" y="1125" width="0.0368%" height="15" fill="rgb(210,80,43)" fg:x="4099" fg:w="14"/><text x="11.0391%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (14 samples, 0.04%)</title><rect x="10.7891%" y="1109" width="0.0368%" height="15" fill="rgb(247,160,36)" fg:x="4099" fg:w="14"/><text x="11.0391%" y="1119.50"></text></g><g><title>[libc.so.6] (86 samples, 0.23%)</title><rect x="11.3682%" y="1125" width="0.2264%" height="15" fill="rgb(234,13,49)" fg:x="4319" fg:w="86"/><text x="11.6182%" y="1135.50"></text></g><g><title>mio::poll::Poll::poll (443 samples, 1.17%)</title><rect x="10.4733%" y="1173" width="1.1660%" height="15" fill="rgb(234,122,0)" fg:x="3979" fg:w="443"/><text x="10.7233%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (438 samples, 1.15%)</title><rect x="10.4864%" y="1157" width="1.1529%" height="15" fill="rgb(207,146,38)" fg:x="3984" fg:w="438"/><text x="10.7364%" y="1167.50"></text></g><g><title>epoll_wait (309 samples, 0.81%)</title><rect x="10.8260%" y="1141" width="0.8133%" height="15" fill="rgb(207,177,25)" fg:x="4113" fg:w="309"/><text x="11.0760%" y="1151.50"></text></g><g><title>[unknown] (17 samples, 0.04%)</title><rect x="11.5945%" y="1125" width="0.0447%" height="15" fill="rgb(211,178,42)" fg:x="4405" fg:w="17"/><text x="11.8445%" y="1135.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (14 samples, 0.04%)</title><rect x="11.6393%" y="1173" width="0.0368%" height="15" fill="rgb(230,69,54)" fg:x="4422" fg:w="14"/><text x="11.8893%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (77 samples, 0.20%)</title><rect x="11.6840%" y="1157" width="0.2027%" height="15" fill="rgb(214,135,41)" fg:x="4439" fg:w="77"/><text x="11.9340%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (77 samples, 0.20%)</title><rect x="11.6840%" y="1141" width="0.2027%" height="15" fill="rgb(237,67,25)" fg:x="4439" fg:w="77"/><text x="11.9340%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93 samples, 0.24%)</title><rect x="11.8867%" y="1157" width="0.2448%" height="15" fill="rgb(222,189,50)" fg:x="4516" fg:w="93"/><text x="12.1367%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (93 samples, 0.24%)</title><rect x="11.8867%" y="1141" width="0.2448%" height="15" fill="rgb(245,148,34)" fg:x="4516" fg:w="93"/><text x="12.1367%" y="1151.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (175 samples, 0.46%)</title><rect x="11.6814%" y="1173" width="0.4606%" height="15" fill="rgb(222,29,6)" fg:x="4438" fg:w="175"/><text x="11.9314%" y="1183.50"></text></g><g><title>tokio::util::bit::Pack::pack (4 samples, 0.01%)</title><rect x="12.1315%" y="1157" width="0.0105%" height="15" fill="rgb(221,189,43)" fg:x="4609" fg:w="4"/><text x="12.3815%" y="1167.50"></text></g><g><title>core::mem::drop (72 samples, 0.19%)</title><rect x="12.1710%" y="1157" width="0.1895%" height="15" fill="rgb(207,36,27)" fg:x="4624" fg:w="72"/><text x="12.4210%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (72 samples, 0.19%)</title><rect x="12.1710%" y="1141" width="0.1895%" height="15" fill="rgb(217,90,24)" fg:x="4624" fg:w="72"/><text x="12.4210%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (72 samples, 0.19%)</title><rect x="12.1710%" y="1125" width="0.1895%" height="15" fill="rgb(224,66,35)" fg:x="4624" fg:w="72"/><text x="12.4210%" y="1135.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.19%)</title><rect x="12.1710%" y="1109" width="0.1895%" height="15" fill="rgb(221,13,50)" fg:x="4624" fg:w="72"/><text x="12.4210%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (72 samples, 0.19%)</title><rect x="12.1710%" y="1093" width="0.1895%" height="15" fill="rgb(236,68,49)" fg:x="4624" fg:w="72"/><text x="12.4210%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (72 samples, 0.19%)</title><rect x="12.1710%" y="1077" width="0.1895%" height="15" fill="rgb(229,146,28)" fg:x="4624" fg:w="72"/><text x="12.4210%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (72 samples, 0.19%)</title><rect x="12.1710%" y="1061" width="0.1895%" height="15" fill="rgb(225,31,38)" fg:x="4624" fg:w="72"/><text x="12.4210%" y="1071.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (20 samples, 0.05%)</title><rect x="12.3684%" y="1157" width="0.0526%" height="15" fill="rgb(250,208,3)" fg:x="4699" fg:w="20"/><text x="12.6184%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (20 samples, 0.05%)</title><rect x="12.3684%" y="1141" width="0.0526%" height="15" fill="rgb(246,54,23)" fg:x="4699" fg:w="20"/><text x="12.6184%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.05%)</title><rect x="12.3684%" y="1125" width="0.0526%" height="15" fill="rgb(243,76,11)" fg:x="4699" fg:w="20"/><text x="12.6184%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (20 samples, 0.05%)</title><rect x="12.3684%" y="1109" width="0.0526%" height="15" fill="rgb(245,21,50)" fg:x="4699" fg:w="20"/><text x="12.6184%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.05%)</title><rect x="12.3684%" y="1093" width="0.0526%" height="15" fill="rgb(228,9,43)" fg:x="4699" fg:w="20"/><text x="12.6184%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="12.4500%" y="1013" width="0.0105%" height="15" fill="rgb(208,100,47)" fg:x="4730" fg:w="4"/><text x="12.7000%" y="1023.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (4 samples, 0.01%)</title><rect x="12.4500%" y="997" width="0.0105%" height="15" fill="rgb(232,26,8)" fg:x="4730" fg:w="4"/><text x="12.7000%" y="1007.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="12.4500%" y="981" width="0.0105%" height="15" fill="rgb(216,166,38)" fg:x="4730" fg:w="4"/><text x="12.7000%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="12.4500%" y="965" width="0.0105%" height="15" fill="rgb(251,202,51)" fg:x="4730" fg:w="4"/><text x="12.7000%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.04%)</title><rect x="12.4500%" y="1029" width="0.0421%" height="15" fill="rgb(254,216,34)" fg:x="4730" fg:w="16"/><text x="12.7000%" y="1039.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (12 samples, 0.03%)</title><rect x="12.4605%" y="1013" width="0.0316%" height="15" fill="rgb(251,32,27)" fg:x="4734" fg:w="12"/><text x="12.7105%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (24 samples, 0.06%)</title><rect x="12.4500%" y="1077" width="0.0632%" height="15" fill="rgb(208,127,28)" fg:x="4730" fg:w="24"/><text x="12.7000%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (24 samples, 0.06%)</title><rect x="12.4500%" y="1061" width="0.0632%" height="15" fill="rgb(224,137,22)" fg:x="4730" fg:w="24"/><text x="12.7000%" y="1071.50"></text></g><g><title>tokio::runtime::context::with_scheduler (24 samples, 0.06%)</title><rect x="12.4500%" y="1045" width="0.0632%" height="15" fill="rgb(254,70,32)" fg:x="4730" fg:w="24"/><text x="12.7000%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (8 samples, 0.02%)</title><rect x="12.4921%" y="1029" width="0.0211%" height="15" fill="rgb(229,75,37)" fg:x="4746" fg:w="8"/><text x="12.7421%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (7 samples, 0.02%)</title><rect x="12.4947%" y="1013" width="0.0184%" height="15" fill="rgb(252,64,23)" fg:x="4747" fg:w="7"/><text x="12.7447%" y="1023.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (48 samples, 0.13%)</title><rect x="12.4500%" y="1093" width="0.1263%" height="15" fill="rgb(232,162,48)" fg:x="4730" fg:w="48"/><text x="12.7000%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::schedule (24 samples, 0.06%)</title><rect x="12.5132%" y="1077" width="0.0632%" height="15" fill="rgb(246,160,12)" fg:x="4754" fg:w="24"/><text x="12.7632%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (4 samples, 0.01%)</title><rect x="12.5658%" y="1061" width="0.0105%" height="15" fill="rgb(247,166,0)" fg:x="4774" fg:w="4"/><text x="12.8158%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.03%)</title><rect x="12.5763%" y="1061" width="0.0290%" height="15" fill="rgb(249,219,21)" fg:x="4778" fg:w="11"/><text x="12.8263%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.03%)</title><rect x="12.5763%" y="1045" width="0.0290%" height="15" fill="rgb(205,209,3)" fg:x="4778" fg:w="11"/><text x="12.8263%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::State::load (21 samples, 0.06%)</title><rect x="12.6053%" y="1061" width="0.0553%" height="15" fill="rgb(243,44,1)" fg:x="4789" fg:w="21"/><text x="12.8553%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.06%)</title><rect x="12.6053%" y="1045" width="0.0553%" height="15" fill="rgb(206,159,16)" fg:x="4789" fg:w="21"/><text x="12.8553%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.06%)</title><rect x="12.6053%" y="1029" width="0.0553%" height="15" fill="rgb(244,77,30)" fg:x="4789" fg:w="21"/><text x="12.8553%" y="1039.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (869 samples, 2.29%)</title><rect x="10.3811%" y="1189" width="2.2873%" height="15" fill="rgb(218,69,12)" fg:x="3944" fg:w="869"/><text x="10.6311%" y="1199.50">t..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (200 samples, 0.53%)</title><rect x="12.1420%" y="1173" width="0.5264%" height="15" fill="rgb(212,87,7)" fg:x="4613" fg:w="200"/><text x="12.3920%" y="1183.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (90 samples, 0.24%)</title><rect x="12.4316%" y="1157" width="0.2369%" height="15" fill="rgb(245,114,25)" fg:x="4723" fg:w="90"/><text x="12.6816%" y="1167.50"></text></g><g><title>core::task::wake::Waker::wake (86 samples, 0.23%)</title><rect x="12.4421%" y="1141" width="0.2264%" height="15" fill="rgb(210,61,42)" fg:x="4727" fg:w="86"/><text x="12.6921%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (86 samples, 0.23%)</title><rect x="12.4421%" y="1125" width="0.2264%" height="15" fill="rgb(211,52,33)" fg:x="4727" fg:w="86"/><text x="12.6921%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (86 samples, 0.23%)</title><rect x="12.4421%" y="1109" width="0.2264%" height="15" fill="rgb(234,58,33)" fg:x="4727" fg:w="86"/><text x="12.6921%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (35 samples, 0.09%)</title><rect x="12.5763%" y="1093" width="0.0921%" height="15" fill="rgb(220,115,36)" fg:x="4778" fg:w="35"/><text x="12.8263%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (35 samples, 0.09%)</title><rect x="12.5763%" y="1077" width="0.0921%" height="15" fill="rgb(243,153,54)" fg:x="4778" fg:w="35"/><text x="12.8263%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.04%)</title><rect x="12.7079%" y="1125" width="0.0395%" height="15" fill="rgb(251,47,18)" fg:x="4828" fg:w="15"/><text x="12.9579%" y="1135.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (15 samples, 0.04%)</title><rect x="12.7079%" y="1109" width="0.0395%" height="15" fill="rgb(242,102,42)" fg:x="4828" fg:w="15"/><text x="12.9579%" y="1119.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (15 samples, 0.04%)</title><rect x="12.7079%" y="1093" width="0.0395%" height="15" fill="rgb(234,31,38)" fg:x="4828" fg:w="15"/><text x="12.9579%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (13 samples, 0.03%)</title><rect x="12.7132%" y="1077" width="0.0342%" height="15" fill="rgb(221,117,51)" fg:x="4830" fg:w="13"/><text x="12.9632%" y="1087.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (27 samples, 0.07%)</title><rect x="12.7079%" y="1173" width="0.0711%" height="15" fill="rgb(212,20,18)" fg:x="4828" fg:w="27"/><text x="12.9579%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.07%)</title><rect x="12.7079%" y="1157" width="0.0711%" height="15" fill="rgb(245,133,36)" fg:x="4828" fg:w="27"/><text x="12.9579%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.07%)</title><rect x="12.7079%" y="1141" width="0.0711%" height="15" fill="rgb(212,6,19)" fg:x="4828" fg:w="27"/><text x="12.9579%" y="1151.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (12 samples, 0.03%)</title><rect x="12.7474%" y="1125" width="0.0316%" height="15" fill="rgb(218,1,36)" fg:x="4843" fg:w="12"/><text x="12.9974%" y="1135.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (9 samples, 0.02%)</title><rect x="12.7553%" y="1109" width="0.0237%" height="15" fill="rgb(246,84,54)" fg:x="4846" fg:w="9"/><text x="13.0053%" y="1119.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (6 samples, 0.02%)</title><rect x="12.7632%" y="1093" width="0.0158%" height="15" fill="rgb(242,110,6)" fg:x="4849" fg:w="6"/><text x="13.0132%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (138 samples, 0.36%)</title><rect x="12.9185%" y="1013" width="0.3632%" height="15" fill="rgb(214,47,5)" fg:x="4908" fg:w="138"/><text x="13.1685%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (138 samples, 0.36%)</title><rect x="12.9185%" y="997" width="0.3632%" height="15" fill="rgb(218,159,25)" fg:x="4908" fg:w="138"/><text x="13.1685%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (138 samples, 0.36%)</title><rect x="12.9185%" y="981" width="0.3632%" height="15" fill="rgb(215,211,28)" fg:x="4908" fg:w="138"/><text x="13.1685%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (138 samples, 0.36%)</title><rect x="12.9185%" y="965" width="0.3632%" height="15" fill="rgb(238,59,32)" fg:x="4908" fg:w="138"/><text x="13.1685%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (136 samples, 0.36%)</title><rect x="12.9238%" y="949" width="0.3580%" height="15" fill="rgb(226,82,3)" fg:x="4910" fg:w="136"/><text x="13.1738%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (136 samples, 0.36%)</title><rect x="12.9238%" y="933" width="0.3580%" height="15" fill="rgb(240,164,32)" fg:x="4910" fg:w="136"/><text x="13.1738%" y="943.50"></text></g><g><title>core::mem::drop (264 samples, 0.69%)</title><rect x="12.9185%" y="1029" width="0.6949%" height="15" fill="rgb(232,46,7)" fg:x="4908" fg:w="264"/><text x="13.1685%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (126 samples, 0.33%)</title><rect x="13.2817%" y="1013" width="0.3316%" height="15" fill="rgb(229,129,53)" fg:x="5046" fg:w="126"/><text x="13.5317%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (126 samples, 0.33%)</title><rect x="13.2817%" y="997" width="0.3316%" height="15" fill="rgb(234,188,29)" fg:x="5046" fg:w="126"/><text x="13.5317%" y="1007.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.33%)</title><rect x="13.2817%" y="981" width="0.3316%" height="15" fill="rgb(246,141,4)" fg:x="5046" fg:w="126"/><text x="13.5317%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (126 samples, 0.33%)</title><rect x="13.2817%" y="965" width="0.3316%" height="15" fill="rgb(229,23,39)" fg:x="5046" fg:w="126"/><text x="13.5317%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (123 samples, 0.32%)</title><rect x="13.2896%" y="949" width="0.3238%" height="15" fill="rgb(206,12,3)" fg:x="5049" fg:w="123"/><text x="13.5396%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (123 samples, 0.32%)</title><rect x="13.2896%" y="933" width="0.3238%" height="15" fill="rgb(252,226,20)" fg:x="5049" fg:w="123"/><text x="13.5396%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (137 samples, 0.36%)</title><rect x="13.6581%" y="965" width="0.3606%" height="15" fill="rgb(216,123,35)" fg:x="5189" fg:w="137"/><text x="13.9081%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (137 samples, 0.36%)</title><rect x="13.6581%" y="949" width="0.3606%" height="15" fill="rgb(212,68,40)" fg:x="5189" fg:w="137"/><text x="13.9081%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (160 samples, 0.42%)</title><rect x="13.6134%" y="1029" width="0.4211%" height="15" fill="rgb(254,125,32)" fg:x="5172" fg:w="160"/><text x="13.8634%" y="1039.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (160 samples, 0.42%)</title><rect x="13.6134%" y="1013" width="0.4211%" height="15" fill="rgb(253,97,22)" fg:x="5172" fg:w="160"/><text x="13.8634%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (160 samples, 0.42%)</title><rect x="13.6134%" y="997" width="0.4211%" height="15" fill="rgb(241,101,14)" fg:x="5172" fg:w="160"/><text x="13.8634%" y="1007.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (153 samples, 0.40%)</title><rect x="13.6318%" y="981" width="0.4027%" height="15" fill="rgb(238,103,29)" fg:x="5179" fg:w="153"/><text x="13.8818%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.02%)</title><rect x="14.0187%" y="965" width="0.0158%" height="15" fill="rgb(233,195,47)" fg:x="5326" fg:w="6"/><text x="14.2687%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="14.0187%" y="949" width="0.0158%" height="15" fill="rgb(246,218,30)" fg:x="5326" fg:w="6"/><text x="14.2687%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="14.0714%" y="1013" width="0.0132%" height="15" fill="rgb(219,145,47)" fg:x="5346" fg:w="5"/><text x="14.3214%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="14.0714%" y="997" width="0.0132%" height="15" fill="rgb(243,12,26)" fg:x="5346" fg:w="5"/><text x="14.3214%" y="1007.50"></text></g><g><title>core::slice::index::get_noubcheck (5 samples, 0.01%)</title><rect x="14.0714%" y="981" width="0.0132%" height="15" fill="rgb(214,87,16)" fg:x="5346" fg:w="5"/><text x="14.3214%" y="991.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (153 samples, 0.40%)</title><rect x="14.0345%" y="1029" width="0.4027%" height="15" fill="rgb(208,99,42)" fg:x="5332" fg:w="153"/><text x="14.2845%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (134 samples, 0.35%)</title><rect x="14.0845%" y="1013" width="0.3527%" height="15" fill="rgb(253,99,2)" fg:x="5351" fg:w="134"/><text x="14.3345%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (134 samples, 0.35%)</title><rect x="14.0845%" y="997" width="0.3527%" height="15" fill="rgb(220,168,23)" fg:x="5351" fg:w="134"/><text x="14.3345%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (134 samples, 0.35%)</title><rect x="14.0845%" y="981" width="0.3527%" height="15" fill="rgb(242,38,24)" fg:x="5351" fg:w="134"/><text x="14.3345%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (133 samples, 0.35%)</title><rect x="14.0872%" y="965" width="0.3501%" height="15" fill="rgb(225,182,9)" fg:x="5352" fg:w="133"/><text x="14.3372%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (133 samples, 0.35%)</title><rect x="14.0872%" y="949" width="0.3501%" height="15" fill="rgb(243,178,37)" fg:x="5352" fg:w="133"/><text x="14.3372%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.07%)</title><rect x="14.6873%" y="997" width="0.0658%" height="15" fill="rgb(232,139,19)" fg:x="5580" fg:w="25"/><text x="14.9373%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.07%)</title><rect x="14.6873%" y="981" width="0.0658%" height="15" fill="rgb(225,201,24)" fg:x="5580" fg:w="25"/><text x="14.9373%" y="991.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.03%)</title><rect x="14.7242%" y="965" width="0.0290%" height="15" fill="rgb(221,47,46)" fg:x="5594" fg:w="11"/><text x="14.9742%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (35 samples, 0.09%)</title><rect x="14.7531%" y="997" width="0.0921%" height="15" fill="rgb(249,23,13)" fg:x="5605" fg:w="35"/><text x="15.0031%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (35 samples, 0.09%)</title><rect x="14.7531%" y="981" width="0.0921%" height="15" fill="rgb(219,9,5)" fg:x="5605" fg:w="35"/><text x="15.0031%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (155 samples, 0.41%)</title><rect x="14.4425%" y="1013" width="0.4080%" height="15" fill="rgb(254,171,16)" fg:x="5487" fg:w="155"/><text x="14.6925%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (11 samples, 0.03%)</title><rect x="14.8505%" y="1013" width="0.0290%" height="15" fill="rgb(230,171,20)" fg:x="5642" fg:w="11"/><text x="15.1005%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (171 samples, 0.45%)</title><rect x="14.4425%" y="1029" width="0.4501%" height="15" fill="rgb(210,71,41)" fg:x="5487" fg:w="171"/><text x="14.6925%" y="1039.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (5 samples, 0.01%)</title><rect x="14.8794%" y="1013" width="0.0132%" height="15" fill="rgb(206,173,20)" fg:x="5653" fg:w="5"/><text x="15.1294%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.02%)</title><rect x="14.8926%" y="1013" width="0.0237%" height="15" fill="rgb(233,88,34)" fg:x="5658" fg:w="9"/><text x="15.1426%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.07%)</title><rect x="15.0190%" y="997" width="0.0711%" height="15" fill="rgb(223,209,46)" fg:x="5706" fg:w="27"/><text x="15.2690%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.07%)</title><rect x="15.0190%" y="981" width="0.0711%" height="15" fill="rgb(250,43,18)" fg:x="5706" fg:w="27"/><text x="15.2690%" y="991.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.03%)</title><rect x="15.0558%" y="965" width="0.0342%" height="15" fill="rgb(208,13,10)" fg:x="5720" fg:w="13"/><text x="15.3058%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (35 samples, 0.09%)</title><rect x="15.0900%" y="997" width="0.0921%" height="15" fill="rgb(212,200,36)" fg:x="5733" fg:w="35"/><text x="15.3400%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (35 samples, 0.09%)</title><rect x="15.0900%" y="981" width="0.0921%" height="15" fill="rgb(225,90,30)" fg:x="5733" fg:w="35"/><text x="15.3400%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (112 samples, 0.29%)</title><rect x="14.8926%" y="1029" width="0.2948%" height="15" fill="rgb(236,182,39)" fg:x="5658" fg:w="112"/><text x="15.1426%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (103 samples, 0.27%)</title><rect x="14.9163%" y="1013" width="0.2711%" height="15" fill="rgb(212,144,35)" fg:x="5667" fg:w="103"/><text x="15.1663%" y="1023.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (919 samples, 2.42%)</title><rect x="12.7869%" y="1077" width="2.4189%" height="15" fill="rgb(228,63,44)" fg:x="4858" fg:w="919"/><text x="13.0369%" y="1087.50">co..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (904 samples, 2.38%)</title><rect x="12.8264%" y="1061" width="2.3794%" height="15" fill="rgb(228,109,6)" fg:x="4873" fg:w="904"/><text x="13.0764%" y="1071.50">to..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (901 samples, 2.37%)</title><rect x="12.8343%" y="1045" width="2.3716%" height="15" fill="rgb(238,117,24)" fg:x="4876" fg:w="901"/><text x="13.0843%" y="1055.50">to..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (7 samples, 0.02%)</title><rect x="15.1874%" y="1029" width="0.0184%" height="15" fill="rgb(242,26,26)" fg:x="5770" fg:w="7"/><text x="15.4374%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (928 samples, 2.44%)</title><rect x="12.7869%" y="1109" width="2.4426%" height="15" fill="rgb(221,92,48)" fg:x="4858" fg:w="928"/><text x="13.0369%" y="1119.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (928 samples, 2.44%)</title><rect x="12.7869%" y="1093" width="2.4426%" height="15" fill="rgb(209,209,32)" fg:x="4858" fg:w="928"/><text x="13.0369%" y="1103.50">co..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.02%)</title><rect x="15.2058%" y="1077" width="0.0237%" height="15" fill="rgb(221,70,22)" fg:x="5777" fg:w="9"/><text x="15.4558%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.02%)</title><rect x="15.2058%" y="1061" width="0.0237%" height="15" fill="rgb(248,145,5)" fg:x="5777" fg:w="9"/><text x="15.4558%" y="1071.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.01%)</title><rect x="15.2479%" y="1061" width="0.0132%" height="15" fill="rgb(226,116,26)" fg:x="5793" fg:w="5"/><text x="15.4979%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.01%)</title><rect x="15.2479%" y="1045" width="0.0132%" height="15" fill="rgb(244,5,17)" fg:x="5793" fg:w="5"/><text x="15.4979%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (166 samples, 0.44%)</title><rect x="15.4269%" y="981" width="0.4369%" height="15" fill="rgb(252,159,33)" fg:x="5861" fg:w="166"/><text x="15.6769%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (166 samples, 0.44%)</title><rect x="15.4269%" y="965" width="0.4369%" height="15" fill="rgb(206,71,0)" fg:x="5861" fg:w="166"/><text x="15.6769%" y="975.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.44%)</title><rect x="15.4269%" y="949" width="0.4369%" height="15" fill="rgb(233,118,54)" fg:x="5861" fg:w="166"/><text x="15.6769%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (166 samples, 0.44%)</title><rect x="15.4269%" y="933" width="0.4369%" height="15" fill="rgb(234,83,48)" fg:x="5861" fg:w="166"/><text x="15.6769%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (164 samples, 0.43%)</title><rect x="15.4322%" y="917" width="0.4317%" height="15" fill="rgb(228,3,54)" fg:x="5863" fg:w="164"/><text x="15.6822%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (164 samples, 0.43%)</title><rect x="15.4322%" y="901" width="0.4317%" height="15" fill="rgb(226,155,13)" fg:x="5863" fg:w="164"/><text x="15.6822%" y="911.50"></text></g><g><title>core::mem::drop (328 samples, 0.86%)</title><rect x="15.4269%" y="997" width="0.8633%" height="15" fill="rgb(241,28,37)" fg:x="5861" fg:w="328"/><text x="15.6769%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (162 samples, 0.43%)</title><rect x="15.8639%" y="981" width="0.4264%" height="15" fill="rgb(233,93,10)" fg:x="6027" fg:w="162"/><text x="16.1139%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (162 samples, 0.43%)</title><rect x="15.8639%" y="965" width="0.4264%" height="15" fill="rgb(225,113,19)" fg:x="6027" fg:w="162"/><text x="16.1139%" y="975.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.43%)</title><rect x="15.8639%" y="949" width="0.4264%" height="15" fill="rgb(241,2,18)" fg:x="6027" fg:w="162"/><text x="16.1139%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (162 samples, 0.43%)</title><rect x="15.8639%" y="933" width="0.4264%" height="15" fill="rgb(228,207,21)" fg:x="6027" fg:w="162"/><text x="16.1139%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (155 samples, 0.41%)</title><rect x="15.8823%" y="917" width="0.4080%" height="15" fill="rgb(213,211,35)" fg:x="6034" fg:w="155"/><text x="16.1323%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (155 samples, 0.41%)</title><rect x="15.8823%" y="901" width="0.4080%" height="15" fill="rgb(209,83,10)" fg:x="6034" fg:w="155"/><text x="16.1323%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (160 samples, 0.42%)</title><rect x="16.3219%" y="933" width="0.4211%" height="15" fill="rgb(209,164,1)" fg:x="6201" fg:w="160"/><text x="16.5719%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (160 samples, 0.42%)</title><rect x="16.3219%" y="917" width="0.4211%" height="15" fill="rgb(213,184,43)" fg:x="6201" fg:w="160"/><text x="16.5719%" y="927.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (182 samples, 0.48%)</title><rect x="16.2903%" y="997" width="0.4790%" height="15" fill="rgb(231,61,34)" fg:x="6189" fg:w="182"/><text x="16.5403%" y="1007.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (182 samples, 0.48%)</title><rect x="16.2903%" y="981" width="0.4790%" height="15" fill="rgb(235,75,3)" fg:x="6189" fg:w="182"/><text x="16.5403%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (182 samples, 0.48%)</title><rect x="16.2903%" y="965" width="0.4790%" height="15" fill="rgb(220,106,47)" fg:x="6189" fg:w="182"/><text x="16.5403%" y="975.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (180 samples, 0.47%)</title><rect x="16.2955%" y="949" width="0.4738%" height="15" fill="rgb(210,196,33)" fg:x="6191" fg:w="180"/><text x="16.5455%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.03%)</title><rect x="16.7430%" y="933" width="0.0263%" height="15" fill="rgb(229,154,42)" fg:x="6361" fg:w="10"/><text x="16.9930%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.03%)</title><rect x="16.7430%" y="917" width="0.0263%" height="15" fill="rgb(228,114,26)" fg:x="6361" fg:w="10"/><text x="16.9930%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.03%)</title><rect x="16.8009%" y="981" width="0.0342%" height="15" fill="rgb(208,144,1)" fg:x="6383" fg:w="13"/><text x="17.0509%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.03%)</title><rect x="16.8009%" y="965" width="0.0342%" height="15" fill="rgb(239,112,37)" fg:x="6383" fg:w="13"/><text x="17.0509%" y="975.50"></text></g><g><title>core::slice::index::get_noubcheck (13 samples, 0.03%)</title><rect x="16.8009%" y="949" width="0.0342%" height="15" fill="rgb(210,96,50)" fg:x="6383" fg:w="13"/><text x="17.0509%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (5 samples, 0.01%)</title><rect x="16.8351%" y="933" width="0.0132%" height="15" fill="rgb(222,178,2)" fg:x="6396" fg:w="5"/><text x="17.0851%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.01%)</title><rect x="16.8351%" y="917" width="0.0132%" height="15" fill="rgb(226,74,18)" fg:x="6396" fg:w="5"/><text x="17.0851%" y="927.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (217 samples, 0.57%)</title><rect x="16.7693%" y="997" width="0.5712%" height="15" fill="rgb(225,67,54)" fg:x="6371" fg:w="217"/><text x="17.0193%" y="1007.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (192 samples, 0.51%)</title><rect x="16.8351%" y="981" width="0.5054%" height="15" fill="rgb(251,92,32)" fg:x="6396" fg:w="192"/><text x="17.0851%" y="991.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (192 samples, 0.51%)</title><rect x="16.8351%" y="965" width="0.5054%" height="15" fill="rgb(228,149,22)" fg:x="6396" fg:w="192"/><text x="17.0851%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (192 samples, 0.51%)</title><rect x="16.8351%" y="949" width="0.5054%" height="15" fill="rgb(243,54,13)" fg:x="6396" fg:w="192"/><text x="17.0851%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (187 samples, 0.49%)</title><rect x="16.8483%" y="933" width="0.4922%" height="15" fill="rgb(243,180,28)" fg:x="6401" fg:w="187"/><text x="17.0983%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (187 samples, 0.49%)</title><rect x="16.8483%" y="917" width="0.4922%" height="15" fill="rgb(208,167,24)" fg:x="6401" fg:w="187"/><text x="17.0983%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::elapsed (5 samples, 0.01%)</title><rect x="17.3405%" y="997" width="0.0132%" height="15" fill="rgb(245,73,45)" fg:x="6588" fg:w="5"/><text x="17.5905%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="17.7300%" y="965" width="0.0553%" height="15" fill="rgb(237,203,48)" fg:x="6736" fg:w="21"/><text x="17.9800%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="17.7300%" y="949" width="0.0553%" height="15" fill="rgb(211,197,16)" fg:x="6736" fg:w="21"/><text x="17.9800%" y="959.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="17.7643%" y="933" width="0.0211%" height="15" fill="rgb(243,99,51)" fg:x="6749" fg:w="8"/><text x="18.0143%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (57 samples, 0.15%)</title><rect x="17.8064%" y="949" width="0.1500%" height="15" fill="rgb(215,123,29)" fg:x="6765" fg:w="57"/><text x="18.0564%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (13 samples, 0.03%)</title><rect x="17.9222%" y="933" width="0.0342%" height="15" fill="rgb(239,186,37)" fg:x="6809" fg:w="13"/><text x="18.1722%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (13 samples, 0.03%)</title><rect x="17.9222%" y="917" width="0.0342%" height="15" fill="rgb(252,136,39)" fg:x="6809" fg:w="13"/><text x="18.1722%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (10 samples, 0.03%)</title><rect x="17.9564%" y="949" width="0.0263%" height="15" fill="rgb(223,213,32)" fg:x="6822" fg:w="10"/><text x="18.2064%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (8 samples, 0.02%)</title><rect x="17.9617%" y="933" width="0.0211%" height="15" fill="rgb(233,115,5)" fg:x="6824" fg:w="8"/><text x="18.2117%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (8 samples, 0.02%)</title><rect x="17.9617%" y="917" width="0.0211%" height="15" fill="rgb(207,226,44)" fg:x="6824" fg:w="8"/><text x="18.2117%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (79 samples, 0.21%)</title><rect x="17.7853%" y="965" width="0.2079%" height="15" fill="rgb(208,126,0)" fg:x="6757" fg:w="79"/><text x="18.0353%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (4 samples, 0.01%)</title><rect x="17.9827%" y="949" width="0.0105%" height="15" fill="rgb(244,66,21)" fg:x="6832" fg:w="4"/><text x="18.2327%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (4 samples, 0.01%)</title><rect x="17.9827%" y="933" width="0.0105%" height="15" fill="rgb(222,97,12)" fg:x="6832" fg:w="4"/><text x="18.2327%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (244 samples, 0.64%)</title><rect x="17.3694%" y="981" width="0.6422%" height="15" fill="rgb(219,213,19)" fg:x="6599" fg:w="244"/><text x="17.6194%" y="991.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (7 samples, 0.02%)</title><rect x="17.9933%" y="965" width="0.0184%" height="15" fill="rgb(252,169,30)" fg:x="6836" fg:w="7"/><text x="18.2433%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.02%)</title><rect x="17.9933%" y="949" width="0.0184%" height="15" fill="rgb(206,32,51)" fg:x="6836" fg:w="7"/><text x="18.2433%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (12 samples, 0.03%)</title><rect x="18.0117%" y="981" width="0.0316%" height="15" fill="rgb(250,172,42)" fg:x="6843" fg:w="12"/><text x="18.2617%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (266 samples, 0.70%)</title><rect x="17.3537%" y="997" width="0.7001%" height="15" fill="rgb(209,34,43)" fg:x="6593" fg:w="266"/><text x="17.6037%" y="1007.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (4 samples, 0.01%)</title><rect x="18.0433%" y="981" width="0.0105%" height="15" fill="rgb(223,11,35)" fg:x="6855" fg:w="4"/><text x="18.2933%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.04%)</title><rect x="18.0538%" y="981" width="0.0368%" height="15" fill="rgb(251,219,26)" fg:x="6859" fg:w="14"/><text x="18.3038%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.06%)</title><rect x="18.2538%" y="965" width="0.0632%" height="15" fill="rgb(231,119,3)" fg:x="6935" fg:w="24"/><text x="18.5038%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.06%)</title><rect x="18.2538%" y="949" width="0.0632%" height="15" fill="rgb(216,97,11)" fg:x="6935" fg:w="24"/><text x="18.5038%" y="959.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="18.2802%" y="933" width="0.0368%" height="15" fill="rgb(223,59,9)" fg:x="6945" fg:w="14"/><text x="18.5302%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (50 samples, 0.13%)</title><rect x="18.3223%" y="949" width="0.1316%" height="15" fill="rgb(233,93,31)" fg:x="6961" fg:w="50"/><text x="18.5723%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (5 samples, 0.01%)</title><rect x="18.4407%" y="933" width="0.0132%" height="15" fill="rgb(239,81,33)" fg:x="7006" fg:w="5"/><text x="18.6907%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (5 samples, 0.01%)</title><rect x="18.4407%" y="917" width="0.0132%" height="15" fill="rgb(213,120,34)" fg:x="7006" fg:w="5"/><text x="18.6907%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (57 samples, 0.15%)</title><rect x="18.3170%" y="965" width="0.1500%" height="15" fill="rgb(243,49,53)" fg:x="6959" fg:w="57"/><text x="18.5670%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (9 samples, 0.02%)</title><rect x="18.4670%" y="949" width="0.0237%" height="15" fill="rgb(247,216,33)" fg:x="7016" fg:w="9"/><text x="18.7170%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.02%)</title><rect x="18.4670%" y="933" width="0.0237%" height="15" fill="rgb(226,26,14)" fg:x="7016" fg:w="9"/><text x="18.7170%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (168 samples, 0.44%)</title><rect x="18.0538%" y="997" width="0.4422%" height="15" fill="rgb(215,49,53)" fg:x="6859" fg:w="168"/><text x="18.3038%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (154 samples, 0.41%)</title><rect x="18.0907%" y="981" width="0.4053%" height="15" fill="rgb(245,162,40)" fg:x="6873" fg:w="154"/><text x="18.3407%" y="991.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (11 samples, 0.03%)</title><rect x="18.4670%" y="965" width="0.0290%" height="15" fill="rgb(229,68,17)" fg:x="7016" fg:w="11"/><text x="18.7170%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (2,184 samples, 5.75%)</title><rect x="12.7816%" y="1157" width="5.7486%" height="15" fill="rgb(213,182,10)" fg:x="4856" fg:w="2184"/><text x="13.0316%" y="1167.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2,184 samples, 5.75%)</title><rect x="12.7816%" y="1141" width="5.7486%" height="15" fill="rgb(245,125,30)" fg:x="4856" fg:w="2184"/><text x="13.0316%" y="1151.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2,184 samples, 5.75%)</title><rect x="12.7816%" y="1125" width="5.7486%" height="15" fill="rgb(232,202,2)" fg:x="4856" fg:w="2184"/><text x="13.0316%" y="1135.50">core::i..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,254 samples, 3.30%)</title><rect x="15.2295%" y="1109" width="3.3007%" height="15" fill="rgb(237,140,51)" fg:x="5786" fg:w="1254"/><text x="15.4795%" y="1119.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,254 samples, 3.30%)</title><rect x="15.2295%" y="1093" width="3.3007%" height="15" fill="rgb(236,157,25)" fg:x="5786" fg:w="1254"/><text x="15.4795%" y="1103.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,254 samples, 3.30%)</title><rect x="15.2295%" y="1077" width="3.3007%" height="15" fill="rgb(219,209,0)" fg:x="5786" fg:w="1254"/><text x="15.4795%" y="1087.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1,242 samples, 3.27%)</title><rect x="15.2611%" y="1061" width="3.2691%" height="15" fill="rgb(240,116,54)" fg:x="5798" fg:w="1242"/><text x="15.5111%" y="1071.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,242 samples, 3.27%)</title><rect x="15.2611%" y="1045" width="3.2691%" height="15" fill="rgb(216,10,36)" fg:x="5798" fg:w="1242"/><text x="15.5111%" y="1055.50">cor..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1,240 samples, 3.26%)</title><rect x="15.2664%" y="1029" width="3.2638%" height="15" fill="rgb(222,72,44)" fg:x="5800" fg:w="1240"/><text x="15.5164%" y="1039.50">tok..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,224 samples, 3.22%)</title><rect x="15.3085%" y="1013" width="3.2217%" height="15" fill="rgb(232,159,9)" fg:x="5816" fg:w="1224"/><text x="15.5585%" y="1023.50">tok..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (10 samples, 0.03%)</title><rect x="18.5039%" y="997" width="0.0263%" height="15" fill="rgb(210,39,32)" fg:x="7030" fg:w="10"/><text x="18.7539%" y="1007.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (2,188 samples, 5.76%)</title><rect x="12.7790%" y="1173" width="5.7591%" height="15" fill="rgb(216,194,45)" fg:x="4855" fg:w="2188"/><text x="13.0290%" y="1183.50">tokio::..</text></g><g><title>core::time::Duration::as_millis (7 samples, 0.02%)</title><rect x="18.5486%" y="1141" width="0.0184%" height="15" fill="rgb(218,18,35)" fg:x="7047" fg:w="7"/><text x="18.7986%" y="1151.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (20 samples, 0.05%)</title><rect x="18.5381%" y="1157" width="0.0526%" height="15" fill="rgb(207,83,51)" fg:x="7043" fg:w="20"/><text x="18.7881%" y="1167.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (9 samples, 0.02%)</title><rect x="18.5671%" y="1141" width="0.0237%" height="15" fill="rgb(225,63,43)" fg:x="7054" fg:w="9"/><text x="18.8171%" y="1151.50"></text></g><g><title>std::time::Instant::duration_since (9 samples, 0.02%)</title><rect x="18.5671%" y="1125" width="0.0237%" height="15" fill="rgb(207,57,36)" fg:x="7054" fg:w="9"/><text x="18.8171%" y="1135.50"></text></g><g><title>std::time::Instant::checked_duration_since (9 samples, 0.02%)</title><rect x="18.5671%" y="1109" width="0.0237%" height="15" fill="rgb(216,99,33)" fg:x="7054" fg:w="9"/><text x="18.8171%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (9 samples, 0.02%)</title><rect x="18.5671%" y="1093" width="0.0237%" height="15" fill="rgb(225,42,16)" fg:x="7054" fg:w="9"/><text x="18.8171%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (9 samples, 0.02%)</title><rect x="18.5671%" y="1077" width="0.0237%" height="15" fill="rgb(220,201,45)" fg:x="7054" fg:w="9"/><text x="18.8171%" y="1087.50"></text></g><g><title>clock_gettime (192 samples, 0.51%)</title><rect x="18.6144%" y="1109" width="0.5054%" height="15" fill="rgb(225,33,4)" fg:x="7072" fg:w="192"/><text x="18.8644%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (113 samples, 0.30%)</title><rect x="18.8224%" y="1093" width="0.2974%" height="15" fill="rgb(224,33,50)" fg:x="7151" fg:w="113"/><text x="19.0724%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (2,451 samples, 6.45%)</title><rect x="12.6737%" y="1189" width="6.4514%" height="15" fill="rgb(246,198,51)" fg:x="4815" fg:w="2451"/><text x="12.9237%" y="1199.50">tokio::r..</text></g><g><title>tokio::runtime::time::source::TimeSource::now (223 samples, 0.59%)</title><rect x="18.5381%" y="1173" width="0.5870%" height="15" fill="rgb(205,22,4)" fg:x="7043" fg:w="223"/><text x="18.7881%" y="1183.50"></text></g><g><title>tokio::time::clock::Clock::now (203 samples, 0.53%)</title><rect x="18.5908%" y="1157" width="0.5343%" height="15" fill="rgb(206,3,8)" fg:x="7063" fg:w="203"/><text x="18.8408%" y="1167.50"></text></g><g><title>tokio::time::clock::now (203 samples, 0.53%)</title><rect x="18.5908%" y="1141" width="0.5343%" height="15" fill="rgb(251,23,15)" fg:x="7063" fg:w="203"/><text x="18.8408%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (203 samples, 0.53%)</title><rect x="18.5908%" y="1125" width="0.5343%" height="15" fill="rgb(252,88,28)" fg:x="7063" fg:w="203"/><text x="18.8408%" y="1135.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="19.1409%" y="1157" width="0.0211%" height="15" fill="rgb(212,127,14)" fg:x="7272" fg:w="8"/><text x="19.3909%" y="1167.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (16 samples, 0.04%)</title><rect x="19.1382%" y="1173" width="0.0421%" height="15" fill="rgb(247,145,37)" fg:x="7271" fg:w="16"/><text x="19.3882%" y="1183.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (5 samples, 0.01%)</title><rect x="19.1672%" y="1157" width="0.0132%" height="15" fill="rgb(209,117,53)" fg:x="7282" fg:w="5"/><text x="19.4172%" y="1167.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.01%)</title><rect x="19.1672%" y="1141" width="0.0132%" height="15" fill="rgb(212,90,42)" fg:x="7282" fg:w="5"/><text x="19.4172%" y="1151.50"></text></g><g><title>std::time::Instant::checked_duration_since (5 samples, 0.01%)</title><rect x="19.1672%" y="1125" width="0.0132%" height="15" fill="rgb(218,164,37)" fg:x="7282" fg:w="5"/><text x="19.4172%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (5 samples, 0.01%)</title><rect x="19.1672%" y="1109" width="0.0132%" height="15" fill="rgb(246,65,34)" fg:x="7282" fg:w="5"/><text x="19.4172%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (5 samples, 0.01%)</title><rect x="19.1672%" y="1093" width="0.0132%" height="15" fill="rgb(231,100,33)" fg:x="7282" fg:w="5"/><text x="19.4172%" y="1103.50"></text></g><g><title>clock_gettime (72 samples, 0.19%)</title><rect x="19.1883%" y="1125" width="0.1895%" height="15" fill="rgb(228,126,14)" fg:x="7290" fg:w="72"/><text x="19.4383%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (68 samples, 0.18%)</title><rect x="19.1988%" y="1109" width="0.1790%" height="15" fill="rgb(215,173,21)" fg:x="7294" fg:w="68"/><text x="19.4488%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (76 samples, 0.20%)</title><rect x="19.1804%" y="1141" width="0.2000%" height="15" fill="rgb(210,6,40)" fg:x="7287" fg:w="76"/><text x="19.4304%" y="1151.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (94 samples, 0.25%)</title><rect x="19.1382%" y="1189" width="0.2474%" height="15" fill="rgb(212,48,18)" fg:x="7271" fg:w="94"/><text x="19.3882%" y="1199.50"></text></g><g><title>tokio::time::clock::Clock::now (78 samples, 0.21%)</title><rect x="19.1804%" y="1173" width="0.2053%" height="15" fill="rgb(230,214,11)" fg:x="7287" fg:w="78"/><text x="19.4304%" y="1183.50"></text></g><g><title>tokio::time::clock::now (78 samples, 0.21%)</title><rect x="19.1804%" y="1157" width="0.2053%" height="15" fill="rgb(254,105,39)" fg:x="7287" fg:w="78"/><text x="19.4304%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (4,415 samples, 11.62%)</title><rect x="7.7858%" y="1221" width="11.6209%" height="15" fill="rgb(245,158,5)" fg:x="2958" fg:w="4415"/><text x="8.0358%" y="1231.50">tokio::runtime::s..</text></g><g><title>tokio::runtime::time::Driver::park_internal (4,269 samples, 11.24%)</title><rect x="8.1701%" y="1205" width="11.2366%" height="15" fill="rgb(249,208,11)" fg:x="3104" fg:w="4269"/><text x="8.4201%" y="1215.50">tokio::runtime::t..</text></g><g><title>tokio::runtime::time::source::TimeSource::tick_to_duration (8 samples, 0.02%)</title><rect x="19.3857%" y="1189" width="0.0211%" height="15" fill="rgb(210,39,28)" fg:x="7365" fg:w="8"/><text x="19.6357%" y="1199.50"></text></g><g><title>core::time::Duration::from_millis (8 samples, 0.02%)</title><rect x="19.3857%" y="1173" width="0.0211%" height="15" fill="rgb(211,56,53)" fg:x="7365" fg:w="8"/><text x="19.6357%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (4,750 samples, 12.50%)</title><rect x="6.9909%" y="1253" width="12.5026%" height="15" fill="rgb(226,201,30)" fg:x="2656" fg:w="4750"/><text x="7.2409%" y="1263.50">tokio::runtime::sch..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (4,750 samples, 12.50%)</title><rect x="6.9909%" y="1237" width="12.5026%" height="15" fill="rgb(239,101,34)" fg:x="2656" fg:w="4750"/><text x="7.2409%" y="1247.50">tokio::runtime::sch..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (33 samples, 0.09%)</title><rect x="19.4067%" y="1221" width="0.0869%" height="15" fill="rgb(226,209,5)" fg:x="7373" fg:w="33"/><text x="19.6567%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (33 samples, 0.09%)</title><rect x="19.4067%" y="1205" width="0.0869%" height="15" fill="rgb(250,105,47)" fg:x="7373" fg:w="33"/><text x="19.6567%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.09%)</title><rect x="19.4067%" y="1189" width="0.0869%" height="15" fill="rgb(230,72,3)" fg:x="7373" fg:w="33"/><text x="19.6567%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (4,829 samples, 12.71%)</title><rect x="6.8304%" y="1269" width="12.7106%" height="15" fill="rgb(232,218,39)" fg:x="2595" fg:w="4829"/><text x="7.0804%" y="1279.50">tokio::runtime::sch..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (16 samples, 0.04%)</title><rect x="19.4988%" y="1253" width="0.0421%" height="15" fill="rgb(248,166,6)" fg:x="7408" fg:w="16"/><text x="19.7488%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (10 samples, 0.03%)</title><rect x="19.5146%" y="1237" width="0.0263%" height="15" fill="rgb(247,89,20)" fg:x="7414" fg:w="10"/><text x="19.7646%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (10 samples, 0.03%)</title><rect x="19.5146%" y="1221" width="0.0263%" height="15" fill="rgb(248,130,54)" fg:x="7414" fg:w="10"/><text x="19.7646%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (10 samples, 0.03%)</title><rect x="19.5146%" y="1205" width="0.0263%" height="15" fill="rgb(234,196,4)" fg:x="7414" fg:w="10"/><text x="19.7646%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.03%)</title><rect x="19.5146%" y="1189" width="0.0263%" height="15" fill="rgb(250,143,31)" fg:x="7414" fg:w="10"/><text x="19.7646%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (27 samples, 0.07%)</title><rect x="19.7147%" y="1253" width="0.0711%" height="15" fill="rgb(211,110,34)" fg:x="7490" fg:w="27"/><text x="19.9647%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (27 samples, 0.07%)</title><rect x="19.7147%" y="1237" width="0.0711%" height="15" fill="rgb(215,124,48)" fg:x="7490" fg:w="27"/><text x="19.9647%" y="1247.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.07%)</title><rect x="19.7147%" y="1221" width="0.0711%" height="15" fill="rgb(216,46,13)" fg:x="7490" fg:w="27"/><text x="19.9647%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (27 samples, 0.07%)</title><rect x="19.7147%" y="1205" width="0.0711%" height="15" fill="rgb(205,184,25)" fg:x="7490" fg:w="27"/><text x="19.9647%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (25 samples, 0.07%)</title><rect x="19.7199%" y="1189" width="0.0658%" height="15" fill="rgb(228,1,10)" fg:x="7492" fg:w="25"/><text x="19.9699%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.07%)</title><rect x="19.7199%" y="1173" width="0.0658%" height="15" fill="rgb(213,116,27)" fg:x="7492" fg:w="25"/><text x="19.9699%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (32 samples, 0.08%)</title><rect x="19.7857%" y="1253" width="0.0842%" height="15" fill="rgb(241,95,50)" fg:x="7517" fg:w="32"/><text x="20.0357%" y="1263.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (32 samples, 0.08%)</title><rect x="19.7857%" y="1237" width="0.0842%" height="15" fill="rgb(238,48,32)" fg:x="7517" fg:w="32"/><text x="20.0357%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (32 samples, 0.08%)</title><rect x="19.7857%" y="1221" width="0.0842%" height="15" fill="rgb(235,113,49)" fg:x="7517" fg:w="32"/><text x="20.0357%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (30 samples, 0.08%)</title><rect x="19.7910%" y="1205" width="0.0790%" height="15" fill="rgb(205,127,43)" fg:x="7519" fg:w="30"/><text x="20.0410%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.08%)</title><rect x="19.7910%" y="1189" width="0.0790%" height="15" fill="rgb(250,162,2)" fg:x="7519" fg:w="30"/><text x="20.0410%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (131 samples, 0.34%)</title><rect x="19.5410%" y="1269" width="0.3448%" height="15" fill="rgb(220,13,41)" fg:x="7424" fg:w="131"/><text x="19.7910%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_closed (6 samples, 0.02%)</title><rect x="19.8700%" y="1253" width="0.0158%" height="15" fill="rgb(249,221,25)" fg:x="7549" fg:w="6"/><text x="20.1200%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (22 samples, 0.06%)</title><rect x="19.9147%" y="1237" width="0.0579%" height="15" fill="rgb(215,208,19)" fg:x="7566" fg:w="22"/><text x="20.1647%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (22 samples, 0.06%)</title><rect x="19.9147%" y="1221" width="0.0579%" height="15" fill="rgb(236,175,2)" fg:x="7566" fg:w="22"/><text x="20.1647%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.06%)</title><rect x="19.9147%" y="1205" width="0.0579%" height="15" fill="rgb(241,52,2)" fg:x="7566" fg:w="22"/><text x="20.1647%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (22 samples, 0.06%)</title><rect x="19.9147%" y="1189" width="0.0579%" height="15" fill="rgb(248,140,14)" fg:x="7566" fg:w="22"/><text x="20.1647%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (22 samples, 0.06%)</title><rect x="19.9147%" y="1173" width="0.0579%" height="15" fill="rgb(253,22,42)" fg:x="7566" fg:w="22"/><text x="20.1647%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.06%)</title><rect x="19.9147%" y="1157" width="0.0579%" height="15" fill="rgb(234,61,47)" fg:x="7566" fg:w="22"/><text x="20.1647%" y="1167.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (12 samples, 0.03%)</title><rect x="20.0042%" y="1189" width="0.0316%" height="15" fill="rgb(208,226,15)" fg:x="7600" fg:w="12"/><text x="20.2542%" y="1199.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (12 samples, 0.03%)</title><rect x="20.0042%" y="1173" width="0.0316%" height="15" fill="rgb(217,221,4)" fg:x="7600" fg:w="12"/><text x="20.2542%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (33 samples, 0.09%)</title><rect x="19.9726%" y="1237" width="0.0869%" height="15" fill="rgb(212,174,34)" fg:x="7588" fg:w="33"/><text x="20.2226%" y="1247.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (33 samples, 0.09%)</title><rect x="19.9726%" y="1221" width="0.0869%" height="15" fill="rgb(253,83,4)" fg:x="7588" fg:w="33"/><text x="20.2226%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (33 samples, 0.09%)</title><rect x="19.9726%" y="1205" width="0.0869%" height="15" fill="rgb(250,195,49)" fg:x="7588" fg:w="33"/><text x="20.2226%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="20.0358%" y="1189" width="0.0237%" height="15" fill="rgb(241,192,25)" fg:x="7612" fg:w="9"/><text x="20.2858%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (73 samples, 0.19%)</title><rect x="19.9068%" y="1253" width="0.1921%" height="15" fill="rgb(208,124,10)" fg:x="7563" fg:w="73"/><text x="20.1568%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (15 samples, 0.04%)</title><rect x="20.0595%" y="1237" width="0.0395%" height="15" fill="rgb(222,33,0)" fg:x="7621" fg:w="15"/><text x="20.3095%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (15 samples, 0.04%)</title><rect x="20.0595%" y="1221" width="0.0395%" height="15" fill="rgb(234,209,28)" fg:x="7621" fg:w="15"/><text x="20.3095%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15 samples, 0.04%)</title><rect x="20.0595%" y="1205" width="0.0395%" height="15" fill="rgb(224,11,23)" fg:x="7621" fg:w="15"/><text x="20.3095%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (15 samples, 0.04%)</title><rect x="20.0595%" y="1189" width="0.0395%" height="15" fill="rgb(232,99,1)" fg:x="7621" fg:w="15"/><text x="20.3095%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.04%)</title><rect x="20.0595%" y="1173" width="0.0395%" height="15" fill="rgb(237,95,45)" fg:x="7621" fg:w="15"/><text x="20.3095%" y="1183.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="20.1121%" y="1237" width="0.0158%" height="15" fill="rgb(208,109,11)" fg:x="7641" fg:w="6"/><text x="20.3621%" y="1247.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="20.1121%" y="1221" width="0.0158%" height="15" fill="rgb(216,190,48)" fg:x="7641" fg:w="6"/><text x="20.3621%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.01%)</title><rect x="20.1148%" y="1205" width="0.0132%" height="15" fill="rgb(251,171,36)" fg:x="7642" fg:w="5"/><text x="20.3648%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (6 samples, 0.02%)</title><rect x="20.1279%" y="1237" width="0.0158%" height="15" fill="rgb(230,62,22)" fg:x="7647" fg:w="6"/><text x="20.3779%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (6 samples, 0.02%)</title><rect x="20.1279%" y="1221" width="0.0158%" height="15" fill="rgb(225,114,35)" fg:x="7647" fg:w="6"/><text x="20.3779%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="20.1279%" y="1205" width="0.0158%" height="15" fill="rgb(215,118,42)" fg:x="7647" fg:w="6"/><text x="20.3779%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.02%)</title><rect x="20.1279%" y="1189" width="0.0158%" height="15" fill="rgb(243,119,21)" fg:x="7647" fg:w="6"/><text x="20.3779%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.02%)</title><rect x="20.1279%" y="1173" width="0.0158%" height="15" fill="rgb(252,177,53)" fg:x="7647" fg:w="6"/><text x="20.3779%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="20.1279%" y="1157" width="0.0158%" height="15" fill="rgb(237,209,29)" fg:x="7647" fg:w="6"/><text x="20.3779%" y="1167.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="20.1437%" y="1237" width="0.0105%" height="15" fill="rgb(212,65,23)" fg:x="7653" fg:w="4"/><text x="20.3937%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.01%)</title><rect x="20.1437%" y="1221" width="0.0105%" height="15" fill="rgb(230,222,46)" fg:x="7653" fg:w="4"/><text x="20.3937%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.01%)</title><rect x="20.1437%" y="1205" width="0.0105%" height="15" fill="rgb(215,135,32)" fg:x="7653" fg:w="4"/><text x="20.3937%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (105 samples, 0.28%)</title><rect x="19.8858%" y="1269" width="0.2764%" height="15" fill="rgb(246,101,22)" fg:x="7555" fg:w="105"/><text x="20.1358%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (24 samples, 0.06%)</title><rect x="20.0990%" y="1253" width="0.0632%" height="15" fill="rgb(206,107,13)" fg:x="7636" fg:w="24"/><text x="20.3490%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (39 samples, 0.10%)</title><rect x="20.1806%" y="1237" width="0.1027%" height="15" fill="rgb(250,100,44)" fg:x="7667" fg:w="39"/><text x="20.4306%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (39 samples, 0.10%)</title><rect x="20.1806%" y="1221" width="0.1027%" height="15" fill="rgb(231,147,38)" fg:x="7667" fg:w="39"/><text x="20.4306%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.10%)</title><rect x="20.1806%" y="1205" width="0.1027%" height="15" fill="rgb(229,8,40)" fg:x="7667" fg:w="39"/><text x="20.4306%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (39 samples, 0.10%)</title><rect x="20.1806%" y="1189" width="0.1027%" height="15" fill="rgb(221,135,30)" fg:x="7667" fg:w="39"/><text x="20.4306%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (38 samples, 0.10%)</title><rect x="20.1832%" y="1173" width="0.1000%" height="15" fill="rgb(249,193,18)" fg:x="7668" fg:w="38"/><text x="20.4332%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.10%)</title><rect x="20.1832%" y="1157" width="0.1000%" height="15" fill="rgb(209,133,39)" fg:x="7668" fg:w="38"/><text x="20.4332%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.02%)</title><rect x="20.2832%" y="1189" width="0.0184%" height="15" fill="rgb(232,100,14)" fg:x="7706" fg:w="7"/><text x="20.5332%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.02%)</title><rect x="20.2832%" y="1173" width="0.0184%" height="15" fill="rgb(224,185,1)" fg:x="7706" fg:w="7"/><text x="20.5332%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (9 samples, 0.02%)</title><rect x="20.2832%" y="1237" width="0.0237%" height="15" fill="rgb(223,139,8)" fg:x="7706" fg:w="9"/><text x="20.5332%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (9 samples, 0.02%)</title><rect x="20.2832%" y="1221" width="0.0237%" height="15" fill="rgb(232,213,38)" fg:x="7706" fg:w="9"/><text x="20.5332%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (9 samples, 0.02%)</title><rect x="20.2832%" y="1205" width="0.0237%" height="15" fill="rgb(207,94,22)" fg:x="7706" fg:w="9"/><text x="20.5332%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (61 samples, 0.16%)</title><rect x="20.1779%" y="1253" width="0.1606%" height="15" fill="rgb(219,183,54)" fg:x="7666" fg:w="61"/><text x="20.4279%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (12 samples, 0.03%)</title><rect x="20.3069%" y="1237" width="0.0316%" height="15" fill="rgb(216,185,54)" fg:x="7715" fg:w="12"/><text x="20.5569%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.02%)</title><rect x="20.3148%" y="1221" width="0.0237%" height="15" fill="rgb(254,217,39)" fg:x="7718" fg:w="9"/><text x="20.5648%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="20.3148%" y="1205" width="0.0237%" height="15" fill="rgb(240,178,23)" fg:x="7718" fg:w="9"/><text x="20.5648%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="20.3622%" y="1221" width="0.0158%" height="15" fill="rgb(218,11,47)" fg:x="7736" fg:w="6"/><text x="20.6122%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (6 samples, 0.02%)</title><rect x="20.3622%" y="1205" width="0.0158%" height="15" fill="rgb(218,51,51)" fg:x="7736" fg:w="6"/><text x="20.6122%" y="1215.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.02%)</title><rect x="20.3622%" y="1189" width="0.0158%" height="15" fill="rgb(238,126,27)" fg:x="7736" fg:w="6"/><text x="20.6122%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (19 samples, 0.05%)</title><rect x="20.3385%" y="1253" width="0.0500%" height="15" fill="rgb(249,202,22)" fg:x="7727" fg:w="19"/><text x="20.5885%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (10 samples, 0.03%)</title><rect x="20.3622%" y="1237" width="0.0263%" height="15" fill="rgb(254,195,49)" fg:x="7736" fg:w="10"/><text x="20.6122%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (4 samples, 0.01%)</title><rect x="20.3780%" y="1221" width="0.0105%" height="15" fill="rgb(208,123,14)" fg:x="7742" fg:w="4"/><text x="20.6280%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (4 samples, 0.01%)</title><rect x="20.3780%" y="1205" width="0.0105%" height="15" fill="rgb(224,200,8)" fg:x="7742" fg:w="4"/><text x="20.6280%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (5,237 samples, 13.78%)</title><rect x="6.6067%" y="1285" width="13.7845%" height="15" fill="rgb(217,61,36)" fg:x="2510" fg:w="5237"/><text x="6.8567%" y="1295.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (87 samples, 0.23%)</title><rect x="20.1621%" y="1269" width="0.2290%" height="15" fill="rgb(206,35,45)" fg:x="7660" fg:w="87"/><text x="20.4121%" y="1279.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (15 samples, 0.04%)</title><rect x="20.4306%" y="1221" width="0.0395%" height="15" fill="rgb(217,65,33)" fg:x="7762" fg:w="15"/><text x="20.6806%" y="1231.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (15 samples, 0.04%)</title><rect x="20.4306%" y="1205" width="0.0395%" height="15" fill="rgb(222,158,48)" fg:x="7762" fg:w="15"/><text x="20.6806%" y="1215.50"></text></g><g><title>core::cell::BorrowRefMut::new (15 samples, 0.04%)</title><rect x="20.4306%" y="1189" width="0.0395%" height="15" fill="rgb(254,2,54)" fg:x="7762" fg:w="15"/><text x="20.6806%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (8 samples, 0.02%)</title><rect x="20.4701%" y="1221" width="0.0211%" height="15" fill="rgb(250,143,38)" fg:x="7777" fg:w="8"/><text x="20.7201%" y="1231.50"></text></g><g><title>core::mem::replace (8 samples, 0.02%)</title><rect x="20.4701%" y="1205" width="0.0211%" height="15" fill="rgb(248,25,0)" fg:x="7777" fg:w="8"/><text x="20.7201%" y="1215.50"></text></g><g><title>core::ptr::read (8 samples, 0.02%)</title><rect x="20.4701%" y="1189" width="0.0211%" height="15" fill="rgb(206,152,27)" fg:x="7777" fg:w="8"/><text x="20.7201%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (9 samples, 0.02%)</title><rect x="20.4964%" y="1221" width="0.0237%" height="15" fill="rgb(240,77,30)" fg:x="7787" fg:w="9"/><text x="20.7464%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.04%)</title><rect x="20.5701%" y="1093" width="0.0447%" height="15" fill="rgb(231,5,3)" fg:x="7815" fg:w="17"/><text x="20.8201%" y="1103.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (16 samples, 0.04%)</title><rect x="20.5728%" y="1077" width="0.0421%" height="15" fill="rgb(207,226,32)" fg:x="7816" fg:w="16"/><text x="20.8228%" y="1087.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (10 samples, 0.03%)</title><rect x="20.5885%" y="1061" width="0.0263%" height="15" fill="rgb(222,207,47)" fg:x="7822" fg:w="10"/><text x="20.8385%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (10 samples, 0.03%)</title><rect x="20.5885%" y="1045" width="0.0263%" height="15" fill="rgb(229,115,45)" fg:x="7822" fg:w="10"/><text x="20.8385%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="20.6175%" y="1077" width="0.0132%" height="15" fill="rgb(224,191,6)" fg:x="7833" fg:w="5"/><text x="20.8675%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="20.6175%" y="1061" width="0.0132%" height="15" fill="rgb(230,227,24)" fg:x="7833" fg:w="5"/><text x="20.8675%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="20.6175%" y="1045" width="0.0132%" height="15" fill="rgb(228,80,19)" fg:x="7833" fg:w="5"/><text x="20.8675%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (30 samples, 0.08%)</title><rect x="20.6543%" y="1029" width="0.0790%" height="15" fill="rgb(247,229,0)" fg:x="7847" fg:w="30"/><text x="20.9043%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.08%)</title><rect x="20.6543%" y="1013" width="0.0790%" height="15" fill="rgb(237,194,15)" fg:x="7847" fg:w="30"/><text x="20.9043%" y="1023.50"></text></g><g><title>clock_gettime (33 samples, 0.09%)</title><rect x="20.7438%" y="997" width="0.0869%" height="15" fill="rgb(219,203,20)" fg:x="7881" fg:w="33"/><text x="20.9938%" y="1007.50"></text></g><g><title>__vdso_clock_gettime (8 samples, 0.02%)</title><rect x="20.8096%" y="981" width="0.0211%" height="15" fill="rgb(234,128,8)" fg:x="7906" fg:w="8"/><text x="21.0596%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (38 samples, 0.10%)</title><rect x="20.7333%" y="1029" width="0.1000%" height="15" fill="rgb(248,202,8)" fg:x="7877" fg:w="38"/><text x="20.9833%" y="1039.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (38 samples, 0.10%)</title><rect x="20.7333%" y="1013" width="0.1000%" height="15" fill="rgb(206,104,37)" fg:x="7877" fg:w="38"/><text x="20.9833%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::hash (7 samples, 0.02%)</title><rect x="20.8465%" y="1013" width="0.0184%" height="15" fill="rgb(223,8,27)" fg:x="7920" fg:w="7"/><text x="21.0965%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (24 samples, 0.06%)</title><rect x="20.8333%" y="1029" width="0.0632%" height="15" fill="rgb(216,217,28)" fg:x="7915" fg:w="24"/><text x="21.0833%" y="1039.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (12 samples, 0.03%)</title><rect x="20.8649%" y="1013" width="0.0316%" height="15" fill="rgb(249,199,1)" fg:x="7927" fg:w="12"/><text x="21.1149%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (12 samples, 0.03%)</title><rect x="20.8649%" y="997" width="0.0316%" height="15" fill="rgb(240,85,17)" fg:x="7927" fg:w="12"/><text x="21.1149%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.03%)</title><rect x="20.8649%" y="981" width="0.0316%" height="15" fill="rgb(206,108,45)" fg:x="7927" fg:w="12"/><text x="21.1149%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (101 samples, 0.27%)</title><rect x="20.6386%" y="1061" width="0.2658%" height="15" fill="rgb(245,210,41)" fg:x="7841" fg:w="101"/><text x="20.8886%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (101 samples, 0.27%)</title><rect x="20.6386%" y="1045" width="0.2658%" height="15" fill="rgb(206,13,37)" fg:x="7841" fg:w="101"/><text x="20.8886%" y="1055.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="20.9044%" y="1061" width="0.0132%" height="15" fill="rgb(250,61,18)" fg:x="7942" fg:w="5"/><text x="21.1544%" y="1071.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="20.9439%" y="933" width="0.0132%" height="15" fill="rgb(235,172,48)" fg:x="7957" fg:w="5"/><text x="21.1939%" y="943.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (17 samples, 0.04%)</title><rect x="20.9176%" y="1061" width="0.0447%" height="15" fill="rgb(249,201,17)" fg:x="7947" fg:w="17"/><text x="21.1676%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (16 samples, 0.04%)</title><rect x="20.9202%" y="1045" width="0.0421%" height="15" fill="rgb(219,208,6)" fg:x="7948" fg:w="16"/><text x="21.1702%" y="1055.50"></text></g><g><title>mio::waker::Waker::wake (16 samples, 0.04%)</title><rect x="20.9202%" y="1029" width="0.0421%" height="15" fill="rgb(248,31,23)" fg:x="7948" fg:w="16"/><text x="21.1702%" y="1039.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (16 samples, 0.04%)</title><rect x="20.9202%" y="1013" width="0.0421%" height="15" fill="rgb(245,15,42)" fg:x="7948" fg:w="16"/><text x="21.1702%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (16 samples, 0.04%)</title><rect x="20.9202%" y="997" width="0.0421%" height="15" fill="rgb(222,217,39)" fg:x="7948" fg:w="16"/><text x="21.1702%" y="1007.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (16 samples, 0.04%)</title><rect x="20.9202%" y="981" width="0.0421%" height="15" fill="rgb(210,219,27)" fg:x="7948" fg:w="16"/><text x="21.1702%" y="991.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (16 samples, 0.04%)</title><rect x="20.9202%" y="965" width="0.0421%" height="15" fill="rgb(252,166,36)" fg:x="7948" fg:w="16"/><text x="21.1702%" y="975.50"></text></g><g><title>write (16 samples, 0.04%)</title><rect x="20.9202%" y="949" width="0.0421%" height="15" fill="rgb(245,132,34)" fg:x="7948" fg:w="16"/><text x="21.1702%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (11 samples, 0.03%)</title><rect x="21.0018%" y="1029" width="0.0290%" height="15" fill="rgb(236,54,3)" fg:x="7979" fg:w="11"/><text x="21.2518%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.03%)</title><rect x="21.0018%" y="1013" width="0.0290%" height="15" fill="rgb(241,173,43)" fg:x="7979" fg:w="11"/><text x="21.2518%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (29 samples, 0.08%)</title><rect x="20.9623%" y="1061" width="0.0763%" height="15" fill="rgb(215,190,9)" fg:x="7964" fg:w="29"/><text x="21.2123%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (29 samples, 0.08%)</title><rect x="20.9623%" y="1045" width="0.0763%" height="15" fill="rgb(242,101,16)" fg:x="7964" fg:w="29"/><text x="21.2123%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (9 samples, 0.02%)</title><rect x="21.0439%" y="1045" width="0.0237%" height="15" fill="rgb(223,190,21)" fg:x="7995" fg:w="9"/><text x="21.2939%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="21.0439%" y="1029" width="0.0237%" height="15" fill="rgb(215,228,25)" fg:x="7995" fg:w="9"/><text x="21.2939%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (13 samples, 0.03%)</title><rect x="21.0386%" y="1061" width="0.0342%" height="15" fill="rgb(225,36,22)" fg:x="7993" fg:w="13"/><text x="21.2886%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (9 samples, 0.02%)</title><rect x="21.0965%" y="1029" width="0.0237%" height="15" fill="rgb(251,106,46)" fg:x="8015" fg:w="9"/><text x="21.3465%" y="1039.50"></text></g><g><title>core::ptr::read (9 samples, 0.02%)</title><rect x="21.0965%" y="1013" width="0.0237%" height="15" fill="rgb(208,90,1)" fg:x="8015" fg:w="9"/><text x="21.3465%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (17 samples, 0.04%)</title><rect x="21.1255%" y="1029" width="0.0447%" height="15" fill="rgb(243,10,4)" fg:x="8026" fg:w="17"/><text x="21.3755%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.04%)</title><rect x="21.1255%" y="1013" width="0.0447%" height="15" fill="rgb(212,137,27)" fg:x="8026" fg:w="17"/><text x="21.3755%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.04%)</title><rect x="21.1255%" y="997" width="0.0447%" height="15" fill="rgb(231,220,49)" fg:x="8026" fg:w="17"/><text x="21.3755%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (231 samples, 0.61%)</title><rect x="20.5649%" y="1157" width="0.6080%" height="15" fill="rgb(237,96,20)" fg:x="7813" fg:w="231"/><text x="20.8149%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (229 samples, 0.60%)</title><rect x="20.5701%" y="1141" width="0.6028%" height="15" fill="rgb(239,229,30)" fg:x="7815" fg:w="229"/><text x="20.8201%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (229 samples, 0.60%)</title><rect x="20.5701%" y="1125" width="0.6028%" height="15" fill="rgb(219,65,33)" fg:x="7815" fg:w="229"/><text x="20.8201%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler (229 samples, 0.60%)</title><rect x="20.5701%" y="1109" width="0.6028%" height="15" fill="rgb(243,134,7)" fg:x="7815" fg:w="229"/><text x="20.8201%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (211 samples, 0.56%)</title><rect x="20.6175%" y="1093" width="0.5554%" height="15" fill="rgb(216,177,54)" fg:x="7833" fg:w="211"/><text x="20.8675%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (203 samples, 0.53%)</title><rect x="20.6386%" y="1077" width="0.5343%" height="15" fill="rgb(211,160,20)" fg:x="7841" fg:w="203"/><text x="20.8886%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (38 samples, 0.10%)</title><rect x="21.0729%" y="1061" width="0.1000%" height="15" fill="rgb(239,85,39)" fg:x="8006" fg:w="38"/><text x="21.3229%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (29 samples, 0.08%)</title><rect x="21.0965%" y="1045" width="0.0763%" height="15" fill="rgb(232,125,22)" fg:x="8015" fg:w="29"/><text x="21.3465%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (48 samples, 0.13%)</title><rect x="22.2810%" y="933" width="0.1263%" height="15" fill="rgb(244,57,34)" fg:x="8465" fg:w="48"/><text x="22.5310%" y="943.50"></text></g><g><title>&lt;flume::async::OwnedOrRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="22.9101%" y="789" width="0.0184%" height="15" fill="rgb(214,203,32)" fg:x="8704" fg:w="7"/><text x="23.1601%" y="799.50"></text></g><g><title>_ZN4core3ptr1154drop_in_place$LT$alloc..sync..Arc$LT$flume..Hook$LT$wisp_mux..mux..inner..WsEvent$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$flume..async..AsyncSignal$GT$$GT$$GT$17h3a2412698e79b785E (29 samples, 0.08%)</title><rect x="22.9285%" y="789" width="0.0763%" height="15" fill="rgb(207,58,43)" fg:x="8711" fg:w="29"/><text x="23.1785%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.08%)</title><rect x="22.9285%" y="773" width="0.0763%" height="15" fill="rgb(215,193,15)" fg:x="8711" fg:w="29"/><text x="23.1785%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.08%)</title><rect x="22.9285%" y="757" width="0.0763%" height="15" fill="rgb(232,15,44)" fg:x="8711" fg:w="29"/><text x="23.1785%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.08%)</title><rect x="22.9285%" y="741" width="0.0763%" height="15" fill="rgb(212,3,48)" fg:x="8711" fg:w="29"/><text x="23.1785%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.07%)</title><rect x="23.0101%" y="789" width="0.0737%" height="15" fill="rgb(218,128,7)" fg:x="8742" fg:w="28"/><text x="23.2601%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 0.07%)</title><rect x="23.0101%" y="773" width="0.0737%" height="15" fill="rgb(226,216,39)" fg:x="8742" fg:w="28"/><text x="23.2601%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="23.0101%" y="757" width="0.0737%" height="15" fill="rgb(243,47,51)" fg:x="8742" fg:w="28"/><text x="23.2601%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.07%)</title><rect x="23.0154%" y="741" width="0.0684%" height="15" fill="rgb(241,183,40)" fg:x="8744" fg:w="26"/><text x="23.2654%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.07%)</title><rect x="23.0154%" y="725" width="0.0684%" height="15" fill="rgb(231,217,32)" fg:x="8744" fg:w="26"/><text x="23.2654%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.01%)</title><rect x="23.0943%" y="757" width="0.0105%" height="15" fill="rgb(229,61,38)" fg:x="8774" fg:w="4"/><text x="23.3443%" y="767.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (4 samples, 0.01%)</title><rect x="23.0943%" y="741" width="0.0105%" height="15" fill="rgb(225,210,5)" fg:x="8774" fg:w="4"/><text x="23.3443%" y="751.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (5 samples, 0.01%)</title><rect x="23.1049%" y="757" width="0.0132%" height="15" fill="rgb(231,79,45)" fg:x="8778" fg:w="5"/><text x="23.3549%" y="767.50"></text></g><g><title>core::mem::drop (26 samples, 0.07%)</title><rect x="23.1180%" y="757" width="0.0684%" height="15" fill="rgb(224,100,7)" fg:x="8783" fg:w="26"/><text x="23.3680%" y="767.50"></text></g><g><title>_ZN4core3ptr1138drop_in_place$LT$std..sync..mutex..MutexGuard$LT$flume..Chan$LT$wisp_mux..mux..inner..WsEvent$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$$GT$$GT$17h652d02a08c384c7eE (26 samples, 0.07%)</title><rect x="23.1180%" y="741" width="0.0684%" height="15" fill="rgb(241,198,18)" fg:x="8783" fg:w="26"/><text x="23.3680%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.07%)</title><rect x="23.1180%" y="725" width="0.0684%" height="15" fill="rgb(252,97,53)" fg:x="8783" fg:w="26"/><text x="23.3680%" y="735.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (25 samples, 0.07%)</title><rect x="23.1207%" y="709" width="0.0658%" height="15" fill="rgb(220,88,7)" fg:x="8784" fg:w="25"/><text x="23.3707%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (21 samples, 0.06%)</title><rect x="23.1312%" y="693" width="0.0553%" height="15" fill="rgb(213,176,14)" fg:x="8788" fg:w="21"/><text x="23.3812%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (21 samples, 0.06%)</title><rect x="23.1312%" y="677" width="0.0553%" height="15" fill="rgb(246,73,7)" fg:x="8788" fg:w="21"/><text x="23.3812%" y="687.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (6 samples, 0.02%)</title><rect x="23.1865%" y="757" width="0.0158%" height="15" fill="rgb(245,64,36)" fg:x="8809" fg:w="6"/><text x="23.4365%" y="767.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (101 samples, 0.27%)</title><rect x="23.0864%" y="789" width="0.2658%" height="15" fill="rgb(245,80,10)" fg:x="8771" fg:w="101"/><text x="23.3364%" y="799.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (101 samples, 0.27%)</title><rect x="23.0864%" y="773" width="0.2658%" height="15" fill="rgb(232,107,50)" fg:x="8771" fg:w="101"/><text x="23.3364%" y="783.50"></text></g><g><title>flume::wait_lock (54 samples, 0.14%)</title><rect x="23.2101%" y="757" width="0.1421%" height="15" fill="rgb(253,3,0)" fg:x="8818" fg:w="54"/><text x="23.4601%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (54 samples, 0.14%)</title><rect x="23.2101%" y="741" width="0.1421%" height="15" fill="rgb(212,99,53)" fg:x="8818" fg:w="54"/><text x="23.4601%" y="751.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (52 samples, 0.14%)</title><rect x="23.2154%" y="725" width="0.1369%" height="15" fill="rgb(249,111,54)" fg:x="8820" fg:w="52"/><text x="23.4654%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (52 samples, 0.14%)</title><rect x="23.2154%" y="709" width="0.1369%" height="15" fill="rgb(249,55,30)" fg:x="8820" fg:w="52"/><text x="23.4654%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.14%)</title><rect x="23.2154%" y="693" width="0.1369%" height="15" fill="rgb(237,47,42)" fg:x="8820" fg:w="52"/><text x="23.4654%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (9 samples, 0.02%)</title><rect x="23.3549%" y="773" width="0.0237%" height="15" fill="rgb(211,20,18)" fg:x="8873" fg:w="9"/><text x="23.6049%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="23.3654%" y="757" width="0.0132%" height="15" fill="rgb(231,203,46)" fg:x="8877" fg:w="5"/><text x="23.6154%" y="767.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (219 samples, 0.58%)</title><rect x="22.8811%" y="837" width="0.5764%" height="15" fill="rgb(237,142,3)" fg:x="8693" fg:w="219"/><text x="23.1311%" y="847.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (219 samples, 0.58%)</title><rect x="22.8811%" y="821" width="0.5764%" height="15" fill="rgb(241,107,1)" fg:x="8693" fg:w="219"/><text x="23.1311%" y="831.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (219 samples, 0.58%)</title><rect x="22.8811%" y="805" width="0.5764%" height="15" fill="rgb(229,83,13)" fg:x="8693" fg:w="219"/><text x="23.1311%" y="815.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (40 samples, 0.11%)</title><rect x="23.3523%" y="789" width="0.1053%" height="15" fill="rgb(241,91,40)" fg:x="8872" fg:w="40"/><text x="23.6023%" y="799.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (30 samples, 0.08%)</title><rect x="23.3786%" y="773" width="0.0790%" height="15" fill="rgb(225,3,45)" fg:x="8882" fg:w="30"/><text x="23.6286%" y="783.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (30 samples, 0.08%)</title><rect x="23.3786%" y="757" width="0.0790%" height="15" fill="rgb(244,223,14)" fg:x="8882" fg:w="30"/><text x="23.6286%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (29 samples, 0.08%)</title><rect x="23.3812%" y="741" width="0.0763%" height="15" fill="rgb(224,124,37)" fg:x="8883" fg:w="29"/><text x="23.6312%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.08%)</title><rect x="23.3812%" y="725" width="0.0763%" height="15" fill="rgb(251,171,30)" fg:x="8883" fg:w="29"/><text x="23.6312%" y="735.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (73 samples, 0.19%)</title><rect x="23.4997%" y="757" width="0.1921%" height="15" fill="rgb(236,46,54)" fg:x="8928" fg:w="73"/><text x="23.7497%" y="767.50"></text></g><g><title>_ZN4core3ptr4591drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17he85d75ce02d52a02E (8 samples, 0.02%)</title><rect x="23.6708%" y="741" width="0.0211%" height="15" fill="rgb(245,213,5)" fg:x="8993" fg:w="8"/><text x="23.9208%" y="751.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::project_future (5 samples, 0.01%)</title><rect x="23.6918%" y="757" width="0.0132%" height="15" fill="rgb(230,144,27)" fg:x="9001" fg:w="5"/><text x="23.9418%" y="767.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project (5 samples, 0.01%)</title><rect x="23.6918%" y="741" width="0.0132%" height="15" fill="rgb(220,86,6)" fg:x="9001" fg:w="5"/><text x="23.9418%" y="751.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (34 samples, 0.09%)</title><rect x="23.7050%" y="757" width="0.0895%" height="15" fill="rgb(240,20,13)" fg:x="9006" fg:w="34"/><text x="23.9550%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.06%)</title><rect x="23.9366%" y="741" width="0.0579%" height="15" fill="rgb(217,89,34)" fg:x="9094" fg:w="22"/><text x="24.1866%" y="751.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (22 samples, 0.06%)</title><rect x="23.9366%" y="725" width="0.0579%" height="15" fill="rgb(229,13,5)" fg:x="9094" fg:w="22"/><text x="24.1866%" y="735.50"></text></g><g><title>core::result::Result&lt;core::option::Option&lt;T&gt;,E&gt;::transpose (36 samples, 0.09%)</title><rect x="23.9945%" y="741" width="0.0948%" height="15" fill="rgb(244,67,35)" fg:x="9116" fg:w="36"/><text x="24.2445%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.03%)</title><rect x="25.1184%" y="693" width="0.0342%" height="15" fill="rgb(221,40,2)" fg:x="9543" fg:w="13"/><text x="25.3684%" y="703.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;fastwebsockets::frame::OpCode&gt; for wisp_mux::ws::OpCode&gt;::from (13 samples, 0.03%)</title><rect x="25.1184%" y="677" width="0.0342%" height="15" fill="rgb(237,157,21)" fg:x="9543" fg:w="13"/><text x="25.3684%" y="687.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="25.1579%" y="693" width="0.0368%" height="15" fill="rgb(222,94,11)" fg:x="9558" fg:w="14"/><text x="25.4079%" y="703.50"></text></g><g><title>core::cmp::PartialEq::ne (26 samples, 0.07%)</title><rect x="25.1974%" y="693" width="0.0684%" height="15" fill="rgb(249,113,6)" fg:x="9573" fg:w="26"/><text x="25.4474%" y="703.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (26 samples, 0.07%)</title><rect x="25.1974%" y="677" width="0.0684%" height="15" fill="rgb(238,137,36)" fg:x="9573" fg:w="26"/><text x="25.4474%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.02%)</title><rect x="25.9739%" y="677" width="0.0211%" height="15" fill="rgb(210,102,26)" fg:x="9868" fg:w="8"/><text x="26.2239%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (17 samples, 0.04%)</title><rect x="27.2584%" y="629" width="0.0447%" height="15" fill="rgb(218,30,30)" fg:x="10356" fg:w="17"/><text x="27.5084%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (23 samples, 0.06%)</title><rect x="27.2478%" y="645" width="0.0605%" height="15" fill="rgb(214,67,26)" fg:x="10352" fg:w="23"/><text x="27.4978%" y="655.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::convert::TryFrom&lt;u8&gt;&gt;::try_from (5 samples, 0.01%)</title><rect x="27.3084%" y="645" width="0.0132%" height="15" fill="rgb(251,9,53)" fg:x="10375" fg:w="5"/><text x="27.5584%" y="655.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (51 samples, 0.13%)</title><rect x="27.3215%" y="629" width="0.1342%" height="15" fill="rgb(228,204,25)" fg:x="10380" fg:w="51"/><text x="27.5715%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (36 samples, 0.09%)</title><rect x="27.3610%" y="613" width="0.0948%" height="15" fill="rgb(207,153,8)" fg:x="10395" fg:w="36"/><text x="27.6110%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (32 samples, 0.08%)</title><rect x="27.3716%" y="597" width="0.0842%" height="15" fill="rgb(242,9,16)" fg:x="10399" fg:w="32"/><text x="27.6216%" y="607.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (23 samples, 0.06%)</title><rect x="27.5584%" y="597" width="0.0605%" height="15" fill="rgb(217,211,10)" fg:x="10470" fg:w="23"/><text x="27.8084%" y="607.50"></text></g><g><title>[libc.so.6] (182 samples, 0.48%)</title><rect x="28.1270%" y="421" width="0.4790%" height="15" fill="rgb(219,228,52)" fg:x="10686" fg:w="182"/><text x="28.3770%" y="431.50"></text></g><g><title>recv (371 samples, 0.98%)</title><rect x="27.7032%" y="437" width="0.9765%" height="15" fill="rgb(231,92,29)" fg:x="10525" fg:w="371"/><text x="27.9532%" y="447.50"></text></g><g><title>[unknown] (28 samples, 0.07%)</title><rect x="28.6060%" y="421" width="0.0737%" height="15" fill="rgb(232,8,23)" fg:x="10868" fg:w="28"/><text x="28.8560%" y="431.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (45 samples, 0.12%)</title><rect x="28.6824%" y="421" width="0.1184%" height="15" fill="rgb(216,211,34)" fg:x="10897" fg:w="45"/><text x="28.9324%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (420 samples, 1.11%)</title><rect x="27.7006%" y="565" width="1.1055%" height="15" fill="rgb(236,151,0)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="575.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (420 samples, 1.11%)</title><rect x="27.7006%" y="549" width="1.1055%" height="15" fill="rgb(209,168,3)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="559.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (420 samples, 1.11%)</title><rect x="27.7006%" y="533" width="1.1055%" height="15" fill="rgb(208,129,28)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (420 samples, 1.11%)</title><rect x="27.7006%" y="517" width="1.1055%" height="15" fill="rgb(229,78,22)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="527.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (420 samples, 1.11%)</title><rect x="27.7006%" y="501" width="1.1055%" height="15" fill="rgb(228,187,13)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="511.50"></text></g><g><title>std::sys_common::net::TcpStream::read (420 samples, 1.11%)</title><rect x="27.7006%" y="485" width="1.1055%" height="15" fill="rgb(240,119,24)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="495.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (420 samples, 1.11%)</title><rect x="27.7006%" y="469" width="1.1055%" height="15" fill="rgb(209,194,42)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="479.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (420 samples, 1.11%)</title><rect x="27.7006%" y="453" width="1.1055%" height="15" fill="rgb(247,200,46)" fg:x="10524" fg:w="420"/><text x="27.9506%" y="463.50"></text></g><g><title>std::sys::pal::unix::cvt (48 samples, 0.13%)</title><rect x="28.6797%" y="437" width="0.1263%" height="15" fill="rgb(218,76,16)" fg:x="10896" fg:w="48"/><text x="28.9297%" y="447.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (18 samples, 0.05%)</title><rect x="28.8192%" y="565" width="0.0474%" height="15" fill="rgb(225,21,48)" fg:x="10949" fg:w="18"/><text x="29.0692%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.03%)</title><rect x="28.8692%" y="517" width="0.0342%" height="15" fill="rgb(239,223,50)" fg:x="10968" fg:w="13"/><text x="29.1192%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="28.8692%" y="501" width="0.0342%" height="15" fill="rgb(244,45,21)" fg:x="10968" fg:w="13"/><text x="29.1192%" y="511.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (31 samples, 0.08%)</title><rect x="28.8666%" y="565" width="0.0816%" height="15" fill="rgb(232,33,43)" fg:x="10967" fg:w="31"/><text x="29.1166%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (31 samples, 0.08%)</title><rect x="28.8666%" y="549" width="0.0816%" height="15" fill="rgb(209,8,3)" fg:x="10967" fg:w="31"/><text x="29.1166%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (31 samples, 0.08%)</title><rect x="28.8666%" y="533" width="0.0816%" height="15" fill="rgb(214,25,53)" fg:x="10967" fg:w="31"/><text x="29.1166%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.04%)</title><rect x="28.9035%" y="517" width="0.0447%" height="15" fill="rgb(254,186,54)" fg:x="10981" fg:w="17"/><text x="29.1535%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.04%)</title><rect x="28.9035%" y="501" width="0.0447%" height="15" fill="rgb(208,174,49)" fg:x="10981" fg:w="17"/><text x="29.1535%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="28.9745%" y="485" width="0.0105%" height="15" fill="rgb(233,191,51)" fg:x="11008" fg:w="4"/><text x="29.2245%" y="495.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (4 samples, 0.01%)</title><rect x="28.9745%" y="469" width="0.0105%" height="15" fill="rgb(222,134,10)" fg:x="11008" fg:w="4"/><text x="29.2245%" y="479.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="28.9745%" y="453" width="0.0105%" height="15" fill="rgb(230,226,20)" fg:x="11008" fg:w="4"/><text x="29.2245%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="28.9929%" y="453" width="0.0105%" height="15" fill="rgb(251,111,25)" fg:x="11015" fg:w="4"/><text x="29.2429%" y="463.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (15 samples, 0.04%)</title><rect x="28.9719%" y="533" width="0.0395%" height="15" fill="rgb(224,40,46)" fg:x="11007" fg:w="15"/><text x="29.2219%" y="543.50"></text></g><g><title>tokio::runtime::context::budget (15 samples, 0.04%)</title><rect x="28.9719%" y="517" width="0.0395%" height="15" fill="rgb(236,108,47)" fg:x="11007" fg:w="15"/><text x="29.2219%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.04%)</title><rect x="28.9719%" y="501" width="0.0395%" height="15" fill="rgb(234,93,0)" fg:x="11007" fg:w="15"/><text x="29.2219%" y="511.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (10 samples, 0.03%)</title><rect x="28.9850%" y="485" width="0.0263%" height="15" fill="rgb(224,213,32)" fg:x="11012" fg:w="10"/><text x="29.2350%" y="495.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (10 samples, 0.03%)</title><rect x="28.9850%" y="469" width="0.0263%" height="15" fill="rgb(251,11,48)" fg:x="11012" fg:w="10"/><text x="29.2350%" y="479.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (33 samples, 0.09%)</title><rect x="29.0272%" y="517" width="0.0869%" height="15" fill="rgb(236,173,5)" fg:x="11028" fg:w="33"/><text x="29.2772%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (32 samples, 0.08%)</title><rect x="29.0298%" y="501" width="0.0842%" height="15" fill="rgb(230,95,12)" fg:x="11029" fg:w="32"/><text x="29.2798%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (11 samples, 0.03%)</title><rect x="29.0851%" y="485" width="0.0290%" height="15" fill="rgb(232,209,1)" fg:x="11050" fg:w="11"/><text x="29.3351%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.03%)</title><rect x="29.0851%" y="469" width="0.0290%" height="15" fill="rgb(232,6,1)" fg:x="11050" fg:w="11"/><text x="29.3351%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.03%)</title><rect x="29.0851%" y="453" width="0.0290%" height="15" fill="rgb(210,224,50)" fg:x="11050" fg:w="11"/><text x="29.3351%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (8 samples, 0.02%)</title><rect x="29.1219%" y="517" width="0.0211%" height="15" fill="rgb(228,127,35)" fg:x="11064" fg:w="8"/><text x="29.3719%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (8 samples, 0.02%)</title><rect x="29.1219%" y="501" width="0.0211%" height="15" fill="rgb(245,102,45)" fg:x="11064" fg:w="8"/><text x="29.3719%" y="511.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="29.1219%" y="485" width="0.0211%" height="15" fill="rgb(214,1,49)" fg:x="11064" fg:w="8"/><text x="29.3719%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.02%)</title><rect x="29.1219%" y="469" width="0.0211%" height="15" fill="rgb(226,163,40)" fg:x="11064" fg:w="8"/><text x="29.3719%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.02%)</title><rect x="29.1219%" y="453" width="0.0211%" height="15" fill="rgb(239,212,28)" fg:x="11064" fg:w="8"/><text x="29.3719%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="29.1219%" y="437" width="0.0211%" height="15" fill="rgb(220,20,13)" fg:x="11064" fg:w="8"/><text x="29.3719%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (71 samples, 0.19%)</title><rect x="29.1430%" y="517" width="0.1869%" height="15" fill="rgb(210,164,35)" fg:x="11072" fg:w="71"/><text x="29.3930%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (71 samples, 0.19%)</title><rect x="29.1430%" y="501" width="0.1869%" height="15" fill="rgb(248,109,41)" fg:x="11072" fg:w="71"/><text x="29.3930%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (10 samples, 0.03%)</title><rect x="29.3299%" y="517" width="0.0263%" height="15" fill="rgb(238,23,50)" fg:x="11143" fg:w="10"/><text x="29.5799%" y="527.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (10 samples, 0.03%)</title><rect x="29.3299%" y="501" width="0.0263%" height="15" fill="rgb(211,48,49)" fg:x="11143" fg:w="10"/><text x="29.5799%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10 samples, 0.03%)</title><rect x="29.3299%" y="485" width="0.0263%" height="15" fill="rgb(223,36,21)" fg:x="11143" fg:w="10"/><text x="29.5799%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (10 samples, 0.03%)</title><rect x="29.3299%" y="469" width="0.0263%" height="15" fill="rgb(207,123,46)" fg:x="11143" fg:w="10"/><text x="29.5799%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.03%)</title><rect x="29.3299%" y="453" width="0.0263%" height="15" fill="rgb(240,218,32)" fg:x="11143" fg:w="10"/><text x="29.5799%" y="463.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (721 samples, 1.90%)</title><rect x="27.4637%" y="629" width="1.8978%" height="15" fill="rgb(252,5,43)" fg:x="10434" fg:w="721"/><text x="27.7137%" y="639.50">&lt;..</text></g><g><title>&lt;epoxy_server::util_chain::Chain&lt;T,U&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (720 samples, 1.90%)</title><rect x="27.4663%" y="613" width="1.8951%" height="15" fill="rgb(252,84,19)" fg:x="10435" fg:w="720"/><text x="27.7163%" y="623.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (662 samples, 1.74%)</title><rect x="27.6190%" y="597" width="1.7425%" height="15" fill="rgb(243,152,39)" fg:x="10493" fg:w="662"/><text x="27.8690%" y="607.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (647 samples, 1.70%)</title><rect x="27.6585%" y="581" width="1.7030%" height="15" fill="rgb(234,160,15)" fg:x="10508" fg:w="647"/><text x="27.9085%" y="591.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (157 samples, 0.41%)</title><rect x="28.9482%" y="565" width="0.4132%" height="15" fill="rgb(237,34,20)" fg:x="10998" fg:w="157"/><text x="29.1982%" y="575.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (154 samples, 0.41%)</title><rect x="28.9561%" y="549" width="0.4053%" height="15" fill="rgb(229,97,13)" fg:x="11001" fg:w="154"/><text x="29.2061%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (133 samples, 0.35%)</title><rect x="29.0114%" y="533" width="0.3501%" height="15" fill="rgb(234,71,50)" fg:x="11022" fg:w="133"/><text x="29.2614%" y="543.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (5 samples, 0.01%)</title><rect x="29.3851%" y="629" width="0.0132%" height="15" fill="rgb(253,155,4)" fg:x="11164" fg:w="5"/><text x="29.6351%" y="639.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (790 samples, 2.08%)</title><rect x="27.3215%" y="645" width="2.0794%" height="15" fill="rgb(222,185,37)" fg:x="10380" fg:w="790"/><text x="27.5715%" y="655.50">&lt;..</text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (12 samples, 0.03%)</title><rect x="29.4009%" y="645" width="0.0316%" height="15" fill="rgb(251,177,13)" fg:x="11170" fg:w="12"/><text x="29.6509%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (6 samples, 0.02%)</title><rect x="29.4167%" y="629" width="0.0158%" height="15" fill="rgb(250,179,40)" fg:x="11176" fg:w="6"/><text x="29.6667%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (6 samples, 0.02%)</title><rect x="29.4167%" y="613" width="0.0158%" height="15" fill="rgb(242,44,2)" fg:x="11176" fg:w="6"/><text x="29.6667%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (10 samples, 0.03%)</title><rect x="29.4325%" y="629" width="0.0263%" height="15" fill="rgb(216,177,13)" fg:x="11182" fg:w="10"/><text x="29.6825%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (10 samples, 0.03%)</title><rect x="29.4325%" y="613" width="0.0263%" height="15" fill="rgb(216,106,43)" fg:x="11182" fg:w="10"/><text x="29.6825%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.01%)</title><rect x="29.4483%" y="597" width="0.0105%" height="15" fill="rgb(216,183,2)" fg:x="11188" fg:w="4"/><text x="29.6983%" y="607.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32 (11 samples, 0.03%)</title><rect x="29.4325%" y="645" width="0.0290%" height="15" fill="rgb(249,75,3)" fg:x="11182" fg:w="11"/><text x="29.6825%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,431 samples, 9.03%)</title><rect x="29.5510%" y="565" width="9.0308%" height="15" fill="rgb(219,67,39)" fg:x="11227" fg:w="3431"/><text x="29.8010%" y="575.50">core::intrins..</text></g><g><title>[libc.so.6] (3,431 samples, 9.03%)</title><rect x="29.5510%" y="549" width="9.0308%" height="15" fill="rgb(253,228,2)" fg:x="11227" fg:w="3431"/><text x="29.8010%" y="559.50">[libc.so.6]</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,447 samples, 9.07%)</title><rect x="29.5115%" y="613" width="9.0730%" height="15" fill="rgb(235,138,27)" fg:x="11212" fg:w="3447"/><text x="29.7615%" y="623.50">alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,447 samples, 9.07%)</title><rect x="29.5115%" y="597" width="9.0730%" height="15" fill="rgb(236,97,51)" fg:x="11212" fg:w="3447"/><text x="29.7615%" y="607.50">&lt;alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,447 samples, 9.07%)</title><rect x="29.5115%" y="581" width="9.0730%" height="15" fill="rgb(240,80,30)" fg:x="11212" fg:w="3447"/><text x="29.7615%" y="591.50">alloc::vec::V..</text></g><g><title>sz_index2size (45 samples, 0.12%)</title><rect x="38.6713%" y="389" width="0.1184%" height="15" fill="rgb(230,178,19)" fg:x="14692" fg:w="45"/><text x="38.9213%" y="399.50"></text></g><g><title>sz_index2size_lookup (45 samples, 0.12%)</title><rect x="38.6713%" y="373" width="0.1184%" height="15" fill="rgb(210,190,27)" fg:x="14692" fg:w="45"/><text x="38.9213%" y="383.50"></text></g><g><title>sz_index2size_lookup_impl (45 samples, 0.12%)</title><rect x="38.6713%" y="357" width="0.1184%" height="15" fill="rgb(222,107,31)" fg:x="14692" fg:w="45"/><text x="38.9213%" y="367.50"></text></g><g><title>aligned_usize_get (63 samples, 0.17%)</title><rect x="38.6555%" y="405" width="0.1658%" height="15" fill="rgb(216,127,34)" fg:x="14686" fg:w="63"/><text x="38.9055%" y="415.50"></text></g><g><title>sz_size2index (12 samples, 0.03%)</title><rect x="38.7897%" y="389" width="0.0316%" height="15" fill="rgb(234,116,52)" fg:x="14737" fg:w="12"/><text x="39.0397%" y="399.50"></text></g><g><title>sz_size2index_compute (12 samples, 0.03%)</title><rect x="38.7897%" y="373" width="0.0316%" height="15" fill="rgb(222,124,15)" fg:x="14737" fg:w="12"/><text x="39.0397%" y="383.50"></text></g><g><title>arena_choose_maybe_huge (41 samples, 0.11%)</title><rect x="38.9056%" y="341" width="0.1079%" height="15" fill="rgb(231,179,28)" fg:x="14781" fg:w="41"/><text x="39.1556%" y="351.50"></text></g><g><title>arena_choose (5 samples, 0.01%)</title><rect x="39.0003%" y="325" width="0.0132%" height="15" fill="rgb(226,93,45)" fg:x="14817" fg:w="5"/><text x="39.2503%" y="335.50"></text></g><g><title>arena_choose_impl (5 samples, 0.01%)</title><rect x="39.0003%" y="309" width="0.0132%" height="15" fill="rgb(215,8,51)" fg:x="14817" fg:w="5"/><text x="39.2503%" y="319.50"></text></g><g><title>_rjem_je_arena_malloc_hard (61 samples, 0.16%)</title><rect x="38.8740%" y="357" width="0.1606%" height="15" fill="rgb(223,106,5)" fg:x="14769" fg:w="61"/><text x="39.1240%" y="367.50"></text></g><g><title>arena_malloc_small (8 samples, 0.02%)</title><rect x="39.0135%" y="341" width="0.0211%" height="15" fill="rgb(250,191,5)" fg:x="14822" fg:w="8"/><text x="39.2635%" y="351.50"></text></g><g><title>sz_index2size (8 samples, 0.02%)</title><rect x="39.0135%" y="325" width="0.0211%" height="15" fill="rgb(242,132,44)" fg:x="14822" fg:w="8"/><text x="39.2635%" y="335.50"></text></g><g><title>sz_index2size_lookup (8 samples, 0.02%)</title><rect x="39.0135%" y="309" width="0.0211%" height="15" fill="rgb(251,152,29)" fg:x="14822" fg:w="8"/><text x="39.2635%" y="319.50"></text></g><g><title>sz_index2size_lookup_impl (8 samples, 0.02%)</title><rect x="39.0135%" y="293" width="0.0211%" height="15" fill="rgb(218,179,5)" fg:x="14822" fg:w="8"/><text x="39.2635%" y="303.50"></text></g><g><title>_rjem_je_large_malloc (10 samples, 0.03%)</title><rect x="39.0345%" y="357" width="0.0263%" height="15" fill="rgb(227,67,19)" fg:x="14830" fg:w="10"/><text x="39.2845%" y="367.50"></text></g><g><title>_rjem_je_arena_get_ehooks (40 samples, 0.11%)</title><rect x="39.2083%" y="325" width="0.1053%" height="15" fill="rgb(233,119,31)" fg:x="14896" fg:w="40"/><text x="39.4583%" y="335.50"></text></g><g><title>_rjem_je_base_ehooks_get (10 samples, 0.03%)</title><rect x="39.2872%" y="309" width="0.0263%" height="15" fill="rgb(241,120,22)" fg:x="14926" fg:w="10"/><text x="39.5372%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (4 samples, 0.01%)</title><rect x="39.3899%" y="277" width="0.0105%" height="15" fill="rgb(224,102,30)" fg:x="14965" fg:w="4"/><text x="39.6399%" y="287.50"></text></g><g><title>_rjem_je_emap_remap (17 samples, 0.04%)</title><rect x="39.3688%" y="309" width="0.0447%" height="15" fill="rgb(210,164,37)" fg:x="14957" fg:w="17"/><text x="39.6188%" y="319.50"></text></g><g><title>rtree_write (10 samples, 0.03%)</title><rect x="39.3872%" y="293" width="0.0263%" height="15" fill="rgb(226,191,16)" fg:x="14964" fg:w="10"/><text x="39.6372%" y="303.50"></text></g><g><title>rtree_leaf_elm_write (5 samples, 0.01%)</title><rect x="39.4004%" y="277" width="0.0132%" height="15" fill="rgb(214,40,45)" fg:x="14969" fg:w="5"/><text x="39.6504%" y="287.50"></text></g><g><title>rtree_contents_encode (5 samples, 0.01%)</title><rect x="39.4004%" y="261" width="0.0132%" height="15" fill="rgb(244,29,26)" fg:x="14969" fg:w="5"/><text x="39.6504%" y="271.50"></text></g><g><title>rtree_leaf_elm_bits_encode (5 samples, 0.01%)</title><rect x="39.4004%" y="245" width="0.0132%" height="15" fill="rgb(216,16,5)" fg:x="14969" fg:w="5"/><text x="39.6504%" y="255.50"></text></g><g><title>edata_slab_set (4 samples, 0.01%)</title><rect x="39.4136%" y="309" width="0.0105%" height="15" fill="rgb(249,76,35)" fg:x="14974" fg:w="4"/><text x="39.6636%" y="319.50"></text></g><g><title>pa_nactive_add (17 samples, 0.04%)</title><rect x="39.4267%" y="309" width="0.0447%" height="15" fill="rgb(207,11,44)" fg:x="14979" fg:w="17"/><text x="39.6767%" y="319.50"></text></g><g><title>atomic_fetch_add_zu (17 samples, 0.04%)</title><rect x="39.4267%" y="293" width="0.0447%" height="15" fill="rgb(228,190,49)" fg:x="14979" fg:w="17"/><text x="39.6767%" y="303.50"></text></g><g><title>pa_shard_uses_hpa (71 samples, 0.19%)</title><rect x="39.4715%" y="309" width="0.1869%" height="15" fill="rgb(214,173,12)" fg:x="14996" fg:w="71"/><text x="39.7215%" y="319.50"></text></g><g><title>atomic_load_b (71 samples, 0.19%)</title><rect x="39.4715%" y="293" width="0.1869%" height="15" fill="rgb(218,26,35)" fg:x="14996" fg:w="71"/><text x="39.7215%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_first (143 samples, 0.38%)</title><rect x="40.2427%" y="181" width="0.3764%" height="15" fill="rgb(220,200,19)" fg:x="15289" fg:w="143"/><text x="40.4927%" y="191.50"></text></g><g><title>ph_first (133 samples, 0.35%)</title><rect x="40.2690%" y="165" width="0.3501%" height="15" fill="rgb(239,95,49)" fg:x="15299" fg:w="133"/><text x="40.5190%" y="175.50"></text></g><g><title>ph_merge_aux (83 samples, 0.22%)</title><rect x="40.4006%" y="149" width="0.2185%" height="15" fill="rgb(235,85,53)" fg:x="15349" fg:w="83"/><text x="40.6506%" y="159.50"></text></g><g><title>phn_next_get (68 samples, 0.18%)</title><rect x="40.4401%" y="133" width="0.1790%" height="15" fill="rgb(233,133,31)" fg:x="15364" fg:w="68"/><text x="40.6901%" y="143.50"></text></g><g><title>sz_pind2sz (10 samples, 0.03%)</title><rect x="40.6691%" y="149" width="0.0263%" height="15" fill="rgb(218,25,20)" fg:x="15451" fg:w="10"/><text x="40.9191%" y="159.50"></text></g><g><title>sz_pind2sz_lookup (10 samples, 0.03%)</title><rect x="40.6691%" y="133" width="0.0263%" height="15" fill="rgb(252,210,38)" fg:x="15451" fg:w="10"/><text x="40.9191%" y="143.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (45 samples, 0.12%)</title><rect x="40.6191%" y="181" width="0.1184%" height="15" fill="rgb(242,134,21)" fg:x="15432" fg:w="45"/><text x="40.8691%" y="191.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (36 samples, 0.09%)</title><rect x="40.6428%" y="165" width="0.0948%" height="15" fill="rgb(213,28,48)" fg:x="15441" fg:w="36"/><text x="40.8928%" y="175.50"></text></g><g><title>sz_psz2ind (16 samples, 0.04%)</title><rect x="40.6954%" y="149" width="0.0421%" height="15" fill="rgb(250,196,2)" fg:x="15461" fg:w="16"/><text x="40.9454%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (40 samples, 0.11%)</title><rect x="40.7375%" y="181" width="0.1053%" height="15" fill="rgb(227,5,17)" fg:x="15477" fg:w="40"/><text x="40.9875%" y="191.50"></text></g><g><title>fb_ffs (55 samples, 0.14%)</title><rect x="40.8428%" y="181" width="0.1448%" height="15" fill="rgb(221,226,24)" fg:x="15517" fg:w="55"/><text x="41.0928%" y="191.50"></text></g><g><title>fb_find_impl (55 samples, 0.14%)</title><rect x="40.8428%" y="165" width="0.1448%" height="15" fill="rgb(211,5,48)" fg:x="15517" fg:w="55"/><text x="41.0928%" y="175.50"></text></g><g><title>ffs_lu (8 samples, 0.02%)</title><rect x="40.9665%" y="149" width="0.0211%" height="15" fill="rgb(219,150,6)" fg:x="15564" fg:w="8"/><text x="41.2165%" y="159.50"></text></g><g><title>sz_pind2sz (4 samples, 0.01%)</title><rect x="40.9876%" y="181" width="0.0105%" height="15" fill="rgb(251,46,16)" fg:x="15572" fg:w="4"/><text x="41.2376%" y="191.50"></text></g><g><title>sz_pind2sz_lookup (4 samples, 0.01%)</title><rect x="40.9876%" y="165" width="0.0105%" height="15" fill="rgb(220,204,40)" fg:x="15572" fg:w="4"/><text x="41.2376%" y="175.50"></text></g><g><title>_rjem_je_eset_fit (383 samples, 1.01%)</title><rect x="40.0242%" y="213" width="1.0081%" height="15" fill="rgb(211,85,2)" fg:x="15206" fg:w="383"/><text x="40.2742%" y="223.50"></text></g><g><title>eset_first_fit (376 samples, 0.99%)</title><rect x="40.0426%" y="197" width="0.9897%" height="15" fill="rgb(229,17,7)" fg:x="15213" fg:w="376"/><text x="40.2926%" y="207.50"></text></g><g><title>sz_psz2ind (13 samples, 0.03%)</title><rect x="40.9981%" y="181" width="0.0342%" height="15" fill="rgb(239,72,28)" fg:x="15576" fg:w="13"/><text x="41.2481%" y="191.50"></text></g><g><title>edata_state_set (8 samples, 0.02%)</title><rect x="41.0771%" y="181" width="0.0211%" height="15" fill="rgb(230,47,54)" fg:x="15606" fg:w="8"/><text x="41.3271%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (27 samples, 0.07%)</title><rect x="41.0981%" y="181" width="0.0711%" height="15" fill="rgb(214,50,8)" fg:x="15614" fg:w="27"/><text x="41.3481%" y="191.50"></text></g><g><title>_rjem_je_emap_update_edata_state (104 samples, 0.27%)</title><rect x="41.0507%" y="197" width="0.2737%" height="15" fill="rgb(216,198,43)" fg:x="15596" fg:w="104"/><text x="41.3007%" y="207.50"></text></g><g><title>rtree_leaf_elm_state_update (59 samples, 0.16%)</title><rect x="41.1692%" y="181" width="0.1553%" height="15" fill="rgb(234,20,35)" fg:x="15641" fg:w="59"/><text x="41.4192%" y="191.50"></text></g><g><title>rtree_leaf_elm_bits_read (55 samples, 0.14%)</title><rect x="41.1797%" y="165" width="0.1448%" height="15" fill="rgb(254,45,19)" fg:x="15645" fg:w="55"/><text x="41.4297%" y="175.50"></text></g><g><title>atomic_load_p (55 samples, 0.14%)</title><rect x="41.1797%" y="149" width="0.1448%" height="15" fill="rgb(219,14,44)" fg:x="15645" fg:w="55"/><text x="41.4297%" y="159.50"></text></g><g><title>_rjem_je_edata_heap_first (4 samples, 0.01%)</title><rect x="41.3561%" y="181" width="0.0105%" height="15" fill="rgb(217,220,26)" fg:x="15712" fg:w="4"/><text x="41.6061%" y="191.50"></text></g><g><title>ph_merge_children (14 samples, 0.04%)</title><rect x="41.4166%" y="149" width="0.0368%" height="15" fill="rgb(213,158,28)" fg:x="15735" fg:w="14"/><text x="41.6666%" y="159.50"></text></g><g><title>phn_merge_siblings (14 samples, 0.04%)</title><rect x="41.4166%" y="133" width="0.0368%" height="15" fill="rgb(252,51,52)" fg:x="15735" fg:w="14"/><text x="41.6666%" y="143.50"></text></g><g><title>phn_next_get (14 samples, 0.04%)</title><rect x="41.4166%" y="117" width="0.0368%" height="15" fill="rgb(246,89,16)" fg:x="15735" fg:w="14"/><text x="41.6666%" y="127.50"></text></g><g><title>_rjem_je_edata_heap_remove (35 samples, 0.09%)</title><rect x="41.3666%" y="181" width="0.0921%" height="15" fill="rgb(216,158,49)" fg:x="15716" fg:w="35"/><text x="41.6166%" y="191.50"></text></g><g><title>ph_remove (29 samples, 0.08%)</title><rect x="41.3824%" y="165" width="0.0763%" height="15" fill="rgb(236,107,19)" fg:x="15722" fg:w="29"/><text x="41.6324%" y="175.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (18 samples, 0.05%)</title><rect x="41.4587%" y="181" width="0.0474%" height="15" fill="rgb(228,185,30)" fg:x="15751" fg:w="18"/><text x="41.7087%" y="191.50"></text></g><g><title>sz_psz2ind (8 samples, 0.02%)</title><rect x="41.4850%" y="165" width="0.0211%" height="15" fill="rgb(246,134,8)" fg:x="15761" fg:w="8"/><text x="41.7350%" y="175.50"></text></g><g><title>edata_cmp_summary_comp (5 samples, 0.01%)</title><rect x="41.5166%" y="181" width="0.0132%" height="15" fill="rgb(214,143,50)" fg:x="15773" fg:w="5"/><text x="41.7666%" y="191.50"></text></g><g><title>edata_list_inactive_remove (44 samples, 0.12%)</title><rect x="41.5324%" y="181" width="0.1158%" height="15" fill="rgb(228,75,8)" fg:x="15779" fg:w="44"/><text x="41.7824%" y="191.50"></text></g><g><title>atomic_load_zu (48 samples, 0.13%)</title><rect x="41.6509%" y="165" width="0.1263%" height="15" fill="rgb(207,175,4)" fg:x="15824" fg:w="48"/><text x="41.9009%" y="175.50"></text></g><g><title>eset_stats_sub (50 samples, 0.13%)</title><rect x="41.6482%" y="181" width="0.1316%" height="15" fill="rgb(205,108,24)" fg:x="15823" fg:w="50"/><text x="41.8982%" y="191.50"></text></g><g><title>extent_recycle_extract (707 samples, 1.86%)</title><rect x="39.9558%" y="229" width="1.8609%" height="15" fill="rgb(244,120,49)" fg:x="15180" fg:w="707"/><text x="40.2058%" y="239.50">e..</text></g><g><title>extent_activate_locked (298 samples, 0.78%)</title><rect x="41.0323%" y="213" width="0.7844%" height="15" fill="rgb(223,47,38)" fg:x="15589" fg:w="298"/><text x="41.2823%" y="223.50"></text></g><g><title>_rjem_je_eset_remove (187 samples, 0.49%)</title><rect x="41.3245%" y="197" width="0.4922%" height="15" fill="rgb(229,179,11)" fg:x="15700" fg:w="187"/><text x="41.5745%" y="207.50"></text></g><g><title>sz_psz2ind (13 samples, 0.03%)</title><rect x="41.7825%" y="181" width="0.0342%" height="15" fill="rgb(231,122,1)" fg:x="15874" fg:w="13"/><text x="42.0325%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (12 samples, 0.03%)</title><rect x="41.8878%" y="165" width="0.0316%" height="15" fill="rgb(245,119,9)" fg:x="15914" fg:w="12"/><text x="42.1378%" y="175.50"></text></g><g><title>rtree_subkey (4 samples, 0.01%)</title><rect x="41.9088%" y="149" width="0.0105%" height="15" fill="rgb(241,163,25)" fg:x="15922" fg:w="4"/><text x="42.1588%" y="159.50"></text></g><g><title>_rjem_je_emap_update_edata_state (129 samples, 0.34%)</title><rect x="41.8693%" y="181" width="0.3395%" height="15" fill="rgb(217,214,3)" fg:x="15907" fg:w="129"/><text x="42.1193%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (110 samples, 0.29%)</title><rect x="41.9194%" y="165" width="0.2895%" height="15" fill="rgb(240,86,28)" fg:x="15926" fg:w="110"/><text x="42.1694%" y="175.50"></text></g><g><title>rtree_leaf_elm_bits_read (106 samples, 0.28%)</title><rect x="41.9299%" y="149" width="0.2790%" height="15" fill="rgb(215,47,9)" fg:x="15930" fg:w="106"/><text x="42.1799%" y="159.50"></text></g><g><title>atomic_load_p (106 samples, 0.28%)</title><rect x="41.9299%" y="133" width="0.2790%" height="15" fill="rgb(252,25,45)" fg:x="15930" fg:w="106"/><text x="42.1799%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_empty (12 samples, 0.03%)</title><rect x="42.2536%" y="165" width="0.0316%" height="15" fill="rgb(251,164,9)" fg:x="16053" fg:w="12"/><text x="42.5036%" y="175.50"></text></g><g><title>edata_heap_ph_cmp (18 samples, 0.05%)</title><rect x="42.3484%" y="133" width="0.0474%" height="15" fill="rgb(233,194,0)" fg:x="16089" fg:w="18"/><text x="42.5984%" y="143.50"></text></g><g><title>edata_snad_comp (18 samples, 0.05%)</title><rect x="42.3484%" y="117" width="0.0474%" height="15" fill="rgb(249,111,24)" fg:x="16089" fg:w="18"/><text x="42.5984%" y="127.50"></text></g><g><title>edata_cmp_summary_get (18 samples, 0.05%)</title><rect x="42.3484%" y="101" width="0.0474%" height="15" fill="rgb(250,223,3)" fg:x="16089" fg:w="18"/><text x="42.5984%" y="111.50"></text></g><g><title>edata_sn_get (18 samples, 0.05%)</title><rect x="42.3484%" y="85" width="0.0474%" height="15" fill="rgb(236,178,37)" fg:x="16089" fg:w="18"/><text x="42.5984%" y="95.50"></text></g><g><title>_rjem_je_edata_heap_insert (46 samples, 0.12%)</title><rect x="42.2852%" y="165" width="0.1211%" height="15" fill="rgb(241,158,50)" fg:x="16065" fg:w="46"/><text x="42.5352%" y="175.50"></text></g><g><title>ph_insert (36 samples, 0.09%)</title><rect x="42.3115%" y="149" width="0.0948%" height="15" fill="rgb(213,121,41)" fg:x="16075" fg:w="36"/><text x="42.5615%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (8 samples, 0.02%)</title><rect x="42.4063%" y="165" width="0.0211%" height="15" fill="rgb(240,92,3)" fg:x="16111" fg:w="8"/><text x="42.6563%" y="175.50"></text></g><g><title>sz_psz2ind (5 samples, 0.01%)</title><rect x="42.4142%" y="149" width="0.0132%" height="15" fill="rgb(205,123,3)" fg:x="16114" fg:w="5"/><text x="42.6642%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (4 samples, 0.01%)</title><rect x="42.4300%" y="165" width="0.0105%" height="15" fill="rgb(205,97,47)" fg:x="16120" fg:w="4"/><text x="42.6800%" y="175.50"></text></g><g><title>edata_list_inactive_append (16 samples, 0.04%)</title><rect x="42.4405%" y="165" width="0.0421%" height="15" fill="rgb(247,152,14)" fg:x="16124" fg:w="16"/><text x="42.6905%" y="175.50"></text></g><g><title>atomic_load_zu (19 samples, 0.05%)</title><rect x="42.4826%" y="149" width="0.0500%" height="15" fill="rgb(248,195,53)" fg:x="16140" fg:w="19"/><text x="42.7326%" y="159.50"></text></g><g><title>eset_stats_add (20 samples, 0.05%)</title><rect x="42.4826%" y="165" width="0.0526%" height="15" fill="rgb(226,201,16)" fg:x="16140" fg:w="20"/><text x="42.7326%" y="175.50"></text></g><g><title>fb_set (4 samples, 0.01%)</title><rect x="42.5353%" y="165" width="0.0105%" height="15" fill="rgb(205,98,0)" fg:x="16160" fg:w="4"/><text x="42.7853%" y="175.50"></text></g><g><title>extent_deactivate_locked (293 samples, 0.77%)</title><rect x="41.8167%" y="213" width="0.7712%" height="15" fill="rgb(214,191,48)" fg:x="15887" fg:w="293"/><text x="42.0667%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (293 samples, 0.77%)</title><rect x="41.8167%" y="197" width="0.7712%" height="15" fill="rgb(237,112,39)" fg:x="15887" fg:w="293"/><text x="42.0667%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (144 samples, 0.38%)</title><rect x="42.2089%" y="181" width="0.3790%" height="15" fill="rgb(247,203,27)" fg:x="16036" fg:w="144"/><text x="42.4589%" y="191.50"></text></g><g><title>sz_psz2ind (16 samples, 0.04%)</title><rect x="42.5458%" y="165" width="0.0421%" height="15" fill="rgb(235,124,28)" fg:x="16164" fg:w="16"/><text x="42.7958%" y="175.50"></text></g><g><title>edata_avail_ph_cmp (11 samples, 0.03%)</title><rect x="42.8380%" y="85" width="0.0290%" height="15" fill="rgb(208,207,46)" fg:x="16275" fg:w="11"/><text x="43.0880%" y="95.50"></text></g><g><title>edata_esnead_comp (11 samples, 0.03%)</title><rect x="42.8380%" y="69" width="0.0290%" height="15" fill="rgb(234,176,4)" fg:x="16275" fg:w="11"/><text x="43.0880%" y="79.50"></text></g><g><title>edata_esn_comp (9 samples, 0.02%)</title><rect x="42.8432%" y="53" width="0.0237%" height="15" fill="rgb(230,133,28)" fg:x="16277" fg:w="9"/><text x="43.0932%" y="63.50"></text></g><g><title>edata_esn_get (9 samples, 0.02%)</title><rect x="42.8432%" y="37" width="0.0237%" height="15" fill="rgb(211,137,40)" fg:x="16277" fg:w="9"/><text x="43.0932%" y="47.50"></text></g><g><title>phn_merge (14 samples, 0.04%)</title><rect x="42.8380%" y="101" width="0.0368%" height="15" fill="rgb(254,35,13)" fg:x="16275" fg:w="14"/><text x="43.0880%" y="111.50"></text></g><g><title>phn_merge_siblings (25 samples, 0.07%)</title><rect x="42.8327%" y="117" width="0.0658%" height="15" fill="rgb(225,49,51)" fg:x="16273" fg:w="25"/><text x="43.0827%" y="127.50"></text></g><g><title>phn_next_get (9 samples, 0.02%)</title><rect x="42.8748%" y="101" width="0.0237%" height="15" fill="rgb(251,10,15)" fg:x="16289" fg:w="9"/><text x="43.1248%" y="111.50"></text></g><g><title>_rjem_je_edata_avail_first (58 samples, 0.15%)</title><rect x="42.7669%" y="165" width="0.1527%" height="15" fill="rgb(228,207,15)" fg:x="16248" fg:w="58"/><text x="43.0169%" y="175.50"></text></g><g><title>ph_first (50 samples, 0.13%)</title><rect x="42.7880%" y="149" width="0.1316%" height="15" fill="rgb(241,99,19)" fg:x="16256" fg:w="50"/><text x="43.0380%" y="159.50"></text></g><g><title>ph_merge_aux (39 samples, 0.10%)</title><rect x="42.8169%" y="133" width="0.1027%" height="15" fill="rgb(207,104,49)" fg:x="16267" fg:w="39"/><text x="43.0669%" y="143.50"></text></g><g><title>phn_next_get (8 samples, 0.02%)</title><rect x="42.8985%" y="117" width="0.0211%" height="15" fill="rgb(234,99,18)" fg:x="16298" fg:w="8"/><text x="43.1485%" y="127.50"></text></g><g><title>edata_avail_ph_cmp (16 samples, 0.04%)</title><rect x="42.9985%" y="85" width="0.0421%" height="15" fill="rgb(213,191,49)" fg:x="16336" fg:w="16"/><text x="43.2485%" y="95.50"></text></g><g><title>edata_esnead_comp (16 samples, 0.04%)</title><rect x="42.9985%" y="69" width="0.0421%" height="15" fill="rgb(210,226,19)" fg:x="16336" fg:w="16"/><text x="43.2485%" y="79.50"></text></g><g><title>edata_esn_comp (12 samples, 0.03%)</title><rect x="43.0091%" y="53" width="0.0316%" height="15" fill="rgb(229,97,18)" fg:x="16340" fg:w="12"/><text x="43.2591%" y="63.50"></text></g><g><title>edata_esn_get (8 samples, 0.02%)</title><rect x="43.0196%" y="37" width="0.0211%" height="15" fill="rgb(211,167,15)" fg:x="16344" fg:w="8"/><text x="43.2696%" y="47.50"></text></g><g><title>phn_lchild_get (8 samples, 0.02%)</title><rect x="43.0433%" y="69" width="0.0211%" height="15" fill="rgb(210,169,34)" fg:x="16353" fg:w="8"/><text x="43.2933%" y="79.50"></text></g><g><title>phn_lchild_set (7 samples, 0.02%)</title><rect x="43.0643%" y="69" width="0.0184%" height="15" fill="rgb(241,121,31)" fg:x="16361" fg:w="7"/><text x="43.3143%" y="79.50"></text></g><g><title>phn_merge (43 samples, 0.11%)</title><rect x="42.9985%" y="101" width="0.1132%" height="15" fill="rgb(232,40,11)" fg:x="16336" fg:w="43"/><text x="43.2485%" y="111.50"></text></g><g><title>phn_merge_ordered (27 samples, 0.07%)</title><rect x="43.0406%" y="85" width="0.0711%" height="15" fill="rgb(205,86,26)" fg:x="16352" fg:w="27"/><text x="43.2906%" y="95.50"></text></g><g><title>phn_prev_set (11 samples, 0.03%)</title><rect x="43.0828%" y="69" width="0.0290%" height="15" fill="rgb(231,126,28)" fg:x="16368" fg:w="11"/><text x="43.3328%" y="79.50"></text></g><g><title>phn_next_get (134 samples, 0.35%)</title><rect x="43.1117%" y="101" width="0.3527%" height="15" fill="rgb(219,221,18)" fg:x="16379" fg:w="134"/><text x="43.3617%" y="111.50"></text></g><g><title>phn_next_set (8 samples, 0.02%)</title><rect x="43.4644%" y="101" width="0.0211%" height="15" fill="rgb(211,40,0)" fg:x="16513" fg:w="8"/><text x="43.7144%" y="111.50"></text></g><g><title>ph_merge_children (202 samples, 0.53%)</title><rect x="42.9722%" y="133" width="0.5317%" height="15" fill="rgb(239,85,43)" fg:x="16326" fg:w="202"/><text x="43.2222%" y="143.50"></text></g><g><title>phn_merge_siblings (202 samples, 0.53%)</title><rect x="42.9722%" y="117" width="0.5317%" height="15" fill="rgb(231,55,21)" fg:x="16326" fg:w="202"/><text x="43.2222%" y="127.50"></text></g><g><title>phn_prev_set (7 samples, 0.02%)</title><rect x="43.4855%" y="101" width="0.0184%" height="15" fill="rgb(225,184,43)" fg:x="16521" fg:w="7"/><text x="43.7355%" y="111.50"></text></g><g><title>phn_lchild_get (4 samples, 0.01%)</title><rect x="43.5039%" y="133" width="0.0105%" height="15" fill="rgb(251,158,41)" fg:x="16528" fg:w="4"/><text x="43.7539%" y="143.50"></text></g><g><title>_rjem_je_edata_avail_remove (227 samples, 0.60%)</title><rect x="42.9196%" y="165" width="0.5975%" height="15" fill="rgb(234,159,37)" fg:x="16306" fg:w="227"/><text x="43.1696%" y="175.50"></text></g><g><title>ph_remove (219 samples, 0.58%)</title><rect x="42.9406%" y="149" width="0.5764%" height="15" fill="rgb(216,204,22)" fg:x="16314" fg:w="219"/><text x="43.1906%" y="159.50"></text></g><g><title>malloc_mutex_trylock_final (62 samples, 0.16%)</title><rect x="43.5197%" y="149" width="0.1632%" height="15" fill="rgb(214,17,3)" fg:x="16534" fg:w="62"/><text x="43.7697%" y="159.50"></text></g><g><title>pthread_mutex_trylock (61 samples, 0.16%)</title><rect x="43.5223%" y="133" width="0.1606%" height="15" fill="rgb(212,111,17)" fg:x="16535" fg:w="61"/><text x="43.7723%" y="143.50"></text></g><g><title>malloc_mutex_lock (63 samples, 0.17%)</title><rect x="43.5197%" y="165" width="0.1658%" height="15" fill="rgb(221,157,24)" fg:x="16534" fg:w="63"/><text x="43.7697%" y="175.50"></text></g><g><title>[libc.so.6] (64 samples, 0.17%)</title><rect x="43.6881%" y="149" width="0.1685%" height="15" fill="rgb(252,16,13)" fg:x="16598" fg:w="64"/><text x="43.9381%" y="159.50"></text></g><g><title>pthread_mutex_unlock (43 samples, 0.11%)</title><rect x="43.8566%" y="149" width="0.1132%" height="15" fill="rgb(221,62,2)" fg:x="16662" fg:w="43"/><text x="44.1066%" y="159.50"></text></g><g><title>_rjem_je_edata_cache_get (477 samples, 1.26%)</title><rect x="42.7406%" y="181" width="1.2555%" height="15" fill="rgb(247,87,22)" fg:x="16238" fg:w="477"/><text x="42.9906%" y="191.50"></text></g><g><title>malloc_mutex_unlock (118 samples, 0.31%)</title><rect x="43.6855%" y="165" width="0.3106%" height="15" fill="rgb(215,73,9)" fg:x="16597" fg:w="118"/><text x="43.9355%" y="175.50"></text></g><g><title>pthread_mutex_unlock@plt (10 samples, 0.03%)</title><rect x="43.9698%" y="149" width="0.0263%" height="15" fill="rgb(207,175,33)" fg:x="16705" fg:w="10"/><text x="44.2198%" y="159.50"></text></g><g><title>rtree_contents_encode (8 samples, 0.02%)</title><rect x="44.0224%" y="133" width="0.0211%" height="15" fill="rgb(243,129,54)" fg:x="16725" fg:w="8"/><text x="44.2724%" y="143.50"></text></g><g><title>rtree_leaf_elm_bits_encode (8 samples, 0.02%)</title><rect x="44.0224%" y="117" width="0.0211%" height="15" fill="rgb(227,119,45)" fg:x="16725" fg:w="8"/><text x="44.2724%" y="127.50"></text></g><g><title>_rjem_je_emap_split_commit (22 samples, 0.06%)</title><rect x="43.9961%" y="181" width="0.0579%" height="15" fill="rgb(205,109,36)" fg:x="16715" fg:w="22"/><text x="44.2461%" y="191.50"></text></g><g><title>emap_rtree_write_acquired (17 samples, 0.04%)</title><rect x="44.0093%" y="165" width="0.0447%" height="15" fill="rgb(205,6,39)" fg:x="16720" fg:w="17"/><text x="44.2593%" y="175.50"></text></g><g><title>rtree_leaf_elm_write (12 samples, 0.03%)</title><rect x="44.0224%" y="149" width="0.0316%" height="15" fill="rgb(221,32,16)" fg:x="16725" fg:w="12"/><text x="44.2724%" y="159.50"></text></g><g><title>rtree_leaf_elm_write_commit (4 samples, 0.01%)</title><rect x="44.0435%" y="133" width="0.0105%" height="15" fill="rgb(228,144,50)" fg:x="16733" fg:w="4"/><text x="44.2935%" y="143.50"></text></g><g><title>atomic_store_p (4 samples, 0.01%)</title><rect x="44.0435%" y="117" width="0.0105%" height="15" fill="rgb(229,201,53)" fg:x="16733" fg:w="4"/><text x="44.2935%" y="127.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (33 samples, 0.09%)</title><rect x="44.0856%" y="165" width="0.0869%" height="15" fill="rgb(249,153,27)" fg:x="16749" fg:w="33"/><text x="44.3356%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (28 samples, 0.07%)</title><rect x="44.0988%" y="149" width="0.0737%" height="15" fill="rgb(227,106,25)" fg:x="16754" fg:w="28"/><text x="44.3488%" y="159.50"></text></g><g><title>_rjem_je_emap_split_prepare (46 samples, 0.12%)</title><rect x="44.0540%" y="181" width="0.1211%" height="15" fill="rgb(230,65,29)" fg:x="16737" fg:w="46"/><text x="44.3040%" y="191.50"></text></g><g><title>edata_init (5 samples, 0.01%)</title><rect x="44.1830%" y="181" width="0.0132%" height="15" fill="rgb(221,57,46)" fg:x="16786" fg:w="5"/><text x="44.4330%" y="191.50"></text></g><g><title>edata_size_set (4 samples, 0.01%)</title><rect x="44.1961%" y="181" width="0.0105%" height="15" fill="rgb(229,161,17)" fg:x="16791" fg:w="4"/><text x="44.4461%" y="191.50"></text></g><g><title>_rjem_je_ehooks_default_split_impl (5 samples, 0.01%)</title><rect x="44.2383%" y="165" width="0.0132%" height="15" fill="rgb(222,213,11)" fg:x="16807" fg:w="5"/><text x="44.4883%" y="175.50"></text></g><g><title>ehooks_split (18 samples, 0.05%)</title><rect x="44.2067%" y="181" width="0.0474%" height="15" fill="rgb(235,35,13)" fg:x="16795" fg:w="18"/><text x="44.4567%" y="191.50"></text></g><g><title>extent_recycle_split (929 samples, 2.45%)</title><rect x="41.8167%" y="229" width="2.4453%" height="15" fill="rgb(233,158,34)" fg:x="15887" fg:w="929"/><text x="42.0667%" y="239.50">ex..</text></g><g><title>extent_split_interior (636 samples, 1.67%)</title><rect x="42.5879%" y="213" width="1.6740%" height="15" fill="rgb(215,151,48)" fg:x="16180" fg:w="636"/><text x="42.8379%" y="223.50"></text></g><g><title>extent_split_impl (618 samples, 1.63%)</title><rect x="42.6353%" y="197" width="1.6267%" height="15" fill="rgb(229,84,14)" fg:x="16198" fg:w="618"/><text x="42.8853%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.01%)</title><rect x="44.2777%" y="197" width="0.0105%" height="15" fill="rgb(229,68,14)" fg:x="16822" fg:w="4"/><text x="44.5277%" y="207.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (11 samples, 0.03%)</title><rect x="44.2698%" y="213" width="0.0290%" height="15" fill="rgb(243,106,26)" fg:x="16819" fg:w="11"/><text x="44.5198%" y="223.50"></text></g><g><title>spin_cpu_spinwait (4 samples, 0.01%)</title><rect x="44.2883%" y="197" width="0.0105%" height="15" fill="rgb(206,45,38)" fg:x="16826" fg:w="4"/><text x="44.5383%" y="207.50"></text></g><g><title>pthread_mutex_trylock (147 samples, 0.39%)</title><rect x="44.3014%" y="197" width="0.3869%" height="15" fill="rgb(226,6,15)" fg:x="16831" fg:w="147"/><text x="44.5514%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (177 samples, 0.47%)</title><rect x="44.2988%" y="213" width="0.4659%" height="15" fill="rgb(232,22,54)" fg:x="16830" fg:w="177"/><text x="44.5488%" y="223.50"></text></g><g><title>pthread_mutex_trylock@plt (29 samples, 0.08%)</title><rect x="44.6884%" y="197" width="0.0763%" height="15" fill="rgb(229,222,32)" fg:x="16978" fg:w="29"/><text x="44.9384%" y="207.50"></text></g><g><title>malloc_mutex_lock (192 samples, 0.51%)</title><rect x="44.2619%" y="229" width="0.5054%" height="15" fill="rgb(228,62,29)" fg:x="16816" fg:w="192"/><text x="44.5119%" y="239.50"></text></g><g><title>[libc.so.6] (61 samples, 0.16%)</title><rect x="44.7673%" y="213" width="0.1606%" height="15" fill="rgb(251,103,34)" fg:x="17008" fg:w="61"/><text x="45.0173%" y="223.50"></text></g><g><title>extent_recycle (1,928 samples, 5.07%)</title><rect x="39.8847%" y="245" width="5.0748%" height="15" fill="rgb(233,12,30)" fg:x="15153" fg:w="1928"/><text x="40.1347%" y="255.50">extent..</text></g><g><title>malloc_mutex_unlock (73 samples, 0.19%)</title><rect x="44.7673%" y="229" width="0.1921%" height="15" fill="rgb(238,52,0)" fg:x="17008" fg:w="73"/><text x="45.0173%" y="239.50"></text></g><g><title>pthread_mutex_unlock (12 samples, 0.03%)</title><rect x="44.9279%" y="213" width="0.0316%" height="15" fill="rgb(223,98,5)" fg:x="17069" fg:w="12"/><text x="45.1779%" y="223.50"></text></g><g><title>_rjem_je_ecache_alloc (1,950 samples, 5.13%)</title><rect x="39.8321%" y="261" width="5.1327%" height="15" fill="rgb(228,75,37)" fg:x="15133" fg:w="1950"/><text x="40.0821%" y="271.50">_rjem_..</text></g><g><title>_rjem_je_edata_heap_first (5 samples, 0.01%)</title><rect x="44.9647%" y="165" width="0.0132%" height="15" fill="rgb(205,115,49)" fg:x="17083" fg:w="5"/><text x="45.2147%" y="175.50"></text></g><g><title>ph_first (5 samples, 0.01%)</title><rect x="44.9647%" y="149" width="0.0132%" height="15" fill="rgb(250,154,43)" fg:x="17083" fg:w="5"/><text x="45.2147%" y="159.50"></text></g><g><title>_rjem_je_eset_fit (9 samples, 0.02%)</title><rect x="44.9647%" y="197" width="0.0237%" height="15" fill="rgb(226,43,29)" fg:x="17083" fg:w="9"/><text x="45.2147%" y="207.50"></text></g><g><title>eset_first_fit (9 samples, 0.02%)</title><rect x="44.9647%" y="181" width="0.0237%" height="15" fill="rgb(249,228,39)" fg:x="17083" fg:w="9"/><text x="45.2147%" y="191.50"></text></g><g><title>extent_recycle_extract (18 samples, 0.05%)</title><rect x="44.9647%" y="213" width="0.0474%" height="15" fill="rgb(216,79,43)" fg:x="17083" fg:w="18"/><text x="45.2147%" y="223.50"></text></g><g><title>extent_activate_locked (9 samples, 0.02%)</title><rect x="44.9884%" y="197" width="0.0237%" height="15" fill="rgb(228,95,12)" fg:x="17092" fg:w="9"/><text x="45.2384%" y="207.50"></text></g><g><title>_rjem_je_eset_remove (6 samples, 0.02%)</title><rect x="44.9963%" y="181" width="0.0158%" height="15" fill="rgb(249,221,15)" fg:x="17095" fg:w="6"/><text x="45.2463%" y="191.50"></text></g><g><title>_rjem_je_emap_update_edata_state (9 samples, 0.02%)</title><rect x="45.0174%" y="165" width="0.0237%" height="15" fill="rgb(233,34,13)" fg:x="17103" fg:w="9"/><text x="45.2674%" y="175.50"></text></g><g><title>rtree_leaf_elm_state_update (6 samples, 0.02%)</title><rect x="45.0253%" y="149" width="0.0158%" height="15" fill="rgb(214,103,39)" fg:x="17106" fg:w="6"/><text x="45.2753%" y="159.50"></text></g><g><title>rtree_leaf_elm_bits_read (5 samples, 0.01%)</title><rect x="45.0279%" y="133" width="0.0132%" height="15" fill="rgb(251,126,39)" fg:x="17107" fg:w="5"/><text x="45.2779%" y="143.50"></text></g><g><title>atomic_load_p (5 samples, 0.01%)</title><rect x="45.0279%" y="117" width="0.0132%" height="15" fill="rgb(214,216,36)" fg:x="17107" fg:w="5"/><text x="45.2779%" y="127.50"></text></g><g><title>extent_deactivate_locked (15 samples, 0.04%)</title><rect x="45.0121%" y="197" width="0.0395%" height="15" fill="rgb(220,221,8)" fg:x="17101" fg:w="15"/><text x="45.2621%" y="207.50"></text></g><g><title>extent_deactivate_locked_impl (15 samples, 0.04%)</title><rect x="45.0121%" y="181" width="0.0395%" height="15" fill="rgb(240,216,3)" fg:x="17101" fg:w="15"/><text x="45.2621%" y="191.50"></text></g><g><title>_rjem_je_eset_insert (4 samples, 0.01%)</title><rect x="45.0411%" y="165" width="0.0105%" height="15" fill="rgb(232,218,17)" fg:x="17112" fg:w="4"/><text x="45.2911%" y="175.50"></text></g><g><title>_rjem_je_edata_avail_remove (6 samples, 0.02%)</title><rect x="45.0700%" y="149" width="0.0158%" height="15" fill="rgb(229,163,45)" fg:x="17123" fg:w="6"/><text x="45.3200%" y="159.50"></text></g><g><title>ph_remove (6 samples, 0.02%)</title><rect x="45.0700%" y="133" width="0.0158%" height="15" fill="rgb(231,110,42)" fg:x="17123" fg:w="6"/><text x="45.3200%" y="143.50"></text></g><g><title>ph_merge_children (6 samples, 0.02%)</title><rect x="45.0700%" y="117" width="0.0158%" height="15" fill="rgb(208,170,48)" fg:x="17123" fg:w="6"/><text x="45.3200%" y="127.50"></text></g><g><title>phn_merge_siblings (6 samples, 0.02%)</title><rect x="45.0700%" y="101" width="0.0158%" height="15" fill="rgb(239,116,25)" fg:x="17123" fg:w="6"/><text x="45.3200%" y="111.50"></text></g><g><title>phn_next_get (4 samples, 0.01%)</title><rect x="45.0753%" y="85" width="0.0105%" height="15" fill="rgb(219,200,50)" fg:x="17125" fg:w="4"/><text x="45.3253%" y="95.50"></text></g><g><title>_rjem_je_edata_cache_get (11 samples, 0.03%)</title><rect x="45.0648%" y="165" width="0.0290%" height="15" fill="rgb(245,200,0)" fg:x="17121" fg:w="11"/><text x="45.3148%" y="175.50"></text></g><g><title>extent_recycle_split (34 samples, 0.09%)</title><rect x="45.0121%" y="213" width="0.0895%" height="15" fill="rgb(245,119,33)" fg:x="17101" fg:w="34"/><text x="45.2621%" y="223.50"></text></g><g><title>extent_split_interior (19 samples, 0.05%)</title><rect x="45.0516%" y="197" width="0.0500%" height="15" fill="rgb(231,125,12)" fg:x="17116" fg:w="19"/><text x="45.3016%" y="207.50"></text></g><g><title>extent_split_impl (19 samples, 0.05%)</title><rect x="45.0516%" y="181" width="0.0500%" height="15" fill="rgb(216,96,41)" fg:x="17116" fg:w="19"/><text x="45.3016%" y="191.50"></text></g><g><title>extent_recycle (54 samples, 0.14%)</title><rect x="44.9647%" y="229" width="0.1421%" height="15" fill="rgb(248,43,45)" fg:x="17083" fg:w="54"/><text x="45.2147%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (56 samples, 0.15%)</title><rect x="44.9647%" y="261" width="0.1474%" height="15" fill="rgb(217,222,7)" fg:x="17083" fg:w="56"/><text x="45.2147%" y="271.50"></text></g><g><title>extent_alloc_retained (56 samples, 0.15%)</title><rect x="44.9647%" y="245" width="0.1474%" height="15" fill="rgb(233,28,6)" fg:x="17083" fg:w="56"/><text x="45.2147%" y="255.50"></text></g><g><title>pac_alloc_real (2,029 samples, 5.34%)</title><rect x="39.7847%" y="277" width="5.3406%" height="15" fill="rgb(231,218,15)" fg:x="15115" fg:w="2029"/><text x="40.0347%" y="287.50">pac_all..</text></g><g><title>pac_may_have_muzzy (4 samples, 0.01%)</title><rect x="45.1148%" y="261" width="0.0105%" height="15" fill="rgb(226,171,48)" fg:x="17140" fg:w="4"/><text x="45.3648%" y="271.50"></text></g><g><title>_rjem_je_pac_decay_ms_get (4 samples, 0.01%)</title><rect x="45.1148%" y="245" width="0.0105%" height="15" fill="rgb(235,201,9)" fg:x="17140" fg:w="4"/><text x="45.3648%" y="255.50"></text></g><g><title>decay_ms_read (4 samples, 0.01%)</title><rect x="45.1148%" y="229" width="0.0105%" height="15" fill="rgb(217,80,15)" fg:x="17140" fg:w="4"/><text x="45.3648%" y="239.50"></text></g><g><title>atomic_load_zd (4 samples, 0.01%)</title><rect x="45.1148%" y="213" width="0.0105%" height="15" fill="rgb(219,152,8)" fg:x="17140" fg:w="4"/><text x="45.3648%" y="223.50"></text></g><g><title>_rjem_je_pa_alloc (2,234 samples, 5.88%)</title><rect x="39.3162%" y="325" width="5.8802%" height="15" fill="rgb(243,107,38)" fg:x="14937" fg:w="2234"/><text x="39.5662%" y="335.50">_rjem_j..</text></g><g><title>pai_alloc (2,104 samples, 5.54%)</title><rect x="39.6583%" y="309" width="5.5380%" height="15" fill="rgb(231,17,5)" fg:x="15067" fg:w="2104"/><text x="39.9083%" y="319.50">pai_all..</text></g><g><title>pac_alloc_impl (2,099 samples, 5.52%)</title><rect x="39.6715%" y="293" width="5.5248%" height="15" fill="rgb(209,25,54)" fg:x="15072" fg:w="2099"/><text x="39.9215%" y="303.50">pac_all..</text></g><g><title>pac_ehooks_get (27 samples, 0.07%)</title><rect x="45.1253%" y="277" width="0.0711%" height="15" fill="rgb(219,0,2)" fg:x="17144" fg:w="27"/><text x="45.3753%" y="287.50"></text></g><g><title>arena_cache_oblivious_randomize (5 samples, 0.01%)</title><rect x="45.1964%" y="325" width="0.0132%" height="15" fill="rgb(246,9,5)" fg:x="17171" fg:w="5"/><text x="45.4464%" y="335.50"></text></g><g><title>locked_inc_u64 (52 samples, 0.14%)</title><rect x="45.2227%" y="309" width="0.1369%" height="15" fill="rgb(226,159,4)" fg:x="17181" fg:w="52"/><text x="45.4727%" y="319.50"></text></g><g><title>atomic_fetch_add_u64 (52 samples, 0.14%)</title><rect x="45.2227%" y="293" width="0.1369%" height="15" fill="rgb(219,175,34)" fg:x="17181" fg:w="52"/><text x="45.4727%" y="303.50"></text></g><g><title>arena_large_malloc_stats_update (62 samples, 0.16%)</title><rect x="45.2095%" y="325" width="0.1632%" height="15" fill="rgb(236,10,46)" fg:x="17176" fg:w="62"/><text x="45.4595%" y="335.50"></text></g><g><title>sz_size2index (5 samples, 0.01%)</title><rect x="45.3595%" y="309" width="0.0132%" height="15" fill="rgb(240,211,16)" fg:x="17233" fg:w="5"/><text x="45.6095%" y="319.50"></text></g><g><title>sz_size2index_compute (5 samples, 0.01%)</title><rect x="45.3595%" y="293" width="0.0132%" height="15" fill="rgb(205,3,43)" fg:x="17233" fg:w="5"/><text x="45.6095%" y="303.50"></text></g><g><title>san_large_extent_decide_guard (37 samples, 0.10%)</title><rect x="45.3727%" y="325" width="0.0974%" height="15" fill="rgb(245,7,22)" fg:x="17238" fg:w="37"/><text x="45.6227%" y="335.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (2,439 samples, 6.42%)</title><rect x="39.1030%" y="341" width="6.4198%" height="15" fill="rgb(239,132,32)" fg:x="14856" fg:w="2439"/><text x="39.3530%" y="351.50">_rjem_je..</text></g><g><title>sz_size2index (20 samples, 0.05%)</title><rect x="45.4701%" y="325" width="0.0526%" height="15" fill="rgb(228,202,34)" fg:x="17275" fg:w="20"/><text x="45.7201%" y="335.50"></text></g><g><title>sz_size2index_compute (20 samples, 0.05%)</title><rect x="45.4701%" y="309" width="0.0526%" height="15" fill="rgb(254,200,22)" fg:x="17275" fg:w="20"/><text x="45.7201%" y="319.50"></text></g><g><title>_rjem_je_decay_maybe_advance_epoch (4 samples, 0.01%)</title><rect x="45.5306%" y="229" width="0.0105%" height="15" fill="rgb(219,10,39)" fg:x="17298" fg:w="4"/><text x="45.7806%" y="239.50"></text></g><g><title>arena_decay_dirty (9 samples, 0.02%)</title><rect x="45.5280%" y="293" width="0.0237%" height="15" fill="rgb(226,210,39)" fg:x="17297" fg:w="9"/><text x="45.7780%" y="303.50"></text></g><g><title>arena_decay_impl (8 samples, 0.02%)</title><rect x="45.5306%" y="277" width="0.0211%" height="15" fill="rgb(208,219,16)" fg:x="17298" fg:w="8"/><text x="45.7806%" y="287.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (8 samples, 0.02%)</title><rect x="45.5306%" y="261" width="0.0211%" height="15" fill="rgb(216,158,51)" fg:x="17298" fg:w="8"/><text x="45.7806%" y="271.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (8 samples, 0.02%)</title><rect x="45.5306%" y="245" width="0.0211%" height="15" fill="rgb(233,14,44)" fg:x="17298" fg:w="8"/><text x="45.7806%" y="255.50"></text></g><g><title>_rjem_je_arena_decay (11 samples, 0.03%)</title><rect x="45.5280%" y="309" width="0.0290%" height="15" fill="rgb(237,97,39)" fg:x="17297" fg:w="11"/><text x="45.7780%" y="319.50"></text></g><g><title>arena_decay_tick (13 samples, 0.03%)</title><rect x="45.5254%" y="341" width="0.0342%" height="15" fill="rgb(218,198,43)" fg:x="17296" fg:w="13"/><text x="45.7754%" y="351.50"></text></g><g><title>arena_decay_ticks (13 samples, 0.03%)</title><rect x="45.5254%" y="325" width="0.0342%" height="15" fill="rgb(231,104,20)" fg:x="17296" fg:w="13"/><text x="45.7754%" y="335.50"></text></g><g><title>_rjem_je_large_palloc (2,513 samples, 6.61%)</title><rect x="39.0609%" y="357" width="6.6146%" height="15" fill="rgb(254,36,13)" fg:x="14840" fg:w="2513"/><text x="39.3109%" y="367.50">_rjem_je_..</text></g><g><title>sz_sa2u (43 samples, 0.11%)</title><rect x="45.5622%" y="341" width="0.1132%" height="15" fill="rgb(248,14,50)" fg:x="17310" fg:w="43"/><text x="45.8122%" y="351.50"></text></g><g><title>sz_s2u (11 samples, 0.03%)</title><rect x="45.6465%" y="325" width="0.0290%" height="15" fill="rgb(217,107,29)" fg:x="17342" fg:w="11"/><text x="45.8965%" y="335.50"></text></g><g><title>sz_s2u_compute (11 samples, 0.03%)</title><rect x="45.6465%" y="309" width="0.0290%" height="15" fill="rgb(251,169,33)" fg:x="17342" fg:w="11"/><text x="45.8965%" y="319.50"></text></g><g><title>_rjem_je_bitmap_init (4 samples, 0.01%)</title><rect x="45.6886%" y="293" width="0.0105%" height="15" fill="rgb(217,108,32)" fg:x="17358" fg:w="4"/><text x="45.9386%" y="303.50"></text></g><g><title>_rjem_je_eset_fit (4 samples, 0.01%)</title><rect x="45.7044%" y="181" width="0.0105%" height="15" fill="rgb(219,66,42)" fg:x="17364" fg:w="4"/><text x="45.9544%" y="191.50"></text></g><g><title>eset_first_fit (4 samples, 0.01%)</title><rect x="45.7044%" y="165" width="0.0105%" height="15" fill="rgb(206,180,7)" fg:x="17364" fg:w="4"/><text x="45.9544%" y="175.50"></text></g><g><title>pac_alloc_real (7 samples, 0.02%)</title><rect x="45.7017%" y="245" width="0.0184%" height="15" fill="rgb(208,226,31)" fg:x="17363" fg:w="7"/><text x="45.9517%" y="255.50"></text></g><g><title>_rjem_je_ecache_alloc (7 samples, 0.02%)</title><rect x="45.7017%" y="229" width="0.0184%" height="15" fill="rgb(218,26,49)" fg:x="17363" fg:w="7"/><text x="45.9517%" y="239.50"></text></g><g><title>extent_recycle (7 samples, 0.02%)</title><rect x="45.7017%" y="213" width="0.0184%" height="15" fill="rgb(233,197,48)" fg:x="17363" fg:w="7"/><text x="45.9517%" y="223.50"></text></g><g><title>extent_recycle_extract (7 samples, 0.02%)</title><rect x="45.7017%" y="197" width="0.0184%" height="15" fill="rgb(252,181,51)" fg:x="17363" fg:w="7"/><text x="45.9517%" y="207.50"></text></g><g><title>arena_slab_alloc (13 samples, 0.03%)</title><rect x="45.6886%" y="309" width="0.0342%" height="15" fill="rgb(253,90,19)" fg:x="17358" fg:w="13"/><text x="45.9386%" y="319.50"></text></g><g><title>_rjem_je_pa_alloc (9 samples, 0.02%)</title><rect x="45.6991%" y="293" width="0.0237%" height="15" fill="rgb(215,171,30)" fg:x="17362" fg:w="9"/><text x="45.9491%" y="303.50"></text></g><g><title>pai_alloc (8 samples, 0.02%)</title><rect x="45.7017%" y="277" width="0.0211%" height="15" fill="rgb(214,222,9)" fg:x="17363" fg:w="8"/><text x="45.9517%" y="287.50"></text></g><g><title>pac_alloc_impl (8 samples, 0.02%)</title><rect x="45.7017%" y="261" width="0.0211%" height="15" fill="rgb(223,3,22)" fg:x="17363" fg:w="8"/><text x="45.9517%" y="271.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (24 samples, 0.06%)</title><rect x="45.6754%" y="341" width="0.0632%" height="15" fill="rgb(225,196,46)" fg:x="17353" fg:w="24"/><text x="45.9254%" y="351.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (24 samples, 0.06%)</title><rect x="45.6754%" y="325" width="0.0632%" height="15" fill="rgb(209,110,37)" fg:x="17353" fg:w="24"/><text x="45.9254%" y="335.50"></text></g><g><title>iallocztm (2,654 samples, 6.99%)</title><rect x="38.8213%" y="389" width="6.9857%" height="15" fill="rgb(249,89,12)" fg:x="14749" fg:w="2654"/><text x="39.0713%" y="399.50">iallocztm</text></g><g><title>arena_malloc (2,654 samples, 6.99%)</title><rect x="38.8213%" y="373" width="6.9857%" height="15" fill="rgb(226,27,33)" fg:x="14749" fg:w="2654"/><text x="39.0713%" y="383.50">arena_mal..</text></g><g><title>tcache_alloc_small (50 samples, 0.13%)</title><rect x="45.6754%" y="357" width="0.1316%" height="15" fill="rgb(213,82,22)" fg:x="17353" fg:w="50"/><text x="45.9254%" y="367.50"></text></g><g><title>cache_bin_alloc (26 samples, 0.07%)</title><rect x="45.7386%" y="341" width="0.0684%" height="15" fill="rgb(248,140,0)" fg:x="17377" fg:w="26"/><text x="45.9886%" y="351.50"></text></g><g><title>cache_bin_alloc_impl (26 samples, 0.07%)</title><rect x="45.7386%" y="325" width="0.0684%" height="15" fill="rgb(228,106,3)" fg:x="17377" fg:w="26"/><text x="45.9886%" y="335.50"></text></g><g><title>imalloc_no_sample (2,655 samples, 6.99%)</title><rect x="38.8213%" y="405" width="6.9883%" height="15" fill="rgb(209,23,37)" fg:x="14749" fg:w="2655"/><text x="39.0713%" y="415.50">imalloc_n..</text></g><g><title>peak_update (11 samples, 0.03%)</title><rect x="45.8465%" y="341" width="0.0290%" height="15" fill="rgb(241,93,50)" fg:x="17418" fg:w="11"/><text x="46.0965%" y="351.50"></text></g><g><title>_rjem_je_peak_event_update (15 samples, 0.04%)</title><rect x="45.8465%" y="357" width="0.0395%" height="15" fill="rgb(253,46,43)" fg:x="17418" fg:w="15"/><text x="46.0965%" y="367.50"></text></g><g><title>tsd_thread_allocated_get (4 samples, 0.01%)</title><rect x="45.8754%" y="341" width="0.0105%" height="15" fill="rgb(226,206,43)" fg:x="17429" fg:w="4"/><text x="46.1254%" y="351.50"></text></g><g><title>_rjem_je_peak_alloc_event_handler (19 samples, 0.05%)</title><rect x="45.8465%" y="373" width="0.0500%" height="15" fill="rgb(217,54,7)" fg:x="17418" fg:w="19"/><text x="46.0965%" y="383.50"></text></g><g><title>peak_event_activity_callback (4 samples, 0.01%)</title><rect x="45.8860%" y="357" width="0.0105%" height="15" fill="rgb(223,5,52)" fg:x="17433" fg:w="4"/><text x="46.1360%" y="367.50"></text></g><g><title>_rjem_je_peak_alloc_new_event_wait (9 samples, 0.02%)</title><rect x="46.1018%" y="357" width="0.0237%" height="15" fill="rgb(206,52,46)" fg:x="17515" fg:w="9"/><text x="46.3518%" y="367.50"></text></g><g><title>cache_bin_ncached_get_local (20 samples, 0.05%)</title><rect x="46.2571%" y="309" width="0.0526%" height="15" fill="rgb(253,136,11)" fg:x="17574" fg:w="20"/><text x="46.5071%" y="319.50"></text></g><g><title>cache_bin_ncached_get_internal (20 samples, 0.05%)</title><rect x="46.2571%" y="293" width="0.0526%" height="15" fill="rgb(208,106,33)" fg:x="17574" fg:w="20"/><text x="46.5071%" y="303.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (50 samples, 0.13%)</title><rect x="46.2282%" y="325" width="0.1316%" height="15" fill="rgb(206,54,4)" fg:x="17563" fg:w="50"/><text x="46.4782%" y="335.50"></text></g><g><title>cache_bin_nstashed_get_local (19 samples, 0.05%)</title><rect x="46.3097%" y="309" width="0.0500%" height="15" fill="rgb(213,3,15)" fg:x="17594" fg:w="19"/><text x="46.5597%" y="319.50"></text></g><g><title>cache_bin_nstashed_get_internal (19 samples, 0.05%)</title><rect x="46.3097%" y="293" width="0.0500%" height="15" fill="rgb(252,211,39)" fg:x="17594" fg:w="19"/><text x="46.5597%" y="303.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (19 samples, 0.05%)</title><rect x="46.3097%" y="277" width="0.0500%" height="15" fill="rgb(223,6,36)" fg:x="17594" fg:w="19"/><text x="46.5597%" y="287.50"></text></g><g><title>cache_bin_low_water_get (5 samples, 0.01%)</title><rect x="46.3598%" y="325" width="0.0132%" height="15" fill="rgb(252,169,45)" fg:x="17613" fg:w="5"/><text x="46.6098%" y="335.50"></text></g><g><title>cache_bin_low_water_get_internal (5 samples, 0.01%)</title><rect x="46.3598%" y="309" width="0.0132%" height="15" fill="rgb(212,48,26)" fg:x="17613" fg:w="5"/><text x="46.6098%" y="319.50"></text></g><g><title>cache_bin_diff (4 samples, 0.01%)</title><rect x="46.3624%" y="293" width="0.0105%" height="15" fill="rgb(251,102,48)" fg:x="17614" fg:w="4"/><text x="46.6124%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="46.3861%" y="261" width="0.0105%" height="15" fill="rgb(243,208,16)" fg:x="17623" fg:w="4"/><text x="46.6361%" y="271.50"></text></g><g><title>cache_bin_finish_flush (5 samples, 0.01%)</title><rect x="46.3861%" y="277" width="0.0132%" height="15" fill="rgb(219,96,24)" fg:x="17623" fg:w="5"/><text x="46.6361%" y="287.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (4 samples, 0.01%)</title><rect x="46.4177%" y="261" width="0.0105%" height="15" fill="rgb(219,33,29)" fg:x="17635" fg:w="4"/><text x="46.6677%" y="271.50"></text></g><g><title>arena_dalloc_bin_locked_finish (4 samples, 0.01%)</title><rect x="46.4282%" y="261" width="0.0105%" height="15" fill="rgb(223,176,5)" fg:x="17639" fg:w="4"/><text x="46.6782%" y="271.50"></text></g><g><title>arena_dalloc_bin_locked_step (10 samples, 0.03%)</title><rect x="46.4387%" y="261" width="0.0263%" height="15" fill="rgb(228,140,14)" fg:x="17643" fg:w="10"/><text x="46.6887%" y="271.50"></text></g><g><title>arena_decay_ticks (4 samples, 0.01%)</title><rect x="46.4650%" y="261" width="0.0105%" height="15" fill="rgb(217,179,31)" fg:x="17653" fg:w="4"/><text x="46.7150%" y="271.50"></text></g><g><title>_rjem_je_arena_decay (4 samples, 0.01%)</title><rect x="46.4650%" y="245" width="0.0105%" height="15" fill="rgb(230,9,30)" fg:x="17653" fg:w="4"/><text x="46.7150%" y="255.50"></text></g><g><title>edata_arena_ind_get (7 samples, 0.02%)</title><rect x="46.4756%" y="261" width="0.0184%" height="15" fill="rgb(230,136,20)" fg:x="17657" fg:w="7"/><text x="46.7256%" y="271.50"></text></g><g><title>malloc_mutex_trylock_final (12 samples, 0.03%)</title><rect x="46.4940%" y="245" width="0.0316%" height="15" fill="rgb(215,210,22)" fg:x="17664" fg:w="12"/><text x="46.7440%" y="255.50"></text></g><g><title>pthread_mutex_trylock (12 samples, 0.03%)</title><rect x="46.4940%" y="229" width="0.0316%" height="15" fill="rgb(218,43,5)" fg:x="17664" fg:w="12"/><text x="46.7440%" y="239.50"></text></g><g><title>malloc_mutex_lock (13 samples, 0.03%)</title><rect x="46.4940%" y="261" width="0.0342%" height="15" fill="rgb(216,11,5)" fg:x="17664" fg:w="13"/><text x="46.7440%" y="271.50"></text></g><g><title>rtree_leaf_elm_read (7 samples, 0.02%)</title><rect x="46.5756%" y="229" width="0.0184%" height="15" fill="rgb(209,82,29)" fg:x="17695" fg:w="7"/><text x="46.8256%" y="239.50"></text></g><g><title>rtree_leaf_elm_bits_read (6 samples, 0.02%)</title><rect x="46.5782%" y="213" width="0.0158%" height="15" fill="rgb(244,115,12)" fg:x="17696" fg:w="6"/><text x="46.8282%" y="223.50"></text></g><g><title>atomic_load_p (6 samples, 0.02%)</title><rect x="46.5782%" y="197" width="0.0158%" height="15" fill="rgb(222,82,18)" fg:x="17696" fg:w="6"/><text x="46.8282%" y="207.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (85 samples, 0.22%)</title><rect x="46.3808%" y="309" width="0.2237%" height="15" fill="rgb(249,227,8)" fg:x="17621" fg:w="85"/><text x="46.6308%" y="319.50"></text></g><g><title>tcache_bin_flush_bottom (84 samples, 0.22%)</title><rect x="46.3834%" y="293" width="0.2211%" height="15" fill="rgb(253,141,45)" fg:x="17622" fg:w="84"/><text x="46.6334%" y="303.50"></text></g><g><title>tcache_bin_flush_impl (78 samples, 0.21%)</title><rect x="46.3992%" y="277" width="0.2053%" height="15" fill="rgb(234,184,4)" fg:x="17628" fg:w="78"/><text x="46.6492%" y="287.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (29 samples, 0.08%)</title><rect x="46.5282%" y="261" width="0.0763%" height="15" fill="rgb(218,194,23)" fg:x="17677" fg:w="29"/><text x="46.7782%" y="271.50"></text></g><g><title>emap_edata_lookup_batch (28 samples, 0.07%)</title><rect x="46.5308%" y="245" width="0.0737%" height="15" fill="rgb(235,66,41)" fg:x="17678" fg:w="28"/><text x="46.7808%" y="255.50"></text></g><g><title>tcache_gc_small (88 samples, 0.23%)</title><rect x="46.3808%" y="325" width="0.2316%" height="15" fill="rgb(245,217,1)" fg:x="17621" fg:w="88"/><text x="46.6308%" y="335.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (192 samples, 0.51%)</title><rect x="46.1255%" y="357" width="0.5054%" height="15" fill="rgb(229,91,1)" fg:x="17524" fg:w="192"/><text x="46.3755%" y="367.50"></text></g><g><title>tcache_event (183 samples, 0.48%)</title><rect x="46.1492%" y="341" width="0.4817%" height="15" fill="rgb(207,101,30)" fg:x="17533" fg:w="183"/><text x="46.3992%" y="351.50"></text></g><g><title>tcache_get (7 samples, 0.02%)</title><rect x="46.6124%" y="325" width="0.0184%" height="15" fill="rgb(223,82,49)" fg:x="17709" fg:w="7"/><text x="46.8624%" y="335.50"></text></g><g><title>tcache_available (7 samples, 0.02%)</title><rect x="46.6124%" y="309" width="0.0184%" height="15" fill="rgb(218,167,17)" fg:x="17709" fg:w="7"/><text x="46.8624%" y="319.50"></text></g><g><title>_rjem_je_tcache_gc_new_event_wait (18 samples, 0.05%)</title><rect x="46.6309%" y="357" width="0.0474%" height="15" fill="rgb(208,103,14)" fg:x="17716" fg:w="18"/><text x="46.8809%" y="367.50"></text></g><g><title>peak_alloc_event_wait_set (6 samples, 0.02%)</title><rect x="46.6782%" y="357" width="0.0158%" height="15" fill="rgb(238,20,8)" fg:x="17734" fg:w="6"/><text x="46.9282%" y="367.50"></text></g><g><title>atomic_fence (25 samples, 0.07%)</title><rect x="46.7125%" y="293" width="0.0658%" height="15" fill="rgb(218,80,54)" fg:x="17747" fg:w="25"/><text x="46.9625%" y="303.50"></text></g><g><title>te_adjust_thresholds_helper (38 samples, 0.10%)</title><rect x="46.7019%" y="357" width="0.1000%" height="15" fill="rgb(240,144,17)" fg:x="17743" fg:w="38"/><text x="46.9519%" y="367.50"></text></g><g><title>te_ctx_next_event_set (34 samples, 0.09%)</title><rect x="46.7125%" y="341" width="0.0895%" height="15" fill="rgb(245,27,50)" fg:x="17747" fg:w="34"/><text x="46.9625%" y="351.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (34 samples, 0.09%)</title><rect x="46.7125%" y="325" width="0.0895%" height="15" fill="rgb(251,51,7)" fg:x="17747" fg:w="34"/><text x="46.9625%" y="335.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (34 samples, 0.09%)</title><rect x="46.7125%" y="309" width="0.0895%" height="15" fill="rgb(245,217,29)" fg:x="17747" fg:w="34"/><text x="46.9625%" y="319.50"></text></g><g><title>te_ctx_next_event_fast_update (9 samples, 0.02%)</title><rect x="46.7783%" y="293" width="0.0237%" height="15" fill="rgb(221,176,29)" fg:x="17772" fg:w="9"/><text x="47.0283%" y="303.50"></text></g><g><title>te_ctx_next_event_get (5 samples, 0.01%)</title><rect x="46.7888%" y="277" width="0.0132%" height="15" fill="rgb(212,180,24)" fg:x="17776" fg:w="5"/><text x="47.0388%" y="287.50"></text></g><g><title>_rjem_je_te_event_trigger (345 samples, 0.91%)</title><rect x="45.8991%" y="373" width="0.9081%" height="15" fill="rgb(254,24,2)" fg:x="17438" fg:w="345"/><text x="46.1491%" y="383.50"></text></g><g><title>tsd_thread_allocated_next_eventp_get (4 samples, 0.01%)</title><rect x="46.8178%" y="357" width="0.0105%" height="15" fill="rgb(230,100,2)" fg:x="17787" fg:w="4"/><text x="47.0678%" y="367.50"></text></g><g><title>tsd_thread_allocated_next_eventp_get_unsafe (4 samples, 0.01%)</title><rect x="46.8178%" y="341" width="0.0105%" height="15" fill="rgb(219,142,25)" fg:x="17787" fg:w="4"/><text x="47.0678%" y="351.50"></text></g><g><title>imalloc_body (3,109 samples, 8.18%)</title><rect x="38.6476%" y="421" width="8.1833%" height="15" fill="rgb(240,73,43)" fg:x="14683" fg:w="3109"/><text x="38.8976%" y="431.50">imalloc_body</text></g><g><title>thread_alloc_event (388 samples, 1.02%)</title><rect x="45.8096%" y="405" width="1.0213%" height="15" fill="rgb(214,114,15)" fg:x="17404" fg:w="388"/><text x="46.0596%" y="415.50"></text></g><g><title>te_event_advance (388 samples, 1.02%)</title><rect x="45.8096%" y="389" width="1.0213%" height="15" fill="rgb(207,130,4)" fg:x="17404" fg:w="388"/><text x="46.0596%" y="399.50"></text></g><g><title>te_ctx_get (9 samples, 0.02%)</title><rect x="46.8072%" y="373" width="0.0237%" height="15" fill="rgb(221,25,40)" fg:x="17783" fg:w="9"/><text x="47.0572%" y="383.50"></text></g><g><title>_rjem_je_malloc_default (3,143 samples, 8.27%)</title><rect x="38.6002%" y="453" width="8.2728%" height="15" fill="rgb(241,184,7)" fg:x="14665" fg:w="3143"/><text x="38.8502%" y="463.50">_rjem_je_mal..</text></g><g><title>imalloc (3,125 samples, 8.23%)</title><rect x="38.6476%" y="437" width="8.2254%" height="15" fill="rgb(235,159,4)" fg:x="14683" fg:w="3125"/><text x="38.8976%" y="447.50">imalloc</text></g><g><title>tsd_fetch (16 samples, 0.04%)</title><rect x="46.8309%" y="421" width="0.0421%" height="15" fill="rgb(214,87,48)" fg:x="17792" fg:w="16"/><text x="47.0809%" y="431.50"></text></g><g><title>tsd_fetch_impl (16 samples, 0.04%)</title><rect x="46.8309%" y="405" width="0.0421%" height="15" fill="rgb(246,198,24)" fg:x="17792" fg:w="16"/><text x="47.0809%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,165 samples, 8.33%)</title><rect x="38.5976%" y="533" width="8.3307%" height="15" fill="rgb(209,66,40)" fg:x="14664" fg:w="3165"/><text x="38.8476%" y="543.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,165 samples, 8.33%)</title><rect x="38.5976%" y="517" width="8.3307%" height="15" fill="rgb(233,147,39)" fg:x="14664" fg:w="3165"/><text x="38.8476%" y="527.50">alloc::alloc..</text></g><g><title>alloc::alloc::alloc (3,165 samples, 8.33%)</title><rect x="38.5976%" y="501" width="8.3307%" height="15" fill="rgb(231,145,52)" fg:x="14664" fg:w="3165"/><text x="38.8476%" y="511.50">alloc::alloc..</text></g><g><title>__rust_alloc (3,165 samples, 8.33%)</title><rect x="38.5976%" y="485" width="8.3307%" height="15" fill="rgb(206,20,26)" fg:x="14664" fg:w="3165"/><text x="38.8476%" y="495.50">__rust_alloc</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3,165 samples, 8.33%)</title><rect x="38.5976%" y="469" width="8.3307%" height="15" fill="rgb(238,220,4)" fg:x="14664" fg:w="3165"/><text x="38.8476%" y="479.50">&lt;tikv_jemall..</text></g><g><title>_rjem_malloc (21 samples, 0.06%)</title><rect x="46.8730%" y="453" width="0.0553%" height="15" fill="rgb(252,195,42)" fg:x="17808" fg:w="21"/><text x="47.1230%" y="463.50"></text></g><g><title>imalloc_fastpath (21 samples, 0.06%)</title><rect x="46.8730%" y="437" width="0.0553%" height="15" fill="rgb(209,10,6)" fg:x="17808" fg:w="21"/><text x="47.1230%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,170 samples, 8.34%)</title><rect x="38.5923%" y="613" width="8.3439%" height="15" fill="rgb(229,3,52)" fg:x="14662" fg:w="3170"/><text x="38.8423%" y="623.50">alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,170 samples, 8.34%)</title><rect x="38.5923%" y="597" width="8.3439%" height="15" fill="rgb(253,49,37)" fg:x="14662" fg:w="3170"/><text x="38.8423%" y="607.50">alloc::vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,170 samples, 8.34%)</title><rect x="38.5923%" y="581" width="8.3439%" height="15" fill="rgb(240,103,49)" fg:x="14662" fg:w="3170"/><text x="38.8423%" y="591.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,170 samples, 8.34%)</title><rect x="38.5923%" y="565" width="8.3439%" height="15" fill="rgb(250,182,30)" fg:x="14662" fg:w="3170"/><text x="38.8423%" y="575.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,170 samples, 8.34%)</title><rect x="38.5923%" y="549" width="8.3439%" height="15" fill="rgb(248,8,30)" fg:x="14662" fg:w="3170"/><text x="38.8423%" y="559.50">alloc::raw_v..</text></g><g><title>bytes::bytes_mut::Shared::is_unique (25 samples, 0.07%)</title><rect x="46.9362%" y="613" width="0.0658%" height="15" fill="rgb(237,120,30)" fg:x="17832" fg:w="25"/><text x="47.1862%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (23 samples, 0.06%)</title><rect x="46.9415%" y="597" width="0.0605%" height="15" fill="rgb(221,146,34)" fg:x="17834" fg:w="23"/><text x="47.1915%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.06%)</title><rect x="46.9415%" y="581" width="0.0605%" height="15" fill="rgb(242,55,13)" fg:x="17834" fg:w="23"/><text x="47.1915%" y="591.50"></text></g><g><title>bytes::bytes_mut::release_shared (283 samples, 0.74%)</title><rect x="47.0099%" y="613" width="0.7449%" height="15" fill="rgb(242,112,31)" fg:x="17860" fg:w="283"/><text x="47.2599%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (280 samples, 0.74%)</title><rect x="47.0178%" y="597" width="0.7370%" height="15" fill="rgb(249,192,27)" fg:x="17863" fg:w="280"/><text x="47.2678%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (280 samples, 0.74%)</title><rect x="47.0178%" y="581" width="0.7370%" height="15" fill="rgb(208,204,44)" fg:x="17863" fg:w="280"/><text x="47.2678%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (80 samples, 0.21%)</title><rect x="47.7601%" y="613" width="0.2106%" height="15" fill="rgb(208,93,54)" fg:x="18145" fg:w="80"/><text x="48.0101%" y="623.50"></text></g><g><title>[libc.so.6] (80 samples, 0.21%)</title><rect x="47.7601%" y="597" width="0.2106%" height="15" fill="rgb(242,1,31)" fg:x="18145" fg:w="80"/><text x="48.0101%" y="607.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="47.9706%" y="613" width="0.0105%" height="15" fill="rgb(241,83,25)" fg:x="18225" fg:w="4"/><text x="48.2206%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (7,037 samples, 18.52%)</title><rect x="29.4615%" y="645" width="18.5223%" height="15" fill="rgb(205,169,50)" fg:x="11193" fg:w="7037"/><text x="29.7115%" y="655.50">bytes::bytes_mut::BytesMut::r..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (7,035 samples, 18.52%)</title><rect x="29.4667%" y="629" width="18.5171%" height="15" fill="rgb(239,186,37)" fg:x="11195" fg:w="7035"/><text x="29.7167%" y="639.50">bytes::bytes_mut::BytesMut::r..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (4 samples, 0.01%)</title><rect x="48.0075%" y="629" width="0.0105%" height="15" fill="rgb(205,221,10)" fg:x="18239" fg:w="4"/><text x="48.2575%" y="639.50"></text></g><g><title>_rjem_je_arena_bin_choose (9 samples, 0.02%)</title><rect x="48.1944%" y="341" width="0.0237%" height="15" fill="rgb(218,196,15)" fg:x="18310" fg:w="9"/><text x="48.4444%" y="351.50"></text></g><g><title>arena_get_bin (9 samples, 0.02%)</title><rect x="48.1944%" y="325" width="0.0237%" height="15" fill="rgb(218,196,35)" fg:x="18310" fg:w="9"/><text x="48.4444%" y="335.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (4 samples, 0.01%)</title><rect x="48.2180%" y="341" width="0.0105%" height="15" fill="rgb(233,63,24)" fg:x="18319" fg:w="4"/><text x="48.4680%" y="351.50"></text></g><g><title>arena_slab_reg_alloc_batch (19 samples, 0.05%)</title><rect x="48.2338%" y="341" width="0.0500%" height="15" fill="rgb(225,8,4)" fg:x="18325" fg:w="19"/><text x="48.4838%" y="351.50"></text></g><g><title>pthread_mutex_trylock (23 samples, 0.06%)</title><rect x="48.2917%" y="309" width="0.0605%" height="15" fill="rgb(234,105,35)" fg:x="18347" fg:w="23"/><text x="48.5417%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (25 samples, 0.07%)</title><rect x="48.2917%" y="325" width="0.0658%" height="15" fill="rgb(236,21,32)" fg:x="18347" fg:w="25"/><text x="48.5417%" y="335.50"></text></g><g><title>malloc_mutex_lock (26 samples, 0.07%)</title><rect x="48.2917%" y="341" width="0.0684%" height="15" fill="rgb(228,109,6)" fg:x="18347" fg:w="26"/><text x="48.5417%" y="351.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="48.3602%" y="325" width="0.0184%" height="15" fill="rgb(229,215,31)" fg:x="18373" fg:w="7"/><text x="48.6102%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (80 samples, 0.21%)</title><rect x="48.1707%" y="357" width="0.2106%" height="15" fill="rgb(221,52,54)" fg:x="18301" fg:w="80"/><text x="48.4207%" y="367.50"></text></g><g><title>malloc_mutex_unlock (8 samples, 0.02%)</title><rect x="48.3602%" y="341" width="0.0211%" height="15" fill="rgb(252,129,43)" fg:x="18373" fg:w="8"/><text x="48.6102%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (85 samples, 0.22%)</title><rect x="48.1680%" y="373" width="0.2237%" height="15" fill="rgb(248,183,27)" fg:x="18300" fg:w="85"/><text x="48.4180%" y="383.50"></text></g><g><title>arena_choose (6 samples, 0.02%)</title><rect x="48.3970%" y="373" width="0.0158%" height="15" fill="rgb(250,0,22)" fg:x="18387" fg:w="6"/><text x="48.6470%" y="383.50"></text></g><g><title>arena_choose_impl (6 samples, 0.02%)</title><rect x="48.3970%" y="357" width="0.0158%" height="15" fill="rgb(213,166,10)" fg:x="18387" fg:w="6"/><text x="48.6470%" y="367.50"></text></g><g><title>imalloc_body (109 samples, 0.29%)</title><rect x="48.1364%" y="453" width="0.2869%" height="15" fill="rgb(207,163,36)" fg:x="18288" fg:w="109"/><text x="48.3864%" y="463.50"></text></g><g><title>imalloc_no_sample (107 samples, 0.28%)</title><rect x="48.1417%" y="437" width="0.2816%" height="15" fill="rgb(208,122,22)" fg:x="18290" fg:w="107"/><text x="48.3917%" y="447.50"></text></g><g><title>iallocztm (107 samples, 0.28%)</title><rect x="48.1417%" y="421" width="0.2816%" height="15" fill="rgb(207,104,49)" fg:x="18290" fg:w="107"/><text x="48.3917%" y="431.50"></text></g><g><title>arena_malloc (107 samples, 0.28%)</title><rect x="48.1417%" y="405" width="0.2816%" height="15" fill="rgb(248,211,50)" fg:x="18290" fg:w="107"/><text x="48.3917%" y="415.50"></text></g><g><title>tcache_alloc_small (107 samples, 0.28%)</title><rect x="48.1417%" y="389" width="0.2816%" height="15" fill="rgb(217,13,45)" fg:x="18290" fg:w="107"/><text x="48.3917%" y="399.50"></text></g><g><title>_rjem_je_malloc_default (111 samples, 0.29%)</title><rect x="48.1338%" y="485" width="0.2922%" height="15" fill="rgb(211,216,49)" fg:x="18287" fg:w="111"/><text x="48.3838%" y="495.50"></text></g><g><title>imalloc (110 samples, 0.29%)</title><rect x="48.1364%" y="469" width="0.2895%" height="15" fill="rgb(221,58,53)" fg:x="18288" fg:w="110"/><text x="48.3864%" y="479.50"></text></g><g><title>cache_bin_alloc (6 samples, 0.02%)</title><rect x="48.6576%" y="453" width="0.0158%" height="15" fill="rgb(220,112,41)" fg:x="18486" fg:w="6"/><text x="48.9076%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (6 samples, 0.02%)</title><rect x="48.6576%" y="437" width="0.0158%" height="15" fill="rgb(236,38,28)" fg:x="18486" fg:w="6"/><text x="48.9076%" y="447.50"></text></g><g><title>cache_bin_alloc_easy (51 samples, 0.13%)</title><rect x="48.6734%" y="453" width="0.1342%" height="15" fill="rgb(227,195,22)" fg:x="18492" fg:w="51"/><text x="48.9234%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (51 samples, 0.13%)</title><rect x="48.6734%" y="437" width="0.1342%" height="15" fill="rgb(214,55,33)" fg:x="18492" fg:w="51"/><text x="48.9234%" y="447.50"></text></g><g><title>sz_index2size_lookup_impl (28 samples, 0.07%)</title><rect x="48.8103%" y="437" width="0.0737%" height="15" fill="rgb(248,80,13)" fg:x="18544" fg:w="28"/><text x="49.0603%" y="447.50"></text></g><g><title>__rust_alloc (287 samples, 0.76%)</title><rect x="48.1312%" y="517" width="0.7554%" height="15" fill="rgb(238,52,6)" fg:x="18286" fg:w="287"/><text x="48.3812%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (287 samples, 0.76%)</title><rect x="48.1312%" y="501" width="0.7554%" height="15" fill="rgb(224,198,47)" fg:x="18286" fg:w="287"/><text x="48.3812%" y="511.50"></text></g><g><title>_rjem_malloc (175 samples, 0.46%)</title><rect x="48.4260%" y="485" width="0.4606%" height="15" fill="rgb(233,171,20)" fg:x="18398" fg:w="175"/><text x="48.6760%" y="495.50"></text></g><g><title>imalloc_fastpath (175 samples, 0.46%)</title><rect x="48.4260%" y="469" width="0.4606%" height="15" fill="rgb(241,30,25)" fg:x="18398" fg:w="175"/><text x="48.6760%" y="479.50"></text></g><g><title>sz_size2index_usize_fastpath (29 samples, 0.08%)</title><rect x="48.8103%" y="453" width="0.0763%" height="15" fill="rgb(207,171,38)" fg:x="18544" fg:w="29"/><text x="49.0603%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (328 samples, 0.86%)</title><rect x="48.0601%" y="597" width="0.8633%" height="15" fill="rgb(234,70,1)" fg:x="18259" fg:w="328"/><text x="48.3101%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (301 samples, 0.79%)</title><rect x="48.1312%" y="581" width="0.7923%" height="15" fill="rgb(232,178,18)" fg:x="18286" fg:w="301"/><text x="48.3812%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (301 samples, 0.79%)</title><rect x="48.1312%" y="565" width="0.7923%" height="15" fill="rgb(241,78,40)" fg:x="18286" fg:w="301"/><text x="48.3812%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (301 samples, 0.79%)</title><rect x="48.1312%" y="549" width="0.7923%" height="15" fill="rgb(222,35,25)" fg:x="18286" fg:w="301"/><text x="48.3812%" y="559.50"></text></g><g><title>alloc::alloc::alloc (301 samples, 0.79%)</title><rect x="48.1312%" y="533" width="0.7923%" height="15" fill="rgb(207,92,16)" fg:x="18286" fg:w="301"/><text x="48.3812%" y="543.50"></text></g><g><title>core::ptr::read_volatile (14 samples, 0.04%)</title><rect x="48.8866%" y="517" width="0.0368%" height="15" fill="rgb(216,59,51)" fg:x="18573" fg:w="14"/><text x="49.1366%" y="527.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (341 samples, 0.90%)</title><rect x="48.0364%" y="613" width="0.8976%" height="15" fill="rgb(213,80,28)" fg:x="18250" fg:w="341"/><text x="48.2864%" y="623.50"></text></g><g><title>bytes::bytes_mut::rebuild_vec (4 samples, 0.01%)</title><rect x="48.9235%" y="597" width="0.0105%" height="15" fill="rgb(220,93,7)" fg:x="18587" fg:w="4"/><text x="49.1735%" y="607.50"></text></g><g><title>bytes::bytes_mut::increment_shared (10 samples, 0.03%)</title><rect x="48.9340%" y="613" width="0.0263%" height="15" fill="rgb(225,24,44)" fg:x="18591" fg:w="10"/><text x="49.1840%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.03%)</title><rect x="48.9340%" y="597" width="0.0263%" height="15" fill="rgb(243,74,40)" fg:x="18591" fg:w="10"/><text x="49.1840%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.03%)</title><rect x="48.9340%" y="581" width="0.0263%" height="15" fill="rgb(228,39,7)" fg:x="18591" fg:w="10"/><text x="49.1840%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (361 samples, 0.95%)</title><rect x="48.0206%" y="629" width="0.9502%" height="15" fill="rgb(227,79,8)" fg:x="18244" fg:w="361"/><text x="48.2706%" y="639.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="48.9603%" y="613" width="0.0105%" height="15" fill="rgb(236,58,11)" fg:x="18601" fg:w="4"/><text x="49.2103%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (379 samples, 1.00%)</title><rect x="47.9838%" y="645" width="0.9976%" height="15" fill="rgb(249,63,35)" fg:x="18230" fg:w="379"/><text x="48.2338%" y="655.50"></text></g><g><title>core::fmt::Arguments::new_v1 (4 samples, 0.01%)</title><rect x="48.9708%" y="629" width="0.0105%" height="15" fill="rgb(252,114,16)" fg:x="18605" fg:w="4"/><text x="49.2208%" y="639.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (8,578 samples, 22.58%)</title><rect x="26.4056%" y="661" width="22.5784%" height="15" fill="rgb(254,151,24)" fg:x="10032" fg:w="8578"/><text x="26.6556%" y="671.50">fastwebsockets::ReadHalf::parse_fram..</text></g><g><title>fastwebsockets::frame::Payload::to_mut (23 samples, 0.06%)</title><rect x="49.0577%" y="645" width="0.0605%" height="15" fill="rgb(253,54,39)" fg:x="18638" fg:w="23"/><text x="49.3077%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.07%)</title><rect x="62.3658%" y="613" width="0.0737%" height="15" fill="rgb(243,25,45)" fg:x="23694" fg:w="28"/><text x="62.6158%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_mut (5 samples, 0.01%)</title><rect x="62.4395%" y="613" width="0.0132%" height="15" fill="rgb(234,134,9)" fg:x="23722" fg:w="5"/><text x="62.6895%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (5 samples, 0.01%)</title><rect x="62.4605%" y="549" width="0.0132%" height="15" fill="rgb(227,166,31)" fg:x="23730" fg:w="5"/><text x="62.7105%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.01%)</title><rect x="62.4605%" y="533" width="0.0132%" height="15" fill="rgb(245,143,41)" fg:x="23730" fg:w="5"/><text x="62.7105%" y="543.50"></text></g><g><title>fastwebsockets::mask::unmask_easy::_{{closure}} (5 samples, 0.01%)</title><rect x="62.4605%" y="517" width="0.0132%" height="15" fill="rgb(238,181,32)" fg:x="23730" fg:w="5"/><text x="62.7105%" y="527.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (14,137 samples, 37.21%)</title><rect x="25.2737%" y="693" width="37.2105%" height="15" fill="rgb(224,113,18)" fg:x="9602" fg:w="14137"/><text x="25.5237%" y="703.50">fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}}</text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (13,863 samples, 36.49%)</title><rect x="25.9949%" y="677" width="36.4893%" height="15" fill="rgb(240,229,28)" fg:x="9876" fg:w="13863"/><text x="26.2449%" y="687.50">fastwebsockets::ReadHalf::read_frame_inner::_{{closure}}</text></g><g><title>fastwebsockets::frame::Frame::unmask (5,129 samples, 13.50%)</title><rect x="48.9840%" y="661" width="13.5002%" height="15" fill="rgb(250,185,3)" fg:x="18610" fg:w="5129"/><text x="49.2340%" y="671.50">fastwebsockets::fram..</text></g><g><title>fastwebsockets::mask::unmask (5,078 samples, 13.37%)</title><rect x="49.1182%" y="645" width="13.3660%" height="15" fill="rgb(212,59,25)" fg:x="18661" fg:w="5078"/><text x="49.3682%" y="655.50">fastwebsockets::mask..</text></g><g><title>fastwebsockets::mask::unmask_fallback (5,078 samples, 13.37%)</title><rect x="49.1182%" y="629" width="13.3660%" height="15" fill="rgb(221,87,20)" fg:x="18661" fg:w="5078"/><text x="49.3682%" y="639.50">fastwebsockets::mask..</text></g><g><title>fastwebsockets::mask::unmask_easy (12 samples, 0.03%)</title><rect x="62.4526%" y="613" width="0.0316%" height="15" fill="rgb(213,74,28)" fg:x="23727" fg:w="12"/><text x="62.7026%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.03%)</title><rect x="62.4526%" y="597" width="0.0316%" height="15" fill="rgb(224,132,34)" fg:x="23727" fg:w="12"/><text x="62.7026%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.03%)</title><rect x="62.4526%" y="581" width="0.0316%" height="15" fill="rgb(222,101,24)" fg:x="23727" fg:w="12"/><text x="62.7026%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.03%)</title><rect x="62.4526%" y="565" width="0.0316%" height="15" fill="rgb(254,142,4)" fg:x="23727" fg:w="12"/><text x="62.7026%" y="575.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="62.4737%" y="549" width="0.0105%" height="15" fill="rgb(230,229,49)" fg:x="23735" fg:w="4"/><text x="62.7237%" y="559.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (14,486 samples, 38.13%)</title><rect x="24.5552%" y="725" width="38.1291%" height="15" fill="rgb(238,70,47)" fg:x="9329" fg:w="14486"/><text x="24.8052%" y="735.50">&lt;wisp_mux::ws::EitherWebSocketRead&lt;A,B&gt; as wisp_mux::ws::WebSo..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (14,427 samples, 37.97%)</title><rect x="24.7105%" y="709" width="37.9738%" height="15" fill="rgb(231,160,17)" fg:x="9388" fg:w="14427"/><text x="24.9605%" y="719.50">wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead f..</text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (76 samples, 0.20%)</title><rect x="62.4842%" y="693" width="0.2000%" height="15" fill="rgb(218,68,53)" fg:x="23739" fg:w="76"/><text x="62.7342%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::packet::PacketType&gt; (4 samples, 0.01%)</title><rect x="63.1028%" y="709" width="0.0105%" height="15" fill="rgb(236,111,10)" fg:x="23974" fg:w="4"/><text x="63.3528%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::Payload&gt; (4 samples, 0.01%)</title><rect x="63.1028%" y="693" width="0.0105%" height="15" fill="rgb(224,34,41)" fg:x="23974" fg:w="4"/><text x="63.3528%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (4 samples, 0.01%)</title><rect x="63.1028%" y="677" width="0.0105%" height="15" fill="rgb(241,118,19)" fg:x="23974" fg:w="4"/><text x="63.3528%" y="687.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (5 samples, 0.01%)</title><rect x="63.4107%" y="693" width="0.0132%" height="15" fill="rgb(238,129,25)" fg:x="24091" fg:w="5"/><text x="63.6607%" y="703.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (4 samples, 0.01%)</title><rect x="63.4423%" y="677" width="0.0105%" height="15" fill="rgb(238,22,31)" fg:x="24103" fg:w="4"/><text x="63.6923%" y="687.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (4 samples, 0.01%)</title><rect x="63.4423%" y="661" width="0.0105%" height="15" fill="rgb(222,174,48)" fg:x="24103" fg:w="4"/><text x="63.6923%" y="671.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (14 samples, 0.04%)</title><rect x="63.4239%" y="693" width="0.0368%" height="15" fill="rgb(206,152,40)" fg:x="24096" fg:w="14"/><text x="63.6739%" y="703.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::chunk (19 samples, 0.05%)</title><rect x="63.4870%" y="677" width="0.0500%" height="15" fill="rgb(218,99,54)" fg:x="24120" fg:w="19"/><text x="63.7370%" y="687.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::chunk (19 samples, 0.05%)</title><rect x="63.4870%" y="661" width="0.0500%" height="15" fill="rgb(220,174,26)" fg:x="24120" fg:w="19"/><text x="63.7370%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (11 samples, 0.03%)</title><rect x="63.5502%" y="645" width="0.0290%" height="15" fill="rgb(245,116,9)" fg:x="24144" fg:w="11"/><text x="63.8002%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.02%)</title><rect x="63.5634%" y="629" width="0.0158%" height="15" fill="rgb(209,72,35)" fg:x="24149" fg:w="6"/><text x="63.8134%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15,534 samples, 40.89%)</title><rect x="22.6943%" y="901" width="40.8876%" height="15" fill="rgb(226,126,21)" fg:x="8622" fg:w="15534"/><text x="22.9443%" y="911.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (15,534 samples, 40.89%)</title><rect x="22.6943%" y="885" width="40.8876%" height="15" fill="rgb(227,192,1)" fg:x="8622" fg:w="15534"/><text x="22.9443%" y="895.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (15,463 samples, 40.70%)</title><rect x="22.8811%" y="869" width="40.7007%" height="15" fill="rgb(237,180,29)" fg:x="8693" fg:w="15463"/><text x="23.1311%" y="879.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15,463 samples, 40.70%)</title><rect x="22.8811%" y="853" width="40.7007%" height="15" fill="rgb(230,197,35)" fg:x="8693" fg:w="15463"/><text x="23.1311%" y="863.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (15,244 samples, 40.12%)</title><rect x="23.4576%" y="837" width="40.1242%" height="15" fill="rgb(246,193,31)" fg:x="8912" fg:w="15244"/><text x="23.7076%" y="847.50">&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::fut..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (15,244 samples, 40.12%)</title><rect x="23.4576%" y="821" width="40.1242%" height="15" fill="rgb(241,36,4)" fg:x="8912" fg:w="15244"/><text x="23.7076%" y="831.50">futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (15,244 samples, 40.12%)</title><rect x="23.4576%" y="805" width="40.1242%" height="15" fill="rgb(241,130,17)" fg:x="8912" fg:w="15244"/><text x="23.7076%" y="815.50">&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stre..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (15,243 samples, 40.12%)</title><rect x="23.4602%" y="789" width="40.1216%" height="15" fill="rgb(206,137,32)" fg:x="8913" fg:w="15243"/><text x="23.7102%" y="799.50">&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (15,243 samples, 40.12%)</title><rect x="23.4602%" y="773" width="40.1216%" height="15" fill="rgb(237,228,51)" fg:x="8913" fg:w="15243"/><text x="23.7102%" y="783.50">&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::st..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (15,116 samples, 39.79%)</title><rect x="23.7945%" y="757" width="39.7873%" height="15" fill="rgb(243,6,42)" fg:x="9040" fg:w="15116"/><text x="24.0445%" y="767.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (15,004 samples, 39.49%)</title><rect x="24.0893%" y="741" width="39.4925%" height="15" fill="rgb(251,74,28)" fg:x="9152" fg:w="15004"/><text x="24.3393%" y="751.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::process_wisp_message::_{{closure}} (337 samples, 0.89%)</title><rect x="62.6948%" y="725" width="0.8870%" height="15" fill="rgb(218,20,49)" fg:x="23819" fg:w="337"/><text x="62.9448%" y="735.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (178 samples, 0.47%)</title><rect x="63.1133%" y="709" width="0.4685%" height="15" fill="rgb(238,28,14)" fg:x="23978" fg:w="178"/><text x="63.3633%" y="719.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (46 samples, 0.12%)</title><rect x="63.4607%" y="693" width="0.1211%" height="15" fill="rgb(229,40,46)" fg:x="24110" fg:w="46"/><text x="63.7107%" y="703.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (17 samples, 0.04%)</title><rect x="63.5371%" y="677" width="0.0447%" height="15" fill="rgb(244,195,20)" fg:x="24139" fg:w="17"/><text x="63.7871%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (14 samples, 0.04%)</title><rect x="63.5450%" y="661" width="0.0368%" height="15" fill="rgb(253,56,35)" fg:x="24142" fg:w="14"/><text x="63.7950%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (34 samples, 0.09%)</title><rect x="63.5818%" y="885" width="0.0895%" height="15" fill="rgb(210,149,44)" fg:x="24156" fg:w="34"/><text x="63.8318%" y="895.50"></text></g><g><title>core::ptr::swap (34 samples, 0.09%)</title><rect x="63.5818%" y="869" width="0.0895%" height="15" fill="rgb(240,135,12)" fg:x="24156" fg:w="34"/><text x="63.8318%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.09%)</title><rect x="63.5844%" y="853" width="0.0869%" height="15" fill="rgb(251,24,50)" fg:x="24157" fg:w="33"/><text x="63.8344%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="63.6739%" y="821" width="0.0237%" height="15" fill="rgb(243,200,47)" fg:x="24191" fg:w="9"/><text x="63.9239%" y="831.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (9 samples, 0.02%)</title><rect x="63.6739%" y="805" width="0.0237%" height="15" fill="rgb(224,166,26)" fg:x="24191" fg:w="9"/><text x="63.9239%" y="815.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (9 samples, 0.02%)</title><rect x="63.6739%" y="789" width="0.0237%" height="15" fill="rgb(233,0,47)" fg:x="24191" fg:w="9"/><text x="63.9239%" y="799.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15,693 samples, 41.31%)</title><rect x="22.4073%" y="933" width="41.3061%" height="15" fill="rgb(253,80,5)" fg:x="8513" fg:w="15693"/><text x="22.6573%" y="943.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::F..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}} (15,693 samples, 41.31%)</title><rect x="22.4073%" y="917" width="41.3061%" height="15" fill="rgb(214,133,25)" fg:x="8513" fg:w="15693"/><text x="22.6573%" y="927.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{c..</text></g><g><title>futures_util::async_await::random::shuffle (50 samples, 0.13%)</title><rect x="63.5818%" y="901" width="0.1316%" height="15" fill="rgb(209,27,14)" fg:x="24156" fg:w="50"/><text x="63.8318%" y="911.50"></text></g><g><title>futures_util::async_await::random::gen_index (16 samples, 0.04%)</title><rect x="63.6713%" y="885" width="0.0421%" height="15" fill="rgb(219,102,51)" fg:x="24190" fg:w="16"/><text x="63.9213%" y="895.50"></text></g><g><title>futures_util::async_await::random::random (15 samples, 0.04%)</title><rect x="63.6739%" y="869" width="0.0395%" height="15" fill="rgb(237,18,16)" fg:x="24191" fg:w="15"/><text x="63.9239%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.04%)</title><rect x="63.6739%" y="853" width="0.0395%" height="15" fill="rgb(241,85,17)" fg:x="24191" fg:w="15"/><text x="63.9239%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.04%)</title><rect x="63.6739%" y="837" width="0.0395%" height="15" fill="rgb(236,90,42)" fg:x="24191" fg:w="15"/><text x="63.9239%" y="847.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (6 samples, 0.02%)</title><rect x="63.6976%" y="821" width="0.0158%" height="15" fill="rgb(249,57,21)" fg:x="24200" fg:w="6"/><text x="63.9476%" y="831.50"></text></g><g><title>core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;::transpose (52 samples, 0.14%)</title><rect x="63.7160%" y="933" width="0.1369%" height="15" fill="rgb(243,12,36)" fg:x="24207" fg:w="52"/><text x="63.9660%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.06%)</title><rect x="64.1109%" y="901" width="0.0632%" height="15" fill="rgb(253,128,47)" fg:x="24357" fg:w="24"/><text x="64.3609%" y="911.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (23 samples, 0.06%)</title><rect x="64.1135%" y="885" width="0.0605%" height="15" fill="rgb(207,33,20)" fg:x="24358" fg:w="23"/><text x="64.3635%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (4 samples, 0.01%)</title><rect x="64.1740%" y="901" width="0.0105%" height="15" fill="rgb(233,215,35)" fg:x="24381" fg:w="4"/><text x="64.4240%" y="911.50"></text></g><g><title>inallocx (23 samples, 0.06%)</title><rect x="64.2293%" y="661" width="0.0605%" height="15" fill="rgb(249,188,52)" fg:x="24402" fg:w="23"/><text x="64.4793%" y="671.50"></text></g><g><title>aligned_usize_get (23 samples, 0.06%)</title><rect x="64.2293%" y="645" width="0.0605%" height="15" fill="rgb(225,12,32)" fg:x="24402" fg:w="23"/><text x="64.4793%" y="655.50"></text></g><g><title>sz_s2u (23 samples, 0.06%)</title><rect x="64.2293%" y="629" width="0.0605%" height="15" fill="rgb(247,98,14)" fg:x="24402" fg:w="23"/><text x="64.4793%" y="639.50"></text></g><g><title>sz_s2u_compute (19 samples, 0.05%)</title><rect x="64.2398%" y="613" width="0.0500%" height="15" fill="rgb(247,219,48)" fg:x="24406" fg:w="19"/><text x="64.4898%" y="623.50"></text></g><g><title>arena_get_from_edata (7 samples, 0.02%)</title><rect x="64.3135%" y="581" width="0.0184%" height="15" fill="rgb(253,60,48)" fg:x="24434" fg:w="7"/><text x="64.5635%" y="591.50"></text></g><g><title>atomic_load_p (7 samples, 0.02%)</title><rect x="64.3135%" y="565" width="0.0184%" height="15" fill="rgb(245,15,52)" fg:x="24434" fg:w="7"/><text x="64.5635%" y="575.50"></text></g><g><title>arena_background_thread_inactivity_check (5 samples, 0.01%)</title><rect x="64.3320%" y="549" width="0.0132%" height="15" fill="rgb(220,133,28)" fg:x="24441" fg:w="5"/><text x="64.5820%" y="559.50"></text></g><g><title>background_thread_enabled (5 samples, 0.01%)</title><rect x="64.3320%" y="533" width="0.0132%" height="15" fill="rgb(217,180,4)" fg:x="24441" fg:w="5"/><text x="64.5820%" y="543.50"></text></g><g><title>atomic_load_b (5 samples, 0.01%)</title><rect x="64.3320%" y="517" width="0.0132%" height="15" fill="rgb(251,24,1)" fg:x="24441" fg:w="5"/><text x="64.5820%" y="527.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (6 samples, 0.02%)</title><rect x="64.3320%" y="565" width="0.0158%" height="15" fill="rgb(212,185,49)" fg:x="24441" fg:w="6"/><text x="64.5820%" y="575.50"></text></g><g><title>_rjem_je_pa_dalloc (8 samples, 0.02%)</title><rect x="64.3478%" y="565" width="0.0211%" height="15" fill="rgb(215,175,22)" fg:x="24447" fg:w="8"/><text x="64.5978%" y="575.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="64.3688%" y="549" width="0.0132%" height="15" fill="rgb(250,205,14)" fg:x="24455" fg:w="5"/><text x="64.6188%" y="559.50"></text></g><g><title>_rjem_je_edata_heap_empty (4 samples, 0.01%)</title><rect x="64.4030%" y="485" width="0.0105%" height="15" fill="rgb(225,211,22)" fg:x="24468" fg:w="4"/><text x="64.6530%" y="495.50"></text></g><g><title>extent_deactivate_locked (19 samples, 0.05%)</title><rect x="64.3951%" y="533" width="0.0500%" height="15" fill="rgb(251,179,42)" fg:x="24465" fg:w="19"/><text x="64.6451%" y="543.50"></text></g><g><title>extent_deactivate_locked_impl (19 samples, 0.05%)</title><rect x="64.3951%" y="517" width="0.0500%" height="15" fill="rgb(208,216,51)" fg:x="24465" fg:w="19"/><text x="64.6451%" y="527.50"></text></g><g><title>_rjem_je_eset_insert (19 samples, 0.05%)</title><rect x="64.3951%" y="501" width="0.0500%" height="15" fill="rgb(235,36,11)" fg:x="24465" fg:w="19"/><text x="64.6451%" y="511.50"></text></g><g><title>sz_psz2ind (6 samples, 0.02%)</title><rect x="64.4294%" y="485" width="0.0158%" height="15" fill="rgb(213,189,28)" fg:x="24478" fg:w="6"/><text x="64.6794%" y="495.50"></text></g><g><title>extent_can_acquire_neighbor (11 samples, 0.03%)</title><rect x="64.4925%" y="469" width="0.0290%" height="15" fill="rgb(227,203,42)" fg:x="24502" fg:w="11"/><text x="64.7425%" y="479.50"></text></g><g><title>edata_committed_get (4 samples, 0.01%)</title><rect x="64.5109%" y="453" width="0.0105%" height="15" fill="rgb(244,72,36)" fg:x="24509" fg:w="4"/><text x="64.7609%" y="463.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (22 samples, 0.06%)</title><rect x="64.4688%" y="501" width="0.0579%" height="15" fill="rgb(213,53,17)" fg:x="24493" fg:w="22"/><text x="64.7188%" y="511.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (20 samples, 0.05%)</title><rect x="64.4741%" y="485" width="0.0526%" height="15" fill="rgb(207,167,3)" fg:x="24495" fg:w="20"/><text x="64.7241%" y="495.50"></text></g><g><title>_rjem_je_eset_remove (7 samples, 0.02%)</title><rect x="64.5294%" y="485" width="0.0184%" height="15" fill="rgb(216,98,30)" fg:x="24516" fg:w="7"/><text x="64.7794%" y="495.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (4 samples, 0.01%)</title><rect x="64.5504%" y="453" width="0.0105%" height="15" fill="rgb(236,123,15)" fg:x="24524" fg:w="4"/><text x="64.8004%" y="463.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (4 samples, 0.01%)</title><rect x="64.5504%" y="437" width="0.0105%" height="15" fill="rgb(248,81,50)" fg:x="24524" fg:w="4"/><text x="64.8004%" y="447.50"></text></g><g><title>ehooks_merge (5 samples, 0.01%)</title><rect x="64.5504%" y="469" width="0.0132%" height="15" fill="rgb(214,120,4)" fg:x="24524" fg:w="5"/><text x="64.8004%" y="479.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="64.5636%" y="453" width="0.0132%" height="15" fill="rgb(208,179,34)" fg:x="24529" fg:w="5"/><text x="64.8136%" y="463.50"></text></g><g><title>_rjem_je_edata_avail_insert (6 samples, 0.02%)</title><rect x="64.5794%" y="437" width="0.0158%" height="15" fill="rgb(227,140,7)" fg:x="24535" fg:w="6"/><text x="64.8294%" y="447.50"></text></g><g><title>ph_insert (6 samples, 0.02%)</title><rect x="64.5794%" y="421" width="0.0158%" height="15" fill="rgb(214,22,6)" fg:x="24535" fg:w="6"/><text x="64.8294%" y="431.50"></text></g><g><title>_rjem_je_edata_cache_put (16 samples, 0.04%)</title><rect x="64.5768%" y="453" width="0.0421%" height="15" fill="rgb(207,137,27)" fg:x="24534" fg:w="16"/><text x="64.8268%" y="463.50"></text></g><g><title>malloc_mutex_lock (8 samples, 0.02%)</title><rect x="64.5978%" y="437" width="0.0211%" height="15" fill="rgb(210,8,46)" fg:x="24542" fg:w="8"/><text x="64.8478%" y="447.50"></text></g><g><title>malloc_mutex_trylock_final (8 samples, 0.02%)</title><rect x="64.5978%" y="421" width="0.0211%" height="15" fill="rgb(240,16,54)" fg:x="24542" fg:w="8"/><text x="64.8478%" y="431.50"></text></g><g><title>pthread_mutex_trylock (8 samples, 0.02%)</title><rect x="64.5978%" y="405" width="0.0211%" height="15" fill="rgb(211,209,29)" fg:x="24542" fg:w="8"/><text x="64.8478%" y="415.50"></text></g><g><title>_rjem_je_emap_merge_commit (7 samples, 0.02%)</title><rect x="64.6189%" y="453" width="0.0184%" height="15" fill="rgb(226,228,24)" fg:x="24550" fg:w="7"/><text x="64.8689%" y="463.50"></text></g><g><title>extent_try_coalesce_large (80 samples, 0.21%)</title><rect x="64.4451%" y="533" width="0.2106%" height="15" fill="rgb(222,84,9)" fg:x="24484" fg:w="80"/><text x="64.6951%" y="543.50"></text></g><g><title>extent_try_coalesce_impl (78 samples, 0.21%)</title><rect x="64.4504%" y="517" width="0.2053%" height="15" fill="rgb(234,203,30)" fg:x="24486" fg:w="78"/><text x="64.7004%" y="527.50"></text></g><g><title>extent_coalesce (49 samples, 0.13%)</title><rect x="64.5267%" y="501" width="0.1290%" height="15" fill="rgb(238,109,14)" fg:x="24515" fg:w="49"/><text x="64.7767%" y="511.50"></text></g><g><title>extent_merge_impl (41 samples, 0.11%)</title><rect x="64.5478%" y="485" width="0.1079%" height="15" fill="rgb(233,206,34)" fg:x="24523" fg:w="41"/><text x="64.7978%" y="495.50"></text></g><g><title>extent_merge_impl (35 samples, 0.09%)</title><rect x="64.5636%" y="469" width="0.0921%" height="15" fill="rgb(220,167,47)" fg:x="24529" fg:w="35"/><text x="64.8136%" y="479.50"></text></g><g><title>pthread_mutex_trylock (9 samples, 0.02%)</title><rect x="64.6557%" y="501" width="0.0237%" height="15" fill="rgb(238,105,10)" fg:x="24564" fg:w="9"/><text x="64.9057%" y="511.50"></text></g><g><title>_rjem_je_extent_record (113 samples, 0.30%)</title><rect x="64.3872%" y="549" width="0.2974%" height="15" fill="rgb(213,227,17)" fg:x="24462" fg:w="113"/><text x="64.6372%" y="559.50"></text></g><g><title>malloc_mutex_lock (11 samples, 0.03%)</title><rect x="64.6557%" y="533" width="0.0290%" height="15" fill="rgb(217,132,38)" fg:x="24564" fg:w="11"/><text x="64.9057%" y="543.50"></text></g><g><title>malloc_mutex_trylock_final (11 samples, 0.03%)</title><rect x="64.6557%" y="517" width="0.0290%" height="15" fill="rgb(242,146,4)" fg:x="24564" fg:w="11"/><text x="64.9057%" y="527.50"></text></g><g><title>large_dalloc_finish_impl (138 samples, 0.36%)</title><rect x="64.3320%" y="581" width="0.3632%" height="15" fill="rgb(212,61,9)" fg:x="24441" fg:w="138"/><text x="64.5820%" y="591.50"></text></g><g><title>pac_dalloc_impl (124 samples, 0.33%)</title><rect x="64.3688%" y="565" width="0.3264%" height="15" fill="rgb(247,126,22)" fg:x="24455" fg:w="124"/><text x="64.6188%" y="575.50"></text></g><g><title>arena_large_dalloc_stats_update (5 samples, 0.01%)</title><rect x="64.7031%" y="549" width="0.0132%" height="15" fill="rgb(220,196,2)" fg:x="24582" fg:w="5"/><text x="64.9531%" y="559.50"></text></g><g><title>locked_inc_u64 (4 samples, 0.01%)</title><rect x="64.7057%" y="533" width="0.0105%" height="15" fill="rgb(208,46,4)" fg:x="24583" fg:w="4"/><text x="64.9557%" y="543.50"></text></g><g><title>atomic_fetch_add_u64 (4 samples, 0.01%)</title><rect x="64.7057%" y="517" width="0.0105%" height="15" fill="rgb(252,104,46)" fg:x="24583" fg:w="4"/><text x="64.9557%" y="527.50"></text></g><g><title>_rjem_je_large_dalloc (155 samples, 0.41%)</title><rect x="64.3135%" y="597" width="0.4080%" height="15" fill="rgb(237,152,48)" fg:x="24434" fg:w="155"/><text x="64.5635%" y="607.50"></text></g><g><title>large_dalloc_prep_impl (10 samples, 0.03%)</title><rect x="64.6952%" y="581" width="0.0263%" height="15" fill="rgb(221,59,37)" fg:x="24579" fg:w="10"/><text x="64.9452%" y="591.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (7 samples, 0.02%)</title><rect x="64.7031%" y="565" width="0.0184%" height="15" fill="rgb(209,202,51)" fg:x="24582" fg:w="7"/><text x="64.9531%" y="575.50"></text></g><g><title>emap_edata_lookup (7 samples, 0.02%)</title><rect x="64.7215%" y="597" width="0.0184%" height="15" fill="rgb(228,81,30)" fg:x="24589" fg:w="7"/><text x="64.9715%" y="607.50"></text></g><g><title>rtree_read (7 samples, 0.02%)</title><rect x="64.7215%" y="581" width="0.0184%" height="15" fill="rgb(227,42,39)" fg:x="24589" fg:w="7"/><text x="64.9715%" y="591.50"></text></g><g><title>rtree_leaf_elm_read (5 samples, 0.01%)</title><rect x="64.7268%" y="565" width="0.0132%" height="15" fill="rgb(221,26,2)" fg:x="24591" fg:w="5"/><text x="64.9768%" y="575.50"></text></g><g><title>rtree_leaf_elm_bits_read (5 samples, 0.01%)</title><rect x="64.7268%" y="549" width="0.0132%" height="15" fill="rgb(254,61,31)" fg:x="24591" fg:w="5"/><text x="64.9768%" y="559.50"></text></g><g><title>atomic_load_p (5 samples, 0.01%)</title><rect x="64.7268%" y="533" width="0.0132%" height="15" fill="rgb(222,173,38)" fg:x="24591" fg:w="5"/><text x="64.9768%" y="543.50"></text></g><g><title>arena_dalloc_large (172 samples, 0.45%)</title><rect x="64.3004%" y="613" width="0.4527%" height="15" fill="rgb(218,50,12)" fg:x="24429" fg:w="172"/><text x="64.5504%" y="623.50"></text></g><g><title>tcache_dalloc_large (5 samples, 0.01%)</title><rect x="64.7399%" y="597" width="0.0132%" height="15" fill="rgb(223,88,40)" fg:x="24596" fg:w="5"/><text x="64.9899%" y="607.50"></text></g><g><title>cache_bin_dalloc_easy (5 samples, 0.01%)</title><rect x="64.7399%" y="581" width="0.0132%" height="15" fill="rgb(237,54,19)" fg:x="24596" fg:w="5"/><text x="64.9899%" y="591.50"></text></g><g><title>isdalloct (208 samples, 0.55%)</title><rect x="64.2899%" y="645" width="0.5475%" height="15" fill="rgb(251,129,25)" fg:x="24425" fg:w="208"/><text x="64.5399%" y="655.50"></text></g><g><title>arena_sdalloc (208 samples, 0.55%)</title><rect x="64.2899%" y="629" width="0.5475%" height="15" fill="rgb(238,97,19)" fg:x="24425" fg:w="208"/><text x="64.5399%" y="639.50"></text></g><g><title>tcache_dalloc_small (32 samples, 0.08%)</title><rect x="64.7531%" y="613" width="0.0842%" height="15" fill="rgb(240,169,18)" fg:x="24601" fg:w="32"/><text x="65.0031%" y="623.50"></text></g><g><title>cache_bin_dalloc_easy (32 samples, 0.08%)</title><rect x="64.7531%" y="597" width="0.0842%" height="15" fill="rgb(230,187,49)" fg:x="24601" fg:w="32"/><text x="65.0031%" y="607.50"></text></g><g><title>cache_bin_full (28 samples, 0.07%)</title><rect x="64.7636%" y="581" width="0.0737%" height="15" fill="rgb(209,44,26)" fg:x="24605" fg:w="28"/><text x="65.0136%" y="591.50"></text></g><g><title>sz_size2index (13 samples, 0.03%)</title><rect x="64.8373%" y="645" width="0.0342%" height="15" fill="rgb(244,0,6)" fg:x="24633" fg:w="13"/><text x="65.0873%" y="655.50"></text></g><g><title>sz_size2index_compute (13 samples, 0.03%)</title><rect x="64.8373%" y="629" width="0.0342%" height="15" fill="rgb(248,18,21)" fg:x="24633" fg:w="13"/><text x="65.0873%" y="639.50"></text></g><g><title>_rjem_je_peak_dalloc_new_event_wait (5 samples, 0.01%)</title><rect x="64.9400%" y="597" width="0.0132%" height="15" fill="rgb(245,180,19)" fg:x="24672" fg:w="5"/><text x="65.1900%" y="607.50"></text></g><g><title>cache_bin_ncached_get_local (4 samples, 0.01%)</title><rect x="64.9874%" y="565" width="0.0105%" height="15" fill="rgb(252,118,36)" fg:x="24690" fg:w="4"/><text x="65.2374%" y="575.50"></text></g><g><title>cache_bin_ncached_get_internal (4 samples, 0.01%)</title><rect x="64.9874%" y="549" width="0.0105%" height="15" fill="rgb(210,224,19)" fg:x="24690" fg:w="4"/><text x="65.2374%" y="559.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (11 samples, 0.03%)</title><rect x="64.9847%" y="581" width="0.0290%" height="15" fill="rgb(218,30,24)" fg:x="24689" fg:w="11"/><text x="65.2347%" y="591.50"></text></g><g><title>cache_bin_nstashed_get_local (6 samples, 0.02%)</title><rect x="64.9979%" y="565" width="0.0158%" height="15" fill="rgb(219,75,50)" fg:x="24694" fg:w="6"/><text x="65.2479%" y="575.50"></text></g><g><title>cache_bin_nstashed_get_internal (6 samples, 0.02%)</title><rect x="64.9979%" y="549" width="0.0158%" height="15" fill="rgb(234,72,50)" fg:x="24694" fg:w="6"/><text x="65.2479%" y="559.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (6 samples, 0.02%)</title><rect x="64.9979%" y="533" width="0.0158%" height="15" fill="rgb(219,100,48)" fg:x="24694" fg:w="6"/><text x="65.2479%" y="543.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.01%)</title><rect x="65.0321%" y="517" width="0.0105%" height="15" fill="rgb(253,5,41)" fg:x="24707" fg:w="4"/><text x="65.2821%" y="527.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (14 samples, 0.04%)</title><rect x="65.0163%" y="565" width="0.0368%" height="15" fill="rgb(247,181,11)" fg:x="24701" fg:w="14"/><text x="65.2663%" y="575.50"></text></g><g><title>tcache_bin_flush_bottom (14 samples, 0.04%)</title><rect x="65.0163%" y="549" width="0.0368%" height="15" fill="rgb(222,223,25)" fg:x="24701" fg:w="14"/><text x="65.2663%" y="559.50"></text></g><g><title>tcache_bin_flush_impl (14 samples, 0.04%)</title><rect x="65.0163%" y="533" width="0.0368%" height="15" fill="rgb(214,198,28)" fg:x="24701" fg:w="14"/><text x="65.2663%" y="543.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (4 samples, 0.01%)</title><rect x="65.0426%" y="517" width="0.0105%" height="15" fill="rgb(230,46,43)" fg:x="24711" fg:w="4"/><text x="65.2926%" y="527.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (39 samples, 0.10%)</title><rect x="64.9531%" y="597" width="0.1027%" height="15" fill="rgb(233,65,53)" fg:x="24677" fg:w="39"/><text x="65.2031%" y="607.50"></text></g><g><title>tcache_gc_small (16 samples, 0.04%)</title><rect x="65.0137%" y="581" width="0.0421%" height="15" fill="rgb(221,121,27)" fg:x="24700" fg:w="16"/><text x="65.2637%" y="591.50"></text></g><g><title>tcache_gc_dalloc_event_wait_get (7 samples, 0.02%)</title><rect x="65.0663%" y="597" width="0.0184%" height="15" fill="rgb(247,70,47)" fg:x="24720" fg:w="7"/><text x="65.3163%" y="607.50"></text></g><g><title>tsd_tcache_gc_dalloc_event_wait_get (7 samples, 0.02%)</title><rect x="65.0663%" y="581" width="0.0184%" height="15" fill="rgb(228,85,35)" fg:x="24720" fg:w="7"/><text x="65.3163%" y="591.50"></text></g><g><title>atomic_fence (5 samples, 0.01%)</title><rect x="65.0927%" y="533" width="0.0132%" height="15" fill="rgb(209,50,18)" fg:x="24730" fg:w="5"/><text x="65.3427%" y="543.50"></text></g><g><title>te_adjust_thresholds_helper (9 samples, 0.02%)</title><rect x="65.0848%" y="597" width="0.0237%" height="15" fill="rgb(250,19,35)" fg:x="24727" fg:w="9"/><text x="65.3348%" y="607.50"></text></g><g><title>te_ctx_next_event_set (7 samples, 0.02%)</title><rect x="65.0900%" y="581" width="0.0184%" height="15" fill="rgb(253,107,29)" fg:x="24729" fg:w="7"/><text x="65.3400%" y="591.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (7 samples, 0.02%)</title><rect x="65.0900%" y="565" width="0.0184%" height="15" fill="rgb(252,179,29)" fg:x="24729" fg:w="7"/><text x="65.3400%" y="575.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (6 samples, 0.02%)</title><rect x="65.0927%" y="549" width="0.0158%" height="15" fill="rgb(238,194,6)" fg:x="24730" fg:w="6"/><text x="65.3427%" y="559.50"></text></g><g><title>_rjem_je_te_event_trigger (85 samples, 0.22%)</title><rect x="64.8979%" y="613" width="0.2237%" height="15" fill="rgb(238,164,29)" fg:x="24656" fg:w="85"/><text x="65.1479%" y="623.50"></text></g><g><title>te_ctx_last_event_get (5 samples, 0.01%)</title><rect x="65.1084%" y="597" width="0.0132%" height="15" fill="rgb(224,25,9)" fg:x="24736" fg:w="5"/><text x="65.3584%" y="607.50"></text></g><g><title>isfree (320 samples, 0.84%)</title><rect x="64.2899%" y="661" width="0.8423%" height="15" fill="rgb(244,153,23)" fg:x="24425" fg:w="320"/><text x="64.5399%" y="671.50"></text></g><g><title>thread_dalloc_event (99 samples, 0.26%)</title><rect x="64.8716%" y="645" width="0.2606%" height="15" fill="rgb(212,203,14)" fg:x="24646" fg:w="99"/><text x="65.1216%" y="655.50"></text></g><g><title>te_event_advance (99 samples, 0.26%)</title><rect x="64.8716%" y="629" width="0.2606%" height="15" fill="rgb(220,164,20)" fg:x="24646" fg:w="99"/><text x="65.1216%" y="639.50"></text></g><g><title>te_ctx_get (4 samples, 0.01%)</title><rect x="65.1216%" y="613" width="0.0105%" height="15" fill="rgb(222,203,48)" fg:x="24741" fg:w="4"/><text x="65.3716%" y="623.50"></text></g><g><title>_rjem_je_sdallocx_default (388 samples, 1.02%)</title><rect x="64.2030%" y="677" width="1.0213%" height="15" fill="rgb(215,159,22)" fg:x="24392" fg:w="388"/><text x="64.4530%" y="687.50"></text></g><g><title>tsd_fetch_min (33 samples, 0.09%)</title><rect x="65.1374%" y="661" width="0.0869%" height="15" fill="rgb(216,183,47)" fg:x="24747" fg:w="33"/><text x="65.3874%" y="671.50"></text></g><g><title>tsd_fetch_impl (33 samples, 0.09%)</title><rect x="65.1374%" y="645" width="0.0869%" height="15" fill="rgb(229,195,25)" fg:x="24747" fg:w="33"/><text x="65.3874%" y="655.50"></text></g><g><title>tsd_state_get (25 samples, 0.07%)</title><rect x="65.1585%" y="629" width="0.0658%" height="15" fill="rgb(224,132,51)" fg:x="24755" fg:w="25"/><text x="65.4085%" y="639.50"></text></g><g><title>core::mem::drop (476 samples, 1.25%)</title><rect x="64.1925%" y="853" width="1.2529%" height="15" fill="rgb(240,63,7)" fg:x="24388" fg:w="476"/><text x="64.4425%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (476 samples, 1.25%)</title><rect x="64.1925%" y="837" width="1.2529%" height="15" fill="rgb(249,182,41)" fg:x="24388" fg:w="476"/><text x="64.4425%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (472 samples, 1.24%)</title><rect x="64.2030%" y="821" width="1.2424%" height="15" fill="rgb(243,47,26)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (472 samples, 1.24%)</title><rect x="64.2030%" y="805" width="1.2424%" height="15" fill="rgb(233,48,2)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (472 samples, 1.24%)</title><rect x="64.2030%" y="789" width="1.2424%" height="15" fill="rgb(244,165,34)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (472 samples, 1.24%)</title><rect x="64.2030%" y="773" width="1.2424%" height="15" fill="rgb(207,89,7)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (472 samples, 1.24%)</title><rect x="64.2030%" y="757" width="1.2424%" height="15" fill="rgb(244,117,36)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (472 samples, 1.24%)</title><rect x="64.2030%" y="741" width="1.2424%" height="15" fill="rgb(226,144,34)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (472 samples, 1.24%)</title><rect x="64.2030%" y="725" width="1.2424%" height="15" fill="rgb(213,23,19)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="735.50"></text></g><g><title>__rust_dealloc (472 samples, 1.24%)</title><rect x="64.2030%" y="709" width="1.2424%" height="15" fill="rgb(217,75,12)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="719.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (472 samples, 1.24%)</title><rect x="64.2030%" y="693" width="1.2424%" height="15" fill="rgb(224,159,17)" fg:x="24392" fg:w="472"/><text x="64.4530%" y="703.50"></text></g><g><title>_rjem_sdallocx (84 samples, 0.22%)</title><rect x="65.2243%" y="677" width="0.2211%" height="15" fill="rgb(217,118,1)" fg:x="24780" fg:w="84"/><text x="65.4743%" y="687.50"></text></g><g><title>free_fastpath (77 samples, 0.20%)</title><rect x="65.2427%" y="661" width="0.2027%" height="15" fill="rgb(232,180,48)" fg:x="24787" fg:w="77"/><text x="65.4927%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.07%)</title><rect x="65.4454%" y="853" width="0.0658%" height="15" fill="rgb(230,27,33)" fg:x="24864" fg:w="25"/><text x="65.6954%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.07%)</title><rect x="65.4454%" y="837" width="0.0658%" height="15" fill="rgb(205,31,21)" fg:x="24864" fg:w="25"/><text x="65.6954%" y="847.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (509 samples, 1.34%)</title><rect x="64.1846%" y="885" width="1.3398%" height="15" fill="rgb(253,59,4)" fg:x="24385" fg:w="509"/><text x="64.4346%" y="895.50"></text></g><g><title>bytes::bytes_mut::release_shared (508 samples, 1.34%)</title><rect x="64.1872%" y="869" width="1.3371%" height="15" fill="rgb(224,201,9)" fg:x="24386" fg:w="508"/><text x="64.4372%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="65.5112%" y="853" width="0.0132%" height="15" fill="rgb(229,206,30)" fg:x="24889" fg:w="5"/><text x="65.7612%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="65.5112%" y="837" width="0.0132%" height="15" fill="rgb(212,67,47)" fg:x="24889" fg:w="5"/><text x="65.7612%" y="847.50"></text></g><g><title>cache_bin_dalloc_easy (6 samples, 0.02%)</title><rect x="65.5638%" y="853" width="0.0158%" height="15" fill="rgb(211,96,50)" fg:x="24909" fg:w="6"/><text x="65.8138%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (533 samples, 1.40%)</title><rect x="64.1846%" y="901" width="1.4029%" height="15" fill="rgb(252,114,18)" fg:x="24385" fg:w="533"/><text x="64.4346%" y="911.50"></text></g><g><title>_rjem_sdallocx (24 samples, 0.06%)</title><rect x="65.5243%" y="885" width="0.0632%" height="15" fill="rgb(223,58,37)" fg:x="24894" fg:w="24"/><text x="65.7743%" y="895.50"></text></g><g><title>free_fastpath (24 samples, 0.06%)</title><rect x="65.5243%" y="869" width="0.0632%" height="15" fill="rgb(237,70,4)" fg:x="24894" fg:w="24"/><text x="65.7743%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (19 samples, 0.05%)</title><rect x="65.5901%" y="901" width="0.0500%" height="15" fill="rgb(244,85,46)" fg:x="24919" fg:w="19"/><text x="65.8401%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.05%)</title><rect x="65.5901%" y="885" width="0.0500%" height="15" fill="rgb(223,39,52)" fg:x="24919" fg:w="19"/><text x="65.8401%" y="895.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (12 samples, 0.03%)</title><rect x="65.6586%" y="853" width="0.0316%" height="15" fill="rgb(218,200,14)" fg:x="24945" fg:w="12"/><text x="65.9086%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (10 samples, 0.03%)</title><rect x="65.6638%" y="837" width="0.0263%" height="15" fill="rgb(208,171,16)" fg:x="24947" fg:w="10"/><text x="65.9138%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (7 samples, 0.02%)</title><rect x="65.6717%" y="821" width="0.0184%" height="15" fill="rgb(234,200,18)" fg:x="24950" fg:w="7"/><text x="65.9217%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (7 samples, 0.02%)</title><rect x="65.6717%" y="805" width="0.0184%" height="15" fill="rgb(228,45,11)" fg:x="24950" fg:w="7"/><text x="65.9217%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (5 samples, 0.01%)</title><rect x="65.6770%" y="789" width="0.0132%" height="15" fill="rgb(237,182,11)" fg:x="24952" fg:w="5"/><text x="65.9270%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.01%)</title><rect x="65.6770%" y="773" width="0.0132%" height="15" fill="rgb(241,175,49)" fg:x="24952" fg:w="5"/><text x="65.9270%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::load (5 samples, 0.01%)</title><rect x="65.6770%" y="757" width="0.0132%" height="15" fill="rgb(247,38,35)" fg:x="24952" fg:w="5"/><text x="65.9270%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="65.6770%" y="741" width="0.0132%" height="15" fill="rgb(228,39,49)" fg:x="24952" fg:w="5"/><text x="65.9270%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="65.6770%" y="725" width="0.0132%" height="15" fill="rgb(226,101,26)" fg:x="24952" fg:w="5"/><text x="65.9270%" y="735.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (8 samples, 0.02%)</title><rect x="65.6980%" y="853" width="0.0211%" height="15" fill="rgb(206,141,19)" fg:x="24960" fg:w="8"/><text x="65.9480%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (8 samples, 0.02%)</title><rect x="65.6980%" y="837" width="0.0211%" height="15" fill="rgb(211,200,13)" fg:x="24960" fg:w="8"/><text x="65.9480%" y="847.50"></text></g><g><title>core::ptr::read (8 samples, 0.02%)</title><rect x="65.6980%" y="821" width="0.0211%" height="15" fill="rgb(241,121,6)" fg:x="24960" fg:w="8"/><text x="65.9480%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (15 samples, 0.04%)</title><rect x="65.7270%" y="837" width="0.0395%" height="15" fill="rgb(234,221,29)" fg:x="24971" fg:w="15"/><text x="65.9770%" y="847.50"></text></g><g><title>core::ptr::write (12 samples, 0.03%)</title><rect x="65.7349%" y="821" width="0.0316%" height="15" fill="rgb(229,136,5)" fg:x="24974" fg:w="12"/><text x="65.9849%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (23 samples, 0.06%)</title><rect x="65.7191%" y="853" width="0.0605%" height="15" fill="rgb(238,36,11)" fg:x="24968" fg:w="23"/><text x="65.9691%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="65.7875%" y="853" width="0.0290%" height="15" fill="rgb(251,55,41)" fg:x="24994" fg:w="11"/><text x="66.0375%" y="863.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::_{{closure}} (10 samples, 0.03%)</title><rect x="65.7902%" y="837" width="0.0263%" height="15" fill="rgb(242,34,40)" fg:x="24995" fg:w="10"/><text x="66.0402%" y="847.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::fire_send (6 samples, 0.02%)</title><rect x="65.8007%" y="821" width="0.0158%" height="15" fill="rgb(215,42,17)" fg:x="24999" fg:w="6"/><text x="66.0507%" y="831.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::lock (4 samples, 0.01%)</title><rect x="65.8060%" y="805" width="0.0105%" height="15" fill="rgb(207,44,46)" fg:x="25001" fg:w="4"/><text x="66.0560%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.01%)</title><rect x="65.8060%" y="789" width="0.0105%" height="15" fill="rgb(211,206,28)" fg:x="25001" fg:w="4"/><text x="66.0560%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (56 samples, 0.15%)</title><rect x="65.8218%" y="853" width="0.1474%" height="15" fill="rgb(237,167,16)" fg:x="25007" fg:w="56"/><text x="66.0718%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.15%)</title><rect x="65.8218%" y="837" width="0.1474%" height="15" fill="rgb(233,66,6)" fg:x="25007" fg:w="56"/><text x="66.0718%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (56 samples, 0.15%)</title><rect x="65.8218%" y="821" width="0.1474%" height="15" fill="rgb(246,123,29)" fg:x="25007" fg:w="56"/><text x="66.0718%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (55 samples, 0.14%)</title><rect x="65.8244%" y="805" width="0.1448%" height="15" fill="rgb(209,62,40)" fg:x="25008" fg:w="55"/><text x="66.0744%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (55 samples, 0.14%)</title><rect x="65.8244%" y="789" width="0.1448%" height="15" fill="rgb(218,4,25)" fg:x="25008" fg:w="55"/><text x="66.0744%" y="799.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="65.9744%" y="821" width="0.0132%" height="15" fill="rgb(253,91,49)" fg:x="25065" fg:w="5"/><text x="66.2244%" y="831.50"></text></g><g><title>std::sync::poison::Flag::guard (5 samples, 0.01%)</title><rect x="65.9744%" y="805" width="0.0132%" height="15" fill="rgb(228,155,29)" fg:x="25065" fg:w="5"/><text x="66.2244%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (104 samples, 0.27%)</title><rect x="65.9876%" y="805" width="0.2737%" height="15" fill="rgb(243,57,37)" fg:x="25070" fg:w="104"/><text x="66.2376%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (104 samples, 0.27%)</title><rect x="65.9876%" y="789" width="0.2737%" height="15" fill="rgb(244,167,17)" fg:x="25070" fg:w="104"/><text x="66.2376%" y="799.50"></text></g><g><title>flume::Sender&lt;T&gt;::try_send (235 samples, 0.62%)</title><rect x="65.6454%" y="901" width="0.6186%" height="15" fill="rgb(207,181,38)" fg:x="24940" fg:w="235"/><text x="65.8954%" y="911.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (233 samples, 0.61%)</title><rect x="65.6507%" y="885" width="0.6133%" height="15" fill="rgb(211,8,23)" fg:x="24942" fg:w="233"/><text x="65.9007%" y="895.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (233 samples, 0.61%)</title><rect x="65.6507%" y="869" width="0.6133%" height="15" fill="rgb(235,11,44)" fg:x="24942" fg:w="233"/><text x="65.9007%" y="879.50"></text></g><g><title>flume::wait_lock (110 samples, 0.29%)</title><rect x="65.9744%" y="853" width="0.2895%" height="15" fill="rgb(248,18,52)" fg:x="25065" fg:w="110"/><text x="66.2244%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (110 samples, 0.29%)</title><rect x="65.9744%" y="837" width="0.2895%" height="15" fill="rgb(208,4,7)" fg:x="25065" fg:w="110"/><text x="66.2244%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (105 samples, 0.28%)</title><rect x="65.9876%" y="821" width="0.2764%" height="15" fill="rgb(240,17,39)" fg:x="25070" fg:w="105"/><text x="66.2376%" y="831.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (38 samples, 0.10%)</title><rect x="66.3350%" y="789" width="0.1000%" height="15" fill="rgb(207,170,3)" fg:x="25202" fg:w="38"/><text x="66.5850%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (38 samples, 0.10%)</title><rect x="66.3350%" y="773" width="0.1000%" height="15" fill="rgb(236,100,52)" fg:x="25202" fg:w="38"/><text x="66.5850%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (38 samples, 0.10%)</title><rect x="66.3350%" y="757" width="0.1000%" height="15" fill="rgb(246,78,51)" fg:x="25202" fg:w="38"/><text x="66.5850%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (38 samples, 0.10%)</title><rect x="66.3350%" y="741" width="0.1000%" height="15" fill="rgb(211,17,15)" fg:x="25202" fg:w="38"/><text x="66.5850%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (41 samples, 0.11%)</title><rect x="66.3350%" y="805" width="0.1079%" height="15" fill="rgb(209,59,46)" fg:x="25202" fg:w="41"/><text x="66.5850%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (53 samples, 0.14%)</title><rect x="66.4429%" y="805" width="0.1395%" height="15" fill="rgb(210,92,25)" fg:x="25243" fg:w="53"/><text x="66.6929%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (53 samples, 0.14%)</title><rect x="66.4429%" y="789" width="0.1395%" height="15" fill="rgb(238,174,52)" fg:x="25243" fg:w="53"/><text x="66.6929%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.14%)</title><rect x="66.4429%" y="773" width="0.1395%" height="15" fill="rgb(230,73,7)" fg:x="25243" fg:w="53"/><text x="66.6929%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (132 samples, 0.35%)</title><rect x="66.2640%" y="901" width="0.3474%" height="15" fill="rgb(243,124,40)" fg:x="25175" fg:w="132"/><text x="66.5140%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (132 samples, 0.35%)</title><rect x="66.2640%" y="885" width="0.3474%" height="15" fill="rgb(244,170,11)" fg:x="25175" fg:w="132"/><text x="66.5140%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (132 samples, 0.35%)</title><rect x="66.2640%" y="869" width="0.3474%" height="15" fill="rgb(207,114,54)" fg:x="25175" fg:w="132"/><text x="66.5140%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (112 samples, 0.29%)</title><rect x="66.3166%" y="853" width="0.2948%" height="15" fill="rgb(205,42,20)" fg:x="25195" fg:w="112"/><text x="66.5666%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (112 samples, 0.29%)</title><rect x="66.3166%" y="837" width="0.2948%" height="15" fill="rgb(230,30,28)" fg:x="25195" fg:w="112"/><text x="66.5666%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (112 samples, 0.29%)</title><rect x="66.3166%" y="821" width="0.2948%" height="15" fill="rgb(205,73,54)" fg:x="25195" fg:w="112"/><text x="66.5666%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.03%)</title><rect x="66.5824%" y="805" width="0.0290%" height="15" fill="rgb(254,227,23)" fg:x="25296" fg:w="11"/><text x="66.8324%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.03%)</title><rect x="66.5824%" y="789" width="0.0290%" height="15" fill="rgb(228,202,34)" fg:x="25296" fg:w="11"/><text x="66.8324%" y="799.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_data_packet (986 samples, 2.60%)</title><rect x="64.0293%" y="917" width="2.5953%" height="15" fill="rgb(222,225,37)" fg:x="24326" fg:w="986"/><text x="64.2793%" y="927.50">wi..</text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (5 samples, 0.01%)</title><rect x="66.6114%" y="901" width="0.0132%" height="15" fill="rgb(221,14,54)" fg:x="25307" fg:w="5"/><text x="66.8614%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17,235 samples, 45.36%)</title><rect x="21.2703%" y="997" width="45.3648%" height="15" fill="rgb(254,102,2)" fg:x="8081" fg:w="17235"/><text x="21.5203%" y="1007.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17,235 samples, 45.36%)</title><rect x="21.2703%" y="981" width="45.3648%" height="15" fill="rgb(232,104,17)" fg:x="8081" fg:w="17235"/><text x="21.5203%" y="991.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Fu..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::into_future::_{{closure}} (17,225 samples, 45.34%)</title><rect x="21.2966%" y="965" width="45.3385%" height="15" fill="rgb(250,220,14)" fg:x="8091" fg:w="17225"/><text x="21.5466%" y="975.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::into_future::_{{closure}}</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}} (17,191 samples, 45.25%)</title><rect x="21.3861%" y="949" width="45.2490%" height="15" fill="rgb(241,158,9)" fg:x="8125" fg:w="17191"/><text x="21.6361%" y="959.50">wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_packet::_{{closure}} (1,056 samples, 2.78%)</title><rect x="63.8555%" y="933" width="2.7795%" height="15" fill="rgb(246,9,43)" fg:x="24260" fg:w="1056"/><text x="64.1055%" y="943.50">wi..</text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::server_handle_packet::_{{closure}} (4 samples, 0.01%)</title><rect x="66.6246%" y="917" width="0.0105%" height="15" fill="rgb(206,73,33)" fg:x="25312" fg:w="4"/><text x="66.8746%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.07%)</title><rect x="66.6351%" y="933" width="0.0711%" height="15" fill="rgb(222,79,8)" fg:x="25316" fg:w="27"/><text x="66.8851%" y="943.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (27 samples, 0.07%)</title><rect x="66.6351%" y="917" width="0.0711%" height="15" fill="rgb(234,8,54)" fg:x="25316" fg:w="27"/><text x="66.8851%" y="927.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (27 samples, 0.07%)</title><rect x="66.6351%" y="901" width="0.0711%" height="15" fill="rgb(209,134,38)" fg:x="25316" fg:w="27"/><text x="66.8851%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (26 samples, 0.07%)</title><rect x="66.6377%" y="885" width="0.0684%" height="15" fill="rgb(230,127,29)" fg:x="25317" fg:w="26"/><text x="66.8877%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (33 samples, 0.09%)</title><rect x="66.6351%" y="997" width="0.0869%" height="15" fill="rgb(242,44,41)" fg:x="25316" fg:w="33"/><text x="66.8851%" y="1007.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (33 samples, 0.09%)</title><rect x="66.6351%" y="981" width="0.0869%" height="15" fill="rgb(222,56,43)" fg:x="25316" fg:w="33"/><text x="66.8851%" y="991.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (33 samples, 0.09%)</title><rect x="66.6351%" y="965" width="0.0869%" height="15" fill="rgb(238,39,47)" fg:x="25316" fg:w="33"/><text x="66.8851%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.09%)</title><rect x="66.6351%" y="949" width="0.0869%" height="15" fill="rgb(226,79,43)" fg:x="25316" fg:w="33"/><text x="66.8851%" y="959.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (6 samples, 0.02%)</title><rect x="66.7061%" y="933" width="0.0158%" height="15" fill="rgb(242,105,53)" fg:x="25343" fg:w="6"/><text x="66.9561%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.02%)</title><rect x="66.7061%" y="917" width="0.0158%" height="15" fill="rgb(251,132,46)" fg:x="25343" fg:w="6"/><text x="66.9561%" y="927.50"></text></g><g><title>core::mem::replace (6 samples, 0.02%)</title><rect x="66.7061%" y="901" width="0.0158%" height="15" fill="rgb(231,77,14)" fg:x="25343" fg:w="6"/><text x="66.9561%" y="911.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="66.7061%" y="885" width="0.0158%" height="15" fill="rgb(240,135,9)" fg:x="25343" fg:w="6"/><text x="66.9561%" y="895.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::listener_mut (18 samples, 0.05%)</title><rect x="66.8720%" y="933" width="0.0474%" height="15" fill="rgb(248,109,14)" fg:x="25406" fg:w="18"/><text x="67.1220%" y="943.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (18 samples, 0.05%)</title><rect x="66.8720%" y="917" width="0.0474%" height="15" fill="rgb(227,146,52)" fg:x="25406" fg:w="18"/><text x="67.1220%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (18 samples, 0.05%)</title><rect x="66.8720%" y="901" width="0.0474%" height="15" fill="rgb(232,54,3)" fg:x="25406" fg:w="18"/><text x="67.1220%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.23%)</title><rect x="66.8720%" y="949" width="0.2290%" height="15" fill="rgb(229,201,43)" fg:x="25406" fg:w="87"/><text x="67.1220%" y="959.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (69 samples, 0.18%)</title><rect x="66.9194%" y="933" width="0.1816%" height="15" fill="rgb(252,161,33)" fg:x="25424" fg:w="69"/><text x="67.1694%" y="943.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (35 samples, 0.09%)</title><rect x="67.0088%" y="917" width="0.0921%" height="15" fill="rgb(226,146,40)" fg:x="25458" fg:w="35"/><text x="67.2588%" y="927.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (30 samples, 0.08%)</title><rect x="67.0220%" y="901" width="0.0790%" height="15" fill="rgb(219,47,25)" fg:x="25463" fg:w="30"/><text x="67.2720%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.08%)</title><rect x="67.0220%" y="885" width="0.0790%" height="15" fill="rgb(250,135,13)" fg:x="25463" fg:w="30"/><text x="67.2720%" y="895.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (29 samples, 0.08%)</title><rect x="67.0246%" y="869" width="0.0763%" height="15" fill="rgb(219,229,18)" fg:x="25464" fg:w="29"/><text x="67.2746%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (29 samples, 0.08%)</title><rect x="67.0246%" y="853" width="0.0763%" height="15" fill="rgb(217,152,27)" fg:x="25464" fg:w="29"/><text x="67.2746%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.08%)</title><rect x="67.0246%" y="837" width="0.0763%" height="15" fill="rgb(225,71,47)" fg:x="25464" fg:w="29"/><text x="67.2746%" y="847.50"></text></g><g><title>[libc.so.6] (126 samples, 0.33%)</title><rect x="67.4642%" y="725" width="0.3316%" height="15" fill="rgb(220,139,14)" fg:x="25631" fg:w="126"/><text x="67.7142%" y="735.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (158 samples, 0.42%)</title><rect x="67.4116%" y="741" width="0.4159%" height="15" fill="rgb(247,54,32)" fg:x="25611" fg:w="158"/><text x="67.6616%" y="751.50"></text></g><g><title>_ZN4core3ptr2276drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..into_inner_stream..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h86c016b731abc5f2E (12 samples, 0.03%)</title><rect x="67.7959%" y="725" width="0.0316%" height="15" fill="rgb(252,131,39)" fg:x="25757" fg:w="12"/><text x="68.0459%" y="735.50"></text></g><g><title>_ZN4core3ptr1162drop_in_place$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..into_inner_stream..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hbcc32809270bba32E (5 samples, 0.01%)</title><rect x="67.8143%" y="709" width="0.0132%" height="15" fill="rgb(210,108,39)" fg:x="25764" fg:w="5"/><text x="68.0643%" y="719.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (53 samples, 0.14%)</title><rect x="67.8327%" y="741" width="0.1395%" height="15" fill="rgb(205,23,29)" fg:x="25771" fg:w="53"/><text x="68.0827%" y="751.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project_replace (4 samples, 0.01%)</title><rect x="67.9617%" y="725" width="0.0105%" height="15" fill="rgb(246,139,46)" fg:x="25820" fg:w="4"/><text x="68.2117%" y="735.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="67.9617%" y="709" width="0.0105%" height="15" fill="rgb(250,81,26)" fg:x="25820" fg:w="4"/><text x="68.2117%" y="719.50"></text></g><g><title>core::result::Result&lt;core::option::Option&lt;T&gt;,E&gt;::transpose (4 samples, 0.01%)</title><rect x="68.0143%" y="725" width="0.0105%" height="15" fill="rgb(214,104,7)" fg:x="25840" fg:w="4"/><text x="68.2643%" y="735.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (4 samples, 0.01%)</title><rect x="68.2670%" y="661" width="0.0105%" height="15" fill="rgb(233,189,8)" fg:x="25936" fg:w="4"/><text x="68.5170%" y="671.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.01%)</title><rect x="68.3012%" y="341" width="0.0105%" height="15" fill="rgb(228,141,17)" fg:x="25949" fg:w="4"/><text x="68.5512%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.01%)</title><rect x="68.3012%" y="325" width="0.0105%" height="15" fill="rgb(247,157,1)" fg:x="25949" fg:w="4"/><text x="68.5512%" y="335.50"></text></g><g><title>pthread_mutex_trylock (4 samples, 0.01%)</title><rect x="68.3012%" y="309" width="0.0105%" height="15" fill="rgb(249,225,5)" fg:x="25949" fg:w="4"/><text x="68.5512%" y="319.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (14 samples, 0.04%)</title><rect x="68.2775%" y="373" width="0.0368%" height="15" fill="rgb(242,55,13)" fg:x="25940" fg:w="14"/><text x="68.5275%" y="383.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (13 samples, 0.03%)</title><rect x="68.2802%" y="357" width="0.0342%" height="15" fill="rgb(230,49,50)" fg:x="25941" fg:w="13"/><text x="68.5302%" y="367.50"></text></g><g><title>imalloc_no_sample (17 samples, 0.04%)</title><rect x="68.2775%" y="437" width="0.0447%" height="15" fill="rgb(241,111,38)" fg:x="25940" fg:w="17"/><text x="68.5275%" y="447.50"></text></g><g><title>iallocztm (17 samples, 0.04%)</title><rect x="68.2775%" y="421" width="0.0447%" height="15" fill="rgb(252,155,4)" fg:x="25940" fg:w="17"/><text x="68.5275%" y="431.50"></text></g><g><title>arena_malloc (17 samples, 0.04%)</title><rect x="68.2775%" y="405" width="0.0447%" height="15" fill="rgb(212,69,32)" fg:x="25940" fg:w="17"/><text x="68.5275%" y="415.50"></text></g><g><title>tcache_alloc_small (17 samples, 0.04%)</title><rect x="68.2775%" y="389" width="0.0447%" height="15" fill="rgb(243,107,47)" fg:x="25940" fg:w="17"/><text x="68.5275%" y="399.50"></text></g><g><title>_rjem_je_malloc_default (18 samples, 0.05%)</title><rect x="68.2775%" y="485" width="0.0474%" height="15" fill="rgb(247,130,12)" fg:x="25940" fg:w="18"/><text x="68.5275%" y="495.50"></text></g><g><title>imalloc (18 samples, 0.05%)</title><rect x="68.2775%" y="469" width="0.0474%" height="15" fill="rgb(233,74,16)" fg:x="25940" fg:w="18"/><text x="68.5275%" y="479.50"></text></g><g><title>imalloc_body (18 samples, 0.05%)</title><rect x="68.2775%" y="453" width="0.0474%" height="15" fill="rgb(208,58,18)" fg:x="25940" fg:w="18"/><text x="68.5275%" y="463.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (19 samples, 0.05%)</title><rect x="68.2775%" y="661" width="0.0500%" height="15" fill="rgb(242,225,1)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (19 samples, 0.05%)</title><rect x="68.2775%" y="645" width="0.0500%" height="15" fill="rgb(249,39,40)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.05%)</title><rect x="68.2775%" y="629" width="0.0500%" height="15" fill="rgb(207,72,44)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.05%)</title><rect x="68.2775%" y="613" width="0.0500%" height="15" fill="rgb(215,193,12)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (19 samples, 0.05%)</title><rect x="68.2775%" y="597" width="0.0500%" height="15" fill="rgb(248,41,39)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (19 samples, 0.05%)</title><rect x="68.2775%" y="581" width="0.0500%" height="15" fill="rgb(253,85,4)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.05%)</title><rect x="68.2775%" y="565" width="0.0500%" height="15" fill="rgb(243,70,31)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.05%)</title><rect x="68.2775%" y="549" width="0.0500%" height="15" fill="rgb(253,195,26)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="559.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.05%)</title><rect x="68.2775%" y="533" width="0.0500%" height="15" fill="rgb(243,42,11)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="543.50"></text></g><g><title>__rust_alloc (19 samples, 0.05%)</title><rect x="68.2775%" y="517" width="0.0500%" height="15" fill="rgb(239,66,17)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.05%)</title><rect x="68.2775%" y="501" width="0.0500%" height="15" fill="rgb(217,132,21)" fg:x="25940" fg:w="19"/><text x="68.5275%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (25 samples, 0.07%)</title><rect x="68.2670%" y="709" width="0.0658%" height="15" fill="rgb(252,202,21)" fg:x="25936" fg:w="25"/><text x="68.5170%" y="719.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (25 samples, 0.07%)</title><rect x="68.2670%" y="693" width="0.0658%" height="15" fill="rgb(233,98,36)" fg:x="25936" fg:w="25"/><text x="68.5170%" y="703.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (25 samples, 0.07%)</title><rect x="68.2670%" y="677" width="0.0658%" height="15" fill="rgb(216,153,54)" fg:x="25936" fg:w="25"/><text x="68.5170%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (21 samples, 0.06%)</title><rect x="68.4197%" y="645" width="0.0553%" height="15" fill="rgb(250,99,7)" fg:x="25994" fg:w="21"/><text x="68.6697%" y="655.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as futures_core::future::FusedFuture&gt;::is_terminated (21 samples, 0.06%)</title><rect x="68.4197%" y="629" width="0.0553%" height="15" fill="rgb(207,56,50)" fg:x="25994" fg:w="21"/><text x="68.6697%" y="639.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (11 samples, 0.03%)</title><rect x="68.4460%" y="613" width="0.0290%" height="15" fill="rgb(244,61,34)" fg:x="26004" fg:w="11"/><text x="68.6960%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (11 samples, 0.03%)</title><rect x="68.4460%" y="597" width="0.0290%" height="15" fill="rgb(241,50,38)" fg:x="26004" fg:w="11"/><text x="68.6960%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.03%)</title><rect x="68.4460%" y="581" width="0.0290%" height="15" fill="rgb(212,166,30)" fg:x="26004" fg:w="11"/><text x="68.6960%" y="591.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (14 samples, 0.04%)</title><rect x="68.4749%" y="645" width="0.0368%" height="15" fill="rgb(249,127,32)" fg:x="26015" fg:w="14"/><text x="68.7249%" y="655.50"></text></g><g><title>&lt;flume::async::OwnedOrRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="68.5486%" y="581" width="0.0158%" height="15" fill="rgb(209,103,0)" fg:x="26043" fg:w="6"/><text x="68.7986%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="68.5644%" y="581" width="0.0105%" height="15" fill="rgb(238,209,51)" fg:x="26049" fg:w="4"/><text x="68.8144%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="68.5644%" y="565" width="0.0105%" height="15" fill="rgb(237,56,23)" fg:x="26049" fg:w="4"/><text x="68.8144%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="68.5644%" y="549" width="0.0105%" height="15" fill="rgb(215,153,46)" fg:x="26049" fg:w="4"/><text x="68.8144%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.01%)</title><rect x="68.5644%" y="533" width="0.0105%" height="15" fill="rgb(224,49,31)" fg:x="26049" fg:w="4"/><text x="68.8144%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.01%)</title><rect x="68.5644%" y="517" width="0.0105%" height="15" fill="rgb(250,18,42)" fg:x="26049" fg:w="4"/><text x="68.8144%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="68.6118%" y="565" width="0.0158%" height="15" fill="rgb(215,176,39)" fg:x="26067" fg:w="6"/><text x="68.8618%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.02%)</title><rect x="68.6118%" y="549" width="0.0158%" height="15" fill="rgb(223,77,29)" fg:x="26067" fg:w="6"/><text x="68.8618%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.02%)</title><rect x="68.6118%" y="533" width="0.0158%" height="15" fill="rgb(234,94,52)" fg:x="26067" fg:w="6"/><text x="68.8618%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (21 samples, 0.06%)</title><rect x="68.6329%" y="549" width="0.0553%" height="15" fill="rgb(220,154,50)" fg:x="26075" fg:w="21"/><text x="68.8829%" y="559.50"></text></g><g><title>core::ptr::read (18 samples, 0.05%)</title><rect x="68.6408%" y="533" width="0.0474%" height="15" fill="rgb(212,11,10)" fg:x="26078" fg:w="18"/><text x="68.8908%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (25 samples, 0.07%)</title><rect x="68.6276%" y="565" width="0.0658%" height="15" fill="rgb(205,166,19)" fg:x="26073" fg:w="25"/><text x="68.8776%" y="575.50"></text></g><g><title>core::mem::drop (29 samples, 0.08%)</title><rect x="68.7013%" y="565" width="0.0763%" height="15" fill="rgb(244,198,16)" fg:x="26101" fg:w="29"/><text x="68.9513%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (29 samples, 0.08%)</title><rect x="68.7013%" y="549" width="0.0763%" height="15" fill="rgb(219,69,12)" fg:x="26101" fg:w="29"/><text x="68.9513%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.08%)</title><rect x="68.7013%" y="533" width="0.0763%" height="15" fill="rgb(245,30,7)" fg:x="26101" fg:w="29"/><text x="68.9513%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (28 samples, 0.07%)</title><rect x="68.7039%" y="517" width="0.0737%" height="15" fill="rgb(218,221,48)" fg:x="26102" fg:w="28"/><text x="68.9539%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (26 samples, 0.07%)</title><rect x="68.7092%" y="501" width="0.0684%" height="15" fill="rgb(216,66,15)" fg:x="26104" fg:w="26"/><text x="68.9592%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.07%)</title><rect x="68.7092%" y="485" width="0.0684%" height="15" fill="rgb(226,122,50)" fg:x="26104" fg:w="26"/><text x="68.9592%" y="495.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (4 samples, 0.01%)</title><rect x="68.7776%" y="565" width="0.0105%" height="15" fill="rgb(239,156,16)" fg:x="26130" fg:w="4"/><text x="69.0276%" y="575.50"></text></g><g><title>_rjem_je_bitmap_init (4 samples, 0.01%)</title><rect x="68.7934%" y="245" width="0.0105%" height="15" fill="rgb(224,27,38)" fg:x="26136" fg:w="4"/><text x="69.0434%" y="255.50"></text></g><g><title>_rjem_je_eset_fit (4 samples, 0.01%)</title><rect x="68.8198%" y="133" width="0.0105%" height="15" fill="rgb(224,39,27)" fg:x="26146" fg:w="4"/><text x="69.0698%" y="143.50"></text></g><g><title>eset_first_fit (4 samples, 0.01%)</title><rect x="68.8198%" y="117" width="0.0105%" height="15" fill="rgb(215,92,29)" fg:x="26146" fg:w="4"/><text x="69.0698%" y="127.50"></text></g><g><title>arena_slab_alloc (16 samples, 0.04%)</title><rect x="68.7934%" y="261" width="0.0421%" height="15" fill="rgb(207,159,16)" fg:x="26136" fg:w="16"/><text x="69.0434%" y="271.50"></text></g><g><title>_rjem_je_pa_alloc (12 samples, 0.03%)</title><rect x="68.8040%" y="245" width="0.0316%" height="15" fill="rgb(238,163,47)" fg:x="26140" fg:w="12"/><text x="69.0540%" y="255.50"></text></g><g><title>pai_alloc (9 samples, 0.02%)</title><rect x="68.8119%" y="229" width="0.0237%" height="15" fill="rgb(219,91,49)" fg:x="26143" fg:w="9"/><text x="69.0619%" y="239.50"></text></g><g><title>pac_alloc_impl (9 samples, 0.02%)</title><rect x="68.8119%" y="213" width="0.0237%" height="15" fill="rgb(227,167,31)" fg:x="26143" fg:w="9"/><text x="69.0619%" y="223.50"></text></g><g><title>pac_alloc_real (8 samples, 0.02%)</title><rect x="68.8145%" y="197" width="0.0211%" height="15" fill="rgb(234,80,54)" fg:x="26144" fg:w="8"/><text x="69.0645%" y="207.50"></text></g><g><title>_rjem_je_ecache_alloc (7 samples, 0.02%)</title><rect x="68.8171%" y="181" width="0.0184%" height="15" fill="rgb(212,114,2)" fg:x="26145" fg:w="7"/><text x="69.0671%" y="191.50"></text></g><g><title>extent_recycle (7 samples, 0.02%)</title><rect x="68.8171%" y="165" width="0.0184%" height="15" fill="rgb(234,50,24)" fg:x="26145" fg:w="7"/><text x="69.0671%" y="175.50"></text></g><g><title>extent_recycle_extract (6 samples, 0.02%)</title><rect x="68.8198%" y="149" width="0.0158%" height="15" fill="rgb(221,68,8)" fg:x="26146" fg:w="6"/><text x="69.0698%" y="159.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (22 samples, 0.06%)</title><rect x="68.7908%" y="293" width="0.0579%" height="15" fill="rgb(254,180,31)" fg:x="26135" fg:w="22"/><text x="69.0408%" y="303.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (22 samples, 0.06%)</title><rect x="68.7908%" y="277" width="0.0579%" height="15" fill="rgb(247,130,50)" fg:x="26135" fg:w="22"/><text x="69.0408%" y="287.50"></text></g><g><title>imalloc_no_sample (23 samples, 0.06%)</title><rect x="68.7908%" y="357" width="0.0605%" height="15" fill="rgb(211,109,4)" fg:x="26135" fg:w="23"/><text x="69.0408%" y="367.50"></text></g><g><title>iallocztm (23 samples, 0.06%)</title><rect x="68.7908%" y="341" width="0.0605%" height="15" fill="rgb(238,50,21)" fg:x="26135" fg:w="23"/><text x="69.0408%" y="351.50"></text></g><g><title>arena_malloc (23 samples, 0.06%)</title><rect x="68.7908%" y="325" width="0.0605%" height="15" fill="rgb(225,57,45)" fg:x="26135" fg:w="23"/><text x="69.0408%" y="335.50"></text></g><g><title>tcache_alloc_small (23 samples, 0.06%)</title><rect x="68.7908%" y="309" width="0.0605%" height="15" fill="rgb(209,196,50)" fg:x="26135" fg:w="23"/><text x="69.0408%" y="319.50"></text></g><g><title>_rjem_je_malloc_default (24 samples, 0.06%)</title><rect x="68.7908%" y="405" width="0.0632%" height="15" fill="rgb(242,140,13)" fg:x="26135" fg:w="24"/><text x="69.0408%" y="415.50"></text></g><g><title>imalloc (24 samples, 0.06%)</title><rect x="68.7908%" y="389" width="0.0632%" height="15" fill="rgb(217,111,7)" fg:x="26135" fg:w="24"/><text x="69.0408%" y="399.50"></text></g><g><title>imalloc_body (24 samples, 0.06%)</title><rect x="68.7908%" y="373" width="0.0632%" height="15" fill="rgb(253,193,51)" fg:x="26135" fg:w="24"/><text x="69.0408%" y="383.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (26 samples, 0.07%)</title><rect x="68.7908%" y="549" width="0.0684%" height="15" fill="rgb(252,70,29)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (26 samples, 0.07%)</title><rect x="68.7908%" y="533" width="0.0684%" height="15" fill="rgb(232,127,12)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.07%)</title><rect x="68.7908%" y="517" width="0.0684%" height="15" fill="rgb(211,180,21)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.07%)</title><rect x="68.7908%" y="501" width="0.0684%" height="15" fill="rgb(229,72,13)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.07%)</title><rect x="68.7908%" y="485" width="0.0684%" height="15" fill="rgb(240,211,49)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.07%)</title><rect x="68.7908%" y="469" width="0.0684%" height="15" fill="rgb(219,149,40)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="479.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.07%)</title><rect x="68.7908%" y="453" width="0.0684%" height="15" fill="rgb(210,127,46)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="463.50"></text></g><g><title>__rust_alloc (26 samples, 0.07%)</title><rect x="68.7908%" y="437" width="0.0684%" height="15" fill="rgb(220,106,7)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="447.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (26 samples, 0.07%)</title><rect x="68.7908%" y="421" width="0.0684%" height="15" fill="rgb(249,31,22)" fg:x="26135" fg:w="26"/><text x="69.0408%" y="431.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (27 samples, 0.07%)</title><rect x="68.7908%" y="565" width="0.0711%" height="15" fill="rgb(253,1,49)" fg:x="26135" fg:w="27"/><text x="69.0408%" y="575.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (118 samples, 0.31%)</title><rect x="68.5881%" y="581" width="0.3106%" height="15" fill="rgb(227,144,33)" fg:x="26058" fg:w="118"/><text x="68.8381%" y="591.50"></text></g><g><title>flume::wait_lock (14 samples, 0.04%)</title><rect x="68.8619%" y="565" width="0.0368%" height="15" fill="rgb(249,163,44)" fg:x="26162" fg:w="14"/><text x="69.1119%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="68.8645%" y="549" width="0.0342%" height="15" fill="rgb(234,15,39)" fg:x="26163" fg:w="13"/><text x="69.1145%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (13 samples, 0.03%)</title><rect x="68.8645%" y="533" width="0.0342%" height="15" fill="rgb(207,66,16)" fg:x="26163" fg:w="13"/><text x="69.1145%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (13 samples, 0.03%)</title><rect x="68.8645%" y="517" width="0.0342%" height="15" fill="rgb(233,112,24)" fg:x="26163" fg:w="13"/><text x="69.1145%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="68.8645%" y="501" width="0.0342%" height="15" fill="rgb(230,90,22)" fg:x="26163" fg:w="13"/><text x="69.1145%" y="511.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (7 samples, 0.02%)</title><rect x="68.8987%" y="581" width="0.0184%" height="15" fill="rgb(229,61,13)" fg:x="26176" fg:w="7"/><text x="69.1487%" y="591.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (7 samples, 0.02%)</title><rect x="68.8987%" y="565" width="0.0184%" height="15" fill="rgb(225,57,24)" fg:x="26176" fg:w="7"/><text x="69.1487%" y="575.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (145 samples, 0.38%)</title><rect x="68.5381%" y="613" width="0.3817%" height="15" fill="rgb(208,169,48)" fg:x="26039" fg:w="145"/><text x="68.7881%" y="623.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (145 samples, 0.38%)</title><rect x="68.5381%" y="597" width="0.3817%" height="15" fill="rgb(244,218,51)" fg:x="26039" fg:w="145"/><text x="68.7881%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.01%)</title><rect x="68.9566%" y="549" width="0.0105%" height="15" fill="rgb(214,148,10)" fg:x="26198" fg:w="4"/><text x="69.2066%" y="559.50"></text></g><g><title>core::mem::replace (4 samples, 0.01%)</title><rect x="68.9566%" y="533" width="0.0105%" height="15" fill="rgb(225,174,27)" fg:x="26198" fg:w="4"/><text x="69.2066%" y="543.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="68.9566%" y="517" width="0.0105%" height="15" fill="rgb(230,96,26)" fg:x="26198" fg:w="4"/><text x="69.2066%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (20 samples, 0.05%)</title><rect x="68.9750%" y="549" width="0.0526%" height="15" fill="rgb(232,10,30)" fg:x="26205" fg:w="20"/><text x="69.2250%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (20 samples, 0.05%)</title><rect x="68.9750%" y="533" width="0.0526%" height="15" fill="rgb(222,8,50)" fg:x="26205" fg:w="20"/><text x="69.2250%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.05%)</title><rect x="68.9750%" y="517" width="0.0526%" height="15" fill="rgb(213,81,27)" fg:x="26205" fg:w="20"/><text x="69.2250%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (20 samples, 0.05%)</title><rect x="68.9750%" y="501" width="0.0526%" height="15" fill="rgb(245,50,10)" fg:x="26205" fg:w="20"/><text x="69.2250%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (19 samples, 0.05%)</title><rect x="68.9777%" y="485" width="0.0500%" height="15" fill="rgb(216,100,18)" fg:x="26206" fg:w="19"/><text x="69.2277%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (19 samples, 0.05%)</title><rect x="68.9777%" y="469" width="0.0500%" height="15" fill="rgb(236,147,54)" fg:x="26206" fg:w="19"/><text x="69.2277%" y="479.50"></text></g><g><title>event_listener::TaskRef::into_task (53 samples, 0.14%)</title><rect x="69.0303%" y="549" width="0.1395%" height="15" fill="rgb(205,143,26)" fg:x="26226" fg:w="53"/><text x="69.2803%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (53 samples, 0.14%)</title><rect x="69.0303%" y="533" width="0.1395%" height="15" fill="rgb(236,26,9)" fg:x="26226" fg:w="53"/><text x="69.2803%" y="543.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (52 samples, 0.14%)</title><rect x="69.0330%" y="517" width="0.1369%" height="15" fill="rgb(221,165,53)" fg:x="26227" fg:w="52"/><text x="69.2830%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (27 samples, 0.07%)</title><rect x="69.0988%" y="501" width="0.0711%" height="15" fill="rgb(214,110,17)" fg:x="26252" fg:w="27"/><text x="69.3488%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.07%)</title><rect x="69.0988%" y="485" width="0.0711%" height="15" fill="rgb(237,197,12)" fg:x="26252" fg:w="27"/><text x="69.3488%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.07%)</title><rect x="69.0988%" y="469" width="0.0711%" height="15" fill="rgb(205,84,17)" fg:x="26252" fg:w="27"/><text x="69.3488%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (322 samples, 0.85%)</title><rect x="68.3854%" y="677" width="0.8475%" height="15" fill="rgb(237,18,45)" fg:x="25981" fg:w="322"/><text x="68.6354%" y="687.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}}::_{{closure}} (322 samples, 0.85%)</title><rect x="68.3854%" y="661" width="0.8475%" height="15" fill="rgb(221,87,14)" fg:x="25981" fg:w="322"/><text x="68.6354%" y="671.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (274 samples, 0.72%)</title><rect x="68.5118%" y="645" width="0.7212%" height="15" fill="rgb(238,186,15)" fg:x="26029" fg:w="274"/><text x="68.7618%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (264 samples, 0.69%)</title><rect x="68.5381%" y="629" width="0.6949%" height="15" fill="rgb(208,115,11)" fg:x="26039" fg:w="264"/><text x="68.7881%" y="639.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (119 samples, 0.31%)</title><rect x="68.9198%" y="613" width="0.3132%" height="15" fill="rgb(254,175,0)" fg:x="26184" fg:w="119"/><text x="69.1698%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 0.31%)</title><rect x="68.9198%" y="597" width="0.3132%" height="15" fill="rgb(227,24,42)" fg:x="26184" fg:w="119"/><text x="69.1698%" y="607.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (119 samples, 0.31%)</title><rect x="68.9198%" y="581" width="0.3132%" height="15" fill="rgb(223,211,37)" fg:x="26184" fg:w="119"/><text x="69.1698%" y="591.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (109 samples, 0.29%)</title><rect x="68.9461%" y="565" width="0.2869%" height="15" fill="rgb(235,49,27)" fg:x="26194" fg:w="109"/><text x="69.1961%" y="575.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (24 samples, 0.06%)</title><rect x="69.1698%" y="549" width="0.0632%" height="15" fill="rgb(254,97,51)" fg:x="26279" fg:w="24"/><text x="69.4198%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.06%)</title><rect x="69.1698%" y="533" width="0.0632%" height="15" fill="rgb(249,51,40)" fg:x="26279" fg:w="24"/><text x="69.4198%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (21 samples, 0.06%)</title><rect x="69.1777%" y="517" width="0.0553%" height="15" fill="rgb(210,128,45)" fg:x="26282" fg:w="21"/><text x="69.4277%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (20 samples, 0.05%)</title><rect x="69.1804%" y="501" width="0.0526%" height="15" fill="rgb(224,137,50)" fg:x="26283" fg:w="20"/><text x="69.4304%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.05%)</title><rect x="69.1804%" y="485" width="0.0526%" height="15" fill="rgb(242,15,9)" fg:x="26283" fg:w="20"/><text x="69.4304%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (27 samples, 0.07%)</title><rect x="69.2330%" y="661" width="0.0711%" height="15" fill="rgb(233,187,41)" fg:x="26303" fg:w="27"/><text x="69.4830%" y="671.50"></text></g><g><title>core::ptr::swap (27 samples, 0.07%)</title><rect x="69.2330%" y="645" width="0.0711%" height="15" fill="rgb(227,2,29)" fg:x="26303" fg:w="27"/><text x="69.4830%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.07%)</title><rect x="69.2356%" y="629" width="0.0684%" height="15" fill="rgb(222,70,3)" fg:x="26304" fg:w="26"/><text x="69.4856%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="69.3041%" y="597" width="0.0132%" height="15" fill="rgb(213,11,42)" fg:x="26330" fg:w="5"/><text x="69.5541%" y="607.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (5 samples, 0.01%)</title><rect x="69.3041%" y="581" width="0.0132%" height="15" fill="rgb(225,150,9)" fg:x="26330" fg:w="5"/><text x="69.5541%" y="591.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (5 samples, 0.01%)</title><rect x="69.3041%" y="565" width="0.0132%" height="15" fill="rgb(230,162,45)" fg:x="26330" fg:w="5"/><text x="69.5541%" y="575.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (380 samples, 1.00%)</title><rect x="68.3328%" y="709" width="1.0002%" height="15" fill="rgb(222,14,52)" fg:x="25961" fg:w="380"/><text x="68.5828%" y="719.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}} (380 samples, 1.00%)</title><rect x="68.3328%" y="693" width="1.0002%" height="15" fill="rgb(254,198,14)" fg:x="25961" fg:w="380"/><text x="68.5828%" y="703.50"></text></g><g><title>futures_util::async_await::random::shuffle (38 samples, 0.10%)</title><rect x="69.2330%" y="677" width="0.1000%" height="15" fill="rgb(220,217,30)" fg:x="26303" fg:w="38"/><text x="69.4830%" y="687.50"></text></g><g><title>futures_util::async_await::random::gen_index (11 samples, 0.03%)</title><rect x="69.3041%" y="661" width="0.0290%" height="15" fill="rgb(215,146,41)" fg:x="26330" fg:w="11"/><text x="69.5541%" y="671.50"></text></g><g><title>futures_util::async_await::random::random (11 samples, 0.03%)</title><rect x="69.3041%" y="645" width="0.0290%" height="15" fill="rgb(217,27,36)" fg:x="26330" fg:w="11"/><text x="69.5541%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.03%)</title><rect x="69.3041%" y="629" width="0.0290%" height="15" fill="rgb(219,218,39)" fg:x="26330" fg:w="11"/><text x="69.5541%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.03%)</title><rect x="69.3041%" y="613" width="0.0290%" height="15" fill="rgb(219,4,42)" fg:x="26330" fg:w="11"/><text x="69.5541%" y="623.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (6 samples, 0.02%)</title><rect x="69.3172%" y="597" width="0.0158%" height="15" fill="rgb(249,119,36)" fg:x="26335" fg:w="6"/><text x="69.5672%" y="607.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (4 samples, 0.01%)</title><rect x="69.3409%" y="661" width="0.0105%" height="15" fill="rgb(209,23,33)" fg:x="26344" fg:w="4"/><text x="69.5909%" y="671.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (4 samples, 0.01%)</title><rect x="69.3409%" y="645" width="0.0105%" height="15" fill="rgb(211,10,0)" fg:x="26344" fg:w="4"/><text x="69.5909%" y="655.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (4 samples, 0.01%)</title><rect x="69.3409%" y="629" width="0.0105%" height="15" fill="rgb(208,99,37)" fg:x="26344" fg:w="4"/><text x="69.5909%" y="639.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::as_any (7 samples, 0.02%)</title><rect x="69.3514%" y="661" width="0.0184%" height="15" fill="rgb(213,132,31)" fg:x="26348" fg:w="7"/><text x="69.6014%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.01%)</title><rect x="69.3778%" y="629" width="0.0105%" height="15" fill="rgb(243,129,40)" fg:x="26358" fg:w="4"/><text x="69.6278%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;bytes::bytes::Bytes,dyn flume::signal::Signal&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="69.3778%" y="661" width="0.0132%" height="15" fill="rgb(210,66,33)" fg:x="26358" fg:w="5"/><text x="69.6278%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="69.3778%" y="645" width="0.0132%" height="15" fill="rgb(209,189,4)" fg:x="26358" fg:w="5"/><text x="69.6278%" y="655.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.07%)</title><rect x="69.3330%" y="693" width="0.0737%" height="15" fill="rgb(214,107,37)" fg:x="26341" fg:w="28"/><text x="69.5830%" y="703.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (28 samples, 0.07%)</title><rect x="69.3330%" y="677" width="0.0737%" height="15" fill="rgb(245,88,54)" fg:x="26341" fg:w="28"/><text x="69.5830%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (36 samples, 0.09%)</title><rect x="69.3330%" y="709" width="0.0948%" height="15" fill="rgb(205,146,20)" fg:x="26341" fg:w="36"/><text x="69.5830%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::OwnedOrRef&lt;flume::Receiver&lt;bytes::bytes::Bytes&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="69.4146%" y="693" width="0.0132%" height="15" fill="rgb(220,161,25)" fg:x="26372" fg:w="5"/><text x="69.6646%" y="703.50"></text></g><g><title>cache_bin_dalloc_easy (8 samples, 0.02%)</title><rect x="69.4357%" y="645" width="0.0211%" height="15" fill="rgb(215,152,15)" fg:x="26380" fg:w="8"/><text x="69.6857%" y="655.50"></text></g><g><title>cache_bin_full (4 samples, 0.01%)</title><rect x="69.4462%" y="629" width="0.0105%" height="15" fill="rgb(233,192,44)" fg:x="26384" fg:w="4"/><text x="69.6962%" y="639.50"></text></g><g><title>_rjem_sdallocx (12 samples, 0.03%)</title><rect x="69.4278%" y="677" width="0.0316%" height="15" fill="rgb(240,170,46)" fg:x="26377" fg:w="12"/><text x="69.6778%" y="687.50"></text></g><g><title>free_fastpath (12 samples, 0.03%)</title><rect x="69.4278%" y="661" width="0.0316%" height="15" fill="rgb(207,104,33)" fg:x="26377" fg:w="12"/><text x="69.6778%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt; (16 samples, 0.04%)</title><rect x="69.4620%" y="613" width="0.0421%" height="15" fill="rgb(219,21,39)" fg:x="26390" fg:w="16"/><text x="69.7120%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.04%)</title><rect x="69.4620%" y="597" width="0.0421%" height="15" fill="rgb(214,133,29)" fg:x="26390" fg:w="16"/><text x="69.7120%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.04%)</title><rect x="69.4620%" y="581" width="0.0421%" height="15" fill="rgb(226,93,6)" fg:x="26390" fg:w="16"/><text x="69.7120%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.04%)</title><rect x="69.4620%" y="565" width="0.0421%" height="15" fill="rgb(252,222,34)" fg:x="26390" fg:w="16"/><text x="69.7120%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="69.5199%" y="581" width="0.0368%" height="15" fill="rgb(252,92,48)" fg:x="26412" fg:w="14"/><text x="69.7699%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (10 samples, 0.03%)</title><rect x="69.5304%" y="565" width="0.0263%" height="15" fill="rgb(245,223,24)" fg:x="26416" fg:w="10"/><text x="69.7804%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (10 samples, 0.03%)</title><rect x="69.5304%" y="549" width="0.0263%" height="15" fill="rgb(205,176,3)" fg:x="26416" fg:w="10"/><text x="69.7804%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (9 samples, 0.02%)</title><rect x="69.5331%" y="533" width="0.0237%" height="15" fill="rgb(235,151,15)" fg:x="26417" fg:w="9"/><text x="69.7831%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="69.5331%" y="517" width="0.0237%" height="15" fill="rgb(237,209,11)" fg:x="26417" fg:w="9"/><text x="69.7831%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (9 samples, 0.02%)</title><rect x="69.5331%" y="501" width="0.0237%" height="15" fill="rgb(243,227,24)" fg:x="26417" fg:w="9"/><text x="69.7831%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (8 samples, 0.02%)</title><rect x="69.5357%" y="485" width="0.0211%" height="15" fill="rgb(239,193,16)" fg:x="26418" fg:w="8"/><text x="69.7857%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (8 samples, 0.02%)</title><rect x="69.5357%" y="469" width="0.0211%" height="15" fill="rgb(231,27,9)" fg:x="26418" fg:w="8"/><text x="69.7857%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.02%)</title><rect x="69.5410%" y="453" width="0.0158%" height="15" fill="rgb(219,169,10)" fg:x="26420" fg:w="6"/><text x="69.7910%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.02%)</title><rect x="69.5410%" y="437" width="0.0158%" height="15" fill="rgb(244,229,43)" fg:x="26420" fg:w="6"/><text x="69.7910%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (25 samples, 0.07%)</title><rect x="69.5567%" y="565" width="0.0658%" height="15" fill="rgb(254,38,20)" fg:x="26426" fg:w="25"/><text x="69.8067%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (23 samples, 0.06%)</title><rect x="69.5620%" y="549" width="0.0605%" height="15" fill="rgb(250,47,30)" fg:x="26428" fg:w="23"/><text x="69.8120%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.06%)</title><rect x="69.5620%" y="533" width="0.0605%" height="15" fill="rgb(224,124,36)" fg:x="26428" fg:w="23"/><text x="69.8120%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (20 samples, 0.05%)</title><rect x="69.5699%" y="517" width="0.0526%" height="15" fill="rgb(246,68,51)" fg:x="26431" fg:w="20"/><text x="69.8199%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (20 samples, 0.05%)</title><rect x="69.5699%" y="501" width="0.0526%" height="15" fill="rgb(253,43,49)" fg:x="26431" fg:w="20"/><text x="69.8199%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (20 samples, 0.05%)</title><rect x="69.5699%" y="485" width="0.0526%" height="15" fill="rgb(219,54,36)" fg:x="26431" fg:w="20"/><text x="69.8199%" y="495.50"></text></g><g><title>std::sync::poison::Flag::get (4 samples, 0.01%)</title><rect x="69.6226%" y="501" width="0.0105%" height="15" fill="rgb(227,133,34)" fg:x="26451" fg:w="4"/><text x="69.8726%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.01%)</title><rect x="69.6226%" y="485" width="0.0105%" height="15" fill="rgb(247,227,15)" fg:x="26451" fg:w="4"/><text x="69.8726%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="69.6226%" y="469" width="0.0105%" height="15" fill="rgb(229,96,14)" fg:x="26451" fg:w="4"/><text x="69.8726%" y="479.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="69.6226%" y="533" width="0.0132%" height="15" fill="rgb(220,79,17)" fg:x="26451" fg:w="5"/><text x="69.8726%" y="543.50"></text></g><g><title>std::sync::poison::Flag::guard (5 samples, 0.01%)</title><rect x="69.6226%" y="517" width="0.0132%" height="15" fill="rgb(205,131,53)" fg:x="26451" fg:w="5"/><text x="69.8726%" y="527.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (21 samples, 0.06%)</title><rect x="69.6226%" y="565" width="0.0553%" height="15" fill="rgb(209,50,29)" fg:x="26451" fg:w="21"/><text x="69.8726%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.06%)</title><rect x="69.6226%" y="549" width="0.0553%" height="15" fill="rgb(245,86,46)" fg:x="26451" fg:w="21"/><text x="69.8726%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (16 samples, 0.04%)</title><rect x="69.6357%" y="533" width="0.0421%" height="15" fill="rgb(235,66,46)" fg:x="26456" fg:w="16"/><text x="69.8857%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (16 samples, 0.04%)</title><rect x="69.6357%" y="517" width="0.0421%" height="15" fill="rgb(232,148,31)" fg:x="26456" fg:w="16"/><text x="69.8857%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.04%)</title><rect x="69.6357%" y="501" width="0.0421%" height="15" fill="rgb(217,149,8)" fg:x="26456" fg:w="16"/><text x="69.8857%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;event_listener::EventListener&gt;&gt; (105 samples, 0.28%)</title><rect x="69.4278%" y="709" width="0.2764%" height="15" fill="rgb(209,183,11)" fg:x="26377" fg:w="105"/><text x="69.6778%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (105 samples, 0.28%)</title><rect x="69.4278%" y="693" width="0.2764%" height="15" fill="rgb(208,55,20)" fg:x="26377" fg:w="105"/><text x="69.6778%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (93 samples, 0.24%)</title><rect x="69.4594%" y="677" width="0.2448%" height="15" fill="rgb(218,39,14)" fg:x="26389" fg:w="93"/><text x="69.7094%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (93 samples, 0.24%)</title><rect x="69.4594%" y="661" width="0.2448%" height="15" fill="rgb(216,169,33)" fg:x="26389" fg:w="93"/><text x="69.7094%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (93 samples, 0.24%)</title><rect x="69.4594%" y="645" width="0.2448%" height="15" fill="rgb(233,80,24)" fg:x="26389" fg:w="93"/><text x="69.7094%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (92 samples, 0.24%)</title><rect x="69.4620%" y="629" width="0.2422%" height="15" fill="rgb(213,179,31)" fg:x="26390" fg:w="92"/><text x="69.7120%" y="639.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (74 samples, 0.19%)</title><rect x="69.5094%" y="613" width="0.1948%" height="15" fill="rgb(209,19,5)" fg:x="26408" fg:w="74"/><text x="69.7594%" y="623.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (74 samples, 0.19%)</title><rect x="69.5094%" y="597" width="0.1948%" height="15" fill="rgb(219,18,35)" fg:x="26408" fg:w="74"/><text x="69.7594%" y="607.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (56 samples, 0.15%)</title><rect x="69.5567%" y="581" width="0.1474%" height="15" fill="rgb(209,169,16)" fg:x="26426" fg:w="56"/><text x="69.8067%" y="591.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (10 samples, 0.03%)</title><rect x="69.6778%" y="565" width="0.0263%" height="15" fill="rgb(245,90,51)" fg:x="26472" fg:w="10"/><text x="69.9278%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.01%)</title><rect x="69.7041%" y="709" width="0.0105%" height="15" fill="rgb(220,99,45)" fg:x="26482" fg:w="4"/><text x="69.9541%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.01%)</title><rect x="69.7147%" y="709" width="0.0105%" height="15" fill="rgb(249,89,25)" fg:x="26486" fg:w="4"/><text x="69.9647%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="69.7147%" y="693" width="0.0105%" height="15" fill="rgb(239,193,0)" fg:x="26486" fg:w="4"/><text x="69.9647%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (24 samples, 0.06%)</title><rect x="69.7252%" y="709" width="0.0632%" height="15" fill="rgb(231,126,1)" fg:x="26490" fg:w="24"/><text x="69.9752%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.06%)</title><rect x="69.7252%" y="693" width="0.0632%" height="15" fill="rgb(243,166,3)" fg:x="26490" fg:w="24"/><text x="69.9752%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.16%)</title><rect x="69.7884%" y="693" width="0.1579%" height="15" fill="rgb(223,22,34)" fg:x="26514" fg:w="60"/><text x="70.0384%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (56 samples, 0.15%)</title><rect x="69.7989%" y="677" width="0.1474%" height="15" fill="rgb(251,52,51)" fg:x="26518" fg:w="56"/><text x="70.0489%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (56 samples, 0.15%)</title><rect x="69.7989%" y="661" width="0.1474%" height="15" fill="rgb(221,165,28)" fg:x="26518" fg:w="56"/><text x="70.0489%" y="671.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="69.9989%" y="517" width="0.0132%" height="15" fill="rgb(218,121,47)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="527.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="69.9989%" y="501" width="0.0132%" height="15" fill="rgb(209,120,9)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="511.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="69.9989%" y="485" width="0.0132%" height="15" fill="rgb(236,68,12)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="495.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="69.9989%" y="469" width="0.0132%" height="15" fill="rgb(225,194,26)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="479.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.01%)</title><rect x="69.9989%" y="453" width="0.0132%" height="15" fill="rgb(231,84,39)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="463.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.01%)</title><rect x="69.9989%" y="437" width="0.0132%" height="15" fill="rgb(210,11,45)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="447.50"></text></g><g><title>malloc_mutex_lock (5 samples, 0.01%)</title><rect x="69.9989%" y="421" width="0.0132%" height="15" fill="rgb(224,54,52)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="431.50"></text></g><g><title>malloc_mutex_trylock_final (5 samples, 0.01%)</title><rect x="69.9989%" y="405" width="0.0132%" height="15" fill="rgb(238,102,14)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="415.50"></text></g><g><title>pthread_mutex_trylock (5 samples, 0.01%)</title><rect x="69.9989%" y="389" width="0.0132%" height="15" fill="rgb(243,160,52)" fg:x="26594" fg:w="5"/><text x="70.2489%" y="399.50"></text></g><g><title>_rjem_je_malloc_default (6 samples, 0.02%)</title><rect x="69.9989%" y="565" width="0.0158%" height="15" fill="rgb(216,114,19)" fg:x="26594" fg:w="6"/><text x="70.2489%" y="575.50"></text></g><g><title>imalloc (6 samples, 0.02%)</title><rect x="69.9989%" y="549" width="0.0158%" height="15" fill="rgb(244,166,37)" fg:x="26594" fg:w="6"/><text x="70.2489%" y="559.50"></text></g><g><title>imalloc_body (6 samples, 0.02%)</title><rect x="69.9989%" y="533" width="0.0158%" height="15" fill="rgb(246,29,44)" fg:x="26594" fg:w="6"/><text x="70.2489%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (24 samples, 0.06%)</title><rect x="70.1753%" y="533" width="0.0632%" height="15" fill="rgb(215,56,53)" fg:x="26661" fg:w="24"/><text x="70.4253%" y="543.50"></text></g><g><title>cache_bin_alloc_impl (24 samples, 0.06%)</title><rect x="70.1753%" y="517" width="0.0632%" height="15" fill="rgb(217,60,2)" fg:x="26661" fg:w="24"/><text x="70.4253%" y="527.50"></text></g><g><title>__rust_alloc (102 samples, 0.27%)</title><rect x="69.9989%" y="597" width="0.2685%" height="15" fill="rgb(207,26,24)" fg:x="26594" fg:w="102"/><text x="70.2489%" y="607.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (102 samples, 0.27%)</title><rect x="69.9989%" y="581" width="0.2685%" height="15" fill="rgb(252,210,15)" fg:x="26594" fg:w="102"/><text x="70.2489%" y="591.50"></text></g><g><title>_rjem_malloc (96 samples, 0.25%)</title><rect x="70.0147%" y="565" width="0.2527%" height="15" fill="rgb(253,209,26)" fg:x="26600" fg:w="96"/><text x="70.2647%" y="575.50"></text></g><g><title>imalloc_fastpath (95 samples, 0.25%)</title><rect x="70.0174%" y="549" width="0.2501%" height="15" fill="rgb(238,170,14)" fg:x="26601" fg:w="95"/><text x="70.2674%" y="559.50"></text></g><g><title>sz_size2index_usize_fastpath (10 samples, 0.03%)</title><rect x="70.2411%" y="533" width="0.0263%" height="15" fill="rgb(216,178,15)" fg:x="26686" fg:w="10"/><text x="70.4911%" y="543.50"></text></g><g><title>sz_index2size_lookup_impl (10 samples, 0.03%)</title><rect x="70.2411%" y="517" width="0.0263%" height="15" fill="rgb(250,197,2)" fg:x="26686" fg:w="10"/><text x="70.4911%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (123 samples, 0.32%)</title><rect x="69.9463%" y="693" width="0.3238%" height="15" fill="rgb(212,70,42)" fg:x="26574" fg:w="123"/><text x="70.1963%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (123 samples, 0.32%)</title><rect x="69.9463%" y="677" width="0.3238%" height="15" fill="rgb(227,213,9)" fg:x="26574" fg:w="123"/><text x="70.1963%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (107 samples, 0.28%)</title><rect x="69.9884%" y="661" width="0.2816%" height="15" fill="rgb(245,99,25)" fg:x="26590" fg:w="107"/><text x="70.2384%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.27%)</title><rect x="69.9989%" y="645" width="0.2711%" height="15" fill="rgb(250,82,29)" fg:x="26594" fg:w="103"/><text x="70.2489%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.27%)</title><rect x="69.9989%" y="629" width="0.2711%" height="15" fill="rgb(241,226,54)" fg:x="26594" fg:w="103"/><text x="70.2489%" y="639.50"></text></g><g><title>alloc::alloc::alloc (103 samples, 0.27%)</title><rect x="69.9989%" y="613" width="0.2711%" height="15" fill="rgb(221,99,41)" fg:x="26594" fg:w="103"/><text x="70.2489%" y="623.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (7 samples, 0.02%)</title><rect x="70.2701%" y="693" width="0.0184%" height="15" fill="rgb(213,90,21)" fg:x="26697" fg:w="7"/><text x="70.5201%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (7 samples, 0.02%)</title><rect x="70.2701%" y="677" width="0.0184%" height="15" fill="rgb(205,208,24)" fg:x="26697" fg:w="7"/><text x="70.5201%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.02%)</title><rect x="70.2701%" y="661" width="0.0184%" height="15" fill="rgb(246,31,12)" fg:x="26697" fg:w="7"/><text x="70.5201%" y="671.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (4 samples, 0.01%)</title><rect x="70.3069%" y="661" width="0.0105%" height="15" fill="rgb(213,154,6)" fg:x="26711" fg:w="4"/><text x="70.5569%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (26 samples, 0.07%)</title><rect x="70.3174%" y="661" width="0.0684%" height="15" fill="rgb(222,163,29)" fg:x="26715" fg:w="26"/><text x="70.5674%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (26 samples, 0.07%)</title><rect x="70.3174%" y="645" width="0.0684%" height="15" fill="rgb(227,201,8)" fg:x="26715" fg:w="26"/><text x="70.5674%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.07%)</title><rect x="70.3174%" y="629" width="0.0684%" height="15" fill="rgb(233,9,32)" fg:x="26715" fg:w="26"/><text x="70.5674%" y="639.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (24 samples, 0.06%)</title><rect x="70.3227%" y="613" width="0.0632%" height="15" fill="rgb(217,54,24)" fg:x="26717" fg:w="24"/><text x="70.5727%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (24 samples, 0.06%)</title><rect x="70.3227%" y="597" width="0.0632%" height="15" fill="rgb(235,192,0)" fg:x="26717" fg:w="24"/><text x="70.5727%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.06%)</title><rect x="70.3227%" y="581" width="0.0632%" height="15" fill="rgb(235,45,9)" fg:x="26717" fg:w="24"/><text x="70.5727%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="70.3859%" y="629" width="0.0105%" height="15" fill="rgb(246,42,40)" fg:x="26741" fg:w="4"/><text x="70.6359%" y="639.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.01%)</title><rect x="70.3859%" y="613" width="0.0105%" height="15" fill="rgb(248,111,24)" fg:x="26741" fg:w="4"/><text x="70.6359%" y="623.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (264 samples, 0.69%)</title><rect x="69.7884%" y="709" width="0.6949%" height="15" fill="rgb(249,65,22)" fg:x="26514" fg:w="264"/><text x="70.0384%" y="719.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::listen (74 samples, 0.19%)</title><rect x="70.2885%" y="693" width="0.1948%" height="15" fill="rgb(238,111,51)" fg:x="26704" fg:w="74"/><text x="70.5385%" y="703.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert (74 samples, 0.19%)</title><rect x="70.2885%" y="677" width="0.1948%" height="15" fill="rgb(250,118,22)" fg:x="26704" fg:w="74"/><text x="70.5385%" y="687.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (37 samples, 0.10%)</title><rect x="70.3859%" y="661" width="0.0974%" height="15" fill="rgb(234,84,26)" fg:x="26741" fg:w="37"/><text x="70.6359%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.10%)</title><rect x="70.3859%" y="645" width="0.0974%" height="15" fill="rgb(243,172,12)" fg:x="26741" fg:w="37"/><text x="70.6359%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (33 samples, 0.09%)</title><rect x="70.3964%" y="629" width="0.0869%" height="15" fill="rgb(236,150,49)" fg:x="26745" fg:w="33"/><text x="70.6464%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (33 samples, 0.09%)</title><rect x="70.3964%" y="613" width="0.0869%" height="15" fill="rgb(225,197,26)" fg:x="26745" fg:w="33"/><text x="70.6464%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.09%)</title><rect x="70.3964%" y="597" width="0.0869%" height="15" fill="rgb(214,17,42)" fg:x="26745" fg:w="33"/><text x="70.6464%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (28 samples, 0.07%)</title><rect x="70.4885%" y="661" width="0.0737%" height="15" fill="rgb(224,165,40)" fg:x="26780" fg:w="28"/><text x="70.7385%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.07%)</title><rect x="70.4885%" y="645" width="0.0737%" height="15" fill="rgb(246,100,4)" fg:x="26780" fg:w="28"/><text x="70.7385%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (28 samples, 0.07%)</title><rect x="70.4885%" y="629" width="0.0737%" height="15" fill="rgb(222,103,0)" fg:x="26780" fg:w="28"/><text x="70.7385%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (28 samples, 0.07%)</title><rect x="70.4885%" y="613" width="0.0737%" height="15" fill="rgb(227,189,26)" fg:x="26780" fg:w="28"/><text x="70.7385%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (28 samples, 0.07%)</title><rect x="70.4885%" y="597" width="0.0737%" height="15" fill="rgb(214,202,17)" fg:x="26780" fg:w="28"/><text x="70.7385%" y="607.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (13 samples, 0.03%)</title><rect x="70.5622%" y="661" width="0.0342%" height="15" fill="rgb(229,111,3)" fg:x="26808" fg:w="13"/><text x="70.8122%" y="671.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="70.5964%" y="629" width="0.0105%" height="15" fill="rgb(229,172,15)" fg:x="26821" fg:w="4"/><text x="70.8464%" y="639.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.01%)</title><rect x="70.5964%" y="613" width="0.0105%" height="15" fill="rgb(230,224,35)" fg:x="26821" fg:w="4"/><text x="70.8464%" y="623.50"></text></g><g><title>flume::Receiver&lt;T&gt;::is_empty (138 samples, 0.36%)</title><rect x="70.4833%" y="709" width="0.3632%" height="15" fill="rgb(251,141,6)" fg:x="26778" fg:w="138"/><text x="70.7333%" y="719.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_empty (138 samples, 0.36%)</title><rect x="70.4833%" y="693" width="0.3632%" height="15" fill="rgb(225,208,6)" fg:x="26778" fg:w="138"/><text x="70.7333%" y="703.50"></text></g><g><title>flume::Shared&lt;T&gt;::len (138 samples, 0.36%)</title><rect x="70.4833%" y="677" width="0.3632%" height="15" fill="rgb(246,181,16)" fg:x="26778" fg:w="138"/><text x="70.7333%" y="687.50"></text></g><g><title>flume::wait_lock (95 samples, 0.25%)</title><rect x="70.5964%" y="661" width="0.2501%" height="15" fill="rgb(227,129,36)" fg:x="26821" fg:w="95"/><text x="70.8464%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (95 samples, 0.25%)</title><rect x="70.5964%" y="645" width="0.2501%" height="15" fill="rgb(248,117,24)" fg:x="26821" fg:w="95"/><text x="70.8464%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (91 samples, 0.24%)</title><rect x="70.6070%" y="629" width="0.2395%" height="15" fill="rgb(214,185,35)" fg:x="26825" fg:w="91"/><text x="70.8570%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (91 samples, 0.24%)</title><rect x="70.6070%" y="613" width="0.2395%" height="15" fill="rgb(236,150,34)" fg:x="26825" fg:w="91"/><text x="70.8570%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (91 samples, 0.24%)</title><rect x="70.6070%" y="597" width="0.2395%" height="15" fill="rgb(243,228,27)" fg:x="26825" fg:w="91"/><text x="70.8570%" y="607.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (5 samples, 0.01%)</title><rect x="70.8807%" y="677" width="0.0132%" height="15" fill="rgb(245,77,44)" fg:x="26929" fg:w="5"/><text x="71.1307%" y="687.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (7 samples, 0.02%)</title><rect x="70.8939%" y="677" width="0.0184%" height="15" fill="rgb(235,214,42)" fg:x="26934" fg:w="7"/><text x="71.1439%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (7 samples, 0.02%)</title><rect x="70.8939%" y="661" width="0.0184%" height="15" fill="rgb(221,74,3)" fg:x="26934" fg:w="7"/><text x="71.1439%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_or (7 samples, 0.02%)</title><rect x="70.8939%" y="645" width="0.0184%" height="15" fill="rgb(206,121,29)" fg:x="26934" fg:w="7"/><text x="71.1439%" y="655.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.06%)</title><rect x="70.8623%" y="693" width="0.0553%" height="15" fill="rgb(249,131,53)" fg:x="26922" fg:w="21"/><text x="71.1123%" y="703.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketWrite&lt;A,B&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (11 samples, 0.03%)</title><rect x="70.9176%" y="693" width="0.0290%" height="15" fill="rgb(236,170,29)" fg:x="26943" fg:w="11"/><text x="71.1676%" y="703.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame::_{{closure}} (11 samples, 0.03%)</title><rect x="70.9176%" y="677" width="0.0290%" height="15" fill="rgb(247,96,15)" fg:x="26943" fg:w="11"/><text x="71.1676%" y="687.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (11 samples, 0.03%)</title><rect x="70.9176%" y="661" width="0.0290%" height="15" fill="rgb(211,210,7)" fg:x="26943" fg:w="11"/><text x="71.1676%" y="671.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (10 samples, 0.03%)</title><rect x="70.9202%" y="645" width="0.0263%" height="15" fill="rgb(240,88,50)" fg:x="26944" fg:w="10"/><text x="71.1702%" y="655.50"></text></g><g><title>fastwebsockets::frame::Frame::write (4 samples, 0.01%)</title><rect x="70.9360%" y="629" width="0.0105%" height="15" fill="rgb(209,229,26)" fg:x="26950" fg:w="4"/><text x="71.1860%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.01%)</title><rect x="70.9360%" y="613" width="0.0105%" height="15" fill="rgb(210,68,23)" fg:x="26950" fg:w="4"/><text x="71.1860%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="70.9360%" y="597" width="0.0105%" height="15" fill="rgb(229,180,13)" fg:x="26950" fg:w="4"/><text x="71.1860%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1,359 samples, 3.58%)</title><rect x="67.3905%" y="773" width="3.5771%" height="15" fill="rgb(236,53,44)" fg:x="25603" fg:w="1359"/><text x="67.6405%" y="783.50">&lt;cor..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1,358 samples, 3.57%)</title><rect x="67.3931%" y="757" width="3.5744%" height="15" fill="rgb(244,214,29)" fg:x="25604" fg:w="1358"/><text x="67.6431%" y="767.50">&lt;fut..</text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::into_inner_stream::_{{closure}}::_{{closure}} (1,138 samples, 3.00%)</title><rect x="67.9722%" y="741" width="2.9954%" height="15" fill="rgb(220,75,29)" fg:x="25824" fg:w="1138"/><text x="68.2222%" y="751.50">wis..</text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}} (1,118 samples, 2.94%)</title><rect x="68.0248%" y="725" width="2.9427%" height="15" fill="rgb(214,183,37)" fg:x="25844" fg:w="1118"/><text x="68.2748%" y="735.50">wi..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_frame::_{{closure}} (44 samples, 0.12%)</title><rect x="70.8518%" y="709" width="0.1158%" height="15" fill="rgb(239,117,29)" fg:x="26918" fg:w="44"/><text x="71.1018%" y="719.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h5adf97a234b091cbE (7 samples, 0.02%)</title><rect x="70.9491%" y="693" width="0.0184%" height="15" fill="rgb(237,171,35)" fg:x="26955" fg:w="7"/><text x="71.1991%" y="703.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="70.9491%" y="677" width="0.0184%" height="15" fill="rgb(229,178,53)" fg:x="26955" fg:w="7"/><text x="71.1991%" y="687.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (7 samples, 0.02%)</title><rect x="70.9491%" y="661" width="0.0184%" height="15" fill="rgb(210,102,19)" fg:x="26955" fg:w="7"/><text x="71.1991%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="70.9570%" y="645" width="0.0105%" height="15" fill="rgb(235,127,22)" fg:x="26958" fg:w="4"/><text x="71.2070%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (4 samples, 0.01%)</title><rect x="70.9570%" y="629" width="0.0105%" height="15" fill="rgb(244,31,31)" fg:x="26958" fg:w="4"/><text x="71.2070%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (4 samples, 0.01%)</title><rect x="70.9570%" y="613" width="0.0105%" height="15" fill="rgb(231,43,21)" fg:x="26958" fg:w="4"/><text x="71.2070%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="70.9570%" y="597" width="0.0105%" height="15" fill="rgb(217,131,35)" fg:x="26958" fg:w="4"/><text x="71.2070%" y="607.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1,363 samples, 3.59%)</title><rect x="67.3905%" y="805" width="3.5876%" height="15" fill="rgb(221,149,4)" fg:x="25603" fg:w="1363"/><text x="67.6405%" y="815.50">&lt;S a..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (1,363 samples, 3.59%)</title><rect x="67.3905%" y="789" width="3.5876%" height="15" fill="rgb(232,170,28)" fg:x="25603" fg:w="1363"/><text x="67.6405%" y="799.50">&lt;wis..</text></g><g><title>core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::map_err (4 samples, 0.01%)</title><rect x="70.9676%" y="773" width="0.0105%" height="15" fill="rgb(238,56,10)" fg:x="26962" fg:w="4"/><text x="71.2176%" y="783.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (1,400 samples, 3.68%)</title><rect x="67.2957%" y="853" width="3.6850%" height="15" fill="rgb(235,196,14)" fg:x="25567" fg:w="1400"/><text x="67.5457%" y="863.50">&lt;tok..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (1,400 samples, 3.68%)</title><rect x="67.2957%" y="837" width="3.6850%" height="15" fill="rgb(216,45,48)" fg:x="25567" fg:w="1400"/><text x="67.5457%" y="847.50">&lt;wis..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (1,400 samples, 3.68%)</title><rect x="67.2957%" y="821" width="3.6850%" height="15" fill="rgb(238,213,17)" fg:x="25567" fg:w="1400"/><text x="67.5457%" y="831.50">&lt;fut..</text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="70.9807%" y="821" width="0.0105%" height="15" fill="rgb(212,13,2)" fg:x="26967" fg:w="4"/><text x="71.2307%" y="831.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (1,407 samples, 3.70%)</title><rect x="67.2931%" y="869" width="3.7034%" height="15" fill="rgb(240,114,20)" fg:x="25566" fg:w="1407"/><text x="67.5431%" y="879.50">&lt;tok..</text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.02%)</title><rect x="70.9807%" y="853" width="0.0158%" height="15" fill="rgb(228,41,40)" fg:x="26967" fg:w="6"/><text x="71.2307%" y="863.50"></text></g><g><title>core::mem::replace (6 samples, 0.02%)</title><rect x="70.9807%" y="837" width="0.0158%" height="15" fill="rgb(244,132,35)" fg:x="26967" fg:w="6"/><text x="71.2307%" y="847.50"></text></g><g><title>[libc.so.6] (108 samples, 0.28%)</title><rect x="71.3176%" y="677" width="0.2843%" height="15" fill="rgb(253,189,4)" fg:x="27095" fg:w="108"/><text x="71.5676%" y="687.50"></text></g><g><title>__send (219 samples, 0.58%)</title><rect x="71.0860%" y="693" width="0.5764%" height="15" fill="rgb(224,37,19)" fg:x="27007" fg:w="219"/><text x="71.3360%" y="703.50"></text></g><g><title>[unknown] (23 samples, 0.06%)</title><rect x="71.6019%" y="677" width="0.0605%" height="15" fill="rgb(235,223,18)" fg:x="27203" fg:w="23"/><text x="71.8519%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (222 samples, 0.58%)</title><rect x="71.0834%" y="789" width="0.5843%" height="15" fill="rgb(235,163,25)" fg:x="27006" fg:w="222"/><text x="71.3334%" y="799.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (222 samples, 0.58%)</title><rect x="71.0834%" y="773" width="0.5843%" height="15" fill="rgb(217,145,28)" fg:x="27006" fg:w="222"/><text x="71.3334%" y="783.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (222 samples, 0.58%)</title><rect x="71.0834%" y="757" width="0.5843%" height="15" fill="rgb(223,223,32)" fg:x="27006" fg:w="222"/><text x="71.3334%" y="767.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (222 samples, 0.58%)</title><rect x="71.0834%" y="741" width="0.5843%" height="15" fill="rgb(227,189,39)" fg:x="27006" fg:w="222"/><text x="71.3334%" y="751.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (222 samples, 0.58%)</title><rect x="71.0834%" y="725" width="0.5843%" height="15" fill="rgb(248,10,22)" fg:x="27006" fg:w="222"/><text x="71.3334%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (222 samples, 0.58%)</title><rect x="71.0834%" y="709" width="0.5843%" height="15" fill="rgb(248,46,39)" fg:x="27006" fg:w="222"/><text x="71.3334%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (4 samples, 0.01%)</title><rect x="71.6888%" y="757" width="0.0105%" height="15" fill="rgb(248,113,48)" fg:x="27236" fg:w="4"/><text x="71.9388%" y="767.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="71.6888%" y="741" width="0.0105%" height="15" fill="rgb(245,16,25)" fg:x="27236" fg:w="4"/><text x="71.9388%" y="751.50"></text></g><g><title>tokio::runtime::context::budget (4 samples, 0.01%)</title><rect x="71.6888%" y="725" width="0.0105%" height="15" fill="rgb(249,152,16)" fg:x="27236" fg:w="4"/><text x="71.9388%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="71.6888%" y="709" width="0.0105%" height="15" fill="rgb(250,16,1)" fg:x="27236" fg:w="4"/><text x="71.9388%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (13 samples, 0.03%)</title><rect x="71.6993%" y="757" width="0.0342%" height="15" fill="rgb(249,138,3)" fg:x="27240" fg:w="13"/><text x="71.9493%" y="767.50"></text></g><g><title>tokio::runtime::context::budget (13 samples, 0.03%)</title><rect x="71.6993%" y="741" width="0.0342%" height="15" fill="rgb(227,71,41)" fg:x="27240" fg:w="13"/><text x="71.9493%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.03%)</title><rect x="71.6993%" y="725" width="0.0342%" height="15" fill="rgb(209,184,23)" fg:x="27240" fg:w="13"/><text x="71.9493%" y="735.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (9 samples, 0.02%)</title><rect x="71.7098%" y="709" width="0.0237%" height="15" fill="rgb(223,215,31)" fg:x="27244" fg:w="9"/><text x="71.9598%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (9 samples, 0.02%)</title><rect x="71.7098%" y="693" width="0.0237%" height="15" fill="rgb(210,146,28)" fg:x="27244" fg:w="9"/><text x="71.9598%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.04%)</title><rect x="71.7546%" y="741" width="0.0447%" height="15" fill="rgb(209,183,41)" fg:x="27261" fg:w="17"/><text x="72.0046%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.04%)</title><rect x="71.7546%" y="725" width="0.0447%" height="15" fill="rgb(209,224,45)" fg:x="27261" fg:w="17"/><text x="72.0046%" y="735.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="71.8020%" y="741" width="0.0132%" height="15" fill="rgb(224,209,51)" fg:x="27279" fg:w="5"/><text x="72.0520%" y="751.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.01%)</title><rect x="71.8020%" y="725" width="0.0132%" height="15" fill="rgb(223,17,39)" fg:x="27279" fg:w="5"/><text x="72.0520%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.01%)</title><rect x="71.8020%" y="709" width="0.0132%" height="15" fill="rgb(234,204,37)" fg:x="27279" fg:w="5"/><text x="72.0520%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (5 samples, 0.01%)</title><rect x="71.8020%" y="693" width="0.0132%" height="15" fill="rgb(236,120,5)" fg:x="27279" fg:w="5"/><text x="72.0520%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="71.8020%" y="677" width="0.0132%" height="15" fill="rgb(248,97,27)" fg:x="27279" fg:w="5"/><text x="72.0520%" y="687.50"></text></g><g><title>&lt;tokio::io::util::write::Write&lt;W&gt; as core::future::future::Future&gt;::poll (312 samples, 0.82%)</title><rect x="70.9965%" y="869" width="0.8212%" height="15" fill="rgb(240,66,17)" fg:x="26973" fg:w="312"/><text x="71.2465%" y="879.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (312 samples, 0.82%)</title><rect x="70.9965%" y="853" width="0.8212%" height="15" fill="rgb(210,79,3)" fg:x="26973" fg:w="312"/><text x="71.2465%" y="863.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (310 samples, 0.82%)</title><rect x="71.0018%" y="837" width="0.8160%" height="15" fill="rgb(214,176,27)" fg:x="26975" fg:w="310"/><text x="71.2518%" y="847.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (307 samples, 0.81%)</title><rect x="71.0097%" y="821" width="0.8081%" height="15" fill="rgb(235,185,3)" fg:x="26978" fg:w="307"/><text x="71.2597%" y="831.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (283 samples, 0.74%)</title><rect x="71.0729%" y="805" width="0.7449%" height="15" fill="rgb(227,24,12)" fg:x="27002" fg:w="283"/><text x="71.3229%" y="815.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (55 samples, 0.14%)</title><rect x="71.6730%" y="789" width="0.1448%" height="15" fill="rgb(252,169,48)" fg:x="27230" fg:w="55"/><text x="71.9230%" y="799.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (54 samples, 0.14%)</title><rect x="71.6756%" y="773" width="0.1421%" height="15" fill="rgb(212,65,1)" fg:x="27231" fg:w="54"/><text x="71.9256%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (32 samples, 0.08%)</title><rect x="71.7335%" y="757" width="0.0842%" height="15" fill="rgb(242,39,24)" fg:x="27253" fg:w="32"/><text x="71.9835%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::compat::Compat&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="869" width="0.0105%" height="15" fill="rgb(249,32,23)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="853" width="0.0105%" height="15" fill="rgb(251,195,23)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="837" width="0.0105%" height="15" fill="rgb(236,174,8)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="821" width="0.0105%" height="15" fill="rgb(220,197,8)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="805" width="0.0105%" height="15" fill="rgb(240,108,37)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="789" width="0.0105%" height="15" fill="rgb(232,176,24)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="799.50"></text></g><g><title>_ZN4core3ptr1085drop_in_place$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h8350f6bd9f70ea84E (4 samples, 0.01%)</title><rect x="71.8204%" y="773" width="0.0105%" height="15" fill="rgb(243,35,29)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Receiver&lt;bytes::bytes::Bytes&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="757" width="0.0105%" height="15" fill="rgb(210,37,18)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="741" width="0.0105%" height="15" fill="rgb(224,184,40)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="71.8204%" y="725" width="0.0105%" height="15" fill="rgb(236,39,29)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.01%)</title><rect x="71.8204%" y="709" width="0.0105%" height="15" fill="rgb(232,48,39)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="693" width="0.0105%" height="15" fill="rgb(236,34,42)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="677" width="0.0105%" height="15" fill="rgb(243,106,37)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="661" width="0.0105%" height="15" fill="rgb(218,96,6)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="645" width="0.0105%" height="15" fill="rgb(235,130,12)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;bytes::bytes::Bytes&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="629" width="0.0105%" height="15" fill="rgb(231,95,0)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="639.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="71.8204%" y="613" width="0.0105%" height="15" fill="rgb(228,12,23)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bytes::bytes::Bytes]&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="597" width="0.0105%" height="15" fill="rgb(216,12,1)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="581" width="0.0105%" height="15" fill="rgb(219,59,3)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="591.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="71.8204%" y="565" width="0.0105%" height="15" fill="rgb(215,208,46)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="575.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (4 samples, 0.01%)</title><rect x="71.8204%" y="549" width="0.0105%" height="15" fill="rgb(254,224,29)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="559.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (4 samples, 0.01%)</title><rect x="71.8204%" y="533" width="0.0105%" height="15" fill="rgb(232,14,29)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="543.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (4 samples, 0.01%)</title><rect x="71.8204%" y="517" width="0.0105%" height="15" fill="rgb(208,45,52)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="527.50"></text></g><g><title>bytes::bytes_mut::release_shared (4 samples, 0.01%)</title><rect x="71.8204%" y="501" width="0.0105%" height="15" fill="rgb(234,191,28)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="511.50"></text></g><g><title>core::mem::drop (4 samples, 0.01%)</title><rect x="71.8204%" y="485" width="0.0105%" height="15" fill="rgb(244,67,43)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="469" width="0.0105%" height="15" fill="rgb(236,189,24)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="453" width="0.0105%" height="15" fill="rgb(239,214,33)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="437" width="0.0105%" height="15" fill="rgb(226,176,41)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="71.8204%" y="421" width="0.0105%" height="15" fill="rgb(248,47,8)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="71.8204%" y="405" width="0.0105%" height="15" fill="rgb(218,81,44)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4 samples, 0.01%)</title><rect x="71.8204%" y="389" width="0.0105%" height="15" fill="rgb(213,98,6)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="71.8204%" y="373" width="0.0105%" height="15" fill="rgb(222,85,22)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="71.8204%" y="357" width="0.0105%" height="15" fill="rgb(239,46,39)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="367.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="71.8204%" y="341" width="0.0105%" height="15" fill="rgb(237,12,29)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="351.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.01%)</title><rect x="71.8204%" y="325" width="0.0105%" height="15" fill="rgb(214,77,8)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="335.50"></text></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.01%)</title><rect x="71.8204%" y="309" width="0.0105%" height="15" fill="rgb(217,168,37)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="319.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="71.8204%" y="293" width="0.0105%" height="15" fill="rgb(221,217,23)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="303.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="71.8204%" y="277" width="0.0105%" height="15" fill="rgb(243,229,36)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="287.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="71.8204%" y="261" width="0.0105%" height="15" fill="rgb(251,163,40)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="271.50"></text></g><g><title>arena_dalloc_large (4 samples, 0.01%)</title><rect x="71.8204%" y="245" width="0.0105%" height="15" fill="rgb(237,222,12)" fg:x="27286" fg:w="4"/><text x="72.0704%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (4 samples, 0.01%)</title><rect x="71.8309%" y="869" width="0.0105%" height="15" fill="rgb(248,132,6)" fg:x="27290" fg:w="4"/><text x="72.0809%" y="879.50"></text></g><g><title>cache_bin_dalloc_easy (16 samples, 0.04%)</title><rect x="71.9730%" y="725" width="0.0421%" height="15" fill="rgb(227,167,50)" fg:x="27344" fg:w="16"/><text x="72.2230%" y="735.50"></text></g><g><title>sz_index2size (7 samples, 0.02%)</title><rect x="72.0152%" y="725" width="0.0184%" height="15" fill="rgb(242,84,37)" fg:x="27360" fg:w="7"/><text x="72.2652%" y="735.50"></text></g><g><title>sz_index2size_lookup (7 samples, 0.02%)</title><rect x="72.0152%" y="709" width="0.0184%" height="15" fill="rgb(212,4,50)" fg:x="27360" fg:w="7"/><text x="72.2652%" y="719.50"></text></g><g><title>sz_index2size_lookup_impl (7 samples, 0.02%)</title><rect x="72.0152%" y="693" width="0.0184%" height="15" fill="rgb(230,228,32)" fg:x="27360" fg:w="7"/><text x="72.2652%" y="703.50"></text></g><g><title>_rjem_sdallocx (41 samples, 0.11%)</title><rect x="71.9283%" y="757" width="0.1079%" height="15" fill="rgb(248,217,23)" fg:x="27327" fg:w="41"/><text x="72.1783%" y="767.50"></text></g><g><title>free_fastpath (41 samples, 0.11%)</title><rect x="71.9283%" y="741" width="0.1079%" height="15" fill="rgb(238,197,32)" fg:x="27327" fg:w="41"/><text x="72.1783%" y="751.50"></text></g><g><title>inallocx (26 samples, 0.07%)</title><rect x="72.1520%" y="501" width="0.0684%" height="15" fill="rgb(236,106,1)" fg:x="27412" fg:w="26"/><text x="72.4020%" y="511.50"></text></g><g><title>aligned_usize_get (25 samples, 0.07%)</title><rect x="72.1547%" y="485" width="0.0658%" height="15" fill="rgb(219,228,13)" fg:x="27413" fg:w="25"/><text x="72.4047%" y="495.50"></text></g><g><title>sz_s2u (24 samples, 0.06%)</title><rect x="72.1573%" y="469" width="0.0632%" height="15" fill="rgb(238,30,35)" fg:x="27414" fg:w="24"/><text x="72.4073%" y="479.50"></text></g><g><title>sz_s2u_compute (23 samples, 0.06%)</title><rect x="72.1599%" y="453" width="0.0605%" height="15" fill="rgb(236,70,23)" fg:x="27415" fg:w="23"/><text x="72.4099%" y="463.50"></text></g><g><title>_rjem_je_arena_decay (8 samples, 0.02%)</title><rect x="72.2836%" y="437" width="0.0211%" height="15" fill="rgb(249,104,48)" fg:x="27462" fg:w="8"/><text x="72.5336%" y="447.50"></text></g><g><title>arena_decay_dirty (8 samples, 0.02%)</title><rect x="72.2836%" y="421" width="0.0211%" height="15" fill="rgb(254,117,50)" fg:x="27462" fg:w="8"/><text x="72.5336%" y="431.50"></text></g><g><title>arena_decay_impl (8 samples, 0.02%)</title><rect x="72.2836%" y="405" width="0.0211%" height="15" fill="rgb(223,152,4)" fg:x="27462" fg:w="8"/><text x="72.5336%" y="415.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (8 samples, 0.02%)</title><rect x="72.2836%" y="389" width="0.0211%" height="15" fill="rgb(245,6,2)" fg:x="27462" fg:w="8"/><text x="72.5336%" y="399.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (8 samples, 0.02%)</title><rect x="72.2836%" y="373" width="0.0211%" height="15" fill="rgb(249,150,24)" fg:x="27462" fg:w="8"/><text x="72.5336%" y="383.50"></text></g><g><title>arena_get_from_edata (119 samples, 0.31%)</title><rect x="72.3310%" y="421" width="0.3132%" height="15" fill="rgb(228,185,42)" fg:x="27480" fg:w="119"/><text x="72.5810%" y="431.50"></text></g><g><title>atomic_load_p (119 samples, 0.31%)</title><rect x="72.3310%" y="405" width="0.3132%" height="15" fill="rgb(226,39,33)" fg:x="27480" fg:w="119"/><text x="72.5810%" y="415.50"></text></g><g><title>arena_background_thread_inactivity_check (5 samples, 0.01%)</title><rect x="72.6600%" y="389" width="0.0132%" height="15" fill="rgb(221,166,19)" fg:x="27605" fg:w="5"/><text x="72.9100%" y="399.50"></text></g><g><title>background_thread_enabled (4 samples, 0.01%)</title><rect x="72.6627%" y="373" width="0.0105%" height="15" fill="rgb(209,109,2)" fg:x="27606" fg:w="4"/><text x="72.9127%" y="383.50"></text></g><g><title>atomic_load_b (4 samples, 0.01%)</title><rect x="72.6627%" y="357" width="0.0105%" height="15" fill="rgb(252,216,26)" fg:x="27606" fg:w="4"/><text x="72.9127%" y="367.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (10 samples, 0.03%)</title><rect x="72.6548%" y="405" width="0.0263%" height="15" fill="rgb(227,173,36)" fg:x="27603" fg:w="10"/><text x="72.9048%" y="415.50"></text></g><g><title>_rjem_je_emap_remap (14 samples, 0.04%)</title><rect x="72.7074%" y="389" width="0.0368%" height="15" fill="rgb(209,90,7)" fg:x="27623" fg:w="14"/><text x="72.9574%" y="399.50"></text></g><g><title>pa_nactive_sub (67 samples, 0.18%)</title><rect x="72.7495%" y="389" width="0.1764%" height="15" fill="rgb(250,194,11)" fg:x="27639" fg:w="67"/><text x="72.9995%" y="399.50"></text></g><g><title>atomic_fetch_sub_zu (67 samples, 0.18%)</title><rect x="72.7495%" y="373" width="0.1764%" height="15" fill="rgb(220,72,50)" fg:x="27639" fg:w="67"/><text x="72.9995%" y="383.50"></text></g><g><title>_rjem_je_pa_dalloc (101 samples, 0.27%)</title><rect x="72.6837%" y="405" width="0.2658%" height="15" fill="rgb(222,106,48)" fg:x="27614" fg:w="101"/><text x="72.9337%" y="415.50"></text></g><g><title>pai_dalloc (9 samples, 0.02%)</title><rect x="72.9259%" y="389" width="0.0237%" height="15" fill="rgb(216,220,45)" fg:x="27706" fg:w="9"/><text x="73.1759%" y="399.50"></text></g><g><title>[libc.so.6] (50 samples, 0.13%)</title><rect x="72.9759%" y="389" width="0.1316%" height="15" fill="rgb(234,112,18)" fg:x="27725" fg:w="50"/><text x="73.2259%" y="399.50"></text></g><g><title>_rjem_je_ecache_dalloc (7 samples, 0.02%)</title><rect x="73.1075%" y="389" width="0.0184%" height="15" fill="rgb(206,179,9)" fg:x="27775" fg:w="7"/><text x="73.3575%" y="399.50"></text></g><g><title>edata_base_get (7 samples, 0.02%)</title><rect x="73.1075%" y="373" width="0.0184%" height="15" fill="rgb(215,115,40)" fg:x="27775" fg:w="7"/><text x="73.3575%" y="383.50"></text></g><g><title>atomic_load_zu (7 samples, 0.02%)</title><rect x="73.1786%" y="373" width="0.0184%" height="15" fill="rgb(222,69,34)" fg:x="27802" fg:w="7"/><text x="73.4286%" y="383.50"></text></g><g><title>rtree_leaf_elm_lookup (4 samples, 0.01%)</title><rect x="73.2312%" y="325" width="0.0105%" height="15" fill="rgb(209,161,10)" fg:x="27822" fg:w="4"/><text x="73.4812%" y="335.50"></text></g><g><title>_rjem_je_emap_update_edata_state (14 samples, 0.04%)</title><rect x="73.2075%" y="341" width="0.0368%" height="15" fill="rgb(217,6,38)" fg:x="27813" fg:w="14"/><text x="73.4575%" y="351.50"></text></g><g><title>_rjem_je_edata_heap_empty (16 samples, 0.04%)</title><rect x="73.3075%" y="325" width="0.0421%" height="15" fill="rgb(229,229,48)" fg:x="27851" fg:w="16"/><text x="73.5575%" y="335.50"></text></g><g><title>edata_heap_ph_cmp (34 samples, 0.09%)</title><rect x="73.4391%" y="293" width="0.0895%" height="15" fill="rgb(225,21,28)" fg:x="27901" fg:w="34"/><text x="73.6891%" y="303.50"></text></g><g><title>edata_snad_comp (34 samples, 0.09%)</title><rect x="73.4391%" y="277" width="0.0895%" height="15" fill="rgb(206,33,13)" fg:x="27901" fg:w="34"/><text x="73.6891%" y="287.50"></text></g><g><title>edata_cmp_summary_get (31 samples, 0.08%)</title><rect x="73.4470%" y="261" width="0.0816%" height="15" fill="rgb(242,178,17)" fg:x="27904" fg:w="31"/><text x="73.6970%" y="271.50"></text></g><g><title>edata_sn_get (30 samples, 0.08%)</title><rect x="73.4497%" y="245" width="0.0790%" height="15" fill="rgb(220,162,5)" fg:x="27905" fg:w="30"/><text x="73.6997%" y="255.50"></text></g><g><title>phn_link_init (5 samples, 0.01%)</title><rect x="73.5392%" y="293" width="0.0132%" height="15" fill="rgb(210,33,43)" fg:x="27939" fg:w="5"/><text x="73.7892%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_insert (81 samples, 0.21%)</title><rect x="73.3497%" y="325" width="0.2132%" height="15" fill="rgb(216,116,54)" fg:x="27867" fg:w="81"/><text x="73.5997%" y="335.50"></text></g><g><title>ph_insert (77 samples, 0.20%)</title><rect x="73.3602%" y="309" width="0.2027%" height="15" fill="rgb(249,92,24)" fg:x="27871" fg:w="77"/><text x="73.6102%" y="319.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (21 samples, 0.06%)</title><rect x="73.5629%" y="325" width="0.0553%" height="15" fill="rgb(231,189,14)" fg:x="27948" fg:w="21"/><text x="73.8129%" y="335.50"></text></g><g><title>sz_psz2ind (4 samples, 0.01%)</title><rect x="73.6076%" y="309" width="0.0105%" height="15" fill="rgb(230,8,41)" fg:x="27965" fg:w="4"/><text x="73.8576%" y="319.50"></text></g><g><title>edata_cmp_summary_comp (9 samples, 0.02%)</title><rect x="73.6208%" y="325" width="0.0237%" height="15" fill="rgb(249,7,27)" fg:x="27970" fg:w="9"/><text x="73.8708%" y="335.50"></text></g><g><title>edata_list_inactive_append (22 samples, 0.06%)</title><rect x="73.6497%" y="325" width="0.0579%" height="15" fill="rgb(232,86,5)" fg:x="27981" fg:w="22"/><text x="73.8997%" y="335.50"></text></g><g><title>atomic_load_zu (8 samples, 0.02%)</title><rect x="73.7076%" y="309" width="0.0211%" height="15" fill="rgb(224,175,18)" fg:x="28003" fg:w="8"/><text x="73.9576%" y="319.50"></text></g><g><title>eset_stats_add (10 samples, 0.03%)</title><rect x="73.7076%" y="325" width="0.0263%" height="15" fill="rgb(220,129,12)" fg:x="28003" fg:w="10"/><text x="73.9576%" y="335.50"></text></g><g><title>extent_deactivate_locked (220 samples, 0.58%)</title><rect x="73.1970%" y="373" width="0.5791%" height="15" fill="rgb(210,19,36)" fg:x="27809" fg:w="220"/><text x="73.4470%" y="383.50"></text></g><g><title>extent_deactivate_locked_impl (220 samples, 0.58%)</title><rect x="73.1970%" y="357" width="0.5791%" height="15" fill="rgb(219,96,14)" fg:x="27809" fg:w="220"/><text x="73.4470%" y="367.50"></text></g><g><title>_rjem_je_eset_insert (202 samples, 0.53%)</title><rect x="73.2444%" y="341" width="0.5317%" height="15" fill="rgb(249,106,1)" fg:x="27827" fg:w="202"/><text x="73.4944%" y="351.50"></text></g><g><title>sz_psz2ind (16 samples, 0.04%)</title><rect x="73.7339%" y="325" width="0.0421%" height="15" fill="rgb(249,155,20)" fg:x="28013" fg:w="16"/><text x="73.9839%" y="335.50"></text></g><g><title>rtree_leaf_elm_lookup (6 samples, 0.02%)</title><rect x="74.0156%" y="293" width="0.0158%" height="15" fill="rgb(244,168,9)" fg:x="28120" fg:w="6"/><text x="74.2656%" y="303.50"></text></g><g><title>rtree_leaf_elm_state_update (22 samples, 0.06%)</title><rect x="74.0314%" y="293" width="0.0579%" height="15" fill="rgb(216,23,50)" fg:x="28126" fg:w="22"/><text x="74.2814%" y="303.50"></text></g><g><title>rtree_leaf_elm_bits_read (22 samples, 0.06%)</title><rect x="74.0314%" y="277" width="0.0579%" height="15" fill="rgb(224,219,20)" fg:x="28126" fg:w="22"/><text x="74.2814%" y="287.50"></text></g><g><title>atomic_load_p (22 samples, 0.06%)</title><rect x="74.0314%" y="261" width="0.0579%" height="15" fill="rgb(222,156,15)" fg:x="28126" fg:w="22"/><text x="74.2814%" y="271.50"></text></g><g><title>_rjem_je_emap_update_edata_state (41 samples, 0.11%)</title><rect x="73.9840%" y="309" width="0.1079%" height="15" fill="rgb(231,97,17)" fg:x="28108" fg:w="41"/><text x="74.2340%" y="319.50"></text></g><g><title>edata_past_get (8 samples, 0.02%)</title><rect x="74.0919%" y="309" width="0.0211%" height="15" fill="rgb(218,70,48)" fg:x="28149" fg:w="8"/><text x="74.3419%" y="319.50"></text></g><g><title>edata_committed_get (28 samples, 0.07%)</title><rect x="74.1656%" y="293" width="0.0737%" height="15" fill="rgb(212,196,52)" fg:x="28177" fg:w="28"/><text x="74.4156%" y="303.50"></text></g><g><title>extent_can_acquire_neighbor (59 samples, 0.16%)</title><rect x="74.1130%" y="309" width="0.1553%" height="15" fill="rgb(243,203,18)" fg:x="28157" fg:w="59"/><text x="74.3630%" y="319.50"></text></g><g><title>extent_neighbor_head_state_mergeable (10 samples, 0.03%)</title><rect x="74.2419%" y="293" width="0.0263%" height="15" fill="rgb(252,125,41)" fg:x="28206" fg:w="10"/><text x="74.4919%" y="303.50"></text></g><g><title>rtree_leaf_elm_lookup (11 samples, 0.03%)</title><rect x="74.2683%" y="309" width="0.0290%" height="15" fill="rgb(223,180,33)" fg:x="28216" fg:w="11"/><text x="74.5183%" y="319.50"></text></g><g><title>rtree_leaf_elm_bits_decode (4 samples, 0.01%)</title><rect x="74.2972%" y="293" width="0.0105%" height="15" fill="rgb(254,159,46)" fg:x="28227" fg:w="4"/><text x="74.5472%" y="303.50"></text></g><g><title>rtree_leaf_elm_read (74 samples, 0.19%)</title><rect x="74.2972%" y="309" width="0.1948%" height="15" fill="rgb(254,38,10)" fg:x="28227" fg:w="74"/><text x="74.5472%" y="319.50"></text></g><g><title>rtree_leaf_elm_bits_read (70 samples, 0.18%)</title><rect x="74.3077%" y="293" width="0.1842%" height="15" fill="rgb(208,217,32)" fg:x="28231" fg:w="70"/><text x="74.5577%" y="303.50"></text></g><g><title>atomic_load_p (70 samples, 0.18%)</title><rect x="74.3077%" y="277" width="0.1842%" height="15" fill="rgb(221,120,13)" fg:x="28231" fg:w="70"/><text x="74.5577%" y="287.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (244 samples, 0.64%)</title><rect x="73.8708%" y="341" width="0.6422%" height="15" fill="rgb(246,54,52)" fg:x="28065" fg:w="244"/><text x="74.1208%" y="351.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (237 samples, 0.62%)</title><rect x="73.8892%" y="325" width="0.6238%" height="15" fill="rgb(242,34,25)" fg:x="28072" fg:w="237"/><text x="74.1392%" y="335.50"></text></g><g><title>tsdn_rtree_ctx (8 samples, 0.02%)</title><rect x="74.4920%" y="309" width="0.0211%" height="15" fill="rgb(247,209,9)" fg:x="28301" fg:w="8"/><text x="74.7420%" y="319.50"></text></g><g><title>_rjem_je_edata_heap_empty (4 samples, 0.01%)</title><rect x="74.5657%" y="309" width="0.0105%" height="15" fill="rgb(228,71,26)" fg:x="28329" fg:w="4"/><text x="74.8157%" y="319.50"></text></g><g><title>_rjem_je_edata_heap_first (5 samples, 0.01%)</title><rect x="74.5762%" y="309" width="0.0132%" height="15" fill="rgb(222,145,49)" fg:x="28333" fg:w="5"/><text x="74.8262%" y="319.50"></text></g><g><title>ph_merge_children (9 samples, 0.02%)</title><rect x="74.6578%" y="277" width="0.0237%" height="15" fill="rgb(218,121,17)" fg:x="28364" fg:w="9"/><text x="74.9078%" y="287.50"></text></g><g><title>phn_next_get (6 samples, 0.02%)</title><rect x="74.6868%" y="277" width="0.0158%" height="15" fill="rgb(244,50,7)" fg:x="28375" fg:w="6"/><text x="74.9368%" y="287.50"></text></g><g><title>_rjem_je_edata_heap_remove (44 samples, 0.12%)</title><rect x="74.5894%" y="309" width="0.1158%" height="15" fill="rgb(246,229,37)" fg:x="28338" fg:w="44"/><text x="74.8394%" y="319.50"></text></g><g><title>ph_remove (41 samples, 0.11%)</title><rect x="74.5973%" y="293" width="0.1079%" height="15" fill="rgb(225,18,5)" fg:x="28341" fg:w="41"/><text x="74.8473%" y="303.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (28 samples, 0.07%)</title><rect x="74.7052%" y="309" width="0.0737%" height="15" fill="rgb(213,204,8)" fg:x="28382" fg:w="28"/><text x="74.9552%" y="319.50"></text></g><g><title>sz_psz2ind (7 samples, 0.02%)</title><rect x="74.7605%" y="293" width="0.0184%" height="15" fill="rgb(238,103,6)" fg:x="28403" fg:w="7"/><text x="75.0105%" y="303.50"></text></g><g><title>edata_list_inactive_remove (19 samples, 0.05%)</title><rect x="74.7815%" y="309" width="0.0500%" height="15" fill="rgb(222,25,35)" fg:x="28411" fg:w="19"/><text x="75.0315%" y="319.50"></text></g><g><title>eset_stats_sub (36 samples, 0.09%)</title><rect x="74.8315%" y="309" width="0.0948%" height="15" fill="rgb(213,203,35)" fg:x="28430" fg:w="36"/><text x="75.0815%" y="319.50"></text></g><g><title>atomic_load_zu (35 samples, 0.09%)</title><rect x="74.8342%" y="293" width="0.0921%" height="15" fill="rgb(221,79,53)" fg:x="28431" fg:w="35"/><text x="75.0842%" y="303.50"></text></g><g><title>_rjem_je_eset_remove (164 samples, 0.43%)</title><rect x="74.5341%" y="325" width="0.4317%" height="15" fill="rgb(243,200,35)" fg:x="28317" fg:w="164"/><text x="74.7841%" y="335.50"></text></g><g><title>sz_psz2ind (12 samples, 0.03%)</title><rect x="74.9342%" y="309" width="0.0316%" height="15" fill="rgb(248,60,25)" fg:x="28469" fg:w="12"/><text x="75.1842%" y="319.50"></text></g><g><title>lg_ceil (4 samples, 0.01%)</title><rect x="74.9553%" y="293" width="0.0105%" height="15" fill="rgb(227,53,46)" fg:x="28477" fg:w="4"/><text x="75.2053%" y="303.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (13 samples, 0.03%)</title><rect x="75.0026%" y="293" width="0.0342%" height="15" fill="rgb(216,120,32)" fg:x="28495" fg:w="13"/><text x="75.2526%" y="303.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (13 samples, 0.03%)</title><rect x="75.0026%" y="277" width="0.0342%" height="15" fill="rgb(220,134,1)" fg:x="28495" fg:w="13"/><text x="75.2526%" y="287.50"></text></g><g><title>ehooks_merge (23 samples, 0.06%)</title><rect x="74.9895%" y="309" width="0.0605%" height="15" fill="rgb(237,168,5)" fg:x="28490" fg:w="23"/><text x="75.2395%" y="319.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (5 samples, 0.01%)</title><rect x="75.0368%" y="293" width="0.0132%" height="15" fill="rgb(231,100,33)" fg:x="28508" fg:w="5"/><text x="75.2868%" y="303.50"></text></g><g><title>atomic_load_p (5 samples, 0.01%)</title><rect x="75.0368%" y="277" width="0.0132%" height="15" fill="rgb(236,177,47)" fg:x="28508" fg:w="5"/><text x="75.2868%" y="287.50"></text></g><g><title>[libc.so.6] (60 samples, 0.16%)</title><rect x="75.0869%" y="293" width="0.1579%" height="15" fill="rgb(235,7,49)" fg:x="28527" fg:w="60"/><text x="75.3369%" y="303.50"></text></g><g><title>edata_ead_comp (4 samples, 0.01%)</title><rect x="75.2790%" y="213" width="0.0105%" height="15" fill="rgb(232,119,22)" fg:x="28600" fg:w="4"/><text x="75.5290%" y="223.50"></text></g><g><title>edata_avail_ph_cmp (28 samples, 0.07%)</title><rect x="75.2685%" y="245" width="0.0737%" height="15" fill="rgb(254,73,53)" fg:x="28596" fg:w="28"/><text x="75.5185%" y="255.50"></text></g><g><title>edata_esnead_comp (28 samples, 0.07%)</title><rect x="75.2685%" y="229" width="0.0737%" height="15" fill="rgb(251,35,20)" fg:x="28596" fg:w="28"/><text x="75.5185%" y="239.50"></text></g><g><title>edata_esn_comp (20 samples, 0.05%)</title><rect x="75.2895%" y="213" width="0.0526%" height="15" fill="rgb(241,119,20)" fg:x="28604" fg:w="20"/><text x="75.5395%" y="223.50"></text></g><g><title>edata_esn_get (17 samples, 0.04%)</title><rect x="75.2974%" y="197" width="0.0447%" height="15" fill="rgb(207,102,14)" fg:x="28607" fg:w="17"/><text x="75.5474%" y="207.50"></text></g><g><title>edata_avail_ph_cmp (8 samples, 0.02%)</title><rect x="75.3553%" y="213" width="0.0211%" height="15" fill="rgb(248,201,50)" fg:x="28629" fg:w="8"/><text x="75.6053%" y="223.50"></text></g><g><title>edata_esnead_comp (8 samples, 0.02%)</title><rect x="75.3553%" y="197" width="0.0211%" height="15" fill="rgb(222,185,44)" fg:x="28629" fg:w="8"/><text x="75.6053%" y="207.50"></text></g><g><title>edata_esn_comp (5 samples, 0.01%)</title><rect x="75.3632%" y="181" width="0.0132%" height="15" fill="rgb(218,107,18)" fg:x="28632" fg:w="5"/><text x="75.6132%" y="191.50"></text></g><g><title>edata_esn_get (5 samples, 0.01%)</title><rect x="75.3632%" y="165" width="0.0132%" height="15" fill="rgb(237,177,39)" fg:x="28632" fg:w="5"/><text x="75.6132%" y="175.50"></text></g><g><title>phn_merge (11 samples, 0.03%)</title><rect x="75.3553%" y="229" width="0.0290%" height="15" fill="rgb(246,69,6)" fg:x="28629" fg:w="11"/><text x="75.6053%" y="239.50"></text></g><g><title>phn_next_get (4 samples, 0.01%)</title><rect x="75.3843%" y="229" width="0.0105%" height="15" fill="rgb(234,208,37)" fg:x="28640" fg:w="4"/><text x="75.6343%" y="239.50"></text></g><g><title>ph_try_aux_merge_pair (25 samples, 0.07%)</title><rect x="75.3422%" y="245" width="0.0658%" height="15" fill="rgb(225,4,6)" fg:x="28624" fg:w="25"/><text x="75.5922%" y="255.50"></text></g><g><title>phn_link_init (5 samples, 0.01%)</title><rect x="75.4080%" y="245" width="0.0132%" height="15" fill="rgb(233,45,0)" fg:x="28649" fg:w="5"/><text x="75.6580%" y="255.50"></text></g><g><title>phn_next_set (4 samples, 0.01%)</title><rect x="75.4211%" y="245" width="0.0105%" height="15" fill="rgb(226,136,5)" fg:x="28654" fg:w="4"/><text x="75.6711%" y="255.50"></text></g><g><title>_rjem_je_edata_avail_insert (71 samples, 0.19%)</title><rect x="75.2553%" y="277" width="0.1869%" height="15" fill="rgb(211,91,47)" fg:x="28591" fg:w="71"/><text x="75.5053%" y="287.50"></text></g><g><title>ph_insert (69 samples, 0.18%)</title><rect x="75.2606%" y="261" width="0.1816%" height="15" fill="rgb(242,88,51)" fg:x="28593" fg:w="69"/><text x="75.5106%" y="271.50"></text></g><g><title>phn_prev_set (4 samples, 0.01%)</title><rect x="75.4317%" y="245" width="0.0105%" height="15" fill="rgb(230,91,28)" fg:x="28658" fg:w="4"/><text x="75.6817%" y="255.50"></text></g><g><title>pthread_mutex_trylock (64 samples, 0.17%)</title><rect x="75.4580%" y="245" width="0.1685%" height="15" fill="rgb(254,186,29)" fg:x="28668" fg:w="64"/><text x="75.7080%" y="255.50"></text></g><g><title>malloc_mutex_trylock_final (69 samples, 0.18%)</title><rect x="75.4475%" y="261" width="0.1816%" height="15" fill="rgb(238,6,4)" fg:x="28664" fg:w="69"/><text x="75.6975%" y="271.50"></text></g><g><title>malloc_mutex_lock (71 samples, 0.19%)</title><rect x="75.4475%" y="277" width="0.1869%" height="15" fill="rgb(221,151,16)" fg:x="28664" fg:w="71"/><text x="75.6975%" y="287.50"></text></g><g><title>_rjem_je_edata_cache_put (149 samples, 0.39%)</title><rect x="75.2448%" y="293" width="0.3922%" height="15" fill="rgb(251,143,52)" fg:x="28587" fg:w="149"/><text x="75.4948%" y="303.50"></text></g><g><title>emap_rtree_write_acquired (7 samples, 0.02%)</title><rect x="75.6501%" y="277" width="0.0184%" height="15" fill="rgb(206,90,15)" fg:x="28741" fg:w="7"/><text x="75.9001%" y="287.50"></text></g><g><title>rtree_leaf_elm_write (6 samples, 0.02%)</title><rect x="75.6528%" y="261" width="0.0158%" height="15" fill="rgb(218,35,8)" fg:x="28742" fg:w="6"/><text x="75.9028%" y="271.50"></text></g><g><title>_rjem_je_emap_merge_commit (14 samples, 0.04%)</title><rect x="75.6370%" y="293" width="0.0368%" height="15" fill="rgb(239,215,6)" fg:x="28736" fg:w="14"/><text x="75.8870%" y="303.50"></text></g><g><title>_rjem_je_emap_merge_prepare (24 samples, 0.06%)</title><rect x="75.6738%" y="293" width="0.0632%" height="15" fill="rgb(245,116,39)" fg:x="28750" fg:w="24"/><text x="75.9238%" y="303.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (14 samples, 0.04%)</title><rect x="75.7001%" y="277" width="0.0368%" height="15" fill="rgb(242,65,28)" fg:x="28760" fg:w="14"/><text x="75.9501%" y="287.50"></text></g><g><title>rtree_leaf_elm_lookup (7 samples, 0.02%)</title><rect x="75.7186%" y="261" width="0.0184%" height="15" fill="rgb(252,132,53)" fg:x="28767" fg:w="7"/><text x="75.9686%" y="271.50"></text></g><g><title>pthread_mutex_unlock (34 samples, 0.09%)</title><rect x="75.7528%" y="293" width="0.0895%" height="15" fill="rgb(224,159,50)" fg:x="28780" fg:w="34"/><text x="76.0028%" y="303.50"></text></g><g><title>extent_try_coalesce_large (789 samples, 2.08%)</title><rect x="73.7761%" y="373" width="2.0768%" height="15" fill="rgb(224,93,4)" fg:x="28029" fg:w="789"/><text x="74.0261%" y="383.50">e..</text></g><g><title>extent_try_coalesce_impl (783 samples, 2.06%)</title><rect x="73.7919%" y="357" width="2.0610%" height="15" fill="rgb(208,81,34)" fg:x="28035" fg:w="783"/><text x="74.0419%" y="367.50">e..</text></g><g><title>extent_coalesce (509 samples, 1.34%)</title><rect x="74.5131%" y="341" width="1.3398%" height="15" fill="rgb(233,92,54)" fg:x="28309" fg:w="509"/><text x="74.7631%" y="351.50"></text></g><g><title>extent_merge_impl (337 samples, 0.89%)</title><rect x="74.9658%" y="325" width="0.8870%" height="15" fill="rgb(237,21,14)" fg:x="28481" fg:w="337"/><text x="75.2158%" y="335.50"></text></g><g><title>extent_merge_impl (305 samples, 0.80%)</title><rect x="75.0500%" y="309" width="0.8028%" height="15" fill="rgb(249,128,51)" fg:x="28513" fg:w="305"/><text x="75.3000%" y="319.50"></text></g><g><title>pthread_mutex_unlock@plt (4 samples, 0.01%)</title><rect x="75.8423%" y="293" width="0.0105%" height="15" fill="rgb(223,129,24)" fg:x="28814" fg:w="4"/><text x="76.0923%" y="303.50"></text></g><g><title>malloc_mutex_trylock_final (10 samples, 0.03%)</title><rect x="75.8633%" y="341" width="0.0263%" height="15" fill="rgb(231,168,25)" fg:x="28822" fg:w="10"/><text x="76.1133%" y="351.50"></text></g><g><title>pthread_mutex_trylock (10 samples, 0.03%)</title><rect x="75.8633%" y="325" width="0.0263%" height="15" fill="rgb(224,39,20)" fg:x="28822" fg:w="10"/><text x="76.1133%" y="335.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (21 samples, 0.06%)</title><rect x="75.8581%" y="357" width="0.0553%" height="15" fill="rgb(225,152,53)" fg:x="28820" fg:w="21"/><text x="76.1081%" y="367.50"></text></g><g><title>spin_cpu_spinwait (9 samples, 0.02%)</title><rect x="75.8897%" y="341" width="0.0237%" height="15" fill="rgb(252,17,24)" fg:x="28832" fg:w="9"/><text x="76.1397%" y="351.50"></text></g><g><title>pthread_mutex_trylock (137 samples, 0.36%)</title><rect x="75.9134%" y="341" width="0.3606%" height="15" fill="rgb(250,114,30)" fg:x="28841" fg:w="137"/><text x="76.1634%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (150 samples, 0.39%)</title><rect x="75.9134%" y="357" width="0.3948%" height="15" fill="rgb(229,5,4)" fg:x="28841" fg:w="150"/><text x="76.1634%" y="367.50"></text></g><g><title>pthread_mutex_trylock@plt (13 samples, 0.03%)</title><rect x="76.2740%" y="341" width="0.0342%" height="15" fill="rgb(225,176,49)" fg:x="28978" fg:w="13"/><text x="76.5240%" y="351.50"></text></g><g><title>malloc_mutex_lock (175 samples, 0.46%)</title><rect x="75.8528%" y="373" width="0.4606%" height="15" fill="rgb(224,221,49)" fg:x="28818" fg:w="175"/><text x="76.1028%" y="383.50"></text></g><g><title>_rjem_je_extent_record (1,215 samples, 3.20%)</title><rect x="73.1259%" y="389" width="3.1980%" height="15" fill="rgb(253,169,27)" fg:x="27782" fg:w="1215"/><text x="73.3759%" y="399.50">_rj..</text></g><g><title>malloc_mutex_unlock (4 samples, 0.01%)</title><rect x="76.3134%" y="373" width="0.0105%" height="15" fill="rgb(211,206,16)" fg:x="28993" fg:w="4"/><text x="76.5634%" y="383.50"></text></g><g><title>pac_ehooks_get (18 samples, 0.05%)</title><rect x="76.3266%" y="389" width="0.0474%" height="15" fill="rgb(244,87,35)" fg:x="28998" fg:w="18"/><text x="76.5766%" y="399.50"></text></g><g><title>large_dalloc_finish_impl (1,426 samples, 3.75%)</title><rect x="72.6442%" y="421" width="3.7534%" height="15" fill="rgb(246,28,10)" fg:x="27599" fg:w="1426"/><text x="72.8942%" y="431.50">larg..</text></g><g><title>pac_dalloc_impl (1,310 samples, 3.45%)</title><rect x="72.9496%" y="405" width="3.4481%" height="15" fill="rgb(229,12,44)" fg:x="27715" fg:w="1310"/><text x="73.1996%" y="415.50">pac..</text></g><g><title>pthread_mutex_unlock (9 samples, 0.02%)</title><rect x="76.3740%" y="389" width="0.0237%" height="15" fill="rgb(210,145,37)" fg:x="29016" fg:w="9"/><text x="76.6240%" y="399.50"></text></g><g><title>locked_inc_u64 (51 samples, 0.13%)</title><rect x="76.5029%" y="373" width="0.1342%" height="15" fill="rgb(227,112,52)" fg:x="29065" fg:w="51"/><text x="76.7529%" y="383.50"></text></g><g><title>atomic_fetch_add_u64 (51 samples, 0.13%)</title><rect x="76.5029%" y="357" width="0.1342%" height="15" fill="rgb(238,155,34)" fg:x="29065" fg:w="51"/><text x="76.7529%" y="367.50"></text></g><g><title>arena_large_dalloc_stats_update (66 samples, 0.17%)</title><rect x="76.4951%" y="389" width="0.1737%" height="15" fill="rgb(239,226,36)" fg:x="29062" fg:w="66"/><text x="76.7451%" y="399.50"></text></g><g><title>sz_size2index (12 samples, 0.03%)</title><rect x="76.6372%" y="373" width="0.0316%" height="15" fill="rgb(230,16,23)" fg:x="29116" fg:w="12"/><text x="76.8872%" y="383.50"></text></g><g><title>sz_size2index_compute (12 samples, 0.03%)</title><rect x="76.6372%" y="357" width="0.0316%" height="15" fill="rgb(236,171,36)" fg:x="29116" fg:w="12"/><text x="76.8872%" y="367.50"></text></g><g><title>_rjem_je_large_dalloc (1,668 samples, 4.39%)</title><rect x="72.3047%" y="437" width="4.3904%" height="15" fill="rgb(221,22,14)" fg:x="27470" fg:w="1668"/><text x="72.5547%" y="447.50">_rjem..</text></g><g><title>large_dalloc_prep_impl (113 samples, 0.30%)</title><rect x="76.3977%" y="421" width="0.2974%" height="15" fill="rgb(242,43,11)" fg:x="29025" fg:w="113"/><text x="76.6477%" y="431.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (76 samples, 0.20%)</title><rect x="76.4951%" y="405" width="0.2000%" height="15" fill="rgb(232,69,23)" fg:x="29062" fg:w="76"/><text x="76.7451%" y="415.50"></text></g><g><title>edata_usize_get (10 samples, 0.03%)</title><rect x="76.6688%" y="389" width="0.0263%" height="15" fill="rgb(216,180,54)" fg:x="29128" fg:w="10"/><text x="76.9188%" y="399.50"></text></g><g><title>sz_index2size (9 samples, 0.02%)</title><rect x="76.6714%" y="373" width="0.0237%" height="15" fill="rgb(216,5,24)" fg:x="29129" fg:w="9"/><text x="76.9214%" y="383.50"></text></g><g><title>sz_index2size_lookup (9 samples, 0.02%)</title><rect x="76.6714%" y="357" width="0.0237%" height="15" fill="rgb(225,89,9)" fg:x="29129" fg:w="9"/><text x="76.9214%" y="367.50"></text></g><g><title>sz_index2size_lookup_impl (9 samples, 0.02%)</title><rect x="76.6714%" y="341" width="0.0237%" height="15" fill="rgb(243,75,33)" fg:x="29129" fg:w="9"/><text x="76.9214%" y="351.50"></text></g><g><title>rtree_leaf_elm_lookup (7 samples, 0.02%)</title><rect x="76.6977%" y="405" width="0.0184%" height="15" fill="rgb(247,141,45)" fg:x="29139" fg:w="7"/><text x="76.9477%" y="415.50"></text></g><g><title>isdalloct (1,765 samples, 4.65%)</title><rect x="72.2205%" y="485" width="4.6457%" height="15" fill="rgb(232,177,36)" fg:x="27438" fg:w="1765"/><text x="72.4705%" y="495.50">isdal..</text></g><g><title>arena_sdalloc (1,765 samples, 4.65%)</title><rect x="72.2205%" y="469" width="4.6457%" height="15" fill="rgb(219,125,36)" fg:x="27438" fg:w="1765"/><text x="72.4705%" y="479.50">arena..</text></g><g><title>arena_dalloc_large (1,762 samples, 4.64%)</title><rect x="72.2284%" y="453" width="4.6378%" height="15" fill="rgb(227,94,9)" fg:x="27441" fg:w="1762"/><text x="72.4784%" y="463.50">arena..</text></g><g><title>emap_edata_lookup (64 samples, 0.17%)</title><rect x="76.6977%" y="437" width="0.1685%" height="15" fill="rgb(240,34,52)" fg:x="29139" fg:w="64"/><text x="76.9477%" y="447.50"></text></g><g><title>rtree_read (64 samples, 0.17%)</title><rect x="76.6977%" y="421" width="0.1685%" height="15" fill="rgb(216,45,12)" fg:x="29139" fg:w="64"/><text x="76.9477%" y="431.50"></text></g><g><title>rtree_leaf_elm_read (57 samples, 0.15%)</title><rect x="76.7162%" y="405" width="0.1500%" height="15" fill="rgb(246,21,19)" fg:x="29146" fg:w="57"/><text x="76.9662%" y="415.50"></text></g><g><title>rtree_leaf_elm_bits_read (56 samples, 0.15%)</title><rect x="76.7188%" y="389" width="0.1474%" height="15" fill="rgb(213,98,42)" fg:x="29147" fg:w="56"/><text x="76.9688%" y="399.50"></text></g><g><title>atomic_load_p (56 samples, 0.15%)</title><rect x="76.7188%" y="373" width="0.1474%" height="15" fill="rgb(250,136,47)" fg:x="29147" fg:w="56"/><text x="76.9688%" y="383.50"></text></g><g><title>sz_size2index (10 samples, 0.03%)</title><rect x="76.8662%" y="485" width="0.0263%" height="15" fill="rgb(251,124,27)" fg:x="29203" fg:w="10"/><text x="77.1162%" y="495.50"></text></g><g><title>sz_size2index_compute (10 samples, 0.03%)</title><rect x="76.8662%" y="469" width="0.0263%" height="15" fill="rgb(229,180,14)" fg:x="29203" fg:w="10"/><text x="77.1162%" y="479.50"></text></g><g><title>_rjem_je_peak_dalloc_event_handler (6 samples, 0.02%)</title><rect x="76.9136%" y="453" width="0.0158%" height="15" fill="rgb(245,216,25)" fg:x="29221" fg:w="6"/><text x="77.1636%" y="463.50"></text></g><g><title>cache_bin_ncached_get_local (24 samples, 0.06%)</title><rect x="77.1557%" y="405" width="0.0632%" height="15" fill="rgb(251,43,5)" fg:x="29313" fg:w="24"/><text x="77.4057%" y="415.50"></text></g><g><title>cache_bin_ncached_get_internal (24 samples, 0.06%)</title><rect x="77.1557%" y="389" width="0.0632%" height="15" fill="rgb(250,128,24)" fg:x="29313" fg:w="24"/><text x="77.4057%" y="399.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (42 samples, 0.11%)</title><rect x="77.1268%" y="421" width="0.1105%" height="15" fill="rgb(217,117,27)" fg:x="29302" fg:w="42"/><text x="77.3768%" y="431.50"></text></g><g><title>cache_bin_nstashed_get_local (7 samples, 0.02%)</title><rect x="77.2189%" y="405" width="0.0184%" height="15" fill="rgb(245,147,4)" fg:x="29337" fg:w="7"/><text x="77.4689%" y="415.50"></text></g><g><title>cache_bin_nstashed_get_internal (7 samples, 0.02%)</title><rect x="77.2189%" y="389" width="0.0184%" height="15" fill="rgb(242,201,35)" fg:x="29337" fg:w="7"/><text x="77.4689%" y="399.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (6 samples, 0.02%)</title><rect x="77.2215%" y="373" width="0.0158%" height="15" fill="rgb(218,181,1)" fg:x="29338" fg:w="6"/><text x="77.4715%" y="383.50"></text></g><g><title>cache_bin_finish_flush (11 samples, 0.03%)</title><rect x="77.2426%" y="373" width="0.0290%" height="15" fill="rgb(222,6,29)" fg:x="29346" fg:w="11"/><text x="77.4926%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="77.2452%" y="357" width="0.0263%" height="15" fill="rgb(208,186,3)" fg:x="29347" fg:w="10"/><text x="77.4952%" y="367.50"></text></g><g><title>extent_deactivate_locked (7 samples, 0.02%)</title><rect x="77.2979%" y="309" width="0.0184%" height="15" fill="rgb(216,36,26)" fg:x="29367" fg:w="7"/><text x="77.5479%" y="319.50"></text></g><g><title>extent_deactivate_locked_impl (7 samples, 0.02%)</title><rect x="77.2979%" y="293" width="0.0184%" height="15" fill="rgb(248,201,23)" fg:x="29367" fg:w="7"/><text x="77.5479%" y="303.50"></text></g><g><title>_rjem_je_eset_insert (6 samples, 0.02%)</title><rect x="77.3005%" y="277" width="0.0158%" height="15" fill="rgb(251,170,31)" fg:x="29368" fg:w="6"/><text x="77.5505%" y="287.50"></text></g><g><title>_rjem_je_extent_record (9 samples, 0.02%)</title><rect x="77.2979%" y="325" width="0.0237%" height="15" fill="rgb(207,110,25)" fg:x="29367" fg:w="9"/><text x="77.5479%" y="335.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (14 samples, 0.04%)</title><rect x="77.2900%" y="357" width="0.0368%" height="15" fill="rgb(250,54,15)" fg:x="29364" fg:w="14"/><text x="77.5400%" y="367.50"></text></g><g><title>pac_dalloc_impl (11 samples, 0.03%)</title><rect x="77.2979%" y="341" width="0.0290%" height="15" fill="rgb(227,68,33)" fg:x="29367" fg:w="11"/><text x="77.5479%" y="351.50"></text></g><g><title>arena_dalloc_bin_locked_step (9 samples, 0.02%)</title><rect x="77.3294%" y="357" width="0.0237%" height="15" fill="rgb(238,34,41)" fg:x="29379" fg:w="9"/><text x="77.5794%" y="367.50"></text></g><g><title>edata_arena_ind_get (7 samples, 0.02%)</title><rect x="77.3663%" y="357" width="0.0184%" height="15" fill="rgb(220,11,15)" fg:x="29393" fg:w="7"/><text x="77.6163%" y="367.50"></text></g><g><title>malloc_mutex_trylock_final (13 samples, 0.03%)</title><rect x="77.3847%" y="341" width="0.0342%" height="15" fill="rgb(246,111,35)" fg:x="29400" fg:w="13"/><text x="77.6347%" y="351.50"></text></g><g><title>pthread_mutex_trylock (13 samples, 0.03%)</title><rect x="77.3847%" y="325" width="0.0342%" height="15" fill="rgb(209,88,53)" fg:x="29400" fg:w="13"/><text x="77.6347%" y="335.50"></text></g><g><title>malloc_mutex_lock (14 samples, 0.04%)</title><rect x="77.3847%" y="357" width="0.0368%" height="15" fill="rgb(231,185,47)" fg:x="29400" fg:w="14"/><text x="77.6347%" y="367.50"></text></g><g><title>rtree_leaf_elm_read (12 samples, 0.03%)</title><rect x="77.4847%" y="325" width="0.0316%" height="15" fill="rgb(233,154,1)" fg:x="29438" fg:w="12"/><text x="77.7347%" y="335.50"></text></g><g><title>rtree_leaf_elm_bits_read (12 samples, 0.03%)</title><rect x="77.4847%" y="309" width="0.0316%" height="15" fill="rgb(225,15,46)" fg:x="29438" fg:w="12"/><text x="77.7347%" y="319.50"></text></g><g><title>atomic_load_p (12 samples, 0.03%)</title><rect x="77.4847%" y="293" width="0.0316%" height="15" fill="rgb(211,135,41)" fg:x="29438" fg:w="12"/><text x="77.7347%" y="303.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (37 samples, 0.10%)</title><rect x="77.4268%" y="357" width="0.0974%" height="15" fill="rgb(208,54,0)" fg:x="29416" fg:w="37"/><text x="77.6768%" y="367.50"></text></g><g><title>emap_edata_lookup_batch (34 samples, 0.09%)</title><rect x="77.4347%" y="341" width="0.0895%" height="15" fill="rgb(244,136,14)" fg:x="29419" fg:w="34"/><text x="77.6847%" y="351.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (180 samples, 0.47%)</title><rect x="77.0557%" y="437" width="0.4738%" height="15" fill="rgb(241,56,14)" fg:x="29275" fg:w="180"/><text x="77.3057%" y="447.50"></text></g><g><title>tcache_gc_small (111 samples, 0.29%)</title><rect x="77.2373%" y="421" width="0.2922%" height="15" fill="rgb(205,80,24)" fg:x="29344" fg:w="111"/><text x="77.4873%" y="431.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (111 samples, 0.29%)</title><rect x="77.2373%" y="405" width="0.2922%" height="15" fill="rgb(220,57,4)" fg:x="29344" fg:w="111"/><text x="77.4873%" y="415.50"></text></g><g><title>tcache_bin_flush_bottom (110 samples, 0.29%)</title><rect x="77.2399%" y="389" width="0.2895%" height="15" fill="rgb(226,193,50)" fg:x="29345" fg:w="110"/><text x="77.4899%" y="399.50"></text></g><g><title>tcache_bin_flush_impl (98 samples, 0.26%)</title><rect x="77.2715%" y="373" width="0.2579%" height="15" fill="rgb(231,168,22)" fg:x="29357" fg:w="98"/><text x="77.5215%" y="383.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_new_event_wait (9 samples, 0.02%)</title><rect x="77.5295%" y="437" width="0.0237%" height="15" fill="rgb(254,215,14)" fg:x="29455" fg:w="9"/><text x="77.7795%" y="447.50"></text></g><g><title>peak_dalloc_event_wait_set (5 samples, 0.01%)</title><rect x="77.5532%" y="437" width="0.0132%" height="15" fill="rgb(211,115,16)" fg:x="29464" fg:w="5"/><text x="77.8032%" y="447.50"></text></g><g><title>atomic_fence (18 samples, 0.05%)</title><rect x="77.5769%" y="373" width="0.0474%" height="15" fill="rgb(236,210,16)" fg:x="29473" fg:w="18"/><text x="77.8269%" y="383.50"></text></g><g><title>te_adjust_thresholds_helper (22 samples, 0.06%)</title><rect x="77.5716%" y="437" width="0.0579%" height="15" fill="rgb(221,94,12)" fg:x="29471" fg:w="22"/><text x="77.8216%" y="447.50"></text></g><g><title>te_ctx_next_event_set (22 samples, 0.06%)</title><rect x="77.5716%" y="421" width="0.0579%" height="15" fill="rgb(235,218,49)" fg:x="29471" fg:w="22"/><text x="77.8216%" y="431.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (20 samples, 0.05%)</title><rect x="77.5769%" y="405" width="0.0526%" height="15" fill="rgb(217,114,14)" fg:x="29473" fg:w="20"/><text x="77.8269%" y="415.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (20 samples, 0.05%)</title><rect x="77.5769%" y="389" width="0.0526%" height="15" fill="rgb(216,145,22)" fg:x="29473" fg:w="20"/><text x="77.8269%" y="399.50"></text></g><g><title>_rjem_je_te_event_trigger (268 samples, 0.71%)</title><rect x="76.9294%" y="453" width="0.7054%" height="15" fill="rgb(217,112,39)" fg:x="29227" fg:w="268"/><text x="77.1794%" y="463.50"></text></g><g><title>isfree (2,060 samples, 5.42%)</title><rect x="72.2205%" y="501" width="5.4222%" height="15" fill="rgb(225,85,32)" fg:x="27438" fg:w="2060"/><text x="72.4705%" y="511.50">isfree</text></g><g><title>thread_dalloc_event (285 samples, 0.75%)</title><rect x="76.8925%" y="485" width="0.7502%" height="15" fill="rgb(245,209,47)" fg:x="29213" fg:w="285"/><text x="77.1425%" y="495.50"></text></g><g><title>te_event_advance (285 samples, 0.75%)</title><rect x="76.8925%" y="469" width="0.7502%" height="15" fill="rgb(218,220,15)" fg:x="29213" fg:w="285"/><text x="77.1425%" y="479.50"></text></g><g><title>_rjem_je_sdallocx_default (2,115 samples, 5.57%)</title><rect x="72.1257%" y="517" width="5.5670%" height="15" fill="rgb(222,202,31)" fg:x="27402" fg:w="2115"/><text x="72.3757%" y="527.50">_rjem_j..</text></g><g><title>tsd_fetch_min (16 samples, 0.04%)</title><rect x="77.6506%" y="501" width="0.0421%" height="15" fill="rgb(243,203,4)" fg:x="29501" fg:w="16"/><text x="77.9006%" y="511.50"></text></g><g><title>tsd_fetch_impl (16 samples, 0.04%)</title><rect x="77.6506%" y="485" width="0.0421%" height="15" fill="rgb(237,92,17)" fg:x="29501" fg:w="16"/><text x="77.9006%" y="495.50"></text></g><g><title>tsd_state_get (12 samples, 0.03%)</title><rect x="77.6611%" y="469" width="0.0316%" height="15" fill="rgb(231,119,7)" fg:x="29505" fg:w="12"/><text x="77.9111%" y="479.50"></text></g><g><title>core::mem::drop (2,185 samples, 5.75%)</title><rect x="72.0362%" y="693" width="5.7512%" height="15" fill="rgb(237,82,41)" fg:x="27368" fg:w="2185"/><text x="72.2862%" y="703.50">core::m..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (2,185 samples, 5.75%)</title><rect x="72.0362%" y="677" width="5.7512%" height="15" fill="rgb(226,81,48)" fg:x="27368" fg:w="2185"/><text x="72.2862%" y="687.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (2,151 samples, 5.66%)</title><rect x="72.1257%" y="661" width="5.6617%" height="15" fill="rgb(234,70,51)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="671.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,151 samples, 5.66%)</title><rect x="72.1257%" y="645" width="5.6617%" height="15" fill="rgb(251,86,4)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="655.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,151 samples, 5.66%)</title><rect x="72.1257%" y="629" width="5.6617%" height="15" fill="rgb(244,144,28)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="639.50">core::p..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,151 samples, 5.66%)</title><rect x="72.1257%" y="613" width="5.6617%" height="15" fill="rgb(232,161,39)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="623.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,151 samples, 5.66%)</title><rect x="72.1257%" y="597" width="5.6617%" height="15" fill="rgb(247,34,51)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="607.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,151 samples, 5.66%)</title><rect x="72.1257%" y="581" width="5.6617%" height="15" fill="rgb(225,132,2)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="591.50">&lt;alloc:..</text></g><g><title>alloc::alloc::dealloc (2,151 samples, 5.66%)</title><rect x="72.1257%" y="565" width="5.6617%" height="15" fill="rgb(209,159,44)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="575.50">alloc::..</text></g><g><title>__rust_dealloc (2,151 samples, 5.66%)</title><rect x="72.1257%" y="549" width="5.6617%" height="15" fill="rgb(251,214,1)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="559.50">__rust_..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2,151 samples, 5.66%)</title><rect x="72.1257%" y="533" width="5.6617%" height="15" fill="rgb(247,84,47)" fg:x="27402" fg:w="2151"/><text x="72.3757%" y="543.50">&lt;tikv_j..</text></g><g><title>_rjem_sdallocx (36 samples, 0.09%)</title><rect x="77.6927%" y="517" width="0.0948%" height="15" fill="rgb(240,111,43)" fg:x="29517" fg:w="36"/><text x="77.9427%" y="527.50"></text></g><g><title>free_fastpath (34 samples, 0.09%)</title><rect x="77.6979%" y="501" width="0.0895%" height="15" fill="rgb(215,214,35)" fg:x="29519" fg:w="34"/><text x="77.9479%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (117 samples, 0.31%)</title><rect x="77.7874%" y="693" width="0.3080%" height="15" fill="rgb(248,207,23)" fg:x="29553" fg:w="117"/><text x="78.0374%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (117 samples, 0.31%)</title><rect x="77.7874%" y="677" width="0.3080%" height="15" fill="rgb(214,186,4)" fg:x="29553" fg:w="117"/><text x="78.0374%" y="687.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (4,135 samples, 10.88%)</title><rect x="67.2247%" y="885" width="10.8839%" height="15" fill="rgb(220,133,22)" fg:x="25540" fg:w="4135"/><text x="67.4747%" y="895.50">epoxy_server::ha..</text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (2,381 samples, 6.27%)</title><rect x="71.8414%" y="869" width="6.2671%" height="15" fill="rgb(239,134,19)" fg:x="27294" fg:w="2381"/><text x="72.0914%" y="879.50">tokio::i..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (2,381 samples, 6.27%)</title><rect x="71.8414%" y="853" width="6.2671%" height="15" fill="rgb(250,140,9)" fg:x="27294" fg:w="2381"/><text x="72.0914%" y="863.50">&lt;tokio_u..</text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (2,380 samples, 6.26%)</title><rect x="71.8441%" y="837" width="6.2645%" height="15" fill="rgb(225,59,14)" fg:x="27295" fg:w="2380"/><text x="72.0941%" y="847.50">&lt;wisp_mu..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (2,380 samples, 6.26%)</title><rect x="71.8441%" y="821" width="6.2645%" height="15" fill="rgb(214,152,51)" fg:x="27295" fg:w="2380"/><text x="72.0941%" y="831.50">&lt;futures..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (2,349 samples, 6.18%)</title><rect x="71.9257%" y="805" width="6.1829%" height="15" fill="rgb(251,227,43)" fg:x="27326" fg:w="2349"/><text x="72.1757%" y="815.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2,349 samples, 6.18%)</title><rect x="71.9257%" y="789" width="6.1829%" height="15" fill="rgb(241,96,17)" fg:x="27326" fg:w="2349"/><text x="72.1757%" y="799.50">core::pt..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2,349 samples, 6.18%)</title><rect x="71.9257%" y="773" width="6.1829%" height="15" fill="rgb(234,198,43)" fg:x="27326" fg:w="2349"/><text x="72.1757%" y="783.50">&lt;bytes::..</text></g><g><title>bytes::bytes_mut::shared_v_drop (2,307 samples, 6.07%)</title><rect x="72.0362%" y="757" width="6.0723%" height="15" fill="rgb(220,108,29)" fg:x="27368" fg:w="2307"/><text x="72.2862%" y="767.50">bytes::b..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,307 samples, 6.07%)</title><rect x="72.0362%" y="741" width="6.0723%" height="15" fill="rgb(226,163,33)" fg:x="27368" fg:w="2307"/><text x="72.2862%" y="751.50">&lt;core::s..</text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (2,307 samples, 6.07%)</title><rect x="72.0362%" y="725" width="6.0723%" height="15" fill="rgb(205,194,45)" fg:x="27368" fg:w="2307"/><text x="72.2862%" y="735.50">bytes::b..</text></g><g><title>bytes::bytes_mut::release_shared (2,307 samples, 6.07%)</title><rect x="72.0362%" y="709" width="6.0723%" height="15" fill="rgb(206,143,44)" fg:x="27368" fg:w="2307"/><text x="72.2862%" y="719.50">bytes::b..</text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="78.0954%" y="693" width="0.0132%" height="15" fill="rgb(236,136,36)" fg:x="29670" fg:w="5"/><text x="78.3454%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="78.0954%" y="677" width="0.0132%" height="15" fill="rgb(249,172,42)" fg:x="29670" fg:w="5"/><text x="78.3454%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (4 samples, 0.01%)</title><rect x="78.1875%" y="869" width="0.0105%" height="15" fill="rgb(216,139,23)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="879.50"></text></g><g><title>anyhow::error::&lt;impl core::convert::From&lt;E&gt; for anyhow::Error&gt;::from (4 samples, 0.01%)</title><rect x="78.1875%" y="853" width="0.0105%" height="15" fill="rgb(207,166,20)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="863.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::from_std (4 samples, 0.01%)</title><rect x="78.1875%" y="837" width="0.0105%" height="15" fill="rgb(210,209,22)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="847.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (4 samples, 0.01%)</title><rect x="78.1875%" y="821" width="0.0105%" height="15" fill="rgb(232,118,20)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="78.1875%" y="805" width="0.0105%" height="15" fill="rgb(238,113,42)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="78.1875%" y="789" width="0.0105%" height="15" fill="rgb(231,42,5)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="78.1875%" y="773" width="0.0105%" height="15" fill="rgb(243,166,24)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="78.1875%" y="757" width="0.0105%" height="15" fill="rgb(237,226,12)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="767.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="78.1875%" y="741" width="0.0105%" height="15" fill="rgb(229,133,24)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="751.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="78.1875%" y="725" width="0.0105%" height="15" fill="rgb(238,33,43)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="78.1875%" y="709" width="0.0105%" height="15" fill="rgb(227,59,38)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="719.50"></text></g><g><title>_rjem_je_malloc_default (4 samples, 0.01%)</title><rect x="78.1875%" y="693" width="0.0105%" height="15" fill="rgb(230,97,0)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="703.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="78.1875%" y="677" width="0.0105%" height="15" fill="rgb(250,173,50)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="687.50"></text></g><g><title>tsd_fetch (4 samples, 0.01%)</title><rect x="78.1875%" y="661" width="0.0105%" height="15" fill="rgb(240,15,50)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="671.50"></text></g><g><title>tsd_fetch_impl (4 samples, 0.01%)</title><rect x="78.1875%" y="645" width="0.0105%" height="15" fill="rgb(221,93,22)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="655.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (4 samples, 0.01%)</title><rect x="78.1875%" y="629" width="0.0105%" height="15" fill="rgb(245,180,53)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="639.50"></text></g><g><title>tsd_data_init (4 samples, 0.01%)</title><rect x="78.1875%" y="613" width="0.0105%" height="15" fill="rgb(231,88,51)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="623.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (4 samples, 0.01%)</title><rect x="78.1875%" y="597" width="0.0105%" height="15" fill="rgb(240,58,21)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="607.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (4 samples, 0.01%)</title><rect x="78.1875%" y="581" width="0.0105%" height="15" fill="rgb(237,21,10)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="591.50"></text></g><g><title>arena_choose (4 samples, 0.01%)</title><rect x="78.1875%" y="565" width="0.0105%" height="15" fill="rgb(218,43,11)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="575.50"></text></g><g><title>arena_choose_impl (4 samples, 0.01%)</title><rect x="78.1875%" y="549" width="0.0105%" height="15" fill="rgb(218,221,29)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="559.50"></text></g><g><title>_rjem_je_arena_choose_hard (4 samples, 0.01%)</title><rect x="78.1875%" y="533" width="0.0105%" height="15" fill="rgb(214,118,42)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="543.50"></text></g><g><title>arena_init_locked (4 samples, 0.01%)</title><rect x="78.1875%" y="517" width="0.0105%" height="15" fill="rgb(251,200,26)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="527.50"></text></g><g><title>_rjem_je_arena_new (4 samples, 0.01%)</title><rect x="78.1875%" y="501" width="0.0105%" height="15" fill="rgb(237,101,39)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="511.50"></text></g><g><title>_rjem_je_base_new (4 samples, 0.01%)</title><rect x="78.1875%" y="485" width="0.0105%" height="15" fill="rgb(251,117,11)" fg:x="29705" fg:w="4"/><text x="78.4375%" y="495.50"></text></g><g><title>[libc.so.6] (217 samples, 0.57%)</title><rect x="79.3351%" y="645" width="0.5712%" height="15" fill="rgb(216,223,23)" fg:x="30141" fg:w="217"/><text x="79.5851%" y="655.50"></text></g><g><title>recv (605 samples, 1.59%)</title><rect x="78.4744%" y="661" width="1.5924%" height="15" fill="rgb(251,54,12)" fg:x="29814" fg:w="605"/><text x="78.7244%" y="671.50"></text></g><g><title>[unknown] (61 samples, 0.16%)</title><rect x="79.9063%" y="645" width="0.1606%" height="15" fill="rgb(254,176,54)" fg:x="30358" fg:w="61"/><text x="80.1563%" y="655.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (613 samples, 1.61%)</title><rect x="78.4692%" y="789" width="1.6135%" height="15" fill="rgb(210,32,8)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="799.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (613 samples, 1.61%)</title><rect x="78.4692%" y="773" width="1.6135%" height="15" fill="rgb(235,52,38)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="783.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (613 samples, 1.61%)</title><rect x="78.4692%" y="757" width="1.6135%" height="15" fill="rgb(231,4,44)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="767.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (613 samples, 1.61%)</title><rect x="78.4692%" y="741" width="1.6135%" height="15" fill="rgb(249,2,32)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="751.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (613 samples, 1.61%)</title><rect x="78.4692%" y="725" width="1.6135%" height="15" fill="rgb(224,65,26)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (613 samples, 1.61%)</title><rect x="78.4692%" y="709" width="1.6135%" height="15" fill="rgb(250,73,40)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="719.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (613 samples, 1.61%)</title><rect x="78.4692%" y="693" width="1.6135%" height="15" fill="rgb(253,177,16)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="703.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (613 samples, 1.61%)</title><rect x="78.4692%" y="677" width="1.6135%" height="15" fill="rgb(217,32,34)" fg:x="29812" fg:w="613"/><text x="78.7192%" y="687.50"></text></g><g><title>std::sys::pal::unix::cvt (6 samples, 0.02%)</title><rect x="80.0669%" y="661" width="0.0158%" height="15" fill="rgb(212,7,10)" fg:x="30419" fg:w="6"/><text x="80.3169%" y="671.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (4 samples, 0.01%)</title><rect x="80.0721%" y="645" width="0.0105%" height="15" fill="rgb(245,89,8)" fg:x="30421" fg:w="4"/><text x="80.3221%" y="655.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (7 samples, 0.02%)</title><rect x="80.0853%" y="789" width="0.0184%" height="15" fill="rgb(237,16,53)" fg:x="30426" fg:w="7"/><text x="80.3353%" y="799.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (5 samples, 0.01%)</title><rect x="80.0905%" y="773" width="0.0132%" height="15" fill="rgb(250,204,30)" fg:x="30428" fg:w="5"/><text x="80.3405%" y="783.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (4 samples, 0.01%)</title><rect x="80.1037%" y="789" width="0.0105%" height="15" fill="rgb(208,77,27)" fg:x="30433" fg:w="4"/><text x="80.3537%" y="799.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (4 samples, 0.01%)</title><rect x="80.1142%" y="789" width="0.0105%" height="15" fill="rgb(250,204,28)" fg:x="30437" fg:w="4"/><text x="80.3642%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="80.1800%" y="709" width="0.0237%" height="15" fill="rgb(244,63,21)" fg:x="30462" fg:w="9"/><text x="80.4300%" y="719.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (9 samples, 0.02%)</title><rect x="80.1800%" y="693" width="0.0237%" height="15" fill="rgb(236,85,44)" fg:x="30462" fg:w="9"/><text x="80.4300%" y="703.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="80.1800%" y="677" width="0.0237%" height="15" fill="rgb(215,98,4)" fg:x="30462" fg:w="9"/><text x="80.4300%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (6 samples, 0.02%)</title><rect x="80.1879%" y="661" width="0.0158%" height="15" fill="rgb(235,38,11)" fg:x="30465" fg:w="6"/><text x="80.4379%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (5 samples, 0.01%)</title><rect x="80.2248%" y="677" width="0.0132%" height="15" fill="rgb(254,186,25)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="687.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (5 samples, 0.01%)</title><rect x="80.2248%" y="661" width="0.0132%" height="15" fill="rgb(225,55,31)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (5 samples, 0.01%)</title><rect x="80.2248%" y="645" width="0.0132%" height="15" fill="rgb(211,15,21)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (5 samples, 0.01%)</title><rect x="80.2248%" y="629" width="0.0132%" height="15" fill="rgb(215,187,41)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.01%)</title><rect x="80.2248%" y="613" width="0.0132%" height="15" fill="rgb(248,69,32)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="623.50"></text></g><g><title>tokio::runtime::task::state::State::load (5 samples, 0.01%)</title><rect x="80.2248%" y="597" width="0.0132%" height="15" fill="rgb(252,102,52)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="80.2248%" y="581" width="0.0132%" height="15" fill="rgb(253,140,32)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="80.2248%" y="565" width="0.0132%" height="15" fill="rgb(216,56,42)" fg:x="30479" fg:w="5"/><text x="80.4748%" y="575.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (29 samples, 0.08%)</title><rect x="80.1695%" y="757" width="0.0763%" height="15" fill="rgb(216,184,14)" fg:x="30458" fg:w="29"/><text x="80.4195%" y="767.50"></text></g><g><title>tokio::runtime::context::budget (29 samples, 0.08%)</title><rect x="80.1695%" y="741" width="0.0763%" height="15" fill="rgb(237,187,27)" fg:x="30458" fg:w="29"/><text x="80.4195%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.08%)</title><rect x="80.1695%" y="725" width="0.0763%" height="15" fill="rgb(219,65,3)" fg:x="30458" fg:w="29"/><text x="80.4195%" y="735.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (16 samples, 0.04%)</title><rect x="80.2037%" y="709" width="0.0421%" height="15" fill="rgb(245,83,25)" fg:x="30471" fg:w="16"/><text x="80.4537%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (16 samples, 0.04%)</title><rect x="80.2037%" y="693" width="0.0421%" height="15" fill="rgb(214,205,45)" fg:x="30471" fg:w="16"/><text x="80.4537%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (55 samples, 0.14%)</title><rect x="80.2616%" y="741" width="0.1448%" height="15" fill="rgb(241,20,18)" fg:x="30493" fg:w="55"/><text x="80.5116%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (55 samples, 0.14%)</title><rect x="80.2616%" y="725" width="0.1448%" height="15" fill="rgb(232,163,23)" fg:x="30493" fg:w="55"/><text x="80.5116%" y="735.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (807 samples, 2.12%)</title><rect x="78.2875%" y="837" width="2.1241%" height="15" fill="rgb(214,5,46)" fg:x="29743" fg:w="807"/><text x="78.5375%" y="847.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (800 samples, 2.11%)</title><rect x="78.3060%" y="821" width="2.1057%" height="15" fill="rgb(229,78,17)" fg:x="29750" fg:w="800"/><text x="78.5560%" y="831.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (749 samples, 1.97%)</title><rect x="78.4402%" y="805" width="1.9715%" height="15" fill="rgb(248,89,10)" fg:x="29801" fg:w="749"/><text x="78.6902%" y="815.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (109 samples, 0.29%)</title><rect x="80.1248%" y="789" width="0.2869%" height="15" fill="rgb(248,54,15)" fg:x="30441" fg:w="109"/><text x="80.3748%" y="799.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (103 samples, 0.27%)</title><rect x="80.1406%" y="773" width="0.2711%" height="15" fill="rgb(223,116,6)" fg:x="30447" fg:w="103"/><text x="80.3906%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (63 samples, 0.17%)</title><rect x="80.2458%" y="757" width="0.1658%" height="15" fill="rgb(205,125,38)" fg:x="30487" fg:w="63"/><text x="80.4958%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="80.4117%" y="837" width="0.0132%" height="15" fill="rgb(251,78,38)" fg:x="30550" fg:w="5"/><text x="80.6617%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="80.4117%" y="821" width="0.0132%" height="15" fill="rgb(253,78,28)" fg:x="30550" fg:w="5"/><text x="80.6617%" y="831.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (10 samples, 0.03%)</title><rect x="80.4248%" y="837" width="0.0263%" height="15" fill="rgb(209,120,3)" fg:x="30555" fg:w="10"/><text x="80.6748%" y="847.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (862 samples, 2.27%)</title><rect x="78.1980%" y="853" width="2.2689%" height="15" fill="rgb(238,229,9)" fg:x="29709" fg:w="862"/><text x="78.4480%" y="863.50">&lt;..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (6 samples, 0.02%)</title><rect x="80.4511%" y="837" width="0.0158%" height="15" fill="rgb(253,159,18)" fg:x="30565" fg:w="6"/><text x="80.7011%" y="847.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (869 samples, 2.29%)</title><rect x="78.1980%" y="869" width="2.2873%" height="15" fill="rgb(244,42,34)" fg:x="29709" fg:w="869"/><text x="78.4480%" y="879.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::take (7 samples, 0.02%)</title><rect x="80.4669%" y="853" width="0.0184%" height="15" fill="rgb(224,8,7)" fg:x="30571" fg:w="7"/><text x="80.7169%" y="863.50"></text></g><g><title>core::mem::replace (7 samples, 0.02%)</title><rect x="80.4669%" y="837" width="0.0184%" height="15" fill="rgb(210,201,45)" fg:x="30571" fg:w="7"/><text x="80.7169%" y="847.50"></text></g><g><title>core::ptr::write (7 samples, 0.02%)</title><rect x="80.4669%" y="821" width="0.0184%" height="15" fill="rgb(252,185,21)" fg:x="30571" fg:w="7"/><text x="80.7169%" y="831.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (16 samples, 0.04%)</title><rect x="80.4854%" y="869" width="0.0421%" height="15" fill="rgb(223,131,1)" fg:x="30578" fg:w="16"/><text x="80.7354%" y="879.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (16 samples, 0.04%)</title><rect x="80.4854%" y="853" width="0.0421%" height="15" fill="rgb(245,141,16)" fg:x="30578" fg:w="16"/><text x="80.7354%" y="863.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (42 samples, 0.11%)</title><rect x="80.9065%" y="853" width="0.1105%" height="15" fill="rgb(229,55,45)" fg:x="30738" fg:w="42"/><text x="81.1565%" y="863.50"></text></g><g><title>_ZN4core3ptr1130drop_in_place$LT$wisp_mux..stream..MuxStreamWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_payload..$u7b$$u7b$closure$u7d$$u7d$$GT$17h3ec77e9df425dc40E (6 samples, 0.02%)</title><rect x="81.0171%" y="853" width="0.0158%" height="15" fill="rgb(208,92,15)" fg:x="30780" fg:w="6"/><text x="81.2671%" y="863.50"></text></g><g><title>_ZN4core3ptr1139drop_in_place$LT$wisp_mux..stream..MuxStreamWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_payload_internal..$u7b$$u7b$closure$u7d$$u7d$$GT$17h1e1f16b307ada95fE (8 samples, 0.02%)</title><rect x="81.3408%" y="837" width="0.0211%" height="15" fill="rgb(234,185,47)" fg:x="30903" fg:w="8"/><text x="81.5908%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::new (5 samples, 0.01%)</title><rect x="81.3619%" y="837" width="0.0132%" height="15" fill="rgb(253,104,50)" fg:x="30911" fg:w="5"/><text x="81.6119%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (5 samples, 0.01%)</title><rect x="81.3619%" y="821" width="0.0132%" height="15" fill="rgb(205,70,7)" fg:x="30911" fg:w="5"/><text x="81.6119%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (5 samples, 0.01%)</title><rect x="81.3619%" y="805" width="0.0132%" height="15" fill="rgb(240,178,43)" fg:x="30911" fg:w="5"/><text x="81.6119%" y="815.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="81.4619%" y="773" width="0.0158%" height="15" fill="rgb(214,112,2)" fg:x="30949" fg:w="6"/><text x="81.7119%" y="783.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (25 samples, 0.07%)</title><rect x="81.4777%" y="757" width="0.0658%" height="15" fill="rgb(206,46,17)" fg:x="30955" fg:w="25"/><text x="81.7277%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (6 samples, 0.02%)</title><rect x="81.5435%" y="757" width="0.0158%" height="15" fill="rgb(225,220,16)" fg:x="30980" fg:w="6"/><text x="81.7935%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::capacity (5 samples, 0.01%)</title><rect x="81.5461%" y="741" width="0.0132%" height="15" fill="rgb(238,65,40)" fg:x="30981" fg:w="5"/><text x="81.7961%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (189 samples, 0.50%)</title><rect x="81.4777%" y="773" width="0.4975%" height="15" fill="rgb(230,151,21)" fg:x="30955" fg:w="189"/><text x="81.7277%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (157 samples, 0.41%)</title><rect x="81.5619%" y="757" width="0.4132%" height="15" fill="rgb(218,58,49)" fg:x="30987" fg:w="157"/><text x="81.8119%" y="767.50"></text></g><g><title>[libc.so.6] (154 samples, 0.41%)</title><rect x="81.5698%" y="741" width="0.4053%" height="15" fill="rgb(219,179,14)" fg:x="30990" fg:w="154"/><text x="81.8198%" y="751.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (209 samples, 0.55%)</title><rect x="81.4303%" y="789" width="0.5501%" height="15" fill="rgb(223,72,1)" fg:x="30937" fg:w="209"/><text x="81.6803%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (4 samples, 0.01%)</title><rect x="81.9857%" y="741" width="0.0105%" height="15" fill="rgb(238,126,10)" fg:x="31148" fg:w="4"/><text x="82.2357%" y="751.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32_le (8 samples, 0.02%)</title><rect x="81.9804%" y="789" width="0.0211%" height="15" fill="rgb(224,206,38)" fg:x="31146" fg:w="8"/><text x="82.2304%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (8 samples, 0.02%)</title><rect x="81.9804%" y="773" width="0.0211%" height="15" fill="rgb(212,201,54)" fg:x="31146" fg:w="8"/><text x="82.2304%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (8 samples, 0.02%)</title><rect x="81.9804%" y="757" width="0.0211%" height="15" fill="rgb(218,154,48)" fg:x="31146" fg:w="8"/><text x="82.2304%" y="767.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (4 samples, 0.01%)</title><rect x="82.0015%" y="741" width="0.0105%" height="15" fill="rgb(232,93,24)" fg:x="31154" fg:w="4"/><text x="82.2515%" y="751.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (34 samples, 0.09%)</title><rect x="82.0015%" y="789" width="0.0895%" height="15" fill="rgb(245,30,21)" fg:x="31154" fg:w="34"/><text x="82.2515%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (34 samples, 0.09%)</title><rect x="82.0015%" y="773" width="0.0895%" height="15" fill="rgb(242,148,29)" fg:x="31154" fg:w="34"/><text x="82.2515%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (34 samples, 0.09%)</title><rect x="82.0015%" y="757" width="0.0895%" height="15" fill="rgb(244,153,54)" fg:x="31154" fg:w="34"/><text x="82.2515%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.08%)</title><rect x="82.0120%" y="741" width="0.0790%" height="15" fill="rgb(252,87,22)" fg:x="31158" fg:w="30"/><text x="82.2620%" y="751.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (252 samples, 0.66%)</title><rect x="81.4303%" y="805" width="0.6633%" height="15" fill="rgb(210,51,29)" fg:x="30937" fg:w="252"/><text x="81.6803%" y="815.50"></text></g><g><title>cache_bin_alloc_easy (89 samples, 0.23%)</title><rect x="82.7569%" y="597" width="0.2343%" height="15" fill="rgb(242,136,47)" fg:x="31441" fg:w="89"/><text x="83.0069%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (89 samples, 0.23%)</title><rect x="82.7569%" y="581" width="0.2343%" height="15" fill="rgb(238,68,4)" fg:x="31441" fg:w="89"/><text x="83.0069%" y="591.50"></text></g><g><title>sz_index2size_lookup_impl (91 samples, 0.24%)</title><rect x="82.9964%" y="581" width="0.2395%" height="15" fill="rgb(242,161,30)" fg:x="31532" fg:w="91"/><text x="83.2464%" y="591.50"></text></g><g><title>sz_size2index_usize_fastpath (92 samples, 0.24%)</title><rect x="82.9964%" y="597" width="0.2422%" height="15" fill="rgb(218,58,44)" fg:x="31532" fg:w="92"/><text x="83.2464%" y="607.50"></text></g><g><title>__rust_alloc (435 samples, 1.14%)</title><rect x="82.0962%" y="661" width="1.1450%" height="15" fill="rgb(252,125,32)" fg:x="31190" fg:w="435"/><text x="82.3462%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (435 samples, 1.14%)</title><rect x="82.0962%" y="645" width="1.1450%" height="15" fill="rgb(219,178,0)" fg:x="31190" fg:w="435"/><text x="82.3462%" y="655.50"></text></g><g><title>_rjem_malloc (431 samples, 1.13%)</title><rect x="82.1068%" y="629" width="1.1344%" height="15" fill="rgb(213,152,7)" fg:x="31194" fg:w="431"/><text x="82.3568%" y="639.50"></text></g><g><title>imalloc_fastpath (431 samples, 1.13%)</title><rect x="82.1068%" y="613" width="1.1344%" height="15" fill="rgb(249,109,34)" fg:x="31194" fg:w="431"/><text x="82.3568%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (445 samples, 1.17%)</title><rect x="82.0936%" y="789" width="1.1713%" height="15" fill="rgb(232,96,21)" fg:x="31189" fg:w="445"/><text x="82.3436%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (445 samples, 1.17%)</title><rect x="82.0936%" y="773" width="1.1713%" height="15" fill="rgb(228,27,39)" fg:x="31189" fg:w="445"/><text x="82.3436%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (445 samples, 1.17%)</title><rect x="82.0936%" y="757" width="1.1713%" height="15" fill="rgb(211,182,52)" fg:x="31189" fg:w="445"/><text x="82.3436%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (445 samples, 1.17%)</title><rect x="82.0936%" y="741" width="1.1713%" height="15" fill="rgb(234,178,38)" fg:x="31189" fg:w="445"/><text x="82.3436%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (445 samples, 1.17%)</title><rect x="82.0936%" y="725" width="1.1713%" height="15" fill="rgb(221,111,3)" fg:x="31189" fg:w="445"/><text x="82.3436%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (444 samples, 1.17%)</title><rect x="82.0962%" y="709" width="1.1687%" height="15" fill="rgb(228,175,21)" fg:x="31190" fg:w="444"/><text x="82.3462%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (444 samples, 1.17%)</title><rect x="82.0962%" y="693" width="1.1687%" height="15" fill="rgb(228,174,43)" fg:x="31190" fg:w="444"/><text x="82.3462%" y="703.50"></text></g><g><title>alloc::alloc::alloc (444 samples, 1.17%)</title><rect x="82.0962%" y="677" width="1.1687%" height="15" fill="rgb(211,191,0)" fg:x="31190" fg:w="444"/><text x="82.3462%" y="687.50"></text></g><g><title>core::ptr::read_volatile (9 samples, 0.02%)</title><rect x="83.2412%" y="661" width="0.0237%" height="15" fill="rgb(253,117,3)" fg:x="31625" fg:w="9"/><text x="83.4912%" y="671.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="83.2991%" y="757" width="0.0105%" height="15" fill="rgb(241,127,19)" fg:x="31647" fg:w="4"/><text x="83.5491%" y="767.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="83.2991%" y="741" width="0.0105%" height="15" fill="rgb(218,103,12)" fg:x="31647" fg:w="4"/><text x="83.5491%" y="751.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="83.2991%" y="725" width="0.0105%" height="15" fill="rgb(236,214,43)" fg:x="31647" fg:w="4"/><text x="83.5491%" y="735.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (463 samples, 1.22%)</title><rect x="82.0936%" y="805" width="1.2187%" height="15" fill="rgb(244,144,19)" fg:x="31189" fg:w="463"/><text x="82.3436%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (18 samples, 0.05%)</title><rect x="83.2649%" y="789" width="0.0474%" height="15" fill="rgb(246,188,10)" fg:x="31634" fg:w="18"/><text x="83.5149%" y="799.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (12 samples, 0.03%)</title><rect x="83.2807%" y="773" width="0.0316%" height="15" fill="rgb(212,193,33)" fg:x="31640" fg:w="12"/><text x="83.5307%" y="783.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (779 samples, 2.05%)</title><rect x="81.3750%" y="821" width="2.0504%" height="15" fill="rgb(241,51,29)" fg:x="30916" fg:w="779"/><text x="81.6250%" y="831.50">w..</text></g><g><title>wisp_mux::packet::PacketType::get_packet_size (43 samples, 0.11%)</title><rect x="83.3123%" y="805" width="0.1132%" height="15" fill="rgb(211,58,19)" fg:x="31652" fg:w="43"/><text x="83.5623%" y="815.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="83.4070%" y="789" width="0.0184%" height="15" fill="rgb(229,111,26)" fg:x="31688" fg:w="7"/><text x="83.6570%" y="799.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (780 samples, 2.05%)</title><rect x="81.3750%" y="837" width="2.0531%" height="15" fill="rgb(213,115,40)" fg:x="30916" fg:w="780"/><text x="81.6250%" y="847.50">w..</text></g><g><title>wisp_mux::packet::Packet::new_data (6 samples, 0.02%)</title><rect x="83.4281%" y="837" width="0.0158%" height="15" fill="rgb(209,56,44)" fg:x="31696" fg:w="6"/><text x="83.6781%" y="847.50"></text></g><g><title>&lt;wisp_mux::Role as core::cmp::PartialEq&gt;::eq (15 samples, 0.04%)</title><rect x="84.1019%" y="821" width="0.0395%" height="15" fill="rgb(230,108,32)" fg:x="31952" fg:w="15"/><text x="84.3519%" y="831.50"></text></g><g><title>_ZN4core3ptr1130drop_in_place$LT$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17ha733a0e4ab631cc6E (7 samples, 0.02%)</title><rect x="84.1414%" y="821" width="0.0184%" height="15" fill="rgb(216,165,31)" fg:x="31967" fg:w="7"/><text x="84.3914%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (63 samples, 0.17%)</title><rect x="84.1598%" y="821" width="0.1658%" height="15" fill="rgb(218,122,21)" fg:x="31974" fg:w="63"/><text x="84.4098%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (63 samples, 0.17%)</title><rect x="84.1598%" y="805" width="0.1658%" height="15" fill="rgb(223,224,47)" fg:x="31974" fg:w="63"/><text x="84.4098%" y="815.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (190 samples, 0.50%)</title><rect x="84.7678%" y="805" width="0.5001%" height="15" fill="rgb(238,102,44)" fg:x="32205" fg:w="190"/><text x="85.0178%" y="815.50"></text></g><g><title>[libc.so.6] (189 samples, 0.50%)</title><rect x="84.7705%" y="789" width="0.4975%" height="15" fill="rgb(236,46,40)" fg:x="32206" fg:w="189"/><text x="85.0205%" y="799.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.01%)</title><rect x="85.2680%" y="805" width="0.0105%" height="15" fill="rgb(247,202,50)" fg:x="32395" fg:w="4"/><text x="85.5180%" y="815.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="85.2680%" y="789" width="0.0105%" height="15" fill="rgb(209,99,20)" fg:x="32395" fg:w="4"/><text x="85.5180%" y="799.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="85.3206%" y="789" width="0.0211%" height="15" fill="rgb(252,27,34)" fg:x="32415" fg:w="8"/><text x="85.5706%" y="799.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (7 samples, 0.02%)</title><rect x="85.3232%" y="773" width="0.0184%" height="15" fill="rgb(215,206,23)" fg:x="32416" fg:w="7"/><text x="85.5732%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (4 samples, 0.01%)</title><rect x="85.3311%" y="757" width="0.0105%" height="15" fill="rgb(212,135,36)" fg:x="32419" fg:w="4"/><text x="85.5811%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.01%)</title><rect x="85.3311%" y="741" width="0.0105%" height="15" fill="rgb(240,189,1)" fg:x="32419" fg:w="4"/><text x="85.5811%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.01%)</title><rect x="85.3311%" y="725" width="0.0105%" height="15" fill="rgb(242,56,20)" fg:x="32419" fg:w="4"/><text x="85.5811%" y="735.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::IndexMut&lt;usize&gt;&gt;::index_mut (8 samples, 0.02%)</title><rect x="85.3417%" y="789" width="0.0211%" height="15" fill="rgb(247,132,33)" fg:x="32423" fg:w="8"/><text x="85.5917%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="85.3627%" y="789" width="0.0132%" height="15" fill="rgb(208,149,11)" fg:x="32431" fg:w="5"/><text x="85.6127%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="85.3627%" y="773" width="0.0132%" height="15" fill="rgb(211,33,11)" fg:x="32431" fg:w="5"/><text x="85.6127%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="85.4048%" y="773" width="0.0105%" height="15" fill="rgb(221,29,38)" fg:x="32447" fg:w="4"/><text x="85.6548%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="85.4048%" y="757" width="0.0105%" height="15" fill="rgb(206,182,49)" fg:x="32447" fg:w="4"/><text x="85.6548%" y="767.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (20 samples, 0.05%)</title><rect x="85.3785%" y="789" width="0.0526%" height="15" fill="rgb(216,140,1)" fg:x="32437" fg:w="20"/><text x="85.6285%" y="799.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (6 samples, 0.02%)</title><rect x="85.4154%" y="773" width="0.0158%" height="15" fill="rgb(232,57,40)" fg:x="32451" fg:w="6"/><text x="85.6654%" y="783.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (6 samples, 0.02%)</title><rect x="85.4154%" y="757" width="0.0158%" height="15" fill="rgb(224,186,18)" fg:x="32451" fg:w="6"/><text x="85.6654%" y="767.50"></text></g><g><title>core::mem::replace (6 samples, 0.02%)</title><rect x="85.4154%" y="741" width="0.0158%" height="15" fill="rgb(215,121,11)" fg:x="32451" fg:w="6"/><text x="85.6654%" y="751.50"></text></g><g><title>core::ptr::read (6 samples, 0.02%)</title><rect x="85.4154%" y="725" width="0.0158%" height="15" fill="rgb(245,147,10)" fg:x="32451" fg:w="6"/><text x="85.6654%" y="735.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (120 samples, 0.32%)</title><rect x="85.4311%" y="789" width="0.3159%" height="15" fill="rgb(238,153,13)" fg:x="32457" fg:w="120"/><text x="85.6811%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (120 samples, 0.32%)</title><rect x="85.4311%" y="773" width="0.3159%" height="15" fill="rgb(233,108,0)" fg:x="32457" fg:w="120"/><text x="85.6811%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (120 samples, 0.32%)</title><rect x="85.4311%" y="757" width="0.3159%" height="15" fill="rgb(212,157,17)" fg:x="32457" fg:w="120"/><text x="85.6811%" y="767.50"></text></g><g><title>futures_util::lock::mutex::Waiter::register (7 samples, 0.02%)</title><rect x="85.7470%" y="789" width="0.0184%" height="15" fill="rgb(225,213,38)" fg:x="32577" fg:w="7"/><text x="85.9970%" y="799.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="85.7496%" y="773" width="0.0158%" height="15" fill="rgb(248,16,11)" fg:x="32578" fg:w="6"/><text x="85.9996%" y="783.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (6 samples, 0.02%)</title><rect x="85.7496%" y="757" width="0.0158%" height="15" fill="rgb(241,33,4)" fg:x="32578" fg:w="6"/><text x="85.9996%" y="767.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (11 samples, 0.03%)</title><rect x="85.7654%" y="789" width="0.0290%" height="15" fill="rgb(222,26,43)" fg:x="32584" fg:w="11"/><text x="86.0154%" y="799.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (11 samples, 0.03%)</title><rect x="85.7654%" y="773" width="0.0290%" height="15" fill="rgb(243,29,36)" fg:x="32584" fg:w="11"/><text x="86.0154%" y="783.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (204 samples, 0.54%)</title><rect x="85.2785%" y="805" width="0.5370%" height="15" fill="rgb(241,9,27)" fg:x="32399" fg:w="204"/><text x="85.5285%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="85.7944%" y="789" width="0.0211%" height="15" fill="rgb(205,117,26)" fg:x="32595" fg:w="8"/><text x="86.0444%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7 samples, 0.02%)</title><rect x="85.7970%" y="773" width="0.0184%" height="15" fill="rgb(209,80,39)" fg:x="32596" fg:w="7"/><text x="86.0470%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (7 samples, 0.02%)</title><rect x="85.7970%" y="757" width="0.0184%" height="15" fill="rgb(239,155,6)" fg:x="32596" fg:w="7"/><text x="86.0470%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.02%)</title><rect x="85.7970%" y="741" width="0.0184%" height="15" fill="rgb(212,104,12)" fg:x="32596" fg:w="7"/><text x="86.0470%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (29 samples, 0.08%)</title><rect x="85.9365%" y="789" width="0.0763%" height="15" fill="rgb(234,204,3)" fg:x="32649" fg:w="29"/><text x="86.1865%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.07%)</title><rect x="86.7814%" y="773" width="0.0658%" height="15" fill="rgb(251,218,7)" fg:x="32970" fg:w="25"/><text x="87.0314%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;::write_frame::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="86.8499%" y="773" width="0.0237%" height="15" fill="rgb(221,81,32)" fg:x="32996" fg:w="9"/><text x="87.0999%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (7 samples, 0.02%)</title><rect x="87.2184%" y="757" width="0.0184%" height="15" fill="rgb(214,152,26)" fg:x="33136" fg:w="7"/><text x="87.4684%" y="767.50"></text></g><g><title>&lt;fastwebsockets::Role as core::cmp::PartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="87.5290%" y="741" width="0.0368%" height="15" fill="rgb(223,22,3)" fg:x="33254" fg:w="14"/><text x="87.7790%" y="751.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (67 samples, 0.18%)</title><rect x="87.5658%" y="741" width="0.1764%" height="15" fill="rgb(207,174,7)" fg:x="33268" fg:w="67"/><text x="87.8158%" y="751.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="87.7422%" y="741" width="0.0237%" height="15" fill="rgb(224,19,52)" fg:x="33335" fg:w="9"/><text x="87.9922%" y="751.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (42 samples, 0.11%)</title><rect x="87.9159%" y="709" width="0.1105%" height="15" fill="rgb(228,24,14)" fg:x="33401" fg:w="42"/><text x="88.1659%" y="719.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (8 samples, 0.02%)</title><rect x="88.0054%" y="693" width="0.0211%" height="15" fill="rgb(230,153,43)" fg:x="33435" fg:w="8"/><text x="88.2554%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="88.0106%" y="677" width="0.0158%" height="15" fill="rgb(231,106,12)" fg:x="33437" fg:w="6"/><text x="88.2606%" y="687.50"></text></g><g><title>[libc.so.6] (193 samples, 0.51%)</title><rect x="88.6318%" y="565" width="0.5080%" height="15" fill="rgb(215,92,2)" fg:x="33673" fg:w="193"/><text x="88.8818%" y="575.50"></text></g><g><title>__send (407 samples, 1.07%)</title><rect x="88.2001%" y="581" width="1.0713%" height="15" fill="rgb(249,143,25)" fg:x="33509" fg:w="407"/><text x="88.4501%" y="591.50"></text></g><g><title>[unknown] (50 samples, 0.13%)</title><rect x="89.1398%" y="565" width="0.1316%" height="15" fill="rgb(252,7,35)" fg:x="33866" fg:w="50"/><text x="89.3898%" y="575.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (462 samples, 1.22%)</title><rect x="88.1975%" y="677" width="1.2160%" height="15" fill="rgb(216,69,40)" fg:x="33508" fg:w="462"/><text x="88.4475%" y="687.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (462 samples, 1.22%)</title><rect x="88.1975%" y="661" width="1.2160%" height="15" fill="rgb(240,36,33)" fg:x="33508" fg:w="462"/><text x="88.4475%" y="671.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (462 samples, 1.22%)</title><rect x="88.1975%" y="645" width="1.2160%" height="15" fill="rgb(231,128,14)" fg:x="33508" fg:w="462"/><text x="88.4475%" y="655.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (462 samples, 1.22%)</title><rect x="88.1975%" y="629" width="1.2160%" height="15" fill="rgb(245,143,14)" fg:x="33508" fg:w="462"/><text x="88.4475%" y="639.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (462 samples, 1.22%)</title><rect x="88.1975%" y="613" width="1.2160%" height="15" fill="rgb(222,130,28)" fg:x="33508" fg:w="462"/><text x="88.4475%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (462 samples, 1.22%)</title><rect x="88.1975%" y="597" width="1.2160%" height="15" fill="rgb(212,10,48)" fg:x="33508" fg:w="462"/><text x="88.4475%" y="607.50"></text></g><g><title>std::sys::pal::unix::cvt (54 samples, 0.14%)</title><rect x="89.2714%" y="581" width="0.1421%" height="15" fill="rgb(254,118,45)" fg:x="33916" fg:w="54"/><text x="89.5214%" y="591.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (54 samples, 0.14%)</title><rect x="89.2714%" y="565" width="0.1421%" height="15" fill="rgb(228,6,45)" fg:x="33916" fg:w="54"/><text x="89.5214%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="89.4557%" y="597" width="0.0158%" height="15" fill="rgb(241,18,35)" fg:x="33986" fg:w="6"/><text x="89.7057%" y="607.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (6 samples, 0.02%)</title><rect x="89.4557%" y="581" width="0.0158%" height="15" fill="rgb(227,214,53)" fg:x="33986" fg:w="6"/><text x="89.7057%" y="591.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (6 samples, 0.02%)</title><rect x="89.4557%" y="565" width="0.0158%" height="15" fill="rgb(224,107,51)" fg:x="33986" fg:w="6"/><text x="89.7057%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="89.4583%" y="549" width="0.0132%" height="15" fill="rgb(248,60,28)" fg:x="33987" fg:w="5"/><text x="89.7083%" y="559.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (20 samples, 0.05%)</title><rect x="89.4557%" y="645" width="0.0526%" height="15" fill="rgb(249,101,23)" fg:x="33986" fg:w="20"/><text x="89.7057%" y="655.50"></text></g><g><title>tokio::runtime::context::budget (20 samples, 0.05%)</title><rect x="89.4557%" y="629" width="0.0526%" height="15" fill="rgb(228,51,19)" fg:x="33986" fg:w="20"/><text x="89.7057%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.05%)</title><rect x="89.4557%" y="613" width="0.0526%" height="15" fill="rgb(213,20,6)" fg:x="33986" fg:w="20"/><text x="89.7057%" y="623.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (14 samples, 0.04%)</title><rect x="89.4715%" y="597" width="0.0368%" height="15" fill="rgb(212,124,10)" fg:x="33992" fg:w="14"/><text x="89.7215%" y="607.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (14 samples, 0.04%)</title><rect x="89.4715%" y="581" width="0.0368%" height="15" fill="rgb(248,3,40)" fg:x="33992" fg:w="14"/><text x="89.7215%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (111 samples, 0.29%)</title><rect x="89.5241%" y="629" width="0.2922%" height="15" fill="rgb(223,178,23)" fg:x="34012" fg:w="111"/><text x="89.7741%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (111 samples, 0.29%)</title><rect x="89.5241%" y="613" width="0.2922%" height="15" fill="rgb(240,132,45)" fg:x="34012" fg:w="111"/><text x="89.7741%" y="623.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (723 samples, 1.90%)</title><rect x="87.9159%" y="725" width="1.9030%" height="15" fill="rgb(245,164,36)" fg:x="33401" fg:w="723"/><text x="88.1659%" y="735.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (681 samples, 1.79%)</title><rect x="88.0264%" y="709" width="1.7925%" height="15" fill="rgb(231,188,53)" fg:x="33443" fg:w="681"/><text x="88.2764%" y="719.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (654 samples, 1.72%)</title><rect x="88.0975%" y="693" width="1.7214%" height="15" fill="rgb(237,198,39)" fg:x="33470" fg:w="654"/><text x="88.3475%" y="703.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (153 samples, 0.40%)</title><rect x="89.4162%" y="677" width="0.4027%" height="15" fill="rgb(223,120,35)" fg:x="33971" fg:w="153"/><text x="89.6662%" y="687.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (149 samples, 0.39%)</title><rect x="89.4267%" y="661" width="0.3922%" height="15" fill="rgb(253,107,49)" fg:x="33975" fg:w="149"/><text x="89.6767%" y="671.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (118 samples, 0.31%)</title><rect x="89.5083%" y="645" width="0.3106%" height="15" fill="rgb(216,44,31)" fg:x="34006" fg:w="118"/><text x="89.7583%" y="655.50"></text></g><g><title>core::ptr::read (28 samples, 0.07%)</title><rect x="89.8215%" y="693" width="0.0737%" height="15" fill="rgb(253,87,21)" fg:x="34125" fg:w="28"/><text x="90.0715%" y="703.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (818 samples, 2.15%)</title><rect x="87.7658%" y="741" width="2.1531%" height="15" fill="rgb(226,18,2)" fg:x="33344" fg:w="818"/><text x="88.0158%" y="751.50">&lt;..</text></g><g><title>core::mem::take (37 samples, 0.10%)</title><rect x="89.8215%" y="725" width="0.0974%" height="15" fill="rgb(216,8,46)" fg:x="34125" fg:w="37"/><text x="90.0715%" y="735.50"></text></g><g><title>core::mem::replace (37 samples, 0.10%)</title><rect x="89.8215%" y="709" width="0.0974%" height="15" fill="rgb(226,140,39)" fg:x="34125" fg:w="37"/><text x="90.0715%" y="719.50"></text></g><g><title>core::ptr::write (9 samples, 0.02%)</title><rect x="89.8952%" y="693" width="0.0237%" height="15" fill="rgb(221,194,54)" fg:x="34153" fg:w="9"/><text x="90.1452%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (12 samples, 0.03%)</title><rect x="90.0374%" y="677" width="0.0316%" height="15" fill="rgb(213,92,11)" fg:x="34207" fg:w="12"/><text x="90.2874%" y="687.50"></text></g><g><title>cache_bin_dalloc_easy (35 samples, 0.09%)</title><rect x="90.5322%" y="517" width="0.0921%" height="15" fill="rgb(229,162,46)" fg:x="34395" fg:w="35"/><text x="90.7822%" y="527.50"></text></g><g><title>cache_bin_full (6 samples, 0.02%)</title><rect x="90.6085%" y="501" width="0.0158%" height="15" fill="rgb(214,111,36)" fg:x="34424" fg:w="6"/><text x="90.8585%" y="511.50"></text></g><g><title>sz_index2size (23 samples, 0.06%)</title><rect x="90.6243%" y="517" width="0.0605%" height="15" fill="rgb(207,6,21)" fg:x="34430" fg:w="23"/><text x="90.8743%" y="527.50"></text></g><g><title>sz_index2size_lookup (23 samples, 0.06%)</title><rect x="90.6243%" y="501" width="0.0605%" height="15" fill="rgb(213,127,38)" fg:x="34430" fg:w="23"/><text x="90.8743%" y="511.50"></text></g><g><title>sz_index2size_lookup_impl (23 samples, 0.06%)</title><rect x="90.6243%" y="485" width="0.0605%" height="15" fill="rgb(238,118,32)" fg:x="34430" fg:w="23"/><text x="90.8743%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (236 samples, 0.62%)</title><rect x="90.0716%" y="613" width="0.6212%" height="15" fill="rgb(240,139,39)" fg:x="34220" fg:w="236"/><text x="90.3216%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (236 samples, 0.62%)</title><rect x="90.0716%" y="597" width="0.6212%" height="15" fill="rgb(235,10,37)" fg:x="34220" fg:w="236"/><text x="90.3216%" y="607.50"></text></g><g><title>__rust_dealloc (236 samples, 0.62%)</title><rect x="90.0716%" y="581" width="0.6212%" height="15" fill="rgb(249,171,38)" fg:x="34220" fg:w="236"/><text x="90.3216%" y="591.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (236 samples, 0.62%)</title><rect x="90.0716%" y="565" width="0.6212%" height="15" fill="rgb(242,144,32)" fg:x="34220" fg:w="236"/><text x="90.3216%" y="575.50"></text></g><g><title>_rjem_sdallocx (233 samples, 0.61%)</title><rect x="90.0795%" y="549" width="0.6133%" height="15" fill="rgb(217,117,21)" fg:x="34223" fg:w="233"/><text x="90.3295%" y="559.50"></text></g><g><title>free_fastpath (233 samples, 0.61%)</title><rect x="90.0795%" y="533" width="0.6133%" height="15" fill="rgb(249,87,1)" fg:x="34223" fg:w="233"/><text x="90.3295%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (297 samples, 0.78%)</title><rect x="89.9189%" y="741" width="0.7817%" height="15" fill="rgb(248,196,48)" fg:x="34162" fg:w="297"/><text x="90.1689%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (297 samples, 0.78%)</title><rect x="89.9189%" y="725" width="0.7817%" height="15" fill="rgb(251,206,33)" fg:x="34162" fg:w="297"/><text x="90.1689%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (263 samples, 0.69%)</title><rect x="90.0084%" y="709" width="0.6923%" height="15" fill="rgb(232,141,28)" fg:x="34196" fg:w="263"/><text x="90.2584%" y="719.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (263 samples, 0.69%)</title><rect x="90.0084%" y="693" width="0.6923%" height="15" fill="rgb(209,167,14)" fg:x="34196" fg:w="263"/><text x="90.2584%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (239 samples, 0.63%)</title><rect x="90.0716%" y="677" width="0.6291%" height="15" fill="rgb(225,11,50)" fg:x="34220" fg:w="239"/><text x="90.3216%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (239 samples, 0.63%)</title><rect x="90.0716%" y="661" width="0.6291%" height="15" fill="rgb(209,50,20)" fg:x="34220" fg:w="239"/><text x="90.3216%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (239 samples, 0.63%)</title><rect x="90.0716%" y="645" width="0.6291%" height="15" fill="rgb(212,17,46)" fg:x="34220" fg:w="239"/><text x="90.3216%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (239 samples, 0.63%)</title><rect x="90.0716%" y="629" width="0.6291%" height="15" fill="rgb(216,101,39)" fg:x="34220" fg:w="239"/><text x="90.3216%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (34 samples, 0.09%)</title><rect x="90.7507%" y="725" width="0.0895%" height="15" fill="rgb(212,228,48)" fg:x="34478" fg:w="34"/><text x="91.0007%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.09%)</title><rect x="90.7507%" y="709" width="0.0895%" height="15" fill="rgb(250,6,50)" fg:x="34478" fg:w="34"/><text x="91.0007%" y="719.50"></text></g><g><title>[libc.so.6] (30 samples, 0.08%)</title><rect x="90.7612%" y="693" width="0.0790%" height="15" fill="rgb(250,160,48)" fg:x="34482" fg:w="30"/><text x="91.0112%" y="703.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (30 samples, 0.08%)</title><rect x="90.8402%" y="725" width="0.0790%" height="15" fill="rgb(244,216,33)" fg:x="34512" fg:w="30"/><text x="91.0902%" y="735.50"></text></g><g><title>fastwebsockets::frame::Frame::write (84 samples, 0.22%)</title><rect x="90.7007%" y="741" width="0.2211%" height="15" fill="rgb(207,157,5)" fg:x="34459" fg:w="84"/><text x="90.9507%" y="751.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="91.1876%" y="725" width="0.0290%" height="15" fill="rgb(228,199,8)" fg:x="34644" fg:w="11"/><text x="91.4376%" y="735.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (59 samples, 0.16%)</title><rect x="91.2297%" y="693" width="0.1553%" height="15" fill="rgb(227,80,20)" fg:x="34660" fg:w="59"/><text x="91.4797%" y="703.50"></text></g><g><title>std::sys::pal::unix::cvt (20 samples, 0.05%)</title><rect x="91.4850%" y="501" width="0.0526%" height="15" fill="rgb(222,9,33)" fg:x="34757" fg:w="20"/><text x="91.7350%" y="511.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (19 samples, 0.05%)</title><rect x="91.4877%" y="485" width="0.0500%" height="15" fill="rgb(239,44,28)" fg:x="34758" fg:w="19"/><text x="91.7377%" y="495.50"></text></g><g><title>[libc.so.6] (195 samples, 0.51%)</title><rect x="92.4589%" y="485" width="0.5133%" height="15" fill="rgb(249,187,43)" fg:x="35127" fg:w="195"/><text x="92.7089%" y="495.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (618 samples, 1.63%)</title><rect x="91.4798%" y="629" width="1.6267%" height="15" fill="rgb(216,141,28)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (618 samples, 1.63%)</title><rect x="91.4798%" y="613" width="1.6267%" height="15" fill="rgb(230,154,53)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (618 samples, 1.63%)</title><rect x="91.4798%" y="597" width="1.6267%" height="15" fill="rgb(227,82,4)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="607.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (618 samples, 1.63%)</title><rect x="91.4798%" y="581" width="1.6267%" height="15" fill="rgb(220,107,16)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (618 samples, 1.63%)</title><rect x="91.4798%" y="565" width="1.6267%" height="15" fill="rgb(207,187,2)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="575.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (618 samples, 1.63%)</title><rect x="91.4798%" y="549" width="1.6267%" height="15" fill="rgb(210,162,52)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="559.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (618 samples, 1.63%)</title><rect x="91.4798%" y="533" width="1.6267%" height="15" fill="rgb(217,216,49)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="543.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (618 samples, 1.63%)</title><rect x="91.4798%" y="517" width="1.6267%" height="15" fill="rgb(218,146,49)" fg:x="34755" fg:w="618"/><text x="91.7298%" y="527.50"></text></g><g><title>writev (596 samples, 1.57%)</title><rect x="91.5377%" y="501" width="1.5688%" height="15" fill="rgb(216,55,40)" fg:x="34777" fg:w="596"/><text x="91.7877%" y="511.50"></text></g><g><title>[unknown] (51 samples, 0.13%)</title><rect x="92.9722%" y="485" width="0.1342%" height="15" fill="rgb(208,196,21)" fg:x="35322" fg:w="51"/><text x="93.2222%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="93.1275%" y="565" width="0.0184%" height="15" fill="rgb(242,117,42)" fg:x="35381" fg:w="7"/><text x="93.3775%" y="575.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (7 samples, 0.02%)</title><rect x="93.1275%" y="549" width="0.0184%" height="15" fill="rgb(210,11,23)" fg:x="35381" fg:w="7"/><text x="93.3775%" y="559.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (7 samples, 0.02%)</title><rect x="93.1275%" y="533" width="0.0184%" height="15" fill="rgb(217,110,2)" fg:x="35381" fg:w="7"/><text x="93.3775%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="93.1328%" y="517" width="0.0132%" height="15" fill="rgb(229,77,54)" fg:x="35383" fg:w="5"/><text x="93.3828%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="93.1565%" y="533" width="0.0105%" height="15" fill="rgb(218,53,16)" fg:x="35392" fg:w="4"/><text x="93.4065%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (19 samples, 0.05%)</title><rect x="93.1275%" y="613" width="0.0500%" height="15" fill="rgb(215,38,13)" fg:x="35381" fg:w="19"/><text x="93.3775%" y="623.50"></text></g><g><title>tokio::runtime::context::budget (19 samples, 0.05%)</title><rect x="93.1275%" y="597" width="0.0500%" height="15" fill="rgb(235,42,18)" fg:x="35381" fg:w="19"/><text x="93.3775%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.05%)</title><rect x="93.1275%" y="581" width="0.0500%" height="15" fill="rgb(219,66,54)" fg:x="35381" fg:w="19"/><text x="93.3775%" y="591.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (12 samples, 0.03%)</title><rect x="93.1459%" y="565" width="0.0316%" height="15" fill="rgb(222,205,4)" fg:x="35388" fg:w="12"/><text x="93.3959%" y="575.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (12 samples, 0.03%)</title><rect x="93.1459%" y="549" width="0.0316%" height="15" fill="rgb(227,213,46)" fg:x="35388" fg:w="12"/><text x="93.3959%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (41 samples, 0.11%)</title><rect x="93.1880%" y="597" width="0.1079%" height="15" fill="rgb(250,145,42)" fg:x="35404" fg:w="41"/><text x="93.4380%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.11%)</title><rect x="93.1880%" y="581" width="0.1079%" height="15" fill="rgb(219,15,2)" fg:x="35404" fg:w="41"/><text x="93.4380%" y="591.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (791 samples, 2.08%)</title><rect x="91.2245%" y="725" width="2.0820%" height="15" fill="rgb(231,181,52)" fg:x="34658" fg:w="791"/><text x="91.4745%" y="735.50">&lt;..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (791 samples, 2.08%)</title><rect x="91.2245%" y="709" width="2.0820%" height="15" fill="rgb(235,1,42)" fg:x="34658" fg:w="791"/><text x="91.4745%" y="719.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (730 samples, 1.92%)</title><rect x="91.3850%" y="693" width="1.9215%" height="15" fill="rgb(249,88,27)" fg:x="34719" fg:w="730"/><text x="91.6350%" y="703.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (707 samples, 1.86%)</title><rect x="91.4456%" y="677" width="1.8609%" height="15" fill="rgb(235,145,16)" fg:x="34742" fg:w="707"/><text x="91.6956%" y="687.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (707 samples, 1.86%)</title><rect x="91.4456%" y="661" width="1.8609%" height="15" fill="rgb(237,114,19)" fg:x="34742" fg:w="707"/><text x="91.6956%" y="671.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (707 samples, 1.86%)</title><rect x="91.4456%" y="645" width="1.8609%" height="15" fill="rgb(238,51,50)" fg:x="34742" fg:w="707"/><text x="91.6956%" y="655.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (76 samples, 0.20%)</title><rect x="93.1064%" y="629" width="0.2000%" height="15" fill="rgb(205,194,25)" fg:x="35373" fg:w="76"/><text x="93.3564%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (49 samples, 0.13%)</title><rect x="93.1775%" y="613" width="0.1290%" height="15" fill="rgb(215,203,17)" fg:x="35400" fg:w="49"/><text x="93.4275%" y="623.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="93.3407%" y="709" width="0.0105%" height="15" fill="rgb(233,112,49)" fg:x="35462" fg:w="4"/><text x="93.5907%" y="719.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (2,465 samples, 6.49%)</title><rect x="86.8736%" y="773" width="6.4882%" height="15" fill="rgb(241,130,26)" fg:x="33005" fg:w="2465"/><text x="87.1236%" y="783.50">fastwebs..</text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (2,327 samples, 6.12%)</title><rect x="87.2368%" y="757" width="6.1250%" height="15" fill="rgb(252,223,19)" fg:x="33143" fg:w="2327"/><text x="87.4868%" y="767.50">fastwebs..</text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (927 samples, 2.44%)</title><rect x="90.9218%" y="741" width="2.4400%" height="15" fill="rgb(211,95,25)" fg:x="34543" fg:w="927"/><text x="91.1718%" y="751.50">fa..</text></g><g><title>fastwebsockets::frame::Frame::fmt_head (21 samples, 0.06%)</title><rect x="93.3065%" y="725" width="0.0553%" height="15" fill="rgb(251,182,27)" fg:x="35449" fg:w="21"/><text x="93.5565%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.01%)</title><rect x="93.3512%" y="709" width="0.0105%" height="15" fill="rgb(238,24,4)" fg:x="35466" fg:w="4"/><text x="93.6012%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="93.3512%" y="693" width="0.0105%" height="15" fill="rgb(224,220,25)" fg:x="35466" fg:w="4"/><text x="93.6012%" y="703.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketWrite&lt;A,B&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (2,890 samples, 7.61%)</title><rect x="85.8154%" y="805" width="7.6069%" height="15" fill="rgb(239,133,26)" fg:x="32603" fg:w="2890"/><text x="86.0654%" y="815.50">&lt;wisp_mux:..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (2,815 samples, 7.41%)</title><rect x="86.0128%" y="789" width="7.4095%" height="15" fill="rgb(211,94,48)" fg:x="32678" fg:w="2815"/><text x="86.2628%" y="799.50">wisp_mux::..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;wisp_mux::ws::Frame&gt; for fastwebsockets::frame::Frame&gt;::from (23 samples, 0.06%)</title><rect x="93.3618%" y="773" width="0.0605%" height="15" fill="rgb(239,87,6)" fg:x="35470" fg:w="23"/><text x="93.6118%" y="783.50"></text></g><g><title>wisp_mux::fastwebsockets::match_payload_reverse (15 samples, 0.04%)</title><rect x="93.3828%" y="757" width="0.0395%" height="15" fill="rgb(227,62,0)" fg:x="35478" fg:w="15"/><text x="93.6328%" y="767.50"></text></g><g><title>[libc.so.6] (155 samples, 0.41%)</title><rect x="93.4223%" y="805" width="0.4080%" height="15" fill="rgb(211,226,4)" fg:x="35493" fg:w="155"/><text x="93.6723%" y="815.50"></text></g><g><title>&lt;slab::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.16%)</title><rect x="93.8592%" y="757" width="0.1553%" height="15" fill="rgb(253,38,52)" fg:x="35659" fg:w="59"/><text x="94.1092%" y="767.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="93.9908%" y="741" width="0.0237%" height="15" fill="rgb(229,126,40)" fg:x="35709" fg:w="9"/><text x="94.2408%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="93.9908%" y="725" width="0.0237%" height="15" fill="rgb(229,165,44)" fg:x="35709" fg:w="9"/><text x="94.2408%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="93.9908%" y="709" width="0.0237%" height="15" fill="rgb(247,95,47)" fg:x="35709" fg:w="9"/><text x="94.2408%" y="719.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="93.9987%" y="693" width="0.0158%" height="15" fill="rgb(216,140,30)" fg:x="35712" fg:w="6"/><text x="94.2487%" y="703.50"></text></g><g><title>std::sync::poison::Flag::done (5 samples, 0.01%)</title><rect x="94.0198%" y="725" width="0.0132%" height="15" fill="rgb(246,214,8)" fg:x="35720" fg:w="5"/><text x="94.2698%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (75 samples, 0.20%)</title><rect x="94.0145%" y="757" width="0.1974%" height="15" fill="rgb(227,224,15)" fg:x="35718" fg:w="75"/><text x="94.2645%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.20%)</title><rect x="94.0145%" y="741" width="0.1974%" height="15" fill="rgb(233,175,4)" fg:x="35718" fg:w="75"/><text x="94.2645%" y="751.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (68 samples, 0.18%)</title><rect x="94.0330%" y="725" width="0.1790%" height="15" fill="rgb(221,66,45)" fg:x="35725" fg:w="68"/><text x="94.2830%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (66 samples, 0.17%)</title><rect x="94.0382%" y="709" width="0.1737%" height="15" fill="rgb(221,178,18)" fg:x="35727" fg:w="66"/><text x="94.2882%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (66 samples, 0.17%)</title><rect x="94.0382%" y="693" width="0.1737%" height="15" fill="rgb(213,81,29)" fg:x="35727" fg:w="66"/><text x="94.2882%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (114 samples, 0.30%)</title><rect x="94.2172%" y="757" width="0.3001%" height="15" fill="rgb(220,89,49)" fg:x="35795" fg:w="114"/><text x="94.4672%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_and (114 samples, 0.30%)</title><rect x="94.2172%" y="741" width="0.3001%" height="15" fill="rgb(227,60,33)" fg:x="35795" fg:w="114"/><text x="94.4672%" y="751.50"></text></g><g><title>core::mem::replace (4 samples, 0.01%)</title><rect x="94.5199%" y="741" width="0.0105%" height="15" fill="rgb(205,113,12)" fg:x="35910" fg:w="4"/><text x="94.7699%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.02%)</title><rect x="94.5383%" y="629" width="0.0211%" height="15" fill="rgb(211,32,1)" fg:x="35917" fg:w="8"/><text x="94.7883%" y="639.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (5 samples, 0.01%)</title><rect x="94.5462%" y="613" width="0.0132%" height="15" fill="rgb(246,2,12)" fg:x="35920" fg:w="5"/><text x="94.7962%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="94.5594%" y="613" width="0.0132%" height="15" fill="rgb(243,37,27)" fg:x="35925" fg:w="5"/><text x="94.8094%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="94.5594%" y="597" width="0.0132%" height="15" fill="rgb(248,211,31)" fg:x="35925" fg:w="5"/><text x="94.8094%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="94.5594%" y="581" width="0.0132%" height="15" fill="rgb(242,146,47)" fg:x="35925" fg:w="5"/><text x="94.8094%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (25 samples, 0.07%)</title><rect x="94.5383%" y="677" width="0.0658%" height="15" fill="rgb(206,70,20)" fg:x="35917" fg:w="25"/><text x="94.7883%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (25 samples, 0.07%)</title><rect x="94.5383%" y="661" width="0.0658%" height="15" fill="rgb(215,10,51)" fg:x="35917" fg:w="25"/><text x="94.7883%" y="671.50"></text></g><g><title>tokio::runtime::context::with_scheduler (25 samples, 0.07%)</title><rect x="94.5383%" y="645" width="0.0658%" height="15" fill="rgb(243,178,53)" fg:x="35917" fg:w="25"/><text x="94.7883%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (17 samples, 0.04%)</title><rect x="94.5594%" y="629" width="0.0447%" height="15" fill="rgb(233,221,20)" fg:x="35925" fg:w="17"/><text x="94.8094%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (11 samples, 0.03%)</title><rect x="94.5752%" y="613" width="0.0290%" height="15" fill="rgb(218,95,35)" fg:x="35931" fg:w="11"/><text x="94.8252%" y="623.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (34 samples, 0.09%)</title><rect x="94.5383%" y="693" width="0.0895%" height="15" fill="rgb(229,13,5)" fg:x="35917" fg:w="34"/><text x="94.7883%" y="703.50"></text></g><g><title>tokio::runtime::task::raw::schedule (9 samples, 0.02%)</title><rect x="94.6041%" y="677" width="0.0237%" height="15" fill="rgb(252,164,30)" fg:x="35942" fg:w="9"/><text x="94.8541%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::load (25 samples, 0.07%)</title><rect x="94.6278%" y="661" width="0.0658%" height="15" fill="rgb(232,68,36)" fg:x="35951" fg:w="25"/><text x="94.8778%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.07%)</title><rect x="94.6278%" y="645" width="0.0658%" height="15" fill="rgb(219,59,54)" fg:x="35951" fg:w="25"/><text x="94.8778%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.07%)</title><rect x="94.6278%" y="629" width="0.0658%" height="15" fill="rgb(250,92,33)" fg:x="35951" fg:w="25"/><text x="94.8778%" y="639.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (70 samples, 0.18%)</title><rect x="94.5173%" y="757" width="0.1842%" height="15" fill="rgb(229,162,54)" fg:x="35909" fg:w="70"/><text x="94.7673%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (65 samples, 0.17%)</title><rect x="94.5304%" y="741" width="0.1711%" height="15" fill="rgb(244,114,52)" fg:x="35914" fg:w="65"/><text x="94.7804%" y="751.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (65 samples, 0.17%)</title><rect x="94.5304%" y="725" width="0.1711%" height="15" fill="rgb(212,211,43)" fg:x="35914" fg:w="65"/><text x="94.7804%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (65 samples, 0.17%)</title><rect x="94.5304%" y="709" width="0.1711%" height="15" fill="rgb(226,147,8)" fg:x="35914" fg:w="65"/><text x="94.7804%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (28 samples, 0.07%)</title><rect x="94.6278%" y="693" width="0.0737%" height="15" fill="rgb(226,23,13)" fg:x="35951" fg:w="28"/><text x="94.8778%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (28 samples, 0.07%)</title><rect x="94.6278%" y="677" width="0.0737%" height="15" fill="rgb(240,63,4)" fg:x="35951" fg:w="28"/><text x="94.8778%" y="687.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="94.7068%" y="741" width="0.0184%" height="15" fill="rgb(221,1,32)" fg:x="35981" fg:w="7"/><text x="94.9568%" y="751.50"></text></g><g><title>std::sync::poison::Flag::guard (7 samples, 0.02%)</title><rect x="94.7068%" y="725" width="0.0184%" height="15" fill="rgb(242,117,10)" fg:x="35981" fg:w="7"/><text x="94.9568%" y="735.50"></text></g><g><title>std::thread::panicking (5 samples, 0.01%)</title><rect x="94.7120%" y="709" width="0.0132%" height="15" fill="rgb(249,172,44)" fg:x="35983" fg:w="5"/><text x="94.9620%" y="719.50"></text></g><g><title>std::panicking::panicking (5 samples, 0.01%)</title><rect x="94.7120%" y="693" width="0.0132%" height="15" fill="rgb(244,46,45)" fg:x="35983" fg:w="5"/><text x="94.9620%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (5 samples, 0.01%)</title><rect x="94.7120%" y="677" width="0.0132%" height="15" fill="rgb(206,43,17)" fg:x="35983" fg:w="5"/><text x="94.9620%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (69 samples, 0.18%)</title><rect x="94.7331%" y="725" width="0.1816%" height="15" fill="rgb(239,218,39)" fg:x="35991" fg:w="69"/><text x="94.9831%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (69 samples, 0.18%)</title><rect x="94.7331%" y="709" width="0.1816%" height="15" fill="rgb(208,169,54)" fg:x="35991" fg:w="69"/><text x="94.9831%" y="719.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h5adf97a234b091cbE (414 samples, 1.09%)</title><rect x="93.8303%" y="805" width="1.0897%" height="15" fill="rgb(247,25,42)" fg:x="35648" fg:w="414"/><text x="94.0803%" y="815.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (413 samples, 1.09%)</title><rect x="93.8329%" y="789" width="1.0871%" height="15" fill="rgb(226,23,31)" fg:x="35649" fg:w="413"/><text x="94.0829%" y="799.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (413 samples, 1.09%)</title><rect x="93.8329%" y="773" width="1.0871%" height="15" fill="rgb(247,16,28)" fg:x="35649" fg:w="413"/><text x="94.0829%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (81 samples, 0.21%)</title><rect x="94.7068%" y="757" width="0.2132%" height="15" fill="rgb(231,147,38)" fg:x="35981" fg:w="81"/><text x="94.9568%" y="767.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (74 samples, 0.19%)</title><rect x="94.7252%" y="741" width="0.1948%" height="15" fill="rgb(253,81,48)" fg:x="35988" fg:w="74"/><text x="94.9752%" y="751.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (6,394 samples, 16.83%)</title><rect x="78.1085%" y="885" width="16.8299%" height="15" fill="rgb(249,222,43)" fg:x="29675" fg:w="6394"/><text x="78.3585%" y="895.50">epoxy_server::handle::wisp..</text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write::_{{closure}} (5,474 samples, 14.41%)</title><rect x="80.5301%" y="869" width="14.4083%" height="15" fill="rgb(221,3,27)" fg:x="30595" fg:w="5474"/><text x="80.7801%" y="879.50">wisp_mux::stream::MuxS..</text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload::_{{closure}} (5,283 samples, 13.91%)</title><rect x="81.0328%" y="853" width="13.9056%" height="15" fill="rgb(228,180,5)" fg:x="30786" fg:w="5283"/><text x="81.2828%" y="863.50">wisp_mux::stream::Mux..</text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload_internal::_{{closure}} (4,367 samples, 11.49%)</title><rect x="83.4439%" y="837" width="11.4945%" height="15" fill="rgb(227,131,42)" fg:x="31702" fg:w="4367"/><text x="83.6939%" y="847.50">wisp_mux::stream:..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_split::_{{closure}} (4,032 samples, 10.61%)</title><rect x="84.3256%" y="821" width="10.6128%" height="15" fill="rgb(212,3,39)" fg:x="32037" fg:w="4032"/><text x="84.5756%" y="831.50">wisp_mux::ws::L..</text></g><g><title>_ZN4core3ptr1141drop_in_place$LT$$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$u20$as$u20$wisp_mux..ws..WebSocketWrite$GT$..wisp_write_split..$u7b$$u7b$closure$u7d$$u7d$$GT$17h46d8d85450636ef6E (6 samples, 0.02%)</title><rect x="94.9226%" y="805" width="0.0158%" height="15" fill="rgb(226,45,5)" fg:x="36063" fg:w="6"/><text x="95.1726%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="94.9463%" y="805" width="0.0132%" height="15" fill="rgb(215,167,45)" fg:x="36072" fg:w="5"/><text x="95.1963%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.01%)</title><rect x="94.9463%" y="789" width="0.0132%" height="15" fill="rgb(250,218,53)" fg:x="36072" fg:w="5"/><text x="95.1963%" y="799.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="94.9463%" y="773" width="0.0132%" height="15" fill="rgb(207,140,0)" fg:x="36072" fg:w="5"/><text x="95.1963%" y="783.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="94.9463%" y="757" width="0.0132%" height="15" fill="rgb(238,133,51)" fg:x="36072" fg:w="5"/><text x="95.1963%" y="767.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,573 samples, 27.83%)</title><rect x="67.1378%" y="917" width="27.8295%" height="15" fill="rgb(218,203,53)" fg:x="25507" fg:w="10573"/><text x="67.3878%" y="927.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::fu..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (10,573 samples, 27.83%)</title><rect x="67.1378%" y="901" width="27.8295%" height="15" fill="rgb(226,184,25)" fg:x="25507" fg:w="10573"/><text x="67.3878%" y="911.50">epoxy_server::handle::wisp::handle_stream::_{..</text></g><g><title>tokio::macros::support::thread_rng_n (11 samples, 0.03%)</title><rect x="94.9384%" y="885" width="0.0290%" height="15" fill="rgb(231,121,21)" fg:x="36069" fg:w="11"/><text x="95.1884%" y="895.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (11 samples, 0.03%)</title><rect x="94.9384%" y="869" width="0.0290%" height="15" fill="rgb(251,14,34)" fg:x="36069" fg:w="11"/><text x="95.1884%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.03%)</title><rect x="94.9384%" y="853" width="0.0290%" height="15" fill="rgb(249,193,11)" fg:x="36069" fg:w="11"/><text x="95.1884%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.03%)</title><rect x="94.9384%" y="837" width="0.0290%" height="15" fill="rgb(220,172,37)" fg:x="36069" fg:w="11"/><text x="95.1884%" y="847.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (8 samples, 0.02%)</title><rect x="94.9463%" y="821" width="0.0211%" height="15" fill="rgb(231,229,43)" fg:x="36072" fg:w="8"/><text x="95.1963%" y="831.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="94.9726%" y="293" width="0.0105%" height="15" fill="rgb(250,161,5)" fg:x="36082" fg:w="4"/><text x="95.2226%" y="303.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="94.9726%" y="277" width="0.0105%" height="15" fill="rgb(218,225,18)" fg:x="36082" fg:w="4"/><text x="95.2226%" y="287.50"></text></g><g><title>arena_dalloc_large (4 samples, 0.01%)</title><rect x="94.9726%" y="261" width="0.0105%" height="15" fill="rgb(245,45,42)" fg:x="36082" fg:w="4"/><text x="95.2226%" y="271.50"></text></g><g><title>_rjem_je_large_dalloc (4 samples, 0.01%)</title><rect x="94.9726%" y="245" width="0.0105%" height="15" fill="rgb(211,115,1)" fg:x="36082" fg:w="4"/><text x="95.2226%" y="255.50"></text></g><g><title>large_dalloc_finish_impl (4 samples, 0.01%)</title><rect x="94.9726%" y="229" width="0.0105%" height="15" fill="rgb(248,133,52)" fg:x="36082" fg:w="4"/><text x="95.2226%" y="239.50"></text></g><g><title>pac_dalloc_impl (4 samples, 0.01%)</title><rect x="94.9726%" y="213" width="0.0105%" height="15" fill="rgb(238,100,21)" fg:x="36082" fg:w="4"/><text x="95.2226%" y="223.50"></text></g><g><title>_rjem_je_extent_record (4 samples, 0.01%)</title><rect x="94.9726%" y="197" width="0.0105%" height="15" fill="rgb(247,144,11)" fg:x="36082" fg:w="4"/><text x="95.2226%" y="207.50"></text></g><g><title>_ZN4core3ptr1085drop_in_place$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h8350f6bd9f70ea84E (5 samples, 0.01%)</title><rect x="94.9726%" y="789" width="0.0132%" height="15" fill="rgb(206,164,16)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Receiver&lt;bytes::bytes::Bytes&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="773" width="0.0132%" height="15" fill="rgb(222,34,3)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="757" width="0.0132%" height="15" fill="rgb(248,82,4)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="94.9726%" y="741" width="0.0132%" height="15" fill="rgb(228,81,46)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.01%)</title><rect x="94.9726%" y="725" width="0.0132%" height="15" fill="rgb(227,67,47)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="709" width="0.0132%" height="15" fill="rgb(215,93,53)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="693" width="0.0132%" height="15" fill="rgb(248,194,39)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="677" width="0.0132%" height="15" fill="rgb(215,5,19)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="661" width="0.0132%" height="15" fill="rgb(226,215,51)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;bytes::bytes::Bytes&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="645" width="0.0132%" height="15" fill="rgb(225,56,26)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="655.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="94.9726%" y="629" width="0.0132%" height="15" fill="rgb(222,75,29)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bytes::bytes::Bytes]&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="613" width="0.0132%" height="15" fill="rgb(236,139,6)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="597" width="0.0132%" height="15" fill="rgb(223,137,36)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="607.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="94.9726%" y="581" width="0.0132%" height="15" fill="rgb(226,99,2)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="591.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (5 samples, 0.01%)</title><rect x="94.9726%" y="565" width="0.0132%" height="15" fill="rgb(206,133,23)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="575.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5 samples, 0.01%)</title><rect x="94.9726%" y="549" width="0.0132%" height="15" fill="rgb(243,173,15)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="559.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (5 samples, 0.01%)</title><rect x="94.9726%" y="533" width="0.0132%" height="15" fill="rgb(228,69,28)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="543.50"></text></g><g><title>bytes::bytes_mut::release_shared (5 samples, 0.01%)</title><rect x="94.9726%" y="517" width="0.0132%" height="15" fill="rgb(212,51,22)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="527.50"></text></g><g><title>core::mem::drop (5 samples, 0.01%)</title><rect x="94.9726%" y="501" width="0.0132%" height="15" fill="rgb(227,113,0)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="485" width="0.0132%" height="15" fill="rgb(252,84,27)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="469" width="0.0132%" height="15" fill="rgb(223,145,39)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="453" width="0.0132%" height="15" fill="rgb(239,219,30)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="94.9726%" y="437" width="0.0132%" height="15" fill="rgb(224,196,39)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="94.9726%" y="421" width="0.0132%" height="15" fill="rgb(205,35,43)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5 samples, 0.01%)</title><rect x="94.9726%" y="405" width="0.0132%" height="15" fill="rgb(228,201,21)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="94.9726%" y="389" width="0.0132%" height="15" fill="rgb(237,118,16)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="94.9726%" y="373" width="0.0132%" height="15" fill="rgb(241,17,19)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="383.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="94.9726%" y="357" width="0.0132%" height="15" fill="rgb(214,10,25)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="367.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.01%)</title><rect x="94.9726%" y="341" width="0.0132%" height="15" fill="rgb(238,37,29)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="351.50"></text></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.01%)</title><rect x="94.9726%" y="325" width="0.0132%" height="15" fill="rgb(253,83,25)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="335.50"></text></g><g><title>isfree (5 samples, 0.01%)</title><rect x="94.9726%" y="309" width="0.0132%" height="15" fill="rgb(234,192,12)" fg:x="36082" fg:w="5"/><text x="95.2226%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::copy_read_fast::{{closure}}&gt; (7 samples, 0.02%)</title><rect x="94.9700%" y="901" width="0.0184%" height="15" fill="rgb(241,216,45)" fg:x="36081" fg:w="7"/><text x="95.2200%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::compat::Compat&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt;&gt; (6 samples, 0.02%)</title><rect x="94.9726%" y="885" width="0.0158%" height="15" fill="rgb(242,22,33)" fg:x="36082" fg:w="6"/><text x="95.2226%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt; (6 samples, 0.02%)</title><rect x="94.9726%" y="869" width="0.0158%" height="15" fill="rgb(231,105,49)" fg:x="36082" fg:w="6"/><text x="95.2226%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt;&gt; (6 samples, 0.02%)</title><rect x="94.9726%" y="853" width="0.0158%" height="15" fill="rgb(218,204,15)" fg:x="36082" fg:w="6"/><text x="95.2226%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt; (6 samples, 0.02%)</title><rect x="94.9726%" y="837" width="0.0158%" height="15" fill="rgb(235,138,41)" fg:x="36082" fg:w="6"/><text x="95.2226%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="94.9726%" y="821" width="0.0158%" height="15" fill="rgb(246,0,9)" fg:x="36082" fg:w="6"/><text x="95.2226%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (6 samples, 0.02%)</title><rect x="94.9726%" y="805" width="0.0158%" height="15" fill="rgb(210,74,4)" fg:x="36082" fg:w="6"/><text x="95.2226%" y="815.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (10,591 samples, 27.88%)</title><rect x="67.1141%" y="933" width="27.8769%" height="15" fill="rgb(250,60,41)" fg:x="25498" fg:w="10591"/><text x="67.3641%" y="943.50">epoxy_server::handle::wisp::handle_stream::_{..</text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::copy_read_fast::{{closure}},epoxy_server::handle::wisp::copy_write_fast::{{closure}})&gt; (8 samples, 0.02%)</title><rect x="94.9700%" y="917" width="0.0211%" height="15" fill="rgb(220,115,12)" fg:x="36081" fg:w="8"/><text x="95.2200%" y="927.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (10,597 samples, 27.89%)</title><rect x="67.1010%" y="949" width="27.8927%" height="15" fill="rgb(237,100,13)" fg:x="25493" fg:w="10597"/><text x="67.3510%" y="959.50">epoxy_server::handle::wisp::handle_stream::_{..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (22 samples, 0.06%)</title><rect x="94.9937%" y="869" width="0.0579%" height="15" fill="rgb(213,55,26)" fg:x="36090" fg:w="22"/><text x="95.2437%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (22 samples, 0.06%)</title><rect x="94.9937%" y="853" width="0.0579%" height="15" fill="rgb(216,17,4)" fg:x="36090" fg:w="22"/><text x="95.2437%" y="863.50"></text></g><g><title>core::mem::replace (22 samples, 0.06%)</title><rect x="94.9937%" y="837" width="0.0579%" height="15" fill="rgb(220,153,47)" fg:x="36090" fg:w="22"/><text x="95.2437%" y="847.50"></text></g><g><title>core::ptr::write (22 samples, 0.06%)</title><rect x="94.9937%" y="821" width="0.0579%" height="15" fill="rgb(215,131,9)" fg:x="36090" fg:w="22"/><text x="95.2437%" y="831.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,732 samples, 28.25%)</title><rect x="66.8167%" y="981" width="28.2481%" height="15" fill="rgb(233,46,42)" fg:x="25385" fg:w="10732"/><text x="67.0667%" y="991.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::fu..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (10,732 samples, 28.25%)</title><rect x="66.8167%" y="965" width="28.2481%" height="15" fill="rgb(226,86,7)" fg:x="25385" fg:w="10732"/><text x="67.0667%" y="975.50">epoxy_server::handle::wisp::handle_stream::_{..</text></g><g><title>tokio::macros::support::thread_rng_n (27 samples, 0.07%)</title><rect x="94.9937%" y="949" width="0.0711%" height="15" fill="rgb(239,226,21)" fg:x="36090" fg:w="27"/><text x="95.2437%" y="959.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (27 samples, 0.07%)</title><rect x="94.9937%" y="933" width="0.0711%" height="15" fill="rgb(244,137,22)" fg:x="36090" fg:w="27"/><text x="95.2437%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.07%)</title><rect x="94.9937%" y="917" width="0.0711%" height="15" fill="rgb(211,139,35)" fg:x="36090" fg:w="27"/><text x="95.2437%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.07%)</title><rect x="94.9937%" y="901" width="0.0711%" height="15" fill="rgb(214,62,50)" fg:x="36090" fg:w="27"/><text x="95.2437%" y="911.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (27 samples, 0.07%)</title><rect x="94.9937%" y="885" width="0.0711%" height="15" fill="rgb(212,113,44)" fg:x="36090" fg:w="27"/><text x="95.2437%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::copy_read_fast::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="917" width="0.0237%" height="15" fill="rgb(226,150,43)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::compat::Compat&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="901" width="0.0237%" height="15" fill="rgb(250,71,37)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamAsyncRead&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="885" width="0.0237%" height="15" fill="rgb(219,76,19)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="869" width="0.0237%" height="15" fill="rgb(250,39,11)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::compat::MuxStreamIoStream&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="853" width="0.0237%" height="15" fill="rgb(230,64,31)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="837" width="0.0237%" height="15" fill="rgb(208,222,23)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="821" width="0.0237%" height="15" fill="rgb(227,125,18)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="831.50"></text></g><g><title>_ZN4core3ptr1085drop_in_place$LT$wisp_mux..stream..MuxStreamRead$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h8350f6bd9f70ea84E (9 samples, 0.02%)</title><rect x="95.0674%" y="805" width="0.0237%" height="15" fill="rgb(234,210,9)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Receiver&lt;bytes::bytes::Bytes&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="789" width="0.0237%" height="15" fill="rgb(217,127,24)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="773" width="0.0237%" height="15" fill="rgb(239,141,48)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="95.0674%" y="757" width="0.0237%" height="15" fill="rgb(227,109,8)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.02%)</title><rect x="95.0674%" y="741" width="0.0237%" height="15" fill="rgb(235,184,23)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Shared&lt;bytes::bytes::Bytes&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="725" width="0.0237%" height="15" fill="rgb(227,226,48)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="709" width="0.0237%" height="15" fill="rgb(206,150,11)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="693" width="0.0237%" height="15" fill="rgb(254,2,33)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="677" width="0.0237%" height="15" fill="rgb(243,160,20)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;bytes::bytes::Bytes&gt;&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="661" width="0.0237%" height="15" fill="rgb(218,208,30)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="671.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="95.0674%" y="645" width="0.0237%" height="15" fill="rgb(224,120,49)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bytes::bytes::Bytes]&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="629" width="0.0237%" height="15" fill="rgb(246,12,2)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (9 samples, 0.02%)</title><rect x="95.0674%" y="613" width="0.0237%" height="15" fill="rgb(236,117,3)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="623.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="95.0674%" y="597" width="0.0237%" height="15" fill="rgb(216,128,52)" fg:x="36118" fg:w="9"/><text x="95.3174%" y="607.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (8 samples, 0.02%)</title><rect x="95.0700%" y="581" width="0.0211%" height="15" fill="rgb(246,145,19)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="591.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (8 samples, 0.02%)</title><rect x="95.0700%" y="565" width="0.0211%" height="15" fill="rgb(222,11,46)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="575.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (8 samples, 0.02%)</title><rect x="95.0700%" y="549" width="0.0211%" height="15" fill="rgb(245,82,36)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="559.50"></text></g><g><title>bytes::bytes_mut::release_shared (8 samples, 0.02%)</title><rect x="95.0700%" y="533" width="0.0211%" height="15" fill="rgb(250,73,51)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="543.50"></text></g><g><title>core::mem::drop (8 samples, 0.02%)</title><rect x="95.0700%" y="517" width="0.0211%" height="15" fill="rgb(221,189,23)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (8 samples, 0.02%)</title><rect x="95.0700%" y="501" width="0.0211%" height="15" fill="rgb(210,33,7)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (8 samples, 0.02%)</title><rect x="95.0700%" y="485" width="0.0211%" height="15" fill="rgb(210,107,22)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.02%)</title><rect x="95.0700%" y="469" width="0.0211%" height="15" fill="rgb(222,116,37)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.02%)</title><rect x="95.0700%" y="453" width="0.0211%" height="15" fill="rgb(254,17,48)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="95.0700%" y="437" width="0.0211%" height="15" fill="rgb(224,36,32)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8 samples, 0.02%)</title><rect x="95.0700%" y="421" width="0.0211%" height="15" fill="rgb(232,90,46)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="95.0700%" y="405" width="0.0211%" height="15" fill="rgb(241,66,40)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="95.0700%" y="389" width="0.0211%" height="15" fill="rgb(249,184,29)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="399.50"></text></g><g><title>__rust_dealloc (8 samples, 0.02%)</title><rect x="95.0700%" y="373" width="0.0211%" height="15" fill="rgb(231,181,1)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="383.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.02%)</title><rect x="95.0700%" y="357" width="0.0211%" height="15" fill="rgb(224,94,2)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="367.50"></text></g><g><title>_rjem_je_sdallocx_default (8 samples, 0.02%)</title><rect x="95.0700%" y="341" width="0.0211%" height="15" fill="rgb(229,170,15)" fg:x="36119" fg:w="8"/><text x="95.3200%" y="351.50"></text></g><g><title>isfree (7 samples, 0.02%)</title><rect x="95.0726%" y="325" width="0.0184%" height="15" fill="rgb(240,127,35)" fg:x="36120" fg:w="7"/><text x="95.3226%" y="335.50"></text></g><g><title>thread_dalloc_event (6 samples, 0.02%)</title><rect x="95.0753%" y="309" width="0.0158%" height="15" fill="rgb(248,196,34)" fg:x="36121" fg:w="6"/><text x="95.3253%" y="319.50"></text></g><g><title>te_event_advance (6 samples, 0.02%)</title><rect x="95.0753%" y="293" width="0.0158%" height="15" fill="rgb(236,137,7)" fg:x="36121" fg:w="6"/><text x="95.3253%" y="303.50"></text></g><g><title>_rjem_je_te_event_trigger (6 samples, 0.02%)</title><rect x="95.0753%" y="277" width="0.0158%" height="15" fill="rgb(235,127,16)" fg:x="36121" fg:w="6"/><text x="95.3253%" y="287.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (5 samples, 0.01%)</title><rect x="95.0779%" y="261" width="0.0132%" height="15" fill="rgb(250,192,54)" fg:x="36122" fg:w="5"/><text x="95.3279%" y="271.50"></text></g><g><title>tcache_gc_small (4 samples, 0.01%)</title><rect x="95.0805%" y="245" width="0.0105%" height="15" fill="rgb(218,98,20)" fg:x="36123" fg:w="4"/><text x="95.3305%" y="255.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.01%)</title><rect x="95.0805%" y="229" width="0.0105%" height="15" fill="rgb(230,176,47)" fg:x="36123" fg:w="4"/><text x="95.3305%" y="239.50"></text></g><g><title>tcache_bin_flush_bottom (4 samples, 0.01%)</title><rect x="95.0805%" y="213" width="0.0105%" height="15" fill="rgb(244,2,33)" fg:x="36123" fg:w="4"/><text x="95.3305%" y="223.50"></text></g><g><title>tcache_bin_flush_impl (4 samples, 0.01%)</title><rect x="95.0805%" y="197" width="0.0105%" height="15" fill="rgb(231,100,17)" fg:x="36123" fg:w="4"/><text x="95.3305%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}},event_listener::EventListener)&gt; (14 samples, 0.04%)</title><rect x="95.0648%" y="981" width="0.0368%" height="15" fill="rgb(245,23,12)" fg:x="36117" fg:w="14"/><text x="95.3148%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}}&gt; (14 samples, 0.04%)</title><rect x="95.0648%" y="965" width="0.0368%" height="15" fill="rgb(249,55,22)" fg:x="36117" fg:w="14"/><text x="95.3148%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::handle_stream::{{closure}}::{{closure}}::{{closure}}&gt; (13 samples, 0.03%)</title><rect x="95.0674%" y="949" width="0.0342%" height="15" fill="rgb(207,134,9)" fg:x="36118" fg:w="13"/><text x="95.3174%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(epoxy_server::handle::wisp::copy_read_fast::{{closure}},epoxy_server::handle::wisp::copy_write_fast::{{closure}})&gt; (13 samples, 0.03%)</title><rect x="95.0674%" y="933" width="0.0342%" height="15" fill="rgb(218,134,0)" fg:x="36118" fg:w="13"/><text x="95.3174%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;epoxy_server::handle::wisp::copy_write_fast::{{closure}}&gt; (4 samples, 0.01%)</title><rect x="95.0911%" y="917" width="0.0105%" height="15" fill="rgb(213,212,33)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::util::buf_reader::BufReader&lt;tokio::net::tcp::split_owned::OwnedReadHalf&gt;&gt; (4 samples, 0.01%)</title><rect x="95.0911%" y="901" width="0.0105%" height="15" fill="rgb(252,106,18)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::split_owned::OwnedReadHalf&gt; (4 samples, 0.01%)</title><rect x="95.0911%" y="885" width="0.0105%" height="15" fill="rgb(208,126,42)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (4 samples, 0.01%)</title><rect x="95.0911%" y="869" width="0.0105%" height="15" fill="rgb(246,175,29)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="95.0911%" y="853" width="0.0105%" height="15" fill="rgb(215,13,50)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.01%)</title><rect x="95.0911%" y="837" width="0.0105%" height="15" fill="rgb(216,172,15)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::udp::UdpSocket&gt; (4 samples, 0.01%)</title><rect x="95.0911%" y="821" width="0.0105%" height="15" fill="rgb(212,103,13)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::udp::UdpSocket&gt;&gt; (4 samples, 0.01%)</title><rect x="95.0911%" y="805" width="0.0105%" height="15" fill="rgb(231,171,36)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="815.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="95.0911%" y="789" width="0.0105%" height="15" fill="rgb(250,123,20)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="799.50"></text></g><g><title>tokio::runtime::io::registration::Registration::deregister (4 samples, 0.01%)</title><rect x="95.0911%" y="773" width="0.0105%" height="15" fill="rgb(212,53,50)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="783.50"></text></g><g><title>tokio::runtime::io::driver::Handle::deregister_source (4 samples, 0.01%)</title><rect x="95.0911%" y="757" width="0.0105%" height="15" fill="rgb(243,54,12)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="95.0911%" y="741" width="0.0105%" height="15" fill="rgb(234,101,34)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="751.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.01%)</title><rect x="95.0911%" y="725" width="0.0105%" height="15" fill="rgb(254,67,22)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.01%)</title><rect x="95.0911%" y="709" width="0.0105%" height="15" fill="rgb(250,35,47)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="719.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.01%)</title><rect x="95.0911%" y="693" width="0.0105%" height="15" fill="rgb(226,126,38)" fg:x="36127" fg:w="4"/><text x="95.3411%" y="703.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (10,787 samples, 28.39%)</title><rect x="66.7219%" y="997" width="28.3928%" height="15" fill="rgb(216,138,53)" fg:x="25349" fg:w="10787"/><text x="66.9719%" y="1007.50">epoxy_server::handle::wisp::handle_stream::_{{..</text></g><g><title>epoxy_server::stream::ClientStream::resolve::_{{closure}} (4 samples, 0.01%)</title><rect x="95.1042%" y="981" width="0.0105%" height="15" fill="rgb(246,199,43)" fg:x="36132" fg:w="4"/><text x="95.3542%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (28,057 samples, 73.85%)</title><rect x="21.2703%" y="1029" width="73.8498%" height="15" fill="rgb(232,125,11)" fg:x="8081" fg:w="28057"/><text x="21.5203%" y="1039.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (28,057 samples, 73.85%)</title><rect x="21.2703%" y="1013" width="73.8498%" height="15" fill="rgb(218,219,45)" fg:x="8081" fg:w="28057"/><text x="21.5203%" y="1023.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::harness::poll_future (28,059 samples, 73.86%)</title><rect x="21.2676%" y="1141" width="73.8550%" height="15" fill="rgb(216,102,54)" fg:x="8080" fg:w="28059"/><text x="21.5176%" y="1151.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (28,059 samples, 73.86%)</title><rect x="21.2676%" y="1125" width="73.8550%" height="15" fill="rgb(250,228,7)" fg:x="8080" fg:w="28059"/><text x="21.5176%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (28,059 samples, 73.86%)</title><rect x="21.2676%" y="1109" width="73.8550%" height="15" fill="rgb(226,125,25)" fg:x="8080" fg:w="28059"/><text x="21.5176%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (28,059 samples, 73.86%)</title><rect x="21.2676%" y="1093" width="73.8550%" height="15" fill="rgb(224,165,27)" fg:x="8080" fg:w="28059"/><text x="21.5176%" y="1103.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28,059 samples, 73.86%)</title><rect x="21.2676%" y="1077" width="73.8550%" height="15" fill="rgb(233,86,3)" fg:x="8080" fg:w="28059"/><text x="21.5176%" y="1087.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (28,059 samples, 73.86%)</title><rect x="21.2676%" y="1061" width="73.8550%" height="15" fill="rgb(228,116,20)" fg:x="8080" fg:w="28059"/><text x="21.5176%" y="1071.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (28,059 samples, 73.86%)</title><rect x="21.2676%" y="1045" width="73.8550%" height="15" fill="rgb(209,192,17)" fg:x="8080" fg:w="28059"/><text x="21.5176%" y="1055.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.02%)</title><rect x="95.1279%" y="1109" width="0.0211%" height="15" fill="rgb(224,88,34)" fg:x="36141" fg:w="8"/><text x="95.3779%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="95.1279%" y="1093" width="0.0211%" height="15" fill="rgb(233,38,6)" fg:x="36141" fg:w="8"/><text x="95.3779%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (18 samples, 0.05%)</title><rect x="95.1227%" y="1141" width="0.0474%" height="15" fill="rgb(212,59,30)" fg:x="36139" fg:w="18"/><text x="95.3727%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (18 samples, 0.05%)</title><rect x="95.1227%" y="1125" width="0.0474%" height="15" fill="rgb(213,80,3)" fg:x="36139" fg:w="18"/><text x="95.3727%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (7 samples, 0.02%)</title><rect x="95.1516%" y="1109" width="0.0184%" height="15" fill="rgb(251,178,7)" fg:x="36150" fg:w="7"/><text x="95.4016%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.04%)</title><rect x="95.1700%" y="1109" width="0.0395%" height="15" fill="rgb(213,154,26)" fg:x="36157" fg:w="15"/><text x="95.4200%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.04%)</title><rect x="95.1700%" y="1093" width="0.0395%" height="15" fill="rgb(238,165,49)" fg:x="36157" fg:w="15"/><text x="95.4200%" y="1103.50"></text></g><g><title>tokio::runtime::coop::budget (28,425 samples, 74.82%)</title><rect x="20.3990%" y="1269" width="74.8184%" height="15" fill="rgb(248,91,46)" fg:x="7750" fg:w="28425"/><text x="20.6490%" y="1279.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (28,425 samples, 74.82%)</title><rect x="20.3990%" y="1253" width="74.8184%" height="15" fill="rgb(244,21,52)" fg:x="7750" fg:w="28425"/><text x="20.6490%" y="1263.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (28,422 samples, 74.81%)</title><rect x="20.4069%" y="1237" width="74.8105%" height="15" fill="rgb(247,122,20)" fg:x="7753" fg:w="28422"/><text x="20.6569%" y="1247.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (28,379 samples, 74.70%)</title><rect x="20.5201%" y="1221" width="74.6973%" height="15" fill="rgb(218,27,9)" fg:x="7796" fg:w="28379"/><text x="20.7701%" y="1231.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (28,379 samples, 74.70%)</title><rect x="20.5201%" y="1205" width="74.6973%" height="15" fill="rgb(246,7,6)" fg:x="7796" fg:w="28379"/><text x="20.7701%" y="1215.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (28,366 samples, 74.66%)</title><rect x="20.5543%" y="1189" width="74.6631%" height="15" fill="rgb(227,135,54)" fg:x="7809" fg:w="28366"/><text x="20.8043%" y="1199.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28,362 samples, 74.65%)</title><rect x="20.5649%" y="1173" width="74.6526%" height="15" fill="rgb(247,14,11)" fg:x="7813" fg:w="28362"/><text x="20.8149%" y="1183.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (28,128 samples, 74.04%)</title><rect x="21.1808%" y="1157" width="74.0366%" height="15" fill="rgb(206,149,34)" fg:x="8047" fg:w="28128"/><text x="21.4308%" y="1167.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (18 samples, 0.05%)</title><rect x="95.1700%" y="1141" width="0.0474%" height="15" fill="rgb(227,228,4)" fg:x="36157" fg:w="18"/><text x="95.4200%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (18 samples, 0.05%)</title><rect x="95.1700%" y="1125" width="0.0474%" height="15" fill="rgb(238,218,28)" fg:x="36157" fg:w="18"/><text x="95.4200%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (4 samples, 0.01%)</title><rect x="95.2174%" y="1269" width="0.0105%" height="15" fill="rgb(252,86,40)" fg:x="36175" fg:w="4"/><text x="95.4674%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.08%)</title><rect x="95.2358%" y="1205" width="0.0763%" height="15" fill="rgb(251,225,11)" fg:x="36182" fg:w="29"/><text x="95.4858%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.08%)</title><rect x="95.2358%" y="1189" width="0.0763%" height="15" fill="rgb(206,46,49)" fg:x="36182" fg:w="29"/><text x="95.4858%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (4 samples, 0.01%)</title><rect x="95.3122%" y="1205" width="0.0105%" height="15" fill="rgb(245,128,24)" fg:x="36211" fg:w="4"/><text x="95.5622%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (30 samples, 0.08%)</title><rect x="95.3227%" y="1205" width="0.0790%" height="15" fill="rgb(219,177,34)" fg:x="36215" fg:w="30"/><text x="95.5727%" y="1215.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (21 samples, 0.06%)</title><rect x="95.3464%" y="1189" width="0.0553%" height="15" fill="rgb(218,60,48)" fg:x="36224" fg:w="21"/><text x="95.5964%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 0.06%)</title><rect x="95.3464%" y="1173" width="0.0553%" height="15" fill="rgb(221,11,5)" fg:x="36224" fg:w="21"/><text x="95.5964%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.06%)</title><rect x="95.3464%" y="1157" width="0.0553%" height="15" fill="rgb(220,148,13)" fg:x="36224" fg:w="21"/><text x="95.5964%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (67 samples, 0.18%)</title><rect x="95.2279%" y="1237" width="0.1764%" height="15" fill="rgb(210,16,3)" fg:x="36179" fg:w="67"/><text x="95.4779%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (67 samples, 0.18%)</title><rect x="95.2279%" y="1221" width="0.1764%" height="15" fill="rgb(236,80,2)" fg:x="36179" fg:w="67"/><text x="95.4779%" y="1231.50"></text></g><g><title>syscall (10 samples, 0.03%)</title><rect x="95.4043%" y="1237" width="0.0263%" height="15" fill="rgb(239,129,19)" fg:x="36246" fg:w="10"/><text x="95.6543%" y="1247.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (11 samples, 0.03%)</title><rect x="95.4306%" y="1237" width="0.0290%" height="15" fill="rgb(220,106,35)" fg:x="36256" fg:w="11"/><text x="95.6806%" y="1247.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (11 samples, 0.03%)</title><rect x="95.4306%" y="1221" width="0.0290%" height="15" fill="rgb(252,139,45)" fg:x="36256" fg:w="11"/><text x="95.6806%" y="1231.50"></text></g><g><title>mio::waker::Waker::wake (11 samples, 0.03%)</title><rect x="95.4306%" y="1205" width="0.0290%" height="15" fill="rgb(229,8,36)" fg:x="36256" fg:w="11"/><text x="95.6806%" y="1215.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (11 samples, 0.03%)</title><rect x="95.4306%" y="1189" width="0.0290%" height="15" fill="rgb(230,126,33)" fg:x="36256" fg:w="11"/><text x="95.6806%" y="1199.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="95.4332%" y="1173" width="0.0263%" height="15" fill="rgb(239,140,21)" fg:x="36257" fg:w="10"/><text x="95.6832%" y="1183.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (10 samples, 0.03%)</title><rect x="95.4332%" y="1157" width="0.0263%" height="15" fill="rgb(254,104,9)" fg:x="36257" fg:w="10"/><text x="95.6832%" y="1167.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (10 samples, 0.03%)</title><rect x="95.4332%" y="1141" width="0.0263%" height="15" fill="rgb(239,52,14)" fg:x="36257" fg:w="10"/><text x="95.6832%" y="1151.50"></text></g><g><title>write (9 samples, 0.02%)</title><rect x="95.4359%" y="1125" width="0.0237%" height="15" fill="rgb(208,227,44)" fg:x="36258" fg:w="9"/><text x="95.6859%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (8 samples, 0.02%)</title><rect x="95.4833%" y="1205" width="0.0211%" height="15" fill="rgb(246,18,19)" fg:x="36276" fg:w="8"/><text x="95.7333%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.02%)</title><rect x="95.4833%" y="1189" width="0.0211%" height="15" fill="rgb(235,228,25)" fg:x="36276" fg:w="8"/><text x="95.7333%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (18 samples, 0.05%)</title><rect x="95.4648%" y="1237" width="0.0474%" height="15" fill="rgb(240,156,20)" fg:x="36269" fg:w="18"/><text x="95.7148%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (18 samples, 0.05%)</title><rect x="95.4648%" y="1221" width="0.0474%" height="15" fill="rgb(224,8,20)" fg:x="36269" fg:w="18"/><text x="95.7148%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (28,548 samples, 75.14%)</title><rect x="20.3911%" y="1285" width="75.1421%" height="15" fill="rgb(214,12,52)" fg:x="7747" fg:w="28548"/><text x="20.6411%" y="1295.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (116 samples, 0.31%)</title><rect x="95.2279%" y="1269" width="0.3053%" height="15" fill="rgb(211,220,47)" fg:x="36179" fg:w="116"/><text x="95.4779%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (116 samples, 0.31%)</title><rect x="95.2279%" y="1253" width="0.3053%" height="15" fill="rgb(250,173,5)" fg:x="36179" fg:w="116"/><text x="95.4779%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (8 samples, 0.02%)</title><rect x="95.5122%" y="1237" width="0.0211%" height="15" fill="rgb(250,125,52)" fg:x="36287" fg:w="8"/><text x="95.7622%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (8 samples, 0.02%)</title><rect x="95.5122%" y="1221" width="0.0211%" height="15" fill="rgb(209,133,18)" fg:x="36287" fg:w="8"/><text x="95.7622%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (4 samples, 0.01%)</title><rect x="95.5227%" y="1205" width="0.0105%" height="15" fill="rgb(216,173,22)" fg:x="36291" fg:w="4"/><text x="95.7727%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (8 samples, 0.02%)</title><rect x="95.5938%" y="1221" width="0.0211%" height="15" fill="rgb(205,3,22)" fg:x="36318" fg:w="8"/><text x="95.8438%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (7 samples, 0.02%)</title><rect x="95.5964%" y="1205" width="0.0184%" height="15" fill="rgb(248,22,20)" fg:x="36319" fg:w="7"/><text x="95.8464%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (7 samples, 0.02%)</title><rect x="95.5964%" y="1189" width="0.0184%" height="15" fill="rgb(233,6,29)" fg:x="36319" fg:w="7"/><text x="95.8464%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (9 samples, 0.02%)</title><rect x="95.5938%" y="1269" width="0.0237%" height="15" fill="rgb(240,22,54)" fg:x="36318" fg:w="9"/><text x="95.8438%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (9 samples, 0.02%)</title><rect x="95.5938%" y="1253" width="0.0237%" height="15" fill="rgb(231,133,32)" fg:x="36318" fg:w="9"/><text x="95.8438%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (9 samples, 0.02%)</title><rect x="95.5938%" y="1237" width="0.0237%" height="15" fill="rgb(248,193,4)" fg:x="36318" fg:w="9"/><text x="95.8438%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (4 samples, 0.01%)</title><rect x="95.6228%" y="1269" width="0.0105%" height="15" fill="rgb(211,178,46)" fg:x="36329" fg:w="4"/><text x="95.8728%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (4 samples, 0.01%)</title><rect x="95.6228%" y="1253" width="0.0105%" height="15" fill="rgb(224,5,42)" fg:x="36329" fg:w="4"/><text x="95.8728%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (4 samples, 0.01%)</title><rect x="95.6228%" y="1237" width="0.0105%" height="15" fill="rgb(239,176,25)" fg:x="36329" fg:w="4"/><text x="95.8728%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.01%)</title><rect x="95.6228%" y="1221" width="0.0105%" height="15" fill="rgb(245,187,50)" fg:x="36329" fg:w="4"/><text x="95.8728%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="95.6228%" y="1205" width="0.0105%" height="15" fill="rgb(248,24,15)" fg:x="36329" fg:w="4"/><text x="95.8728%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (4 samples, 0.01%)</title><rect x="95.6438%" y="1205" width="0.0105%" height="15" fill="rgb(205,166,13)" fg:x="36337" fg:w="4"/><text x="95.8938%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="95.6438%" y="1189" width="0.0105%" height="15" fill="rgb(208,114,23)" fg:x="36337" fg:w="4"/><text x="95.8938%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (10 samples, 0.03%)</title><rect x="95.6333%" y="1253" width="0.0263%" height="15" fill="rgb(239,127,18)" fg:x="36333" fg:w="10"/><text x="95.8833%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (10 samples, 0.03%)</title><rect x="95.6333%" y="1237" width="0.0263%" height="15" fill="rgb(219,154,28)" fg:x="36333" fg:w="10"/><text x="95.8833%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (10 samples, 0.03%)</title><rect x="95.6333%" y="1221" width="0.0263%" height="15" fill="rgb(225,157,23)" fg:x="36333" fg:w="10"/><text x="95.8833%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (13 samples, 0.03%)</title><rect x="95.6333%" y="1269" width="0.0342%" height="15" fill="rgb(219,8,6)" fg:x="36333" fg:w="13"/><text x="95.8833%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (29 samples, 0.08%)</title><rect x="95.6675%" y="1269" width="0.0763%" height="15" fill="rgb(212,47,6)" fg:x="36346" fg:w="29"/><text x="95.9175%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (27 samples, 0.07%)</title><rect x="95.6728%" y="1253" width="0.0711%" height="15" fill="rgb(224,190,4)" fg:x="36348" fg:w="27"/><text x="95.9228%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (82 samples, 0.22%)</title><rect x="95.5333%" y="1285" width="0.2158%" height="15" fill="rgb(239,183,29)" fg:x="36295" fg:w="82"/><text x="95.7833%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="95.8623%" y="1269" width="0.0132%" height="15" fill="rgb(213,57,7)" fg:x="36420" fg:w="5"/><text x="96.1123%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="95.8623%" y="1253" width="0.0132%" height="15" fill="rgb(216,148,1)" fg:x="36420" fg:w="5"/><text x="96.1123%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="95.8623%" y="1237" width="0.0132%" height="15" fill="rgb(236,182,29)" fg:x="36420" fg:w="5"/><text x="96.1123%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="95.9465%" y="1237" width="0.0290%" height="15" fill="rgb(244,120,48)" fg:x="36452" fg:w="11"/><text x="96.1965%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (11 samples, 0.03%)</title><rect x="95.9465%" y="1221" width="0.0290%" height="15" fill="rgb(206,71,34)" fg:x="36452" fg:w="11"/><text x="96.1965%" y="1231.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11 samples, 0.03%)</title><rect x="95.9465%" y="1205" width="0.0290%" height="15" fill="rgb(242,32,6)" fg:x="36452" fg:w="11"/><text x="96.1965%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (23 samples, 0.06%)</title><rect x="95.9807%" y="1237" width="0.0605%" height="15" fill="rgb(241,35,3)" fg:x="36465" fg:w="23"/><text x="96.2307%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.06%)</title><rect x="95.9807%" y="1221" width="0.0605%" height="15" fill="rgb(222,62,19)" fg:x="36465" fg:w="23"/><text x="96.2307%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (4 samples, 0.01%)</title><rect x="96.0413%" y="1237" width="0.0105%" height="15" fill="rgb(223,110,41)" fg:x="36488" fg:w="4"/><text x="96.2913%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="96.0413%" y="1221" width="0.0105%" height="15" fill="rgb(208,224,4)" fg:x="36488" fg:w="4"/><text x="96.2913%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (53 samples, 0.14%)</title><rect x="96.0518%" y="1237" width="0.1395%" height="15" fill="rgb(241,137,19)" fg:x="36492" fg:w="53"/><text x="96.3018%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (53 samples, 0.14%)</title><rect x="96.0518%" y="1221" width="0.1395%" height="15" fill="rgb(244,24,17)" fg:x="36492" fg:w="53"/><text x="96.3018%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (19 samples, 0.05%)</title><rect x="96.1913%" y="1237" width="0.0500%" height="15" fill="rgb(245,178,49)" fg:x="36545" fg:w="19"/><text x="96.4413%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (19 samples, 0.05%)</title><rect x="96.1913%" y="1221" width="0.0500%" height="15" fill="rgb(219,160,38)" fg:x="36545" fg:w="19"/><text x="96.4413%" y="1231.50"></text></g><g><title>core::ptr::read (19 samples, 0.05%)</title><rect x="96.1913%" y="1205" width="0.0500%" height="15" fill="rgb(228,137,14)" fg:x="36545" fg:w="19"/><text x="96.4413%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (134 samples, 0.35%)</title><rect x="95.8991%" y="1253" width="0.3527%" height="15" fill="rgb(237,134,11)" fg:x="36434" fg:w="134"/><text x="96.1491%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (4 samples, 0.01%)</title><rect x="96.2413%" y="1237" width="0.0105%" height="15" fill="rgb(211,126,44)" fg:x="36564" fg:w="4"/><text x="96.4913%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (142 samples, 0.37%)</title><rect x="95.8833%" y="1269" width="0.3738%" height="15" fill="rgb(226,171,33)" fg:x="36428" fg:w="142"/><text x="96.1333%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (7 samples, 0.02%)</title><rect x="96.2650%" y="1269" width="0.0184%" height="15" fill="rgb(253,99,13)" fg:x="36573" fg:w="7"/><text x="96.5150%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (6 samples, 0.02%)</title><rect x="96.2676%" y="1253" width="0.0158%" height="15" fill="rgb(244,48,7)" fg:x="36574" fg:w="6"/><text x="96.5176%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (5 samples, 0.01%)</title><rect x="96.2703%" y="1237" width="0.0132%" height="15" fill="rgb(244,217,54)" fg:x="36575" fg:w="5"/><text x="96.5203%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.01%)</title><rect x="96.2703%" y="1221" width="0.0132%" height="15" fill="rgb(224,15,18)" fg:x="36575" fg:w="5"/><text x="96.5203%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.01%)</title><rect x="96.2703%" y="1205" width="0.0132%" height="15" fill="rgb(244,99,12)" fg:x="36575" fg:w="5"/><text x="96.5203%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (204 samples, 0.54%)</title><rect x="95.7491%" y="1285" width="0.5370%" height="15" fill="rgb(233,226,8)" fg:x="36377" fg:w="204"/><text x="95.9991%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (34,582 samples, 91.02%)</title><rect x="5.3195%" y="1845" width="91.0244%" height="15" fill="rgb(229,211,3)" fg:x="2021" fg:w="34582"/><text x="5.5695%" y="1855.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (34,582 samples, 91.02%)</title><rect x="5.3195%" y="1829" width="91.0244%" height="15" fill="rgb(216,140,21)" fg:x="2021" fg:w="34582"/><text x="5.5695%" y="1839.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (34,582 samples, 91.02%)</title><rect x="5.3195%" y="1813" width="91.0244%" height="15" fill="rgb(234,122,30)" fg:x="2021" fg:w="34582"/><text x="5.5695%" y="1823.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34,582 samples, 91.02%)</title><rect x="5.3195%" y="1797" width="91.0244%" height="15" fill="rgb(236,25,46)" fg:x="2021" fg:w="34582"/><text x="5.5695%" y="1807.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (34,582 samples, 91.02%)</title><rect x="5.3195%" y="1781" width="91.0244%" height="15" fill="rgb(217,52,54)" fg:x="2021" fg:w="34582"/><text x="5.5695%" y="1791.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (34,582 samples, 91.02%)</title><rect x="5.3195%" y="1765" width="91.0244%" height="15" fill="rgb(222,29,26)" fg:x="2021" fg:w="34582"/><text x="5.5695%" y="1775.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (34,582 samples, 91.02%)</title><rect x="5.3195%" y="1749" width="91.0244%" height="15" fill="rgb(216,177,29)" fg:x="2021" fg:w="34582"/><text x="5.5695%" y="1759.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (34,581 samples, 91.02%)</title><rect x="5.3222%" y="1733" width="91.0218%" height="15" fill="rgb(247,136,51)" fg:x="2022" fg:w="34581"/><text x="5.5722%" y="1743.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1717" width="90.9534%" height="15" fill="rgb(231,47,47)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1727.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1701" width="90.9534%" height="15" fill="rgb(211,192,36)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1711.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1685" width="90.9534%" height="15" fill="rgb(229,156,32)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1695.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1669" width="90.9534%" height="15" fill="rgb(248,213,20)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1679.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1653" width="90.9534%" height="15" fill="rgb(217,64,7)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1663.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1637" width="90.9534%" height="15" fill="rgb(232,142,8)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1647.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1621" width="90.9534%" height="15" fill="rgb(224,92,44)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1631.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1605" width="90.9534%" height="15" fill="rgb(214,169,17)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1615.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1589" width="90.9534%" height="15" fill="rgb(210,59,37)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1599.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1573" width="90.9534%" height="15" fill="rgb(214,116,48)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1583.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1557" width="90.9534%" height="15" fill="rgb(244,191,6)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1567.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1541" width="90.9534%" height="15" fill="rgb(241,50,52)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1551.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1525" width="90.9534%" height="15" fill="rgb(236,75,39)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1535.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1509" width="90.9534%" height="15" fill="rgb(236,99,0)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1519.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1493" width="90.9534%" height="15" fill="rgb(207,202,15)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1503.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1477" width="90.9534%" height="15" fill="rgb(233,207,14)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1487.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1461" width="90.9534%" height="15" fill="rgb(226,27,51)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1471.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1445" width="90.9534%" height="15" fill="rgb(206,104,42)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1455.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1429" width="90.9534%" height="15" fill="rgb(212,225,4)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1439.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1413" width="90.9534%" height="15" fill="rgb(233,96,42)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1423.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1397" width="90.9534%" height="15" fill="rgb(229,21,32)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1407.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1381" width="90.9534%" height="15" fill="rgb(226,216,24)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1391.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1365" width="90.9534%" height="15" fill="rgb(221,163,17)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1375.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1349" width="90.9534%" height="15" fill="rgb(216,216,42)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1359.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1333" width="90.9534%" height="15" fill="rgb(240,118,7)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1343.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1317" width="90.9534%" height="15" fill="rgb(221,67,37)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (34,555 samples, 90.95%)</title><rect x="5.3906%" y="1301" width="90.9534%" height="15" fill="rgb(241,32,44)" fg:x="2048" fg:w="34555"/><text x="5.6406%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (22 samples, 0.06%)</title><rect x="96.2861%" y="1285" width="0.0579%" height="15" fill="rgb(235,204,43)" fg:x="36581" fg:w="22"/><text x="96.5361%" y="1295.50"></text></g><g><title>[libc.so.6] (34,583 samples, 91.03%)</title><rect x="5.3195%" y="1957" width="91.0271%" height="15" fill="rgb(213,116,10)" fg:x="2021" fg:w="34583"/><text x="5.5695%" y="1967.50">[libc.so.6]</text></g><g><title>[libc.so.6] (34,583 samples, 91.03%)</title><rect x="5.3195%" y="1941" width="91.0271%" height="15" fill="rgb(239,15,48)" fg:x="2021" fg:w="34583"/><text x="5.5695%" y="1951.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (34,583 samples, 91.03%)</title><rect x="5.3195%" y="1925" width="91.0271%" height="15" fill="rgb(207,123,36)" fg:x="2021" fg:w="34583"/><text x="5.5695%" y="1935.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34,583 samples, 91.03%)</title><rect x="5.3195%" y="1909" width="91.0271%" height="15" fill="rgb(209,103,30)" fg:x="2021" fg:w="34583"/><text x="5.5695%" y="1919.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34,583 samples, 91.03%)</title><rect x="5.3195%" y="1893" width="91.0271%" height="15" fill="rgb(238,100,19)" fg:x="2021" fg:w="34583"/><text x="5.5695%" y="1903.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34,583 samples, 91.03%)</title><rect x="5.3195%" y="1877" width="91.0271%" height="15" fill="rgb(244,30,14)" fg:x="2021" fg:w="34583"/><text x="5.5695%" y="1887.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (34,583 samples, 91.03%)</title><rect x="5.3195%" y="1861" width="91.0271%" height="15" fill="rgb(249,174,6)" fg:x="2021" fg:w="34583"/><text x="5.5695%" y="1871.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="96.5730%" y="1941" width="0.0368%" height="15" fill="rgb(235,213,41)" fg:x="36690" fg:w="14"/><text x="96.8230%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (6 samples, 0.02%)</title><rect x="96.5940%" y="1925" width="0.0158%" height="15" fill="rgb(213,118,6)" fg:x="36698" fg:w="6"/><text x="96.8440%" y="1935.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (61 samples, 0.16%)</title><rect x="96.6124%" y="1941" width="0.1606%" height="15" fill="rgb(235,44,51)" fg:x="36705" fg:w="61"/><text x="96.8624%" y="1951.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="96.7809%" y="1941" width="0.0211%" height="15" fill="rgb(217,9,53)" fg:x="36769" fg:w="8"/><text x="97.0309%" y="1951.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (7 samples, 0.02%)</title><rect x="96.8099%" y="1941" width="0.0184%" height="15" fill="rgb(237,172,34)" fg:x="36780" fg:w="7"/><text x="97.0599%" y="1951.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="96.8283%" y="1941" width="0.0263%" height="15" fill="rgb(206,206,11)" fg:x="36787" fg:w="10"/><text x="97.0783%" y="1951.50"></text></g><g><title>_ZN4core3ptr1091drop_in_place$LT$futures_util..lock..mutex..MutexGuard$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$GT$17h5adf97a234b091cbE (39 samples, 0.10%)</title><rect x="96.8546%" y="1941" width="0.1027%" height="15" fill="rgb(214,149,29)" fg:x="36797" fg:w="39"/><text x="97.1046%" y="1951.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="96.9467%" y="1925" width="0.0105%" height="15" fill="rgb(208,123,3)" fg:x="36832" fg:w="4"/><text x="97.1967%" y="1935.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (4 samples, 0.01%)</title><rect x="96.9467%" y="1909" width="0.0105%" height="15" fill="rgb(229,126,4)" fg:x="36832" fg:w="4"/><text x="97.1967%" y="1919.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (4 samples, 0.01%)</title><rect x="96.9467%" y="1893" width="0.0105%" height="15" fill="rgb(222,92,36)" fg:x="36832" fg:w="4"/><text x="97.1967%" y="1903.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.01%)</title><rect x="96.9467%" y="1877" width="0.0105%" height="15" fill="rgb(216,39,41)" fg:x="36832" fg:w="4"/><text x="97.1967%" y="1887.50"></text></g><g><title>_ZN4core3ptr1952drop_in_place$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17he1725c7536cd403aE (7 samples, 0.02%)</title><rect x="96.9573%" y="1941" width="0.0184%" height="15" fill="rgb(253,127,28)" fg:x="36836" fg:w="7"/><text x="97.2073%" y="1951.50"></text></g><g><title>_ZN4core3ptr2242drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..process_wisp_message..$u7b$$u7b$closure$u7d$$u7d$$GT$17he74726959e7424b4E (23 samples, 0.06%)</title><rect x="96.9757%" y="1941" width="0.0605%" height="15" fill="rgb(249,152,51)" fg:x="36843" fg:w="23"/><text x="97.2257%" y="1951.50"></text></g><g><title>_ZN4core3ptr4591drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17he85d75ce02d52a02E (6 samples, 0.02%)</title><rect x="97.0362%" y="1941" width="0.0158%" height="15" fill="rgb(209,123,42)" fg:x="36866" fg:w="6"/><text x="97.2862%" y="1951.50"></text></g><g><title>_rjem_je_sdallocx_default (33 samples, 0.09%)</title><rect x="97.0941%" y="1941" width="0.0869%" height="15" fill="rgb(241,118,22)" fg:x="36888" fg:w="33"/><text x="97.3441%" y="1951.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (4 samples, 0.01%)</title><rect x="97.1968%" y="1941" width="0.0105%" height="15" fill="rgb(208,25,7)" fg:x="36927" fg:w="4"/><text x="97.4468%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (6 samples, 0.02%)</title><rect x="97.2073%" y="1941" width="0.0158%" height="15" fill="rgb(243,144,39)" fg:x="36931" fg:w="6"/><text x="97.4573%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (6 samples, 0.02%)</title><rect x="97.2231%" y="1941" width="0.0158%" height="15" fill="rgb(250,50,5)" fg:x="36937" fg:w="6"/><text x="97.4731%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (4 samples, 0.01%)</title><rect x="97.2389%" y="1941" width="0.0105%" height="15" fill="rgb(207,67,11)" fg:x="36943" fg:w="4"/><text x="97.4889%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;epoxy_server::util_chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (4 samples, 0.01%)</title><rect x="97.2521%" y="1941" width="0.0105%" height="15" fill="rgb(245,204,40)" fg:x="36948" fg:w="4"/><text x="97.5021%" y="1951.50"></text></g><g><title>epoll_wait (4 samples, 0.01%)</title><rect x="97.2626%" y="1941" width="0.0105%" height="15" fill="rgb(238,228,24)" fg:x="36952" fg:w="4"/><text x="97.5126%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (10 samples, 0.03%)</title><rect x="97.2731%" y="1941" width="0.0263%" height="15" fill="rgb(217,116,22)" fg:x="36956" fg:w="10"/><text x="97.5231%" y="1951.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (9 samples, 0.02%)</title><rect x="97.3100%" y="1941" width="0.0237%" height="15" fill="rgb(234,98,12)" fg:x="36970" fg:w="9"/><text x="97.5600%" y="1951.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (31 samples, 0.08%)</title><rect x="97.3336%" y="1941" width="0.0816%" height="15" fill="rgb(242,170,50)" fg:x="36979" fg:w="31"/><text x="97.5836%" y="1951.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (4 samples, 0.01%)</title><rect x="97.4152%" y="1941" width="0.0105%" height="15" fill="rgb(235,7,5)" fg:x="37010" fg:w="4"/><text x="97.6652%" y="1951.50"></text></g><g><title>fastwebsockets::frame::Frame::unmask (45 samples, 0.12%)</title><rect x="97.4258%" y="1941" width="0.1184%" height="15" fill="rgb(241,114,28)" fg:x="37014" fg:w="45"/><text x="97.6758%" y="1951.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (4 samples, 0.01%)</title><rect x="97.5495%" y="1941" width="0.0105%" height="15" fill="rgb(246,112,42)" fg:x="37061" fg:w="4"/><text x="97.7995%" y="1951.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (30 samples, 0.08%)</title><rect x="97.5600%" y="1941" width="0.0790%" height="15" fill="rgb(248,228,14)" fg:x="37065" fg:w="30"/><text x="97.8100%" y="1951.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (10 samples, 0.03%)</title><rect x="97.6390%" y="1941" width="0.0263%" height="15" fill="rgb(208,133,18)" fg:x="37095" fg:w="10"/><text x="97.8890%" y="1951.50"></text></g><g><title>recv (10 samples, 0.03%)</title><rect x="97.6653%" y="1941" width="0.0263%" height="15" fill="rgb(207,35,49)" fg:x="37105" fg:w="10"/><text x="97.9153%" y="1951.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="97.6916%" y="1941" width="0.0132%" height="15" fill="rgb(205,68,36)" fg:x="37115" fg:w="5"/><text x="97.9416%" y="1951.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.01%)</title><rect x="97.7074%" y="1941" width="0.0132%" height="15" fill="rgb(245,62,40)" fg:x="37121" fg:w="5"/><text x="97.9574%" y="1951.50"></text></g><g><title>syscall (4 samples, 0.01%)</title><rect x="97.7206%" y="1941" width="0.0105%" height="15" fill="rgb(228,27,24)" fg:x="37126" fg:w="4"/><text x="97.9706%" y="1951.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (5 samples, 0.01%)</title><rect x="97.7311%" y="1941" width="0.0132%" height="15" fill="rgb(253,19,12)" fg:x="37130" fg:w="5"/><text x="97.9811%" y="1951.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (5 samples, 0.01%)</title><rect x="97.7443%" y="1941" width="0.0132%" height="15" fill="rgb(232,28,20)" fg:x="37135" fg:w="5"/><text x="97.9943%" y="1951.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (11 samples, 0.03%)</title><rect x="97.7653%" y="1941" width="0.0290%" height="15" fill="rgb(218,35,51)" fg:x="37143" fg:w="11"/><text x="98.0153%" y="1951.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (4 samples, 0.01%)</title><rect x="97.8601%" y="1925" width="0.0105%" height="15" fill="rgb(212,90,40)" fg:x="37179" fg:w="4"/><text x="98.1101%" y="1935.50"></text></g><g><title>tokio::runtime::context::budget (4 samples, 0.01%)</title><rect x="97.8601%" y="1909" width="0.0105%" height="15" fill="rgb(220,172,12)" fg:x="37179" fg:w="4"/><text x="98.1101%" y="1919.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="97.8601%" y="1893" width="0.0105%" height="15" fill="rgb(226,159,20)" fg:x="37179" fg:w="4"/><text x="98.1101%" y="1903.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (4 samples, 0.01%)</title><rect x="97.8601%" y="1877" width="0.0105%" height="15" fill="rgb(234,205,16)" fg:x="37179" fg:w="4"/><text x="98.1101%" y="1887.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (4 samples, 0.01%)</title><rect x="97.8601%" y="1861" width="0.0105%" height="15" fill="rgb(207,9,39)" fg:x="37179" fg:w="4"/><text x="98.1101%" y="1871.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (4 samples, 0.01%)</title><rect x="97.8601%" y="1845" width="0.0105%" height="15" fill="rgb(249,143,15)" fg:x="37179" fg:w="4"/><text x="98.1101%" y="1855.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (31 samples, 0.08%)</title><rect x="97.7943%" y="1941" width="0.0816%" height="15" fill="rgb(253,133,29)" fg:x="37154" fg:w="31"/><text x="98.0443%" y="1951.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (9 samples, 0.02%)</title><rect x="97.8759%" y="1941" width="0.0237%" height="15" fill="rgb(221,187,0)" fg:x="37185" fg:w="9"/><text x="98.1259%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (4 samples, 0.01%)</title><rect x="97.9075%" y="1941" width="0.0105%" height="15" fill="rgb(205,204,26)" fg:x="37197" fg:w="4"/><text x="98.1575%" y="1951.50"></text></g><g><title>tokio::runtime::signal::Driver::process (16 samples, 0.04%)</title><rect x="97.9180%" y="1941" width="0.0421%" height="15" fill="rgb(224,68,54)" fg:x="37201" fg:w="16"/><text x="98.1680%" y="1951.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (16 samples, 0.04%)</title><rect x="97.9180%" y="1925" width="0.0421%" height="15" fill="rgb(209,67,4)" fg:x="37201" fg:w="16"/><text x="98.1680%" y="1935.50"></text></g><g><title>tokio::runtime::task::raw::poll (14 samples, 0.04%)</title><rect x="97.9601%" y="1941" width="0.0368%" height="15" fill="rgb(228,229,18)" fg:x="37217" fg:w="14"/><text x="98.2101%" y="1951.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (7 samples, 0.02%)</title><rect x="98.0022%" y="1941" width="0.0184%" height="15" fill="rgb(231,89,13)" fg:x="37233" fg:w="7"/><text x="98.2522%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (4 samples, 0.01%)</title><rect x="98.0733%" y="1925" width="0.0105%" height="15" fill="rgb(210,182,18)" fg:x="37260" fg:w="4"/><text x="98.3233%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (4 samples, 0.01%)</title><rect x="98.0733%" y="1909" width="0.0105%" height="15" fill="rgb(240,105,2)" fg:x="37260" fg:w="4"/><text x="98.3233%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (4 samples, 0.01%)</title><rect x="98.0733%" y="1893" width="0.0105%" height="15" fill="rgb(207,170,50)" fg:x="37260" fg:w="4"/><text x="98.3233%" y="1903.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (5 samples, 0.01%)</title><rect x="98.0917%" y="1925" width="0.0132%" height="15" fill="rgb(232,133,24)" fg:x="37267" fg:w="5"/><text x="98.3417%" y="1935.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (5 samples, 0.01%)</title><rect x="98.0917%" y="1909" width="0.0132%" height="15" fill="rgb(235,166,27)" fg:x="37267" fg:w="5"/><text x="98.3417%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (5 samples, 0.01%)</title><rect x="98.0917%" y="1893" width="0.0132%" height="15" fill="rgb(209,19,13)" fg:x="37267" fg:w="5"/><text x="98.3417%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (5 samples, 0.01%)</title><rect x="98.0917%" y="1877" width="0.0132%" height="15" fill="rgb(226,79,39)" fg:x="37267" fg:w="5"/><text x="98.3417%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (5 samples, 0.01%)</title><rect x="98.0917%" y="1861" width="0.0132%" height="15" fill="rgb(222,163,10)" fg:x="37267" fg:w="5"/><text x="98.3417%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="98.0943%" y="1845" width="0.0105%" height="15" fill="rgb(214,44,19)" fg:x="37268" fg:w="4"/><text x="98.3443%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (4 samples, 0.01%)</title><rect x="98.0943%" y="1829" width="0.0105%" height="15" fill="rgb(210,217,13)" fg:x="37268" fg:w="4"/><text x="98.3443%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="98.0943%" y="1813" width="0.0105%" height="15" fill="rgb(237,61,54)" fg:x="37268" fg:w="4"/><text x="98.3443%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (4 samples, 0.01%)</title><rect x="98.0943%" y="1797" width="0.0105%" height="15" fill="rgb(226,184,24)" fg:x="37268" fg:w="4"/><text x="98.3443%" y="1807.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.01%)</title><rect x="98.0943%" y="1781" width="0.0105%" height="15" fill="rgb(223,226,4)" fg:x="37268" fg:w="4"/><text x="98.3443%" y="1791.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (33 samples, 0.09%)</title><rect x="98.0206%" y="1941" width="0.0869%" height="15" fill="rgb(210,26,41)" fg:x="37240" fg:w="33"/><text x="98.2706%" y="1951.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (48 samples, 0.13%)</title><rect x="98.1075%" y="1941" width="0.1263%" height="15" fill="rgb(220,221,6)" fg:x="37273" fg:w="48"/><text x="98.3575%" y="1951.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (6 samples, 0.02%)</title><rect x="98.2180%" y="1925" width="0.0158%" height="15" fill="rgb(225,89,49)" fg:x="37315" fg:w="6"/><text x="98.4680%" y="1935.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (6 samples, 0.02%)</title><rect x="98.2180%" y="1909" width="0.0158%" height="15" fill="rgb(218,70,45)" fg:x="37315" fg:w="6"/><text x="98.4680%" y="1919.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (17 samples, 0.04%)</title><rect x="98.2338%" y="1941" width="0.0447%" height="15" fill="rgb(238,166,21)" fg:x="37321" fg:w="17"/><text x="98.4838%" y="1951.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (9 samples, 0.02%)</title><rect x="98.2549%" y="1925" width="0.0237%" height="15" fill="rgb(224,141,44)" fg:x="37329" fg:w="9"/><text x="98.5049%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.02%)</title><rect x="98.2549%" y="1909" width="0.0237%" height="15" fill="rgb(230,12,49)" fg:x="37329" fg:w="9"/><text x="98.5049%" y="1919.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (26 samples, 0.07%)</title><rect x="98.2786%" y="1941" width="0.0684%" height="15" fill="rgb(212,174,12)" fg:x="37338" fg:w="26"/><text x="98.5286%" y="1951.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (34 samples, 0.09%)</title><rect x="98.3523%" y="1941" width="0.0895%" height="15" fill="rgb(246,67,9)" fg:x="37366" fg:w="34"/><text x="98.6023%" y="1951.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (15 samples, 0.04%)</title><rect x="98.4023%" y="1925" width="0.0395%" height="15" fill="rgb(239,35,23)" fg:x="37385" fg:w="15"/><text x="98.6523%" y="1935.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (12 samples, 0.03%)</title><rect x="98.4102%" y="1909" width="0.0316%" height="15" fill="rgb(211,167,0)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.03%)</title><rect x="98.4102%" y="1893" width="0.0316%" height="15" fill="rgb(225,119,45)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.03%)</title><rect x="98.4102%" y="1877" width="0.0316%" height="15" fill="rgb(210,162,6)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.03%)</title><rect x="98.4102%" y="1861" width="0.0316%" height="15" fill="rgb(208,118,35)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12 samples, 0.03%)</title><rect x="98.4102%" y="1845" width="0.0316%" height="15" fill="rgb(239,4,53)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12 samples, 0.03%)</title><rect x="98.4102%" y="1829" width="0.0316%" height="15" fill="rgb(213,130,21)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.03%)</title><rect x="98.4102%" y="1813" width="0.0316%" height="15" fill="rgb(235,148,0)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.03%)</title><rect x="98.4102%" y="1797" width="0.0316%" height="15" fill="rgb(244,224,18)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.03%)</title><rect x="98.4102%" y="1781" width="0.0316%" height="15" fill="rgb(211,214,4)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1791.50"></text></g><g><title>__rust_alloc (12 samples, 0.03%)</title><rect x="98.4102%" y="1765" width="0.0316%" height="15" fill="rgb(206,119,25)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1775.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.03%)</title><rect x="98.4102%" y="1749" width="0.0316%" height="15" fill="rgb(243,93,47)" fg:x="37388" fg:w="12"/><text x="98.6602%" y="1759.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite&lt;W&gt;::write_payload::_{{closure}} (10 samples, 0.03%)</title><rect x="98.4418%" y="1941" width="0.0263%" height="15" fill="rgb(224,194,6)" fg:x="37400" fg:w="10"/><text x="98.6918%" y="1951.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (6 samples, 0.02%)</title><rect x="98.4681%" y="1941" width="0.0158%" height="15" fill="rgb(243,229,6)" fg:x="37410" fg:w="6"/><text x="98.7181%" y="1951.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite&lt;T&gt;::write_split::_{{closure}} (49 samples, 0.13%)</title><rect x="98.4839%" y="1941" width="0.1290%" height="15" fill="rgb(207,23,50)" fg:x="37416" fg:w="49"/><text x="98.7339%" y="1951.50"></text></g><g><title>&lt;wisp_mux::ws::EitherWebSocketWrite&lt;A,B&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (13 samples, 0.03%)</title><rect x="98.5786%" y="1925" width="0.0342%" height="15" fill="rgb(253,192,32)" fg:x="37452" fg:w="13"/><text x="98.8286%" y="1935.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (7 samples, 0.02%)</title><rect x="98.5944%" y="1909" width="0.0184%" height="15" fill="rgb(213,21,6)" fg:x="37458" fg:w="7"/><text x="98.8444%" y="1919.50"></text></g><g><title>[unknown] (864 samples, 2.27%)</title><rect x="96.3466%" y="1957" width="2.2742%" height="15" fill="rgb(243,151,13)" fg:x="36604" fg:w="864"/><text x="96.5966%" y="1967.50">[..</text></g><g><title>_ZN4core3ptr2235drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..handle_packet..$u7b$$u7b$closure$u7d$$u7d$$GT$17h8573672948dae986E (7 samples, 0.02%)</title><rect x="98.6208%" y="1957" width="0.0184%" height="15" fill="rgb(233,165,41)" fg:x="37468" fg:w="7"/><text x="98.8708%" y="1967.50"></text></g><g><title>_ZN4core3ptr2242drop_in_place$LT$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..process_wisp_message..$u7b$$u7b$closure$u7d$$u7d$$GT$17he74726959e7424b4E (4 samples, 0.01%)</title><rect x="98.6392%" y="1957" width="0.0105%" height="15" fill="rgb(246,176,45)" fg:x="37475" fg:w="4"/><text x="98.8892%" y="1967.50"></text></g><g><title>_ZN4core3ptr4591drop_in_place$LT$futures_util..unfold_state..UnfoldState$LT$$LP$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..LockedWebSocketWrite$LT$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$$C$alloc..vec..Vec$LT$wisp_mux..extensions..AnyProtocolExtension$GT$$RP$$C$wisp_mux..mux..inner..MuxInner$LT$wisp_mux..ws..EitherWebSocketRead$LT$fastwebsockets..WebSocketRead$LT$epoxy_server..util_chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$C$wisp_mux..generic..GenericWebSocketRead$LT$tokio_util..codec..framed_read..FramedRead$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$C$wisp_mux..ws..EitherWebSocketWrite$LT$fastwebsockets..WebSocketWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$C$wisp_mux..generic..GenericWebSocketWrite$LT$tokio_util..codec..framed_write..FramedWrite$LT$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedWriteHalf$C$tokio..io..split..WriteHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$C$tokio_util..codec..length_delimited..LengthDelimitedCodec$GT$$C$std..io..error..Error$GT$$GT$$GT$..stream_loop..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17he85d75ce02d52a02E (13 samples, 0.03%)</title><rect x="98.6497%" y="1957" width="0.0342%" height="15" fill="rgb(217,170,52)" fg:x="37479" fg:w="13"/><text x="98.8997%" y="1967.50"></text></g><g><title>__send (5 samples, 0.01%)</title><rect x="98.6866%" y="1957" width="0.0132%" height="15" fill="rgb(214,203,54)" fg:x="37493" fg:w="5"/><text x="98.9366%" y="1967.50"></text></g><g><title>_rjem_je_sdallocx_default (23 samples, 0.06%)</title><rect x="98.7076%" y="1957" width="0.0605%" height="15" fill="rgb(248,215,49)" fg:x="37501" fg:w="23"/><text x="98.9576%" y="1967.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (12 samples, 0.03%)</title><rect x="98.8050%" y="1829" width="0.0316%" height="15" fill="rgb(208,46,10)" fg:x="37538" fg:w="12"/><text x="99.0550%" y="1839.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (12 samples, 0.03%)</title><rect x="98.8050%" y="1813" width="0.0316%" height="15" fill="rgb(254,5,31)" fg:x="37538" fg:w="12"/><text x="99.0550%" y="1823.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (12 samples, 0.03%)</title><rect x="98.8050%" y="1797" width="0.0316%" height="15" fill="rgb(222,104,33)" fg:x="37538" fg:w="12"/><text x="99.0550%" y="1807.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (12 samples, 0.03%)</title><rect x="98.8050%" y="1781" width="0.0316%" height="15" fill="rgb(248,49,16)" fg:x="37538" fg:w="12"/><text x="99.0550%" y="1791.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 0.03%)</title><rect x="98.8050%" y="1765" width="0.0316%" height="15" fill="rgb(232,198,41)" fg:x="37538" fg:w="12"/><text x="99.0550%" y="1775.50"></text></g><g><title>&lt;wisp_mux::stream::compat::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.03%)</title><rect x="98.8050%" y="1749" width="0.0316%" height="15" fill="rgb(214,125,3)" fg:x="37538" fg:w="12"/><text x="99.0550%" y="1759.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.03%)</title><rect x="98.8050%" y="1733" width="0.0316%" height="15" fill="rgb(229,220,28)" fg:x="37538" fg:w="12"/><text x="99.0550%" y="1743.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (13 samples, 0.03%)</title><rect x="98.8050%" y="1845" width="0.0342%" height="15" fill="rgb(222,64,37)" fg:x="37538" fg:w="13"/><text x="99.0550%" y="1855.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (26 samples, 0.07%)</title><rect x="98.7840%" y="1957" width="0.0684%" height="15" fill="rgb(249,184,13)" fg:x="37530" fg:w="26"/><text x="99.0340%" y="1967.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.05%)</title><rect x="98.8024%" y="1941" width="0.0500%" height="15" fill="rgb(252,176,6)" fg:x="37537" fg:w="19"/><text x="99.0524%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (19 samples, 0.05%)</title><rect x="98.8024%" y="1925" width="0.0500%" height="15" fill="rgb(228,153,7)" fg:x="37537" fg:w="19"/><text x="99.0524%" y="1935.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (19 samples, 0.05%)</title><rect x="98.8024%" y="1909" width="0.0500%" height="15" fill="rgb(242,193,5)" fg:x="37537" fg:w="19"/><text x="99.0524%" y="1919.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (18 samples, 0.05%)</title><rect x="98.8050%" y="1893" width="0.0474%" height="15" fill="rgb(232,140,9)" fg:x="37538" fg:w="18"/><text x="99.0550%" y="1903.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.05%)</title><rect x="98.8050%" y="1877" width="0.0474%" height="15" fill="rgb(213,222,16)" fg:x="37538" fg:w="18"/><text x="99.0550%" y="1887.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (18 samples, 0.05%)</title><rect x="98.8050%" y="1861" width="0.0474%" height="15" fill="rgb(222,75,50)" fg:x="37538" fg:w="18"/><text x="99.0550%" y="1871.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (5 samples, 0.01%)</title><rect x="98.8392%" y="1845" width="0.0132%" height="15" fill="rgb(205,180,2)" fg:x="37551" fg:w="5"/><text x="99.0892%" y="1855.50"></text></g><g><title>epoxy_server::handle::wisp::handle_wisp::_{{closure}} (8 samples, 0.02%)</title><rect x="98.8524%" y="1957" width="0.0211%" height="15" fill="rgb(216,34,7)" fg:x="37556" fg:w="8"/><text x="99.1024%" y="1967.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (13 samples, 0.03%)</title><rect x="98.8761%" y="1957" width="0.0342%" height="15" fill="rgb(253,16,32)" fg:x="37565" fg:w="13"/><text x="99.1261%" y="1967.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (10 samples, 0.03%)</title><rect x="98.8840%" y="1941" width="0.0263%" height="15" fill="rgb(208,97,28)" fg:x="37568" fg:w="10"/><text x="99.1340%" y="1951.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (10 samples, 0.03%)</title><rect x="98.8840%" y="1925" width="0.0263%" height="15" fill="rgb(225,92,11)" fg:x="37568" fg:w="10"/><text x="99.1340%" y="1935.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.03%)</title><rect x="98.8840%" y="1909" width="0.0263%" height="15" fill="rgb(243,38,12)" fg:x="37568" fg:w="10"/><text x="99.1340%" y="1919.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (13 samples, 0.03%)</title><rect x="98.9103%" y="1957" width="0.0342%" height="15" fill="rgb(208,139,16)" fg:x="37578" fg:w="13"/><text x="99.1603%" y="1967.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (9 samples, 0.02%)</title><rect x="98.9208%" y="1941" width="0.0237%" height="15" fill="rgb(227,24,9)" fg:x="37582" fg:w="9"/><text x="99.1708%" y="1951.50"></text></g><g><title>event_listener::TaskRef::into_task (9 samples, 0.02%)</title><rect x="98.9208%" y="1925" width="0.0237%" height="15" fill="rgb(206,62,11)" fg:x="37582" fg:w="9"/><text x="99.1708%" y="1935.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="98.9208%" y="1909" width="0.0237%" height="15" fill="rgb(228,134,27)" fg:x="37582" fg:w="9"/><text x="99.1708%" y="1919.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (5 samples, 0.01%)</title><rect x="98.9471%" y="1957" width="0.0132%" height="15" fill="rgb(205,55,33)" fg:x="37592" fg:w="5"/><text x="99.1971%" y="1967.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (17 samples, 0.04%)</title><rect x="98.9603%" y="1957" width="0.0447%" height="15" fill="rgb(243,75,43)" fg:x="37597" fg:w="17"/><text x="99.2103%" y="1967.50"></text></g><g><title>flume::Shared&lt;T&gt;::len (8 samples, 0.02%)</title><rect x="99.0051%" y="1957" width="0.0211%" height="15" fill="rgb(223,27,42)" fg:x="37614" fg:w="8"/><text x="99.2551%" y="1967.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (5 samples, 0.01%)</title><rect x="99.0261%" y="1957" width="0.0132%" height="15" fill="rgb(232,189,33)" fg:x="37622" fg:w="5"/><text x="99.2761%" y="1967.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (4 samples, 0.01%)</title><rect x="99.0445%" y="1957" width="0.0105%" height="15" fill="rgb(210,9,39)" fg:x="37629" fg:w="4"/><text x="99.2945%" y="1967.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.01%)</title><rect x="99.0603%" y="1957" width="0.0105%" height="15" fill="rgb(242,85,26)" fg:x="37635" fg:w="4"/><text x="99.3103%" y="1967.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (4 samples, 0.01%)</title><rect x="99.0788%" y="1957" width="0.0105%" height="15" fill="rgb(248,44,4)" fg:x="37642" fg:w="4"/><text x="99.3288%" y="1967.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.02%)</title><rect x="99.0919%" y="1957" width="0.0184%" height="15" fill="rgb(250,96,46)" fg:x="37647" fg:w="7"/><text x="99.3419%" y="1967.50"></text></g><g><title>tokio::runtime::signal::Driver::process (6 samples, 0.02%)</title><rect x="99.1419%" y="1957" width="0.0158%" height="15" fill="rgb(229,116,26)" fg:x="37666" fg:w="6"/><text x="99.3919%" y="1967.50"></text></g><g><title>tokio::runtime::task::raw::poll (36 samples, 0.09%)</title><rect x="99.1577%" y="1957" width="0.0948%" height="15" fill="rgb(246,94,34)" fg:x="37672" fg:w="36"/><text x="99.4077%" y="1967.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (22 samples, 0.06%)</title><rect x="99.2630%" y="1957" width="0.0579%" height="15" fill="rgb(251,73,21)" fg:x="37712" fg:w="22"/><text x="99.5130%" y="1967.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (72 samples, 0.19%)</title><rect x="99.3209%" y="1957" width="0.1895%" height="15" fill="rgb(254,121,25)" fg:x="37734" fg:w="72"/><text x="99.5709%" y="1967.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (37 samples, 0.10%)</title><rect x="99.4130%" y="1941" width="0.0974%" height="15" fill="rgb(215,161,49)" fg:x="37769" fg:w="37"/><text x="99.6630%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (37 samples, 0.10%)</title><rect x="99.4130%" y="1925" width="0.0974%" height="15" fill="rgb(221,43,13)" fg:x="37769" fg:w="37"/><text x="99.6630%" y="1935.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_packet::_{{closure}} (20 samples, 0.05%)</title><rect x="99.5104%" y="1957" width="0.0526%" height="15" fill="rgb(249,5,37)" fg:x="37806" fg:w="20"/><text x="99.7604%" y="1967.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::handle_data_packet (7 samples, 0.02%)</title><rect x="99.5446%" y="1941" width="0.0184%" height="15" fill="rgb(226,25,44)" fg:x="37819" fg:w="7"/><text x="99.7946%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),flume::TrySendError&lt;bytes::bytes::Bytes&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="99.5473%" y="1925" width="0.0158%" height="15" fill="rgb(238,189,16)" fg:x="37820" fg:w="6"/><text x="99.7973%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::TrySendError&lt;bytes::bytes::Bytes&gt;&gt; (6 samples, 0.02%)</title><rect x="99.5473%" y="1909" width="0.0158%" height="15" fill="rgb(251,186,8)" fg:x="37820" fg:w="6"/><text x="99.7973%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (6 samples, 0.02%)</title><rect x="99.5473%" y="1893" width="0.0158%" height="15" fill="rgb(254,34,31)" fg:x="37820" fg:w="6"/><text x="99.7973%" y="1903.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="99.5473%" y="1877" width="0.0158%" height="15" fill="rgb(225,215,27)" fg:x="37820" fg:w="6"/><text x="99.7973%" y="1887.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::into_future::_{{closure}} (52 samples, 0.14%)</title><rect x="99.5631%" y="1957" width="0.1369%" height="15" fill="rgb(221,192,48)" fg:x="37826" fg:w="52"/><text x="99.8131%" y="1967.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}} (41 samples, 0.11%)</title><rect x="99.5920%" y="1941" width="0.1079%" height="15" fill="rgb(219,137,20)" fg:x="37837" fg:w="41"/><text x="99.8420%" y="1951.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.09%)</title><rect x="99.6078%" y="1925" width="0.0921%" height="15" fill="rgb(219,84,11)" fg:x="37843" fg:w="35"/><text x="99.8578%" y="1935.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}} (35 samples, 0.09%)</title><rect x="99.6078%" y="1909" width="0.0921%" height="15" fill="rgb(224,10,23)" fg:x="37843" fg:w="35"/><text x="99.8578%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 0.09%)</title><rect x="99.6078%" y="1893" width="0.0921%" height="15" fill="rgb(248,22,39)" fg:x="37843" fg:w="35"/><text x="99.8578%" y="1903.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (65 samples, 0.17%)</title><rect x="99.6999%" y="1957" width="0.1711%" height="15" fill="rgb(212,154,20)" fg:x="37878" fg:w="65"/><text x="99.9499%" y="1967.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (9 samples, 0.02%)</title><rect x="99.8473%" y="1941" width="0.0237%" height="15" fill="rgb(236,199,50)" fg:x="37934" fg:w="9"/><text x="100.0973%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="99.8473%" y="1925" width="0.0237%" height="15" fill="rgb(211,9,17)" fg:x="37934" fg:w="9"/><text x="100.0973%" y="1935.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="99.8552%" y="1909" width="0.0158%" height="15" fill="rgb(243,216,36)" fg:x="37937" fg:w="6"/><text x="100.1052%" y="1919.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (6 samples, 0.02%)</title><rect x="99.8552%" y="1893" width="0.0158%" height="15" fill="rgb(250,2,10)" fg:x="37937" fg:w="6"/><text x="100.1052%" y="1903.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.02%)</title><rect x="99.8552%" y="1877" width="0.0158%" height="15" fill="rgb(226,50,48)" fg:x="37937" fg:w="6"/><text x="100.1052%" y="1887.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.02%)</title><rect x="99.8552%" y="1861" width="0.0158%" height="15" fill="rgb(243,81,16)" fg:x="37937" fg:w="6"/><text x="100.1052%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.02%)</title><rect x="99.8552%" y="1845" width="0.0158%" height="15" fill="rgb(250,14,2)" fg:x="37937" fg:w="6"/><text x="100.1052%" y="1855.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.01%)</title><rect x="99.8579%" y="1829" width="0.0132%" height="15" fill="rgb(233,135,29)" fg:x="37938" fg:w="5"/><text x="100.1079%" y="1839.50"></text></g><g><title>wisp_mux::mux::inner::MuxInner&lt;R,W&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.01%)</title><rect x="99.8579%" y="1813" width="0.0132%" height="15" fill="rgb(224,64,43)" fg:x="37938" fg:w="5"/><text x="100.1079%" y="1823.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}} (7 samples, 0.02%)</title><rect x="99.8710%" y="1957" width="0.0184%" height="15" fill="rgb(238,84,13)" fg:x="37943" fg:w="7"/><text x="100.1210%" y="1967.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}}::_{{closure}} (25 samples, 0.07%)</title><rect x="99.8895%" y="1957" width="0.0658%" height="15" fill="rgb(253,48,26)" fg:x="37950" fg:w="25"/><text x="100.1395%" y="1967.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10 samples, 0.03%)</title><rect x="99.9553%" y="1941" width="0.0263%" height="15" fill="rgb(205,223,31)" fg:x="37975" fg:w="10"/><text x="100.2053%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}}::_{{closure}} (10 samples, 0.03%)</title><rect x="99.9553%" y="1925" width="0.0263%" height="15" fill="rgb(221,41,32)" fg:x="37975" fg:w="10"/><text x="100.2053%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.03%)</title><rect x="99.9553%" y="1909" width="0.0263%" height="15" fill="rgb(213,158,31)" fg:x="37975" fg:w="10"/><text x="100.2053%" y="1919.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead&lt;W&gt;::read::_{{closure}} (12 samples, 0.03%)</title><rect x="99.9553%" y="1957" width="0.0316%" height="15" fill="rgb(245,126,43)" fg:x="37975" fg:w="12"/><text x="100.2053%" y="1967.50"></text></g><g><title>all (37,992 samples, 100%)</title><rect x="0.0000%" y="1989" width="100.0000%" height="15" fill="rgb(227,7,22)" fg:x="0" fg:w="37992"/><text x="0.2500%" y="1999.50"></text></g><g><title>tokio-runtime-w (37,945 samples, 99.88%)</title><rect x="0.1237%" y="1973" width="99.8763%" height="15" fill="rgb(252,90,44)" fg:x="47" fg:w="37945"/><text x="0.3737%" y="1983.50">tokio-runtime-w</text></g></svg></svg>